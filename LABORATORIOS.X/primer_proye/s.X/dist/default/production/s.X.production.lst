

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Sep 02 12:47:43 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285                           
   286                           	psect	idataCOMMON
   287  015A                     __pidataCOMMON:
   288                           
   289                           ;initializer for _backlight_val
   290  015A  3408               	retlw	8
   291  0014                     _SSPCON	set	20
   292  001F                     _ADCON0bits	set	31
   293  000B                     _INTCONbits	set	11
   294  0012                     _T2CONbits	set	18
   295  001B                     _CCPR2L	set	27
   296  001D                     _CCP2CONbits	set	29
   297  0015                     _CCPR1L	set	21
   298  0017                     _CCP1CONbits	set	23
   299  0013                     _SSPBUF	set	19
   300  0014                     _SSPCONbits	set	20
   301  000C                     _PIR1bits	set	12
   302  0063                     _SSPIF	set	99
   303  005E                     _PEIE	set	94
   304  005F                     _GIE	set	95
   305  0091                     _SSPCON2bits	set	145
   306  0094                     _SSPSTAT	set	148
   307  0093                     _SSPADD	set	147
   308  0091                     _SSPCON2	set	145
   309  008C                     _PIE1bits	set	140
   310  008F                     _OSCCONbits	set	143
   311  0092                     _PR2	set	146
   312  0088                     _TRISDbits	set	136
   313  0087                     _TRISCbits	set	135
   314  0088                     _TRISD	set	136
   315  0087                     _TRISC	set	135
   316  0085                     _TRISA	set	133
   317  0094                     _SSPSTATbits	set	148
   318  0463                     _SSPIE	set	1123
   319  043C                     _TRISC4	set	1084
   320  043B                     _TRISC3	set	1083
   321  04A0                     _BF	set	1184
   322  0189                     _ANSELH	set	393
   323  0188                     _ANSEL	set	392
   324                           
   325                           	psect	cinit
   326  000F                     start_initialization:	
   327                           ; #config settings
   328                           
   329  000F                     __initialization:
   330                           
   331                           ; Initialize objects allocated to COMMON
   332  000F  120A  118A  215A  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   333  0014  00FC               	movwf	__pdataCOMMON& (0+127)
   334                           
   335                           ; Clear objects allocated to COMMON
   336  0015  01F0               	clrf	__pbssCOMMON& (0+127)
   337  0016  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   338  0017  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   339  0018  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   340  0019  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   341  001A  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   342                           
   343                           ; Clear objects allocated to BITCOMMON
   344  001B  01FB               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   345  001C                     end_of_initialization:	
   346                           ;End of C runtime variable initialization code
   347                           
   348  001C                     __end_of__initialization:
   349  001C  0183               	clrf	3
   350  001D  120A  118A  2820   	ljmp	_main	;jump to C main() function
   351                           
   352                           	psect	bitbssCOMMON
   353  03D8                     __pbitbssCOMMON:
   354  03D8                     _RS:
   355  03D8                     	ds	1
   356                           
   357                           	psect	bssCOMMON
   358  0070                     __pbssCOMMON:
   359  0070                     _i2c_addr:
   360  0070                     	ds	1
   361  0071                     _turno:
   362  0071                     	ds	1
   363  0072                     _servo:
   364  0072                     	ds	1
   365  0073                     _dc:
   366  0073                     	ds	1
   367  0074                     _recibido:
   368  0074                     	ds	1
   369  0075                     _z:
   370  0075                     	ds	1
   371                           
   372                           	psect	dataCOMMON
   373  007C                     __pdataCOMMON:
   374  007C                     _backlight_val:
   375  007C                     	ds	1
   376                           
   377                           	psect	cstackCOMMON
   378  0076                     __pcstackCOMMON:
   379  0076                     ?_I2C_Slave_Init:
   380  0076                     ?_isr:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0076                     ??_isr:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0076                     ?_main:	
   387                           ; 1 bytes @ 0x0
   388                           
   389                           
   390                           ; 1 bytes @ 0x0
   391  0076                     	ds	3
   392  0079                     ??_I2C_Slave_Init:
   393  0079                     I2C_Slave_Init@address:	
   394                           ; 1 bytes @ 0x3
   395                           
   396                           
   397                           ; 1 bytes @ 0x3
   398  0079                     	ds	1
   399  007A                     ??_main:
   400                           
   401                           ; 1 bytes @ 0x4
   402  007A                     	ds	1
   403                           
   404                           	psect	maintext
   405  0020                     __pmaintext:	
   406 ;;
   407 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   408 ;;
   409 ;; *************** function _main *****************
   410 ;; Defined at:
   411 ;;		line 88 in file "main.c"
   412 ;; Parameters:    Size  Location     Type
   413 ;;		None
   414 ;; Auto vars:     Size  Location     Type
   415 ;;		None
   416 ;; Return value:  Size  Location     Type
   417 ;;                  1    wreg      void 
   418 ;; Registers used:
   419 ;;		wreg, status,2, status,0, pclath, cstack
   420 ;; Tracked objects:
   421 ;;		On entry : B00/0
   422 ;;		On exit  : 0/0
   423 ;;		Unchanged: 0/0
   424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   425 ;;      Params:         0       0       0       0       0
   426 ;;      Locals:         0       0       0       0       0
   427 ;;      Temps:          1       0       0       0       0
   428 ;;      Totals:         1       0       0       0       0
   429 ;;Total ram usage:        1 bytes
   430 ;; Hardware stack levels required when called:    2
   431 ;; This function calls:
   432 ;;		_I2C_Slave_Init
   433 ;; This function is called by:
   434 ;;		Startup code after reset
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438                           
   439                           ;psect for function _main
   440  0020                     _main:
   441  0020                     l886:	
   442                           ;incstack = 0
   443                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   444                           
   445                           
   446                           ;main.c: 90:     ANSEL = 0b00000011;
   447  0020  3003               	movlw	3
   448  0021  1683               	bsf	3,5	;RP0=1, select bank3
   449  0022  1703               	bsf	3,6	;RP1=1, select bank3
   450  0023  0088               	movwf	8	;volatile
   451  0024                     l888:
   452                           
   453                           ;main.c: 91:     ANSELH = 0x00;
   454  0024  0189               	clrf	9	;volatile
   455  0025                     l890:
   456                           
   457                           ;main.c: 93:     TRISA = 0b00000011;
   458  0025  3003               	movlw	3
   459  0026  1683               	bsf	3,5	;RP0=1, select bank1
   460  0027  1303               	bcf	3,6	;RP1=0, select bank1
   461  0028  0085               	movwf	5	;volatile
   462                           
   463                           ;main.c: 94:     TRISC = 0x00;
   464  0029  0187               	clrf	7	;volatile
   465                           
   466                           ;main.c: 95:     TRISD = 0x00;
   467  002A  0188               	clrf	8	;volatile
   468  002B                     l892:
   469                           
   470                           ;main.c: 108:     TRISCbits.TRISC2 = 1;
   471  002B  1507               	bsf	7,2	;volatile
   472  002C                     l894:
   473                           
   474                           ;main.c: 109:     TRISDbits.TRISD5 = 1;
   475  002C  1688               	bsf	8,5	;volatile
   476  002D                     l896:
   477                           
   478                           ;main.c: 110:     PR2 = 255;
   479  002D  30FF               	movlw	255
   480  002E  0092               	movwf	18	;volatile
   481  002F                     l898:
   482                           
   483                           ;main.c: 111:     CCP1CONbits.P1M = 0;
   484  002F  303F               	movlw	-193
   485  0030  1283               	bcf	3,5	;RP0=0, select bank0
   486  0031  1303               	bcf	3,6	;RP1=0, select bank0
   487  0032  0597               	andwf	23,f	;volatile
   488  0033                     l900:
   489                           
   490                           ;main.c: 112:     CCP1CONbits.CCP1M = 0b1100;
   491  0033  0817               	movf	23,w	;volatile
   492  0034  39F0               	andlw	-16
   493  0035  380C               	iorlw	12
   494  0036  0097               	movwf	23	;volatile
   495  0037                     l902:
   496                           
   497                           ;main.c: 113:     CCPR1L = 0x0f;
   498  0037  300F               	movlw	15
   499  0038  0095               	movwf	21	;volatile
   500  0039                     l904:
   501                           
   502                           ;main.c: 115:     CCP2CONbits.CCP2M = 0;
   503  0039  30F0               	movlw	-16
   504  003A  059D               	andwf	29,f	;volatile
   505  003B                     l906:
   506                           
   507                           ;main.c: 116:     CCP2CONbits.CCP2M = 0b1100;
   508  003B  081D               	movf	29,w	;volatile
   509  003C  39F0               	andlw	-16
   510  003D  380C               	iorlw	12
   511  003E  009D               	movwf	29	;volatile
   512  003F                     l908:
   513                           
   514                           ;main.c: 117:     CCPR1L = 0x0f;
   515  003F  300F               	movlw	15
   516  0040  0095               	movwf	21	;volatile
   517  0041                     l910:
   518                           
   519                           ;main.c: 118:     CCPR2L = 0x0f;
   520  0041  300F               	movlw	15
   521  0042  009B               	movwf	27	;volatile
   522  0043                     l912:
   523                           
   524                           ;main.c: 119:     CCP1CONbits.DC1B = 0;
   525  0043  30CF               	movlw	-49
   526  0044  0597               	andwf	23,f	;volatile
   527  0045                     l914:
   528                           
   529                           ;main.c: 120:     CCP2CONbits.DC2B0 = 0;
   530  0045  121D               	bcf	29,4	;volatile
   531  0046                     l916:
   532                           
   533                           ;main.c: 121:     CCP2CONbits.DC2B1 = 0;
   534  0046  129D               	bcf	29,5	;volatile
   535  0047                     l918:
   536                           
   537                           ;main.c: 123:     PIR1bits.TMR2IF = 0;
   538  0047  108C               	bcf	12,1	;volatile
   539  0048                     l920:
   540                           
   541                           ;main.c: 124:     T2CONbits.T2CKPS = 0b11;
   542  0048  3003               	movlw	3
   543  0049  0492               	iorwf	18,f	;volatile
   544  004A                     l922:
   545                           
   546                           ;main.c: 125:     T2CONbits.TMR2ON = 1;
   547  004A  1512               	bsf	18,2	;volatile
   548  004B                     l81:	
   549                           ;main.c: 126:     while(PIR1bits.TMR2IF == 0);
   550                           
   551  004B  1C8C               	btfss	12,1	;volatile
   552  004C  284E               	goto	u151
   553  004D  284F               	goto	u150
   554  004E                     u151:
   555  004E  284B               	goto	l81
   556  004F                     u150:
   557  004F                     l83:
   558                           
   559                           ;main.c: 127:     PIR1bits.TMR2IF = 0;
   560  004F  108C               	bcf	12,1	;volatile
   561                           
   562                           ;main.c: 128:     TRISCbits.TRISC2 = 0;
   563  0050  1683               	bsf	3,5	;RP0=1, select bank1
   564  0051  1303               	bcf	3,6	;RP1=0, select bank1
   565  0052  1107               	bcf	7,2	;volatile
   566                           
   567                           ;main.c: 129:     TRISDbits.TRISD5 = 0;
   568  0053  1288               	bcf	8,5	;volatile
   569  0054                     l924:
   570                           
   571                           ;main.c: 132:     OSCCONbits.IRCF = 0b111 ;
   572  0054  3070               	movlw	112
   573  0055  048F               	iorwf	15,f	;volatile
   574  0056                     l926:
   575                           
   576                           ;main.c: 133:     OSCCONbits.SCS = 1;
   577  0056  140F               	bsf	15,0	;volatile
   578  0057                     l928:
   579                           
   580                           ;main.c: 137:     PIR1bits.ADIF = 0;
   581  0057  1283               	bcf	3,5	;RP0=0, select bank0
   582  0058  1303               	bcf	3,6	;RP1=0, select bank0
   583  0059  130C               	bcf	12,6	;volatile
   584  005A                     l930:
   585                           
   586                           ;main.c: 138:     PIE1bits.ADIE = 1;
   587  005A  1683               	bsf	3,5	;RP0=1, select bank1
   588  005B  1303               	bcf	3,6	;RP1=0, select bank1
   589  005C  170C               	bsf	12,6	;volatile
   590  005D                     l932:
   591                           
   592                           ;main.c: 139:     INTCONbits.PEIE = 1;
   593  005D  170B               	bsf	11,6	;volatile
   594  005E                     l934:
   595                           
   596                           ;main.c: 140:     INTCONbits.GIE = 1;
   597  005E  178B               	bsf	11,7	;volatile
   598  005F                     l936:
   599                           
   600                           ;main.c: 141:     ADCON0bits.GO = 1;
   601  005F  1283               	bcf	3,5	;RP0=0, select bank0
   602  0060  1303               	bcf	3,6	;RP1=0, select bank0
   603  0061  149F               	bsf	31,1	;volatile
   604  0062                     l938:
   605                           
   606                           ;main.c: 142:     I2C_Slave_Init(0x50);
   607  0062  3050               	movlw	80
   608  0063  120A  118A  2140  120A  118A  	fcall	_I2C_Slave_Init
   609  0068                     l940:
   610                           
   611                           ;main.c: 143:     turno = 0;
   612  0068  01F1               	clrf	_turno
   613  0069                     l942:
   614                           
   615                           ;main.c: 149:         dc = recibido & 0b00000011;
   616  0069  0874               	movf	_recibido,w
   617  006A  3903               	andlw	3
   618  006B  00FA               	movwf	??_main
   619  006C  087A               	movf	??_main,w
   620  006D  00F3               	movwf	_dc
   621  006E                     l944:
   622                           
   623                           ;main.c: 150:         servo = recibido & 0b00000100;
   624  006E  0874               	movf	_recibido,w
   625  006F  3904               	andlw	4
   626  0070  00FA               	movwf	??_main
   627  0071  087A               	movf	??_main,w
   628  0072  00F2               	movwf	_servo
   629  0073                     l946:
   630                           
   631                           ;main.c: 152:         if(dc == 0b00000000){
   632  0073  0873               	movf	_dc,w
   633  0074  1D03               	btfss	3,2
   634  0075  2877               	goto	u161
   635  0076  2878               	goto	u160
   636  0077                     u161:
   637  0077  287A               	goto	l950
   638  0078                     u160:
   639  0078                     l948:
   640                           
   641                           ;main.c: 153:             dc = 0;
   642  0078  01F3               	clrf	_dc
   643                           
   644                           ;main.c: 154:         }else if (dc == 0b00000001){
   645  0079  289A               	goto	l962
   646  007A                     l950:
   647  007A  0373               	decf	_dc,w
   648  007B  1D03               	btfss	3,2
   649  007C  287E               	goto	u171
   650  007D  287F               	goto	u170
   651  007E                     u171:
   652  007E  2884               	goto	l954
   653  007F                     u170:
   654  007F                     l952:
   655                           
   656                           ;main.c: 155:             dc = 85;
   657  007F  3055               	movlw	85
   658  0080  00FA               	movwf	??_main
   659  0081  087A               	movf	??_main,w
   660  0082  00F3               	movwf	_dc
   661                           
   662                           ;main.c: 156:         }else if (dc == 0b00000010){
   663  0083  289A               	goto	l962
   664  0084                     l954:
   665  0084  3002               	movlw	2
   666  0085  0673               	xorwf	_dc,w
   667  0086  1D03               	btfss	3,2
   668  0087  2889               	goto	u181
   669  0088  288A               	goto	u180
   670  0089                     u181:
   671  0089  288F               	goto	l958
   672  008A                     u180:
   673  008A                     l956:
   674                           
   675                           ;main.c: 157:             dc = 170;
   676  008A  30AA               	movlw	170
   677  008B  00FA               	movwf	??_main
   678  008C  087A               	movf	??_main,w
   679  008D  00F3               	movwf	_dc
   680                           
   681                           ;main.c: 158:         }else if (dc == 0b00000011){
   682  008E  289A               	goto	l962
   683  008F                     l958:
   684  008F  3003               	movlw	3
   685  0090  0673               	xorwf	_dc,w
   686  0091  1D03               	btfss	3,2
   687  0092  2894               	goto	u191
   688  0093  2895               	goto	u190
   689  0094                     u191:
   690  0094  289A               	goto	l88
   691  0095                     u190:
   692  0095                     l960:
   693                           
   694                           ;main.c: 159:             dc = 255;
   695  0095  30FF               	movlw	255
   696  0096  00FA               	movwf	??_main
   697  0097  087A               	movf	??_main,w
   698  0098  00F3               	movwf	_dc
   699  0099  289A               	goto	l962
   700  009A                     l88:
   701  009A                     l962:
   702                           
   703                           ;main.c: 162:         if (servo == 0b00000100){
   704  009A  3004               	movlw	4
   705  009B  0672               	xorwf	_servo,w
   706  009C  1D03               	btfss	3,2
   707  009D  289F               	goto	u201
   708  009E  28A0               	goto	u200
   709  009F                     u201:
   710  009F  28A5               	goto	l966
   711  00A0                     u200:
   712  00A0                     l964:
   713                           
   714                           ;main.c: 163:             servo = 255;
   715  00A0  30FF               	movlw	255
   716  00A1  00FA               	movwf	??_main
   717  00A2  087A               	movf	??_main,w
   718  00A3  00F2               	movwf	_servo
   719                           
   720                           ;main.c: 164:         }else if (servo == 0b00000000){
   721  00A4  28AB               	goto	l970
   722  00A5                     l966:
   723  00A5  0872               	movf	_servo,w
   724  00A6  1D03               	btfss	3,2
   725  00A7  28A9               	goto	u211
   726  00A8  28AA               	goto	u210
   727  00A9                     u211:
   728  00A9  28AB               	goto	l970
   729  00AA                     u210:
   730  00AA                     l968:
   731                           
   732                           ;main.c: 165:             servo = 0;
   733  00AA  01F2               	clrf	_servo
   734  00AB                     l970:
   735                           
   736                           ;main.c: 168:         if(turno == 1){
   737  00AB  0371               	decf	_turno,w
   738  00AC  1D03               	btfss	3,2
   739  00AD  28AF               	goto	u221
   740  00AE  28B0               	goto	u220
   741  00AF                     u221:
   742  00AF  28C3               	goto	l980
   743  00B0                     u220:
   744  00B0                     l972:
   745                           
   746                           ;main.c: 169:             if(dc == 0){
   747  00B0  0873               	movf	_dc,w
   748  00B1  1D03               	btfss	3,2
   749  00B2  28B4               	goto	u231
   750  00B3  28B5               	goto	u230
   751  00B4                     u231:
   752  00B4  28B9               	goto	l976
   753  00B5                     u230:
   754  00B5                     l974:
   755                           
   756                           ;main.c: 170:                 CCPR1L = 0;
   757  00B5  1283               	bcf	3,5	;RP0=0, select bank0
   758  00B6  1303               	bcf	3,6	;RP1=0, select bank0
   759  00B7  0195               	clrf	21	;volatile
   760                           
   761                           ;main.c: 171:             }else{
   762  00B8  28C1               	goto	l978
   763  00B9                     l976:
   764                           
   765                           ;main.c: 172:                 CCPR1L = (dc >> 1) + 124;
   766  00B9  0873               	movf	_dc,w
   767  00BA  00FA               	movwf	??_main
   768  00BB  1003               	clrc
   769  00BC  0C7A               	rrf	??_main,w
   770  00BD  3E7C               	addlw	124
   771  00BE  1283               	bcf	3,5	;RP0=0, select bank0
   772  00BF  1303               	bcf	3,6	;RP1=0, select bank0
   773  00C0  0095               	movwf	21	;volatile
   774  00C1                     l978:
   775                           
   776                           ;main.c: 175:             turno = 0;
   777  00C1  01F1               	clrf	_turno
   778                           
   779                           ;main.c: 176:         }
   780  00C2  28D2               	goto	l986
   781  00C3                     l980:
   782  00C3  0871               	movf	_turno,w
   783  00C4  1D03               	btfss	3,2
   784  00C5  28C7               	goto	u241
   785  00C6  28C8               	goto	u240
   786  00C7                     u241:
   787  00C7  28D2               	goto	l986
   788  00C8                     u240:
   789  00C8                     l982:
   790                           
   791                           ;main.c: 178:             CCPR2L = (servo >> 1) + 124;
   792  00C8  0872               	movf	_servo,w
   793  00C9  00FA               	movwf	??_main
   794  00CA  1003               	clrc
   795  00CB  0C7A               	rrf	??_main,w
   796  00CC  3E7C               	addlw	124
   797  00CD  1283               	bcf	3,5	;RP0=0, select bank0
   798  00CE  1303               	bcf	3,6	;RP1=0, select bank0
   799  00CF  009B               	movwf	27	;volatile
   800  00D0                     l984:
   801                           
   802                           ;main.c: 179:             turno = 1;
   803  00D0  01F1               	clrf	_turno
   804  00D1  0AF1               	incf	_turno,f
   805  00D2                     l986:
   806                           
   807                           ;main.c: 182:         _delay((unsigned long)((250)*(8000000/4000000.0)));
   808  00D2  30A6               	movlw	166
   809  00D3  00FA               	movwf	??_main
   810  00D4                     u307:
   811  00D4  0BFA               	decfsz	??_main,f
   812  00D5  28D4               	goto	u307
   813  00D6  0000               	nop
   814  00D7  2869               	goto	l942
   815  00D8  120A  118A  280C   	ljmp	start
   816  00DB                     __end_of_main:
   817                           
   818                           	psect	text1
   819  0140                     __ptext1:	
   820 ;; *************** function _I2C_Slave_Init *****************
   821 ;; Defined at:
   822 ;;		line 97 in file "I2C.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;  address         1    wreg     unsigned char 
   825 ;; Auto vars:     Size  Location     Type
   826 ;;  address         1    3[COMMON] unsigned char 
   827 ;; Return value:  Size  Location     Type
   828 ;;                  1    wreg      void 
   829 ;; Registers used:
   830 ;;		wreg
   831 ;; Tracked objects:
   832 ;;		On entry : 0/0
   833 ;;		On exit  : 0/0
   834 ;;		Unchanged: 0/0
   835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   836 ;;      Params:         0       0       0       0       0
   837 ;;      Locals:         1       0       0       0       0
   838 ;;      Temps:          0       0       0       0       0
   839 ;;      Totals:         1       0       0       0       0
   840 ;;Total ram usage:        1 bytes
   841 ;; Hardware stack levels used:    1
   842 ;; Hardware stack levels required when called:    1
   843 ;; This function calls:
   844 ;;		Nothing
   845 ;; This function is called by:
   846 ;;		_main
   847 ;; This function uses a non-reentrant model
   848 ;;
   849                           
   850                           
   851                           ;psect for function _I2C_Slave_Init
   852  0140                     _I2C_Slave_Init:
   853                           
   854                           ;incstack = 0
   855                           ; Regs used in _I2C_Slave_Init: [wreg]
   856                           ;I2C_Slave_Init@address stored from wreg
   857  0140  00F9               	movwf	I2C_Slave_Init@address
   858  0141                     l826:
   859                           
   860                           ;I2C.c: 97: void I2C_Slave_Init(uint8_t address);I2C.c: 98: {;I2C.c: 99:     SSPADD = ad
      +                          dress;
   861  0141  0879               	movf	I2C_Slave_Init@address,w
   862  0142  1683               	bsf	3,5	;RP0=1, select bank1
   863  0143  1303               	bcf	3,6	;RP1=0, select bank1
   864  0144  0093               	movwf	19	;volatile
   865                           
   866                           ;I2C.c: 100:     SSPCON = 0x36;
   867  0145  3036               	movlw	54
   868  0146  1283               	bcf	3,5	;RP0=0, select bank0
   869  0147  1303               	bcf	3,6	;RP1=0, select bank0
   870  0148  0094               	movwf	20	;volatile
   871                           
   872                           ;I2C.c: 101:     SSPSTAT = 0x80;
   873  0149  3080               	movlw	128
   874  014A  1683               	bsf	3,5	;RP0=1, select bank1
   875  014B  1303               	bcf	3,6	;RP1=0, select bank1
   876  014C  0094               	movwf	20	;volatile
   877                           
   878                           ;I2C.c: 102:     SSPCON2 = 0x01;
   879  014D  3001               	movlw	1
   880  014E  0091               	movwf	17	;volatile
   881  014F                     l828:
   882                           
   883                           ;I2C.c: 103:     TRISC3 = 1;
   884  014F  1587               	bsf	7,3	;volatile
   885  0150                     l830:
   886                           
   887                           ;I2C.c: 104:     TRISC4 = 1;
   888  0150  1607               	bsf	7,4	;volatile
   889  0151                     l832:
   890                           
   891                           ;I2C.c: 105:     GIE = 1;
   892  0151  178B               	bsf	11,7	;volatile
   893  0152                     l834:
   894                           
   895                           ;I2C.c: 106:     PEIE = 1;
   896  0152  170B               	bsf	11,6	;volatile
   897  0153                     l836:
   898                           
   899                           ;I2C.c: 107:     SSPIF = 0;
   900  0153  1283               	bcf	3,5	;RP0=0, select bank0
   901  0154  1303               	bcf	3,6	;RP1=0, select bank0
   902  0155  118C               	bcf	12,3	;volatile
   903  0156                     l838:
   904                           
   905                           ;I2C.c: 108:     SSPIE = 1;
   906  0156  1683               	bsf	3,5	;RP0=1, select bank1
   907  0157  1303               	bcf	3,6	;RP1=0, select bank1
   908  0158  158C               	bsf	12,3	;volatile
   909  0159                     l165:
   910  0159  0008               	return
   911  015A                     __end_of_I2C_Slave_Init:
   912                           
   913                           	psect	text2
   914  00DB                     __ptext2:	
   915 ;; *************** function _isr *****************
   916 ;; Defined at:
   917 ;;		line 51 in file "main.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;		None
   920 ;; Auto vars:     Size  Location     Type
   921 ;;		None
   922 ;; Return value:  Size  Location     Type
   923 ;;                  1    wreg      void 
   924 ;; Registers used:
   925 ;;		wreg
   926 ;; Tracked objects:
   927 ;;		On entry : 0/0
   928 ;;		On exit  : 0/0
   929 ;;		Unchanged: 0/0
   930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   931 ;;      Params:         0       0       0       0       0
   932 ;;      Locals:         0       0       0       0       0
   933 ;;      Temps:          3       0       0       0       0
   934 ;;      Totals:         3       0       0       0       0
   935 ;;Total ram usage:        3 bytes
   936 ;; Hardware stack levels used:    1
   937 ;; This function calls:
   938 ;;		Nothing
   939 ;; This function is called by:
   940 ;;		Interrupt level 1
   941 ;; This function uses a non-reentrant model
   942 ;;
   943                           
   944                           
   945                           ;psect for function _isr
   946  00DB                     _isr:
   947  00DB                     i1l852:
   948                           
   949                           ;main.c: 52:     if(PIR1bits.SSPIF == 1){
   950  00DB  1283               	bcf	3,5	;RP0=0, select bank0
   951  00DC  1303               	bcf	3,6	;RP1=0, select bank0
   952  00DD  1D8C               	btfss	12,3	;volatile
   953  00DE  28E0               	goto	u6_21
   954  00DF  28E1               	goto	u6_20
   955  00E0                     u6_21:
   956  00E0  2939               	goto	i1l76
   957  00E1                     u6_20:
   958  00E1                     i1l854:
   959                           
   960                           ;main.c: 54:         SSPCONbits.CKP = 0;
   961  00E1  1214               	bcf	20,4	;volatile
   962                           
   963                           ;main.c: 56:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
   964  00E2  1B14               	btfsc	20,6	;volatile
   965  00E3  28E5               	goto	u7_21
   966  00E4  28E6               	goto	u7_20
   967  00E5                     u7_21:
   968  00E5  28EA               	goto	i1l858
   969  00E6                     u7_20:
   970  00E6                     i1l856:
   971  00E6  1F94               	btfss	20,7	;volatile
   972  00E7  28E9               	goto	u8_21
   973  00E8  28EA               	goto	u8_20
   974  00E9                     u8_21:
   975  00E9  28F1               	goto	i1l866
   976  00EA                     u8_20:
   977  00EA                     i1l858:
   978                           
   979                           ;main.c: 57:             z = SSPBUF;
   980  00EA  0813               	movf	19,w	;volatile
   981  00EB  00F6               	movwf	??_isr
   982  00EC  0876               	movf	??_isr,w
   983  00ED  00F5               	movwf	_z
   984  00EE                     i1l860:
   985                           
   986                           ;main.c: 58:             SSPCONbits.SSPOV = 0;
   987  00EE  1314               	bcf	20,6	;volatile
   988  00EF                     i1l862:
   989                           
   990                           ;main.c: 59:             SSPCONbits.WCOL = 0;
   991  00EF  1394               	bcf	20,7	;volatile
   992  00F0                     i1l864:
   993                           
   994                           ;main.c: 60:             SSPCONbits.CKP = 1;
   995  00F0  1614               	bsf	20,4	;volatile
   996  00F1                     i1l866:
   997                           
   998                           ;main.c: 63:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
   999  00F1  1683               	bsf	3,5	;RP0=1, select bank1
  1000  00F2  1303               	bcf	3,6	;RP1=0, select bank1
  1001  00F3  1A94               	btfsc	20,5	;volatile
  1002  00F4  28F6               	goto	u9_21
  1003  00F5  28F7               	goto	u9_20
  1004  00F6                     u9_21:
  1005  00F6  2915               	goto	i1l67
  1006  00F7                     u9_20:
  1007  00F7                     i1l868:
  1008  00F7  1914               	btfsc	20,2	;volatile
  1009  00F8  28FA               	goto	u10_21
  1010  00F9  28FB               	goto	u10_20
  1011  00FA                     u10_21:
  1012  00FA  2915               	goto	i1l67
  1013  00FB                     u10_20:
  1014  00FB                     i1l870:
  1015                           
  1016                           ;main.c: 65:             z = SSPBUF;
  1017  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1018  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1019  00FD  0813               	movf	19,w	;volatile
  1020  00FE  00F6               	movwf	??_isr
  1021  00FF  0876               	movf	??_isr,w
  1022  0100  00F5               	movwf	_z
  1023  0101                     i1l872:
  1024                           
  1025                           ;main.c: 67:             PIR1bits.SSPIF = 0;
  1026  0101  118C               	bcf	12,3	;volatile
  1027  0102                     i1l874:
  1028                           
  1029                           ;main.c: 68:             SSPCONbits.CKP = 1;
  1030  0102  1614               	bsf	20,4	;volatile
  1031  0103                     i1l68:	
  1032                           ;main.c: 69:             while(!SSPSTATbits.BF);
  1033                           
  1034  0103  1683               	bsf	3,5	;RP0=1, select bank1
  1035  0104  1303               	bcf	3,6	;RP1=0, select bank1
  1036  0105  1C14               	btfss	20,0	;volatile
  1037  0106  2908               	goto	u11_21
  1038  0107  2909               	goto	u11_20
  1039  0108                     u11_21:
  1040  0108  2903               	goto	i1l68
  1041  0109                     u11_20:
  1042  0109                     i1l876:
  1043                           
  1044                           ;main.c: 70:             recibido = SSPBUF;
  1045  0109  1283               	bcf	3,5	;RP0=0, select bank0
  1046  010A  1303               	bcf	3,6	;RP1=0, select bank0
  1047  010B  0813               	movf	19,w	;volatile
  1048  010C  00F6               	movwf	??_isr
  1049  010D  0876               	movf	??_isr,w
  1050  010E  00F4               	movwf	_recibido
  1051                           
  1052                           ;main.c: 71:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  1053  010F  30A6               	movlw	166
  1054  0110  00F6               	movwf	??_isr
  1055  0111                     u31_27:
  1056  0111  0BF6               	decfsz	??_isr,f
  1057  0112  2911               	goto	u31_27
  1058  0113  0000               	nop
  1059                           
  1060                           ;main.c: 73:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  1061  0114  2936               	goto	i1l71
  1062  0115                     i1l67:
  1063  0115  1A94               	btfsc	20,5	;volatile
  1064  0116  2918               	goto	u12_21
  1065  0117  2919               	goto	u12_20
  1066  0118                     u12_21:
  1067  0118  2936               	goto	i1l71
  1068  0119                     u12_20:
  1069  0119                     i1l878:
  1070  0119  1D14               	btfss	20,2	;volatile
  1071  011A  291C               	goto	u13_21
  1072  011B  291D               	goto	u13_20
  1073  011C                     u13_21:
  1074  011C  2936               	goto	i1l71
  1075  011D                     u13_20:
  1076  011D                     i1l880:
  1077                           
  1078                           ;main.c: 74:             z = SSPBUF;
  1079  011D  1283               	bcf	3,5	;RP0=0, select bank0
  1080  011E  1303               	bcf	3,6	;RP1=0, select bank0
  1081  011F  0813               	movf	19,w	;volatile
  1082  0120  00F6               	movwf	??_isr
  1083  0121  0876               	movf	??_isr,w
  1084  0122  00F5               	movwf	_z
  1085  0123                     i1l882:
  1086                           
  1087                           ;main.c: 75:             BF = 0;
  1088  0123  1683               	bsf	3,5	;RP0=1, select bank1
  1089  0124  1303               	bcf	3,6	;RP1=0, select bank1
  1090  0125  1014               	bcf	20,0	;volatile
  1091                           
  1092                           ;main.c: 76:             SSPBUF = 0x22;
  1093  0126  3022               	movlw	34
  1094  0127  1283               	bcf	3,5	;RP0=0, select bank0
  1095  0128  1303               	bcf	3,6	;RP1=0, select bank0
  1096  0129  0093               	movwf	19	;volatile
  1097  012A                     i1l884:
  1098                           
  1099                           ;main.c: 77:             SSPCONbits.CKP = 1;
  1100  012A  1614               	bsf	20,4	;volatile
  1101                           
  1102                           ;main.c: 78:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  1103  012B  30A6               	movlw	166
  1104  012C  00F6               	movwf	??_isr
  1105  012D                     u32_27:
  1106  012D  0BF6               	decfsz	??_isr,f
  1107  012E  292D               	goto	u32_27
  1108  012F  0000               	nop
  1109  0130                     i1l73:	
  1110                           ;main.c: 79:             while(SSPSTATbits.BF);
  1111                           
  1112  0130  1683               	bsf	3,5	;RP0=1, select bank1
  1113  0131  1303               	bcf	3,6	;RP1=0, select bank1
  1114  0132  1814               	btfsc	20,0	;volatile
  1115  0133  2935               	goto	u14_21
  1116  0134  2936               	goto	u14_20
  1117  0135                     u14_21:
  1118  0135  2930               	goto	i1l73
  1119  0136                     u14_20:
  1120  0136                     i1l71:
  1121                           
  1122                           ;main.c: 82:         PIR1bits.SSPIF = 0;
  1123  0136  1283               	bcf	3,5	;RP0=0, select bank0
  1124  0137  1303               	bcf	3,6	;RP1=0, select bank0
  1125  0138  118C               	bcf	12,3	;volatile
  1126  0139                     i1l76:
  1127  0139  0878               	movf	??_isr+2,w
  1128  013A  008A               	movwf	10
  1129  013B  0E77               	swapf	??_isr+1,w
  1130  013C  0083               	movwf	3
  1131  013D  0EFE               	swapf	btemp,f
  1132  013E  0E7E               	swapf	btemp,w
  1133  013F  0009               	retfie
  1134  0140                     __end_of_isr:
  1135  007E                     btemp	set	126	;btemp
  1136  007E                     wtemp0	set	126
  1137                           
  1138                           	psect	intentry
  1139  0004                     __pintentry:	
  1140                           ;incstack = 0
  1141                           ; Regs used in _isr: [wreg]
  1142                           
  1143  0004                     interrupt_function:
  1144  007E                     saved_w	set	btemp
  1145  0004  00FE               	movwf	btemp
  1146  0005  0E03               	swapf	3,w
  1147  0006  00F7               	movwf	??_isr+1
  1148  0007  080A               	movf	10,w
  1149  0008  00F8               	movwf	??_isr+2
  1150  0009  120A  118A  28DB   	ljmp	_isr
  1151                           
  1152                           	psect	config
  1153                           
  1154                           ;Config register CONFIG1 @ 0x2007
  1155                           ;	Oscillator Selection bits
  1156                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1157                           ;	Watchdog Timer Enable bit
  1158                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1159                           ;	Power-up Timer Enable bit
  1160                           ;	PWRTE = OFF, PWRT disabled
  1161                           ;	RE3/MCLR pin function select bit
  1162                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1163                           ;	Code Protection bit
  1164                           ;	CP = OFF, Program memory code protection is disabled
  1165                           ;	Data Code Protection bit
  1166                           ;	CPD = OFF, Data memory code protection is disabled
  1167                           ;	Brown Out Reset Selection bits
  1168                           ;	BOREN = OFF, BOR disabled
  1169                           ;	Internal External Switchover bit
  1170                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1171                           ;	Fail-Safe Clock Monitor Enabled bit
  1172                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1173                           ;	Low Voltage Programming Enable bit
  1174                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1175                           ;	In-Circuit Debugger Mode bit
  1176                           ;	DEBUG = 0x1, unprogrammed default
  1177  2007                     	org	8199
  1178  2007  20D4               	dw	8404
  1179                           
  1180                           ;Config register CONFIG2 @ 0x2008
  1181                           ;	Brown-out Reset Selection bit
  1182                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1183                           ;	Flash Program Memory Self Write Enable bits
  1184                           ;	WRT = OFF, Write protection off
  1185  2008                     	org	8200
  1186  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_I2C_Slave_Init

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      15
                                              4 COMMON     1     1      0
                     _I2C_Slave_Init
 ---------------------------------------------------------------------------------
 (1) _I2C_Slave_Init                                       1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Slave_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       D       1       92.9%
BITCOMMON            E      0       1       0        7.1%
CODE                 0      0       0       0        0.0%
DATA                 0      0       D      12        0.0%
ABS                  0      0       D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Sep 02 12:47:43 2021

                      _z 0075              _SSPSTATbits 0094                       _BF 04A0  
                     l81 004B                       l83 004F                       l88 009A  
                     _RS 03D8                       _dc 0073                      l165 0159  
                    l900 0033                      l830 0150                      l910 0041  
                    l902 0037                      l832 0151                      l920 0048  
                    l912 0043                      l904 0039                      l834 0152  
                    l826 0141                      l930 005A                      l922 004A  
                    l914 0045                      l906 003B                      l836 0153  
                    l828 014F                      l940 0068                      l932 005D  
                    l924 0054                      l916 0046                      l908 003F  
                    l838 0156                      l950 007A                      l942 0069  
                    l934 005E                      l926 0056                      l918 0047  
                    l960 0095                      l952 007F                      l944 006E  
                    l936 005F                      l928 0057                      l970 00AB  
                    l954 0084                      l962 009A                      l946 0073  
                    l938 0062                      l890 0025                      l972 00B0  
                    l980 00C3                      l964 00A0                      l956 008A  
                    l948 0078                      l892 002B                      l982 00C8  
                    l974 00B5                      l966 00A5                      l958 008F  
                    l894 002C                      l886 0020                      l984 00D0  
                    l976 00B9                      l968 00AA                      l896 002D  
                    l888 0024                      l986 00D2                      l978 00C1  
                    l898 002F                      _GIE 005F                      u200 00A0  
                    u201 009F                      u210 00AA                      u211 00A9  
                    u220 00B0                      u221 00AF                      u230 00B5  
                    u150 004F                      u231 00B4                      u151 004E  
                    u240 00C8                      u160 0078                      u241 00C7  
                    u161 0077                      u170 007F                      u307 00D4  
                    u171 007E                      u180 008A                      u181 0089  
                    u190 0095                      _PR2 0092                      u191 0094  
                    _isr 00DB                     ?_isr 0076                     _PEIE 005E  
                   i1l71 0136                     i1l73 0130                     i1l67 0115  
                   i1l68 0103                     i1l76 0139                     u6_20 00E1  
                   u6_21 00E0                     u7_20 00E6                     u7_21 00E5  
                   u8_20 00EA                     u8_21 00E9                     u9_20 00F7  
                   u9_21 00F6                     _main 0020                     btemp 007E  
                   start 000C                    ??_isr 0076                    ?_main 0076  
                  _ANSEL 0188                    i1l860 00EE                    i1l852 00DB  
                  i1l870 00FB                    i1l862 00EF                    i1l854 00E1  
                  i1l880 011D                    i1l872 0101                    i1l864 00F0  
                  i1l856 00E6                    i1l882 0123                    i1l874 0102  
                  i1l866 00F1                    i1l858 00EA                    i1l884 012A  
                  i1l876 0109                    i1l868 00F7                    i1l878 0119  
                  u10_20 00FB                    u10_21 00FA                    u11_20 0109  
                  u11_21 0108                    u12_20 0119                    u12_21 0118  
                  u13_20 011D                    u13_21 011C                    u14_20 0136  
                  u14_21 0135                    u31_27 0111                    u32_27 012D  
                  _TRISA 0085                    _TRISC 0087                    _TRISD 0088  
                  _SSPIE 0463                    _SSPIF 0063                    _servo 0072  
                  _turno 0071           __pbitbssCOMMON 03D8                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 00DB                   ??_main 007A                   _CCPR1L 0015  
                 _CCPR2L 001B                   _ANSELH 0189                   _SSPADD 0093  
                 _TRISC3 043B                   _TRISC4 043C                   _SSPBUF 0013  
                 _SSPCON 0014             __pdataCOMMON 007C                   saved_w 007E  
__end_of__initialization 001C            _backlight_val 007C           __pcstackCOMMON 0076  
__size_of_I2C_Slave_Init 001A    I2C_Slave_Init@address 0079               __pmaintext 0020  
             __pintentry 0004                  _SSPCON2 0091                  _SSPSTAT 0094  
                __ptext1 0140                  __ptext2 00DB                _T2CONbits 0012  
           __size_of_isr 0065     end_of_initialization 001C           _I2C_Slave_Init 0140  
              _TRISCbits 0087                _TRISDbits 0088              _CCP1CONbits 0017  
            _CCP2CONbits 001D   __end_of_I2C_Slave_Init 015A            __pidataCOMMON 015A  
    start_initialization 000F              __end_of_isr 0140          ?_I2C_Slave_Init 0076  
            __pbssCOMMON 0070                ___latbits 0002        interrupt_function 0004  
               _PIE1bits 008C                 _PIR1bits 000C               _ADCON0bits 001F  
               _i2c_addr 0070         ??_I2C_Slave_Init 0079            __size_of_main 00BB  
               _recibido 0074               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F              _SSPCON2bits 0091               _SSPCONbits 0014  
