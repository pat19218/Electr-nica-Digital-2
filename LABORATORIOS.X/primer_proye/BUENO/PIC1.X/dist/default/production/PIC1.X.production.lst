

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Sep 01 21:07:53 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0000                     	;# 
   286  0001                     	;# 
   287  0002                     	;# 
   288  0003                     	;# 
   289  0004                     	;# 
   290  0005                     	;# 
   291  0006                     	;# 
   292  0007                     	;# 
   293  0008                     	;# 
   294  0009                     	;# 
   295  000A                     	;# 
   296  000B                     	;# 
   297  000C                     	;# 
   298  000D                     	;# 
   299  000E                     	;# 
   300  000E                     	;# 
   301  000F                     	;# 
   302  0010                     	;# 
   303  0011                     	;# 
   304  0012                     	;# 
   305  0013                     	;# 
   306  0014                     	;# 
   307  0015                     	;# 
   308  0015                     	;# 
   309  0016                     	;# 
   310  0017                     	;# 
   311  0018                     	;# 
   312  0019                     	;# 
   313  001A                     	;# 
   314  001B                     	;# 
   315  001B                     	;# 
   316  001C                     	;# 
   317  001D                     	;# 
   318  001E                     	;# 
   319  001F                     	;# 
   320  0081                     	;# 
   321  0085                     	;# 
   322  0086                     	;# 
   323  0087                     	;# 
   324  0088                     	;# 
   325  0089                     	;# 
   326  008C                     	;# 
   327  008D                     	;# 
   328  008E                     	;# 
   329  008F                     	;# 
   330  0090                     	;# 
   331  0091                     	;# 
   332  0092                     	;# 
   333  0093                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0094                     	;# 
   337  0095                     	;# 
   338  0096                     	;# 
   339  0097                     	;# 
   340  0098                     	;# 
   341  0099                     	;# 
   342  009A                     	;# 
   343  009B                     	;# 
   344  009C                     	;# 
   345  009D                     	;# 
   346  009E                     	;# 
   347  009F                     	;# 
   348  0105                     	;# 
   349  0107                     	;# 
   350  0108                     	;# 
   351  0109                     	;# 
   352  010C                     	;# 
   353  010C                     	;# 
   354  010D                     	;# 
   355  010E                     	;# 
   356  010F                     	;# 
   357  0185                     	;# 
   358  0187                     	;# 
   359  0188                     	;# 
   360  0189                     	;# 
   361  018C                     	;# 
   362  018D                     	;# 
   363                           
   364                           	psect	idataCOMMON
   365  015A                     __pidataCOMMON:
   366                           
   367                           ;initializer for _backlight_val
   368  015A  3408               	retlw	8
   369  001F                     _ADCON0bits	set	31
   370  000B                     _INTCONbits	set	11
   371  0012                     _T2CONbits	set	18
   372  001B                     _CCPR2L	set	27
   373  001D                     _CCP2CONbits	set	29
   374  0015                     _CCPR1L	set	21
   375  0017                     _CCP1CONbits	set	23
   376  0014                     _SSPCONbits	set	20
   377  000C                     _PIR1bits	set	12
   378  001A                     _RCREG	set	26
   379  0019                     _TXREG	set	25
   380  0018                     _RCSTAbits	set	24
   381  0013                     _SSPBUF	set	19
   382  0014                     _SSPCON	set	20
   383  0063                     _SSPIF	set	99
   384  005E                     _PEIE	set	94
   385  005F                     _GIE	set	95
   386  008C                     _PIE1bits	set	140
   387  008F                     _OSCCONbits	set	143
   388  0092                     _PR2	set	146
   389  0088                     _TRISDbits	set	136
   390  0088                     _TRISD	set	136
   391  0087                     _TRISC	set	135
   392  0085                     _TRISA	set	133
   393  0094                     _SSPSTATbits	set	148
   394  009A                     _SPBRGH	set	154
   395  0099                     _SPBRG	set	153
   396  0098                     _TXSTAbits	set	152
   397  0091                     _SSPCON2bits	set	145
   398  0087                     _TRISCbits	set	135
   399  0094                     _SSPSTAT	set	148
   400  0093                     _SSPADD	set	147
   401  0091                     _SSPCON2	set	145
   402  04A0                     _BF	set	1184
   403  0463                     _SSPIE	set	1123
   404  043C                     _TRISC4	set	1084
   405  043B                     _TRISC3	set	1083
   406  0189                     _ANSELH	set	393
   407  0188                     _ANSEL	set	392
   408  0187                     _BAUDCTLbits	set	391
   409                           
   410                           	psect	cinit
   411  000F                     start_initialization:	
   412                           ; #config settings
   413                           
   414  000F                     __initialization:
   415                           
   416                           ; Initialize objects allocated to COMMON
   417  000F  120A  118A  215A  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   418  0014  00FC               	movwf	__pdataCOMMON& (0+127)
   419                           
   420                           ; Clear objects allocated to COMMON
   421  0015  01F0               	clrf	__pbssCOMMON& (0+127)
   422  0016  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   423  0017  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   424  0018  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   425  0019  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   426  001A  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   427                           
   428                           ; Clear objects allocated to BITCOMMON
   429  001B  01FB               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   430  001C                     end_of_initialization:	
   431                           ;End of C runtime variable initialization code
   432                           
   433  001C                     __end_of__initialization:
   434  001C  0183               	clrf	3
   435  001D  120A  118A  2820   	ljmp	_main	;jump to C main() function
   436                           
   437                           	psect	bitbssCOMMON
   438  03D8                     __pbitbssCOMMON:
   439  03D8                     _RS:
   440  03D8                     	ds	1
   441                           
   442                           	psect	bssCOMMON
   443  0070                     __pbssCOMMON:
   444  0070                     _turno:
   445  0070                     	ds	1
   446  0071                     _servo:
   447  0071                     	ds	1
   448  0072                     _dc:
   449  0072                     	ds	1
   450  0073                     _recibido:
   451  0073                     	ds	1
   452  0074                     _z:
   453  0074                     	ds	1
   454  0075                     _i2c_addr:
   455  0075                     	ds	1
   456                           
   457                           	psect	dataCOMMON
   458  007C                     __pdataCOMMON:
   459  007C                     _backlight_val:
   460  007C                     	ds	1
   461                           
   462                           	psect	cstackCOMMON
   463  0076                     __pcstackCOMMON:
   464  0076                     ?_I2C_Slave_Init:
   465  0076                     ?_isr:	
   466                           ; 1 bytes @ 0x0
   467                           
   468  0076                     ??_isr:	
   469                           ; 1 bytes @ 0x0
   470                           
   471  0076                     ?_main:	
   472                           ; 1 bytes @ 0x0
   473                           
   474                           
   475                           ; 1 bytes @ 0x0
   476  0076                     	ds	3
   477  0079                     ??_I2C_Slave_Init:
   478  0079                     I2C_Slave_Init@address:	
   479                           ; 1 bytes @ 0x3
   480                           
   481                           
   482                           ; 1 bytes @ 0x3
   483  0079                     	ds	1
   484  007A                     ??_main:
   485                           
   486                           ; 1 bytes @ 0x4
   487  007A                     	ds	1
   488                           
   489                           	psect	maintext
   490  0020                     __pmaintext:	
   491 ;;
   492 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   493 ;;
   494 ;; *************** function _main *****************
   495 ;; Defined at:
   496 ;;		line 89 in file "motor.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;		None
   499 ;; Auto vars:     Size  Location     Type
   500 ;;		None
   501 ;; Return value:  Size  Location     Type
   502 ;;                  1    wreg      void 
   503 ;; Registers used:
   504 ;;		wreg, status,2, status,0, pclath, cstack
   505 ;; Tracked objects:
   506 ;;		On entry : B00/0
   507 ;;		On exit  : 0/0
   508 ;;		Unchanged: 0/0
   509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   510 ;;      Params:         0       0       0       0       0
   511 ;;      Locals:         0       0       0       0       0
   512 ;;      Temps:          1       0       0       0       0
   513 ;;      Totals:         1       0       0       0       0
   514 ;;Total ram usage:        1 bytes
   515 ;; Hardware stack levels required when called:    2
   516 ;; This function calls:
   517 ;;		_I2C_Slave_Init
   518 ;; This function is called by:
   519 ;;		Startup code after reset
   520 ;; This function uses a non-reentrant model
   521 ;;
   522                           
   523                           
   524                           ;psect for function _main
   525  0020                     _main:
   526  0020                     l1073:	
   527                           ;incstack = 0
   528                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   529                           
   530                           
   531                           ;motor.c: 91:     ANSEL = 0b00000011;
   532  0020  3003               	movlw	3
   533  0021  1683               	bsf	3,5	;RP0=1, select bank3
   534  0022  1703               	bsf	3,6	;RP1=1, select bank3
   535  0023  0088               	movwf	8	;volatile
   536  0024                     l1075:
   537                           
   538                           ;motor.c: 92:     ANSELH = 0x00;
   539  0024  0189               	clrf	9	;volatile
   540  0025                     l1077:
   541                           
   542                           ;motor.c: 94:     TRISA = 0b00000011;
   543  0025  3003               	movlw	3
   544  0026  1683               	bsf	3,5	;RP0=1, select bank1
   545  0027  1303               	bcf	3,6	;RP1=0, select bank1
   546  0028  0085               	movwf	5	;volatile
   547                           
   548                           ;motor.c: 95:     TRISC = 0x00;
   549  0029  0187               	clrf	7	;volatile
   550                           
   551                           ;motor.c: 96:     TRISD = 0x00;
   552  002A  0188               	clrf	8	;volatile
   553  002B                     l1079:
   554                           
   555                           ;motor.c: 109:     TRISCbits.TRISC2 = 1;
   556  002B  1507               	bsf	7,2	;volatile
   557  002C                     l1081:
   558                           
   559                           ;motor.c: 110:     TRISDbits.TRISD5 = 1;
   560  002C  1688               	bsf	8,5	;volatile
   561  002D                     l1083:
   562                           
   563                           ;motor.c: 111:     PR2 = 255;
   564  002D  30FF               	movlw	255
   565  002E  0092               	movwf	18	;volatile
   566  002F                     l1085:
   567                           
   568                           ;motor.c: 112:     CCP1CONbits.P1M = 0;
   569  002F  303F               	movlw	-193
   570  0030  1283               	bcf	3,5	;RP0=0, select bank0
   571  0031  1303               	bcf	3,6	;RP1=0, select bank0
   572  0032  0597               	andwf	23,f	;volatile
   573  0033                     l1087:
   574                           
   575                           ;motor.c: 113:     CCP1CONbits.CCP1M = 0b1100;
   576  0033  0817               	movf	23,w	;volatile
   577  0034  39F0               	andlw	-16
   578  0035  380C               	iorlw	12
   579  0036  0097               	movwf	23	;volatile
   580  0037                     l1089:
   581                           
   582                           ;motor.c: 114:     CCPR1L = 0x0f;
   583  0037  300F               	movlw	15
   584  0038  0095               	movwf	21	;volatile
   585  0039                     l1091:
   586                           
   587                           ;motor.c: 116:     CCP2CONbits.CCP2M = 0;
   588  0039  30F0               	movlw	-16
   589  003A  059D               	andwf	29,f	;volatile
   590  003B                     l1093:
   591                           
   592                           ;motor.c: 117:     CCP2CONbits.CCP2M = 0b1100;
   593  003B  081D               	movf	29,w	;volatile
   594  003C  39F0               	andlw	-16
   595  003D  380C               	iorlw	12
   596  003E  009D               	movwf	29	;volatile
   597  003F                     l1095:
   598                           
   599                           ;motor.c: 118:     CCPR1L = 0x0f;
   600  003F  300F               	movlw	15
   601  0040  0095               	movwf	21	;volatile
   602  0041                     l1097:
   603                           
   604                           ;motor.c: 119:     CCPR2L = 0x0f;
   605  0041  300F               	movlw	15
   606  0042  009B               	movwf	27	;volatile
   607  0043                     l1099:
   608                           
   609                           ;motor.c: 120:     CCP1CONbits.DC1B = 0;
   610  0043  30CF               	movlw	-49
   611  0044  0597               	andwf	23,f	;volatile
   612  0045                     l1101:
   613                           
   614                           ;motor.c: 121:     CCP2CONbits.DC2B0 = 0;
   615  0045  121D               	bcf	29,4	;volatile
   616  0046                     l1103:
   617                           
   618                           ;motor.c: 122:     CCP2CONbits.DC2B1 = 0;
   619  0046  129D               	bcf	29,5	;volatile
   620  0047                     l1105:
   621                           
   622                           ;motor.c: 124:     PIR1bits.TMR2IF = 0;
   623  0047  108C               	bcf	12,1	;volatile
   624  0048                     l1107:
   625                           
   626                           ;motor.c: 125:     T2CONbits.T2CKPS = 0b11;
   627  0048  3003               	movlw	3
   628  0049  0492               	iorwf	18,f	;volatile
   629  004A                     l1109:
   630                           
   631                           ;motor.c: 126:     T2CONbits.TMR2ON = 1;
   632  004A  1512               	bsf	18,2	;volatile
   633  004B                     l218:	
   634                           ;motor.c: 127:     while(PIR1bits.TMR2IF == 0);
   635                           
   636  004B  1C8C               	btfss	12,1	;volatile
   637  004C  284E               	goto	u221
   638  004D  284F               	goto	u220
   639  004E                     u221:
   640  004E  284B               	goto	l218
   641  004F                     u220:
   642  004F                     l220:
   643                           
   644                           ;motor.c: 128:     PIR1bits.TMR2IF = 0;
   645  004F  108C               	bcf	12,1	;volatile
   646                           
   647                           ;motor.c: 129:     TRISCbits.TRISC2 = 0;
   648  0050  1683               	bsf	3,5	;RP0=1, select bank1
   649  0051  1303               	bcf	3,6	;RP1=0, select bank1
   650  0052  1107               	bcf	7,2	;volatile
   651                           
   652                           ;motor.c: 130:     TRISDbits.TRISD5 = 0;
   653  0053  1288               	bcf	8,5	;volatile
   654  0054                     l1111:
   655                           
   656                           ;motor.c: 133:     OSCCONbits.IRCF = 0b111 ;
   657  0054  3070               	movlw	112
   658  0055  048F               	iorwf	15,f	;volatile
   659  0056                     l1113:
   660                           
   661                           ;motor.c: 134:     OSCCONbits.SCS = 1;
   662  0056  140F               	bsf	15,0	;volatile
   663  0057                     l1115:
   664                           
   665                           ;motor.c: 138:     PIR1bits.ADIF = 0;
   666  0057  1283               	bcf	3,5	;RP0=0, select bank0
   667  0058  1303               	bcf	3,6	;RP1=0, select bank0
   668  0059  130C               	bcf	12,6	;volatile
   669  005A                     l1117:
   670                           
   671                           ;motor.c: 139:     PIE1bits.ADIE = 1;
   672  005A  1683               	bsf	3,5	;RP0=1, select bank1
   673  005B  1303               	bcf	3,6	;RP1=0, select bank1
   674  005C  170C               	bsf	12,6	;volatile
   675  005D                     l1119:
   676                           
   677                           ;motor.c: 140:     INTCONbits.PEIE = 1;
   678  005D  170B               	bsf	11,6	;volatile
   679  005E                     l1121:
   680                           
   681                           ;motor.c: 141:     INTCONbits.GIE = 1;
   682  005E  178B               	bsf	11,7	;volatile
   683  005F                     l1123:
   684                           
   685                           ;motor.c: 142:     ADCON0bits.GO = 1;
   686  005F  1283               	bcf	3,5	;RP0=0, select bank0
   687  0060  1303               	bcf	3,6	;RP1=0, select bank0
   688  0061  149F               	bsf	31,1	;volatile
   689  0062                     l1125:
   690                           
   691                           ;motor.c: 143:     I2C_Slave_Init(0x50);
   692  0062  3050               	movlw	80
   693  0063  120A  118A  2140  120A  118A  	fcall	_I2C_Slave_Init
   694  0068                     l1127:
   695                           
   696                           ;motor.c: 144:     turno = 0;
   697  0068  01F0               	clrf	_turno
   698  0069                     l1129:
   699                           
   700                           ;motor.c: 150:         dc = recibido & 0b00000011;
   701  0069  0873               	movf	_recibido,w
   702  006A  3903               	andlw	3
   703  006B  00FA               	movwf	??_main
   704  006C  087A               	movf	??_main,w
   705  006D  00F2               	movwf	_dc
   706  006E                     l1131:
   707                           
   708                           ;motor.c: 151:         servo = recibido & 0b00000100;
   709  006E  0873               	movf	_recibido,w
   710  006F  3904               	andlw	4
   711  0070  00FA               	movwf	??_main
   712  0071  087A               	movf	??_main,w
   713  0072  00F1               	movwf	_servo
   714  0073                     l1133:
   715                           
   716                           ;motor.c: 153:         if(dc == 0b00000000){
   717  0073  0872               	movf	_dc,w
   718  0074  1D03               	btfss	3,2
   719  0075  2877               	goto	u231
   720  0076  2878               	goto	u230
   721  0077                     u231:
   722  0077  287A               	goto	l1137
   723  0078                     u230:
   724  0078                     l1135:
   725                           
   726                           ;motor.c: 154:             dc = 0;
   727  0078  01F2               	clrf	_dc
   728                           
   729                           ;motor.c: 155:         }else if (dc == 0b00000001){
   730  0079  289A               	goto	l1149
   731  007A                     l1137:
   732  007A  0372               	decf	_dc,w
   733  007B  1D03               	btfss	3,2
   734  007C  287E               	goto	u241
   735  007D  287F               	goto	u240
   736  007E                     u241:
   737  007E  2884               	goto	l1141
   738  007F                     u240:
   739  007F                     l1139:
   740                           
   741                           ;motor.c: 156:             dc = 85;
   742  007F  3055               	movlw	85
   743  0080  00FA               	movwf	??_main
   744  0081  087A               	movf	??_main,w
   745  0082  00F2               	movwf	_dc
   746                           
   747                           ;motor.c: 157:         }else if (dc == 0b00000010){
   748  0083  289A               	goto	l1149
   749  0084                     l1141:
   750  0084  3002               	movlw	2
   751  0085  0672               	xorwf	_dc,w
   752  0086  1D03               	btfss	3,2
   753  0087  2889               	goto	u251
   754  0088  288A               	goto	u250
   755  0089                     u251:
   756  0089  288F               	goto	l1145
   757  008A                     u250:
   758  008A                     l1143:
   759                           
   760                           ;motor.c: 158:             dc = 170;
   761  008A  30AA               	movlw	170
   762  008B  00FA               	movwf	??_main
   763  008C  087A               	movf	??_main,w
   764  008D  00F2               	movwf	_dc
   765                           
   766                           ;motor.c: 159:         }else if (dc == 0b00000011){
   767  008E  289A               	goto	l1149
   768  008F                     l1145:
   769  008F  3003               	movlw	3
   770  0090  0672               	xorwf	_dc,w
   771  0091  1D03               	btfss	3,2
   772  0092  2894               	goto	u261
   773  0093  2895               	goto	u260
   774  0094                     u261:
   775  0094  289A               	goto	l225
   776  0095                     u260:
   777  0095                     l1147:
   778                           
   779                           ;motor.c: 160:             dc = 255;
   780  0095  30FF               	movlw	255
   781  0096  00FA               	movwf	??_main
   782  0097  087A               	movf	??_main,w
   783  0098  00F2               	movwf	_dc
   784  0099  289A               	goto	l1149
   785  009A                     l225:
   786  009A                     l1149:
   787                           
   788                           ;motor.c: 163:         if (servo == 0b00000100){
   789  009A  3004               	movlw	4
   790  009B  0671               	xorwf	_servo,w
   791  009C  1D03               	btfss	3,2
   792  009D  289F               	goto	u271
   793  009E  28A0               	goto	u270
   794  009F                     u271:
   795  009F  28A5               	goto	l1153
   796  00A0                     u270:
   797  00A0                     l1151:
   798                           
   799                           ;motor.c: 164:             servo = 255;
   800  00A0  30FF               	movlw	255
   801  00A1  00FA               	movwf	??_main
   802  00A2  087A               	movf	??_main,w
   803  00A3  00F1               	movwf	_servo
   804                           
   805                           ;motor.c: 165:         }else if (servo == 0b00000000){
   806  00A4  28AB               	goto	l1157
   807  00A5                     l1153:
   808  00A5  0871               	movf	_servo,w
   809  00A6  1D03               	btfss	3,2
   810  00A7  28A9               	goto	u281
   811  00A8  28AA               	goto	u280
   812  00A9                     u281:
   813  00A9  28AB               	goto	l1157
   814  00AA                     u280:
   815  00AA                     l1155:
   816                           
   817                           ;motor.c: 166:             servo = 0;
   818  00AA  01F1               	clrf	_servo
   819  00AB                     l1157:
   820                           
   821                           ;motor.c: 169:         if(turno == 1){
   822  00AB  0370               	decf	_turno,w
   823  00AC  1D03               	btfss	3,2
   824  00AD  28AF               	goto	u291
   825  00AE  28B0               	goto	u290
   826  00AF                     u291:
   827  00AF  28C3               	goto	l1167
   828  00B0                     u290:
   829  00B0                     l1159:
   830                           
   831                           ;motor.c: 170:             if(dc == 0){
   832  00B0  0872               	movf	_dc,w
   833  00B1  1D03               	btfss	3,2
   834  00B2  28B4               	goto	u301
   835  00B3  28B5               	goto	u300
   836  00B4                     u301:
   837  00B4  28B9               	goto	l1163
   838  00B5                     u300:
   839  00B5                     l1161:
   840                           
   841                           ;motor.c: 171:                 CCPR1L = 0;
   842  00B5  1283               	bcf	3,5	;RP0=0, select bank0
   843  00B6  1303               	bcf	3,6	;RP1=0, select bank0
   844  00B7  0195               	clrf	21	;volatile
   845                           
   846                           ;motor.c: 172:             }else{
   847  00B8  28C1               	goto	l1165
   848  00B9                     l1163:
   849                           
   850                           ;motor.c: 173:                 CCPR1L = (dc >> 1) + 124;
   851  00B9  0872               	movf	_dc,w
   852  00BA  00FA               	movwf	??_main
   853  00BB  1003               	clrc
   854  00BC  0C7A               	rrf	??_main,w
   855  00BD  3E7C               	addlw	124
   856  00BE  1283               	bcf	3,5	;RP0=0, select bank0
   857  00BF  1303               	bcf	3,6	;RP1=0, select bank0
   858  00C0  0095               	movwf	21	;volatile
   859  00C1                     l1165:
   860                           
   861                           ;motor.c: 176:             turno = 0;
   862  00C1  01F0               	clrf	_turno
   863                           
   864                           ;motor.c: 177:         }
   865  00C2  28D2               	goto	l1173
   866  00C3                     l1167:
   867  00C3  0870               	movf	_turno,w
   868  00C4  1D03               	btfss	3,2
   869  00C5  28C7               	goto	u311
   870  00C6  28C8               	goto	u310
   871  00C7                     u311:
   872  00C7  28D2               	goto	l1173
   873  00C8                     u310:
   874  00C8                     l1169:
   875                           
   876                           ;motor.c: 179:             CCPR2L = (servo >> 1) + 124;
   877  00C8  0871               	movf	_servo,w
   878  00C9  00FA               	movwf	??_main
   879  00CA  1003               	clrc
   880  00CB  0C7A               	rrf	??_main,w
   881  00CC  3E7C               	addlw	124
   882  00CD  1283               	bcf	3,5	;RP0=0, select bank0
   883  00CE  1303               	bcf	3,6	;RP1=0, select bank0
   884  00CF  009B               	movwf	27	;volatile
   885  00D0                     l1171:
   886                           
   887                           ;motor.c: 180:             turno = 1;
   888  00D0  01F0               	clrf	_turno
   889  00D1  0AF0               	incf	_turno,f
   890  00D2                     l1173:
   891                           
   892                           ;motor.c: 183:         _delay((unsigned long)((250)*(8000000/4000000.0)));
   893  00D2  30A6               	movlw	166
   894  00D3  00FA               	movwf	??_main
   895  00D4                     u327:
   896  00D4  0BFA               	decfsz	??_main,f
   897  00D5  28D4               	goto	u327
   898  00D6  0000               	nop
   899  00D7  2869               	goto	l1129
   900  00D8  120A  118A  280C   	ljmp	start
   901  00DB                     __end_of_main:
   902                           
   903                           	psect	text1
   904  0140                     __ptext1:	
   905 ;; *************** function _I2C_Slave_Init *****************
   906 ;; Defined at:
   907 ;;		line 97 in file "I2C.c"
   908 ;; Parameters:    Size  Location     Type
   909 ;;  address         1    wreg     unsigned char 
   910 ;; Auto vars:     Size  Location     Type
   911 ;;  address         1    3[COMMON] unsigned char 
   912 ;; Return value:  Size  Location     Type
   913 ;;                  1    wreg      void 
   914 ;; Registers used:
   915 ;;		wreg
   916 ;; Tracked objects:
   917 ;;		On entry : 0/0
   918 ;;		On exit  : 0/0
   919 ;;		Unchanged: 0/0
   920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   921 ;;      Params:         0       0       0       0       0
   922 ;;      Locals:         1       0       0       0       0
   923 ;;      Temps:          0       0       0       0       0
   924 ;;      Totals:         1       0       0       0       0
   925 ;;Total ram usage:        1 bytes
   926 ;; Hardware stack levels used:    1
   927 ;; Hardware stack levels required when called:    1
   928 ;; This function calls:
   929 ;;		Nothing
   930 ;; This function is called by:
   931 ;;		_main
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935                           
   936                           ;psect for function _I2C_Slave_Init
   937  0140                     _I2C_Slave_Init:
   938                           
   939                           ;incstack = 0
   940                           ; Regs used in _I2C_Slave_Init: [wreg]
   941                           ;I2C_Slave_Init@address stored from wreg
   942  0140  00F9               	movwf	I2C_Slave_Init@address
   943  0141                     l861:
   944                           
   945                           ;I2C.c: 97: void I2C_Slave_Init(uint8_t address);I2C.c: 98: {;I2C.c: 99:     SSPADD = ad
      +                          dress;
   946  0141  0879               	movf	I2C_Slave_Init@address,w
   947  0142  1683               	bsf	3,5	;RP0=1, select bank1
   948  0143  1303               	bcf	3,6	;RP1=0, select bank1
   949  0144  0093               	movwf	19	;volatile
   950                           
   951                           ;I2C.c: 100:     SSPCON = 0x36;
   952  0145  3036               	movlw	54
   953  0146  1283               	bcf	3,5	;RP0=0, select bank0
   954  0147  1303               	bcf	3,6	;RP1=0, select bank0
   955  0148  0094               	movwf	20	;volatile
   956                           
   957                           ;I2C.c: 101:     SSPSTAT = 0x80;
   958  0149  3080               	movlw	128
   959  014A  1683               	bsf	3,5	;RP0=1, select bank1
   960  014B  1303               	bcf	3,6	;RP1=0, select bank1
   961  014C  0094               	movwf	20	;volatile
   962                           
   963                           ;I2C.c: 102:     SSPCON2 = 0x01;
   964  014D  3001               	movlw	1
   965  014E  0091               	movwf	17	;volatile
   966  014F                     l863:
   967                           
   968                           ;I2C.c: 103:     TRISC3 = 1;
   969  014F  1587               	bsf	7,3	;volatile
   970  0150                     l865:
   971                           
   972                           ;I2C.c: 104:     TRISC4 = 1;
   973  0150  1607               	bsf	7,4	;volatile
   974  0151                     l867:
   975                           
   976                           ;I2C.c: 105:     GIE = 1;
   977  0151  178B               	bsf	11,7	;volatile
   978  0152                     l869:
   979                           
   980                           ;I2C.c: 106:     PEIE = 1;
   981  0152  170B               	bsf	11,6	;volatile
   982  0153                     l871:
   983                           
   984                           ;I2C.c: 107:     SSPIF = 0;
   985  0153  1283               	bcf	3,5	;RP0=0, select bank0
   986  0154  1303               	bcf	3,6	;RP1=0, select bank0
   987  0155  118C               	bcf	12,3	;volatile
   988  0156                     l873:
   989                           
   990                           ;I2C.c: 108:     SSPIE = 1;
   991  0156  1683               	bsf	3,5	;RP0=1, select bank1
   992  0157  1303               	bcf	3,6	;RP1=0, select bank1
   993  0158  158C               	bsf	12,3	;volatile
   994  0159                     l63:
   995  0159  0008               	return
   996  015A                     __end_of_I2C_Slave_Init:
   997                           
   998                           	psect	text2
   999  00DB                     __ptext2:	
  1000 ;; *************** function _isr *****************
  1001 ;; Defined at:
  1002 ;;		line 52 in file "motor.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;		None
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;		None
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  1    wreg      void 
  1009 ;; Registers used:
  1010 ;;		wreg
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1016 ;;      Params:         0       0       0       0       0
  1017 ;;      Locals:         0       0       0       0       0
  1018 ;;      Temps:          3       0       0       0       0
  1019 ;;      Totals:         3       0       0       0       0
  1020 ;;Total ram usage:        3 bytes
  1021 ;; Hardware stack levels used:    1
  1022 ;; This function calls:
  1023 ;;		Nothing
  1024 ;; This function is called by:
  1025 ;;		Interrupt level 1
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           
  1030                           ;psect for function _isr
  1031  00DB                     _isr:
  1032  00DB                     i1l1039:
  1033                           
  1034                           ;motor.c: 53:     if(PIR1bits.SSPIF == 1){
  1035  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  1036  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  1037  00DD  1D8C               	btfss	12,3	;volatile
  1038  00DE  28E0               	goto	u13_21
  1039  00DF  28E1               	goto	u13_20
  1040  00E0                     u13_21:
  1041  00E0  2939               	goto	i1l213
  1042  00E1                     u13_20:
  1043  00E1                     i1l1041:
  1044                           
  1045                           ;motor.c: 55:         SSPCONbits.CKP = 0;
  1046  00E1  1214               	bcf	20,4	;volatile
  1047                           
  1048                           ;motor.c: 57:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
  1049  00E2  1B14               	btfsc	20,6	;volatile
  1050  00E3  28E5               	goto	u14_21
  1051  00E4  28E6               	goto	u14_20
  1052  00E5                     u14_21:
  1053  00E5  28EA               	goto	i1l1045
  1054  00E6                     u14_20:
  1055  00E6                     i1l1043:
  1056  00E6  1F94               	btfss	20,7	;volatile
  1057  00E7  28E9               	goto	u15_21
  1058  00E8  28EA               	goto	u15_20
  1059  00E9                     u15_21:
  1060  00E9  28F1               	goto	i1l1053
  1061  00EA                     u15_20:
  1062  00EA                     i1l1045:
  1063                           
  1064                           ;motor.c: 58:             z = SSPBUF;
  1065  00EA  0813               	movf	19,w	;volatile
  1066  00EB  00F6               	movwf	??_isr
  1067  00EC  0876               	movf	??_isr,w
  1068  00ED  00F4               	movwf	_z
  1069  00EE                     i1l1047:
  1070                           
  1071                           ;motor.c: 59:             SSPCONbits.SSPOV = 0;
  1072  00EE  1314               	bcf	20,6	;volatile
  1073  00EF                     i1l1049:
  1074                           
  1075                           ;motor.c: 60:             SSPCONbits.WCOL = 0;
  1076  00EF  1394               	bcf	20,7	;volatile
  1077  00F0                     i1l1051:
  1078                           
  1079                           ;motor.c: 61:             SSPCONbits.CKP = 1;
  1080  00F0  1614               	bsf	20,4	;volatile
  1081  00F1                     i1l1053:
  1082                           
  1083                           ;motor.c: 64:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
  1084  00F1  1683               	bsf	3,5	;RP0=1, select bank1
  1085  00F2  1303               	bcf	3,6	;RP1=0, select bank1
  1086  00F3  1A94               	btfsc	20,5	;volatile
  1087  00F4  28F6               	goto	u16_21
  1088  00F5  28F7               	goto	u16_20
  1089  00F6                     u16_21:
  1090  00F6  2915               	goto	i1l204
  1091  00F7                     u16_20:
  1092  00F7                     i1l1055:
  1093  00F7  1914               	btfsc	20,2	;volatile
  1094  00F8  28FA               	goto	u17_21
  1095  00F9  28FB               	goto	u17_20
  1096  00FA                     u17_21:
  1097  00FA  2915               	goto	i1l204
  1098  00FB                     u17_20:
  1099  00FB                     i1l1057:
  1100                           
  1101                           ;motor.c: 66:             z = SSPBUF;
  1102  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1103  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1104  00FD  0813               	movf	19,w	;volatile
  1105  00FE  00F6               	movwf	??_isr
  1106  00FF  0876               	movf	??_isr,w
  1107  0100  00F4               	movwf	_z
  1108  0101                     i1l1059:
  1109                           
  1110                           ;motor.c: 68:             PIR1bits.SSPIF = 0;
  1111  0101  118C               	bcf	12,3	;volatile
  1112  0102                     i1l1061:
  1113                           
  1114                           ;motor.c: 69:             SSPCONbits.CKP = 1;
  1115  0102  1614               	bsf	20,4	;volatile
  1116  0103                     i1l205:	
  1117                           ;motor.c: 70:             while(!SSPSTATbits.BF);
  1118                           
  1119  0103  1683               	bsf	3,5	;RP0=1, select bank1
  1120  0104  1303               	bcf	3,6	;RP1=0, select bank1
  1121  0105  1C14               	btfss	20,0	;volatile
  1122  0106  2908               	goto	u18_21
  1123  0107  2909               	goto	u18_20
  1124  0108                     u18_21:
  1125  0108  2903               	goto	i1l205
  1126  0109                     u18_20:
  1127  0109                     i1l1063:
  1128                           
  1129                           ;motor.c: 71:             recibido = SSPBUF;
  1130  0109  1283               	bcf	3,5	;RP0=0, select bank0
  1131  010A  1303               	bcf	3,6	;RP1=0, select bank0
  1132  010B  0813               	movf	19,w	;volatile
  1133  010C  00F6               	movwf	??_isr
  1134  010D  0876               	movf	??_isr,w
  1135  010E  00F3               	movwf	_recibido
  1136                           
  1137                           ;motor.c: 72:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  1138  010F  30A6               	movlw	166
  1139  0110  00F6               	movwf	??_isr
  1140  0111                     u33_27:
  1141  0111  0BF6               	decfsz	??_isr,f
  1142  0112  2911               	goto	u33_27
  1143  0113  0000               	nop
  1144                           
  1145                           ;motor.c: 74:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  1146  0114  2936               	goto	i1l208
  1147  0115                     i1l204:
  1148  0115  1A94               	btfsc	20,5	;volatile
  1149  0116  2918               	goto	u19_21
  1150  0117  2919               	goto	u19_20
  1151  0118                     u19_21:
  1152  0118  2936               	goto	i1l208
  1153  0119                     u19_20:
  1154  0119                     i1l1065:
  1155  0119  1D14               	btfss	20,2	;volatile
  1156  011A  291C               	goto	u20_21
  1157  011B  291D               	goto	u20_20
  1158  011C                     u20_21:
  1159  011C  2936               	goto	i1l208
  1160  011D                     u20_20:
  1161  011D                     i1l1067:
  1162                           
  1163                           ;motor.c: 75:             z = SSPBUF;
  1164  011D  1283               	bcf	3,5	;RP0=0, select bank0
  1165  011E  1303               	bcf	3,6	;RP1=0, select bank0
  1166  011F  0813               	movf	19,w	;volatile
  1167  0120  00F6               	movwf	??_isr
  1168  0121  0876               	movf	??_isr,w
  1169  0122  00F4               	movwf	_z
  1170  0123                     i1l1069:
  1171                           
  1172                           ;motor.c: 76:             BF = 0;
  1173  0123  1683               	bsf	3,5	;RP0=1, select bank1
  1174  0124  1303               	bcf	3,6	;RP1=0, select bank1
  1175  0125  1014               	bcf	20,0	;volatile
  1176                           
  1177                           ;motor.c: 77:             SSPBUF = 0x22;
  1178  0126  3022               	movlw	34
  1179  0127  1283               	bcf	3,5	;RP0=0, select bank0
  1180  0128  1303               	bcf	3,6	;RP1=0, select bank0
  1181  0129  0093               	movwf	19	;volatile
  1182  012A                     i1l1071:
  1183                           
  1184                           ;motor.c: 78:             SSPCONbits.CKP = 1;
  1185  012A  1614               	bsf	20,4	;volatile
  1186                           
  1187                           ;motor.c: 79:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  1188  012B  30A6               	movlw	166
  1189  012C  00F6               	movwf	??_isr
  1190  012D                     u34_27:
  1191  012D  0BF6               	decfsz	??_isr,f
  1192  012E  292D               	goto	u34_27
  1193  012F  0000               	nop
  1194  0130                     i1l210:	
  1195                           ;motor.c: 80:             while(SSPSTATbits.BF);
  1196                           
  1197  0130  1683               	bsf	3,5	;RP0=1, select bank1
  1198  0131  1303               	bcf	3,6	;RP1=0, select bank1
  1199  0132  1814               	btfsc	20,0	;volatile
  1200  0133  2935               	goto	u21_21
  1201  0134  2936               	goto	u21_20
  1202  0135                     u21_21:
  1203  0135  2930               	goto	i1l210
  1204  0136                     u21_20:
  1205  0136                     i1l208:
  1206                           
  1207                           ;motor.c: 83:         PIR1bits.SSPIF = 0;
  1208  0136  1283               	bcf	3,5	;RP0=0, select bank0
  1209  0137  1303               	bcf	3,6	;RP1=0, select bank0
  1210  0138  118C               	bcf	12,3	;volatile
  1211  0139                     i1l213:
  1212  0139  0878               	movf	??_isr+2,w
  1213  013A  008A               	movwf	10
  1214  013B  0E77               	swapf	??_isr+1,w
  1215  013C  0083               	movwf	3
  1216  013D  0EFE               	swapf	btemp,f
  1217  013E  0E7E               	swapf	btemp,w
  1218  013F  0009               	retfie
  1219  0140                     __end_of_isr:
  1220  007E                     btemp	set	126	;btemp
  1221  007E                     wtemp0	set	126
  1222                           
  1223                           	psect	intentry
  1224  0004                     __pintentry:	
  1225                           ;incstack = 0
  1226                           ; Regs used in _isr: [wreg]
  1227                           
  1228  0004                     interrupt_function:
  1229  007E                     saved_w	set	btemp
  1230  0004  00FE               	movwf	btemp
  1231  0005  0E03               	swapf	3,w
  1232  0006  00F7               	movwf	??_isr+1
  1233  0007  080A               	movf	10,w
  1234  0008  00F8               	movwf	??_isr+2
  1235  0009  120A  118A  28DB   	ljmp	_isr
  1236                           
  1237                           	psect	config
  1238                           
  1239                           ;Config register CONFIG1 @ 0x2007
  1240                           ;	Oscillator Selection bits
  1241                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1242                           ;	Watchdog Timer Enable bit
  1243                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1244                           ;	Power-up Timer Enable bit
  1245                           ;	PWRTE = OFF, PWRT disabled
  1246                           ;	RE3/MCLR pin function select bit
  1247                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1248                           ;	Code Protection bit
  1249                           ;	CP = OFF, Program memory code protection is disabled
  1250                           ;	Data Code Protection bit
  1251                           ;	CPD = OFF, Data memory code protection is disabled
  1252                           ;	Brown Out Reset Selection bits
  1253                           ;	BOREN = OFF, BOR disabled
  1254                           ;	Internal External Switchover bit
  1255                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1256                           ;	Fail-Safe Clock Monitor Enabled bit
  1257                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1258                           ;	Low Voltage Programming Enable bit
  1259                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1260                           ;	In-Circuit Debugger Mode bit
  1261                           ;	DEBUG = 0x1, unprogrammed default
  1262  2007                     	org	8199
  1263  2007  20D4               	dw	8404
  1264                           
  1265                           ;Config register CONFIG2 @ 0x2008
  1266                           ;	Brown-out Reset Selection bit
  1267                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1268                           ;	Flash Program Memory Self Write Enable bits
  1269                           ;	WRT = OFF, Write protection off
  1270  2008                     	org	8200
  1271  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_I2C_Slave_Init

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      15
                                              4 COMMON     1     1      0
                     _I2C_Slave_Init
 ---------------------------------------------------------------------------------
 (1) _I2C_Slave_Init                                       1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Slave_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       D       1       92.9%
BITCOMMON            E      0       1       0        7.1%
CODE                 0      0       0       0        0.0%
DATA                 0      0       D      12        0.0%
ABS                  0      0       D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Sep 01 21:07:53 2021

                      _z 0074              _SSPSTATbits 0094                       _BF 04A0  
                     l63 0159                       _RS 03D8                       _dc 0072  
                    l220 004F                      l225 009A                      l218 004B  
                    l861 0141                      l871 0153                      l863 014F  
                    l873 0156                      l865 0150                      l867 0151  
                    l869 0152                      _GIE 005F                      u300 00B5  
                    u220 004F                      u301 00B4                      u221 004E  
                    u310 00C8                      u230 0078                      u311 00C7  
                    u231 0077                      u240 007F                      u241 007E  
                    u250 008A                      u251 0089                      u260 0095  
                    u261 0094                      u270 00A0                      _PR2 0092  
                    u327 00D4                      u271 009F                      u280 00AA  
                    u281 00A9                      u290 00B0                      u291 00AF  
                    _isr 00DB                     l1101 0045                     l1111 0054  
                   l1103 0046                     l1121 005E                     l1113 0056  
                   l1105 0047                     l1131 006E                     l1123 005F  
                   l1115 0057                     l1107 0048                     l1141 0084  
                   l1133 0073                     l1125 0062                     l1117 005A  
                   l1109 004A                     l1151 00A0                     l1143 008A  
                   l1135 0078                     l1127 0068                     l1119 005D  
                   l1161 00B5                     l1153 00A5                     l1145 008F  
                   l1137 007A                     l1129 0069                     l1081 002C  
                   l1073 0020                     l1171 00D0                     l1163 00B9  
                   l1155 00AA                     l1147 0095                     l1139 007F  
                   l1091 0039                     l1083 002D                     l1075 0024  
                   l1173 00D2                     l1165 00C1                     l1157 00AB  
                   l1149 009A                     l1093 003B                     l1085 002F  
                   l1077 0025                     l1159 00B0                     l1167 00C3  
                   l1095 003F                     l1087 0033                     l1079 002B  
                   l1169 00C8                     l1097 0041                     l1089 0037  
                   l1099 0043                     ?_isr 0076                     _PEIE 005E  
                   _main 0020                     btemp 007E                     start 000C  
                  ??_isr 0076                    ?_main 0076                    _ANSEL 0188  
                  i1l210 0130                    i1l204 0115                    i1l205 0103  
                  i1l213 0139                    i1l208 0136                    _RCREG 001A  
                  u20_20 011D                    u20_21 011C                    u21_20 0136  
                  u13_20 00E1                    u21_21 0135                    u13_21 00E0  
                  u14_20 00E6                    u14_21 00E5                    u15_20 00EA  
                  u15_21 00E9                    u16_20 00F7                    u16_21 00F6  
                  u17_20 00FB                    u17_21 00FA                    u33_27 0111  
                  u18_20 0109                    u18_21 0108                    _SPBRG 0099  
                  u34_27 012D                    u19_20 0119                    u19_21 0118  
                  _TRISA 0085                    _TRISC 0087                    _TRISD 0088  
                  _SSPIE 0463                    _SSPIF 0063                    _TXREG 0019  
                  _servo 0071                    _turno 0070           __pbitbssCOMMON 03D8  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 00DB                   ??_main 007A  
                 _CCPR1L 0015                   _CCPR2L 001B                   _ANSELH 0189  
                 i1l1041 00E1                   i1l1051 00F0                   i1l1043 00E6  
                 i1l1061 0102                   i1l1053 00F1                   i1l1045 00EA  
                 i1l1071 012A                   i1l1063 0109                   i1l1055 00F7  
                 i1l1047 00EE                   i1l1039 00DB                   i1l1065 0119  
                 i1l1057 00FB                   i1l1049 00EF                   i1l1067 011D  
                 i1l1059 0101                   i1l1069 0123                   _SPBRGH 009A  
                 _SSPADD 0093                   _TRISC3 043B                   _TRISC4 043C  
                 _SSPCON 0014                   _SSPBUF 0013             __pdataCOMMON 007C  
                 saved_w 007E  __end_of__initialization 001C            _backlight_val 007C  
         __pcstackCOMMON 0076  __size_of_I2C_Slave_Init 001A    I2C_Slave_Init@address 0079  
             __pmaintext 0020               __pintentry 0004                  _SSPCON2 0091  
                _SSPSTAT 0094                  __ptext1 0140                  __ptext2 00DB  
              _T2CONbits 0012             __size_of_isr 0065     end_of_initialization 001C  
              _RCSTAbits 0018           _I2C_Slave_Init 0140                _TRISCbits 0087  
              _TRISDbits 0088              _CCP1CONbits 0017              _CCP2CONbits 001D  
              _TXSTAbits 0098   __end_of_I2C_Slave_Init 015A            __pidataCOMMON 015A  
            _BAUDCTLbits 0187      start_initialization 000F              __end_of_isr 0140  
        ?_I2C_Slave_Init 0076              __pbssCOMMON 0070                ___latbits 0002  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F                 _i2c_addr 0075         ??_I2C_Slave_Init 0079  
          __size_of_main 00BB                 _recibido 0073               _INTCONbits 000B  
               intlevel1 0000               _OSCCONbits 008F              _SSPCON2bits 0091  
             _SSPCONbits 0014  
