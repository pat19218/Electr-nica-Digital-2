

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Aug 23 18:35:51 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  0105                     	;# 
   365  0107                     	;# 
   366  0108                     	;# 
   367  0109                     	;# 
   368  010C                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  010F                     	;# 
   373  0185                     	;# 
   374  0187                     	;# 
   375  0188                     	;# 
   376  0189                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  000D                     	;# 
   393  000E                     	;# 
   394  000E                     	;# 
   395  000F                     	;# 
   396  0010                     	;# 
   397  0011                     	;# 
   398  0012                     	;# 
   399  0013                     	;# 
   400  0014                     	;# 
   401  0015                     	;# 
   402  0015                     	;# 
   403  0016                     	;# 
   404  0017                     	;# 
   405  0018                     	;# 
   406  0019                     	;# 
   407  001A                     	;# 
   408  001B                     	;# 
   409  001B                     	;# 
   410  001C                     	;# 
   411  001D                     	;# 
   412  001E                     	;# 
   413  001F                     	;# 
   414  0081                     	;# 
   415  0085                     	;# 
   416  0086                     	;# 
   417  0087                     	;# 
   418  0088                     	;# 
   419  0089                     	;# 
   420  008C                     	;# 
   421  008D                     	;# 
   422  008E                     	;# 
   423  008F                     	;# 
   424  0090                     	;# 
   425  0091                     	;# 
   426  0092                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0094                     	;# 
   431  0095                     	;# 
   432  0096                     	;# 
   433  0097                     	;# 
   434  0098                     	;# 
   435  0099                     	;# 
   436  009A                     	;# 
   437  009B                     	;# 
   438  009C                     	;# 
   439  009D                     	;# 
   440  009E                     	;# 
   441  009F                     	;# 
   442  0105                     	;# 
   443  0107                     	;# 
   444  0108                     	;# 
   445  0109                     	;# 
   446  010C                     	;# 
   447  010C                     	;# 
   448  010D                     	;# 
   449  010E                     	;# 
   450  010F                     	;# 
   451  0185                     	;# 
   452  0187                     	;# 
   453  0188                     	;# 
   454  0189                     	;# 
   455  018C                     	;# 
   456  018D                     	;# 
   457                           
   458                           	psect	idataCOMMON
   459  033C                     __pidataCOMMON:
   460                           
   461                           ;initializer for _backlight_val
   462  033C  3408               	retlw	8
   463                           
   464                           	psect	nvBANK0
   465  0048                     __pnvBANK0:
   466  0048                     _i2c_addr:
   467  0048                     	ds	1
   468  001A                     _RCREG	set	26
   469  0019                     _TXREG	set	25
   470  0018                     _RCSTAbits	set	24
   471  0013                     _SSPBUF	set	19
   472  0014                     _SSPCON	set	20
   473  0008                     _PORTD	set	8
   474  0007                     _PORTC	set	7
   475  0006                     _PORTB	set	6
   476  0005                     _PORTA	set	5
   477  0063                     _SSPIF	set	99
   478  005E                     _PEIE	set	94
   479  005F                     _GIE	set	95
   480  009A                     _SPBRGH	set	154
   481  0099                     _SPBRG	set	153
   482  0098                     _TXSTAbits	set	152
   483  0091                     _SSPCON2bits	set	145
   484  0087                     _TRISCbits	set	135
   485  0094                     _SSPSTAT	set	148
   486  0093                     _SSPADD	set	147
   487  0091                     _SSPCON2	set	145
   488  008F                     _OSCCONbits	set	143
   489  0088                     _TRISD	set	136
   490  0087                     _TRISC	set	135
   491  0086                     _TRISB	set	134
   492  0085                     _TRISA	set	133
   493  048C                     _ACKEN	set	1164
   494  048D                     _ACKDT	set	1165
   495  048B                     _RCEN	set	1163
   496  0489                     _RSEN	set	1161
   497  048A                     _PEN	set	1162
   498  0488                     _SEN	set	1160
   499  0463                     _SSPIE	set	1123
   500  043C                     _TRISC4	set	1084
   501  043B                     _TRISC3	set	1083
   502  0187                     _BAUDCTLbits	set	391
   503  0189                     _ANSELH	set	393
   504  0188                     _ANSEL	set	392
   505                           
   506                           	psect	strings
   507  02D4                     __pstrings:
   508  02D4                     stringtab:
   509  02D4                     __stringtab:
   510  02D4                     stringcode:	
   511                           ;	String table - string pointers are 1 byte each
   512                           
   513  02D4                     stringdir:
   514  02D4  3002               	movlw	high stringdir
   515  02D5  008A               	movwf	10
   516  02D6  0804               	movf	4,w
   517  02D7  0A84               	incf	4,f
   518  02D8  0782               	addwf	2,f
   519  02D9                     __stringbase:
   520  02D9  3400               	retlw	0
   521  02DA                     __end_of__stringtab:
   522  02DA                     STR_1:
   523  02DA  3448               	retlw	72	;'H'
   524  02DB  3465               	retlw	101	;'e'
   525  02DC  346C               	retlw	108	;'l'
   526  02DD  346C               	retlw	108	;'l'
   527  02DE  346F               	retlw	111	;'o'
   528  02DF  342C               	retlw	44	;','
   529  02E0  3420               	retlw	32	;' '
   530  02E1  3477               	retlw	119	;'w'
   531  02E2  346F               	retlw	111	;'o'
   532  02E3  3472               	retlw	114	;'r'
   533  02E4  346C               	retlw	108	;'l'
   534  02E5  3464               	retlw	100	;'d'
   535  02E6  3421               	retlw	33	;'!'
   536  02E7  3400               	retlw	0
   537  02E8                     STR_2:
   538  02E8  3431               	retlw	49	;'1'
   539  02E9  3400               	retlw	0
   540                           
   541                           	psect	cinit
   542  000F                     start_initialization:	
   543                           ; #config settings
   544                           
   545  000F                     __initialization:
   546                           
   547                           ; Initialize objects allocated to COMMON
   548  000F  120A  118A  233C  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   549  0014  00FB               	movwf	__pdataCOMMON& (0+127)
   550                           
   551                           ; Clear objects allocated to BANK0
   552  0015  1383               	bcf	3,7	;select IRP bank0
   553  0016  3020               	movlw	low __pbssBANK0
   554  0017  0084               	movwf	4
   555  0018  3039               	movlw	low (__pbssBANK0+25)
   556  0019  120A  118A  232D  120A  118A  	fcall	clear_ram0
   557                           
   558                           ; Clear objects allocated to BITCOMMON
   559  001E  01FA               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   560  001F                     end_of_initialization:	
   561                           ;End of C runtime variable initialization code
   562                           
   563  001F                     __end_of__initialization:
   564  001F  0183               	clrf	3
   565  0020  120A  118A  2924   	ljmp	_main	;jump to C main() function
   566                           
   567                           	psect	bitbssCOMMON
   568  03D0                     __pbitbssCOMMON:
   569  03D0                     _RS:
   570  03D0                     	ds	1
   571                           
   572                           	psect	dataCOMMON
   573  007B                     __pdataCOMMON:
   574  007B                     _backlight_val:
   575  007B                     	ds	1
   576                           
   577                           	psect	bssBANK0
   578  0020                     __pbssBANK0:
   579  0020                     _DataBuffer:
   580  0020                     	ds	6
   581  0026                     _temperatura:
   582  0026                     	ds	4
   583  002A                     _Raw_temperatura:
   584  002A                     	ds	4
   585  002E                     _Raw_humedad:
   586  002E                     	ds	4
   587  0032                     _humedad:
   588  0032                     	ds	2
   589  0034                     _uni:
   590  0034                     	ds	1
   591  0035                     _dec:
   592  0035                     	ds	1
   593  0036                     _cen:
   594  0036                     	ds	1
   595  0037                     _decimal:
   596  0037                     	ds	1
   597  0038                     _entero:
   598  0038                     	ds	1
   599                           
   600                           	psect	clrtext
   601  032D                     clear_ram0:	
   602                           ;	Called with FSR containing the base address, and
   603                           ;	W with the last address+1
   604                           
   605  032D  0064               	clrwdt	;clear the watchdog before getting into this loop
   606  032E                     clrloop0:
   607  032E  0180               	clrf	0	;clear RAM location pointed to by FSR
   608  032F  0A84               	incf	4,f	;increment pointer
   609  0330  0604               	xorwf	4,w	;XOR with final address
   610  0331  1903               	btfsc	3,2	;have we reached the end yet?
   611  0332  3400               	retlw	0	;all done for this memory range, return
   612  0333  0604               	xorwf	4,w	;XOR again to restore value
   613  0334  2B2E               	goto	clrloop0	;do the next byte
   614                           
   615                           	psect	cstackCOMMON
   616  0070                     __pcstackCOMMON:
   617  0070                     ?_USART_Init:
   618  0070                     ?_LCD_Begin:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ?_LCD_Print:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ?_isr:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ??_isr:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ?_main:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ?_I2C_Start:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ?_I2C_Stop:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ?_I2C_Write:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ?_Expander_Write:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ?_LCD_Write_Nibble:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ?_LCD_Cmd:	
   649                           ; 1 bytes @ 0x0
   650                           
   651                           
   652                           ; 1 bytes @ 0x0
   653  0070                     	ds	2
   654  0072                     ??_USART_Init:
   655  0072                     ??_I2C_Start:	
   656                           ; 1 bytes @ 0x2
   657                           
   658  0072                     ??_I2C_Stop:	
   659                           ; 1 bytes @ 0x2
   660                           
   661  0072                     ??_I2C_Write:	
   662                           ; 1 bytes @ 0x2
   663                           
   664  0072                     ?___lldiv:	
   665                           ; 1 bytes @ 0x2
   666                           
   667  0072                     I2C_Write@i2c_data:	
   668                           ; 4 bytes @ 0x2
   669                           
   670  0072                     ___lldiv@divisor:	
   671                           ; 1 bytes @ 0x2
   672                           
   673                           
   674                           ; 4 bytes @ 0x2
   675  0072                     	ds	1
   676  0073                     ??_Expander_Write:
   677  0073                     Expander_Write@value:	
   678                           ; 1 bytes @ 0x3
   679                           
   680                           
   681                           ; 1 bytes @ 0x3
   682  0073                     	ds	1
   683  0074                     ??_LCD_Write_Nibble:
   684                           
   685                           ; 1 bytes @ 0x4
   686  0074                     	ds	1
   687  0075                     LCD_Write_Nibble@n:
   688                           
   689                           ; 1 bytes @ 0x5
   690  0075                     	ds	1
   691  0076                     ??_LCD_Print:
   692  0076                     ??_LCD_Cmd:	
   693                           ; 1 bytes @ 0x6
   694                           
   695  0076                     ___lldiv@dividend:	
   696                           ; 1 bytes @ 0x6
   697                           
   698                           
   699                           ; 4 bytes @ 0x6
   700  0076                     	ds	1
   701  0077                     LCD_Print@i:
   702                           
   703                           ; 1 bytes @ 0x7
   704  0077                     	ds	1
   705  0078                     LCD_Cmd@Command:
   706  0078                     LCD_Print@LCD_Str:	
   707                           ; 1 bytes @ 0x8
   708                           
   709                           
   710                           ; 1 bytes @ 0x8
   711  0078                     	ds	1
   712  0079                     ?_LCD_Goto:
   713  0079                     LCD_Goto@row:	
   714                           ; 1 bytes @ 0x9
   715                           
   716  0079                     LCD_Begin@_i2c_addr:	
   717                           ; 1 bytes @ 0x9
   718                           
   719                           
   720                           ; 1 bytes @ 0x9
   721  0079                     	ds	1
   722                           
   723                           	psect	cstackBANK0
   724  0039                     __pcstackBANK0:
   725  0039                     ??_LCD_Begin:
   726  0039                     ??_LCD_Goto:	
   727                           ; 1 bytes @ 0x0
   728                           
   729  0039                     ??___lldiv:	
   730                           ; 1 bytes @ 0x0
   731                           
   732                           
   733                           ; 1 bytes @ 0x0
   734  0039                     	ds	1
   735  003A                     ___lldiv@quotient:
   736                           
   737                           ; 4 bytes @ 0x1
   738  003A                     	ds	1
   739  003B                     LCD_Goto@col:
   740                           
   741                           ; 1 bytes @ 0x2
   742  003B                     	ds	3
   743  003E                     ___lldiv@counter:
   744                           
   745                           ; 1 bytes @ 0x5
   746  003E                     	ds	1
   747  003F                     ?_I2C_Master_Init:
   748  003F                     ?_I2C_Init:	
   749                           ; 1 bytes @ 0x6
   750                           
   751  003F                     I2C_Master_Init@c:	
   752                           ; 1 bytes @ 0x6
   753                           
   754  003F                     I2C_Init@i2c_clk_freq:	
   755                           ; 4 bytes @ 0x6
   756                           
   757                           
   758                           ; 4 bytes @ 0x6
   759  003F                     	ds	4
   760  0043                     ??_I2C_Master_Init:
   761  0043                     ??_I2C_Init:	
   762                           ; 1 bytes @ 0xA
   763                           
   764                           
   765                           ; 1 bytes @ 0xA
   766  0043                     	ds	4
   767  0047                     ??_main:
   768                           
   769                           ; 1 bytes @ 0xE
   770  0047                     	ds	1
   771                           
   772                           	psect	maintext
   773  0124                     __pmaintext:	
   774 ;;
   775 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   776 ;;
   777 ;; *************** function _main *****************
   778 ;; Defined at:
   779 ;;		line 70 in file "main.c"
   780 ;; Parameters:    Size  Location     Type
   781 ;;		None
   782 ;; Auto vars:     Size  Location     Type
   783 ;;		None
   784 ;; Return value:  Size  Location     Type
   785 ;;                  1    wreg      void 
   786 ;; Registers used:
   787 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   788 ;; Tracked objects:
   789 ;;		On entry : B00/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   793 ;;      Params:         0       0       0       0       0
   794 ;;      Locals:         0       0       0       0       0
   795 ;;      Temps:          0       1       0       0       0
   796 ;;      Totals:         0       1       0       0       0
   797 ;;Total ram usage:        1 bytes
   798 ;; Hardware stack levels required when called:    6
   799 ;; This function calls:
   800 ;;		_I2C_Init
   801 ;;		_I2C_Master_Init
   802 ;;		_LCD_Begin
   803 ;;		_LCD_Goto
   804 ;;		_LCD_Print
   805 ;;		_USART_Init
   806 ;; This function is called by:
   807 ;;		Startup code after reset
   808 ;; This function uses a non-reentrant model
   809 ;;
   810                           
   811                           
   812                           ;psect for function _main
   813  0124                     _main:
   814  0124                     l1539:	
   815                           ;incstack = 0
   816                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   817                           
   818                           
   819                           ;main.c: 71:     USART_Init();
   820  0124  120A  118A  22EA  120A  118A  	fcall	_USART_Init
   821  0129                     l1541:
   822                           
   823                           ;main.c: 72:     ANSEL = 0x00;
   824  0129  1683               	bsf	3,5	;RP0=1, select bank3
   825  012A  1703               	bsf	3,6	;RP1=1, select bank3
   826  012B  0188               	clrf	8	;volatile
   827  012C                     l1543:
   828                           
   829                           ;main.c: 73:     ANSELH = 0x00;
   830  012C  0189               	clrf	9	;volatile
   831  012D                     l1545:
   832                           
   833                           ;main.c: 75:     TRISA = 0x00;
   834  012D  1683               	bsf	3,5	;RP0=1, select bank1
   835  012E  1303               	bcf	3,6	;RP1=0, select bank1
   836  012F  0185               	clrf	5	;volatile
   837  0130                     l1547:
   838                           
   839                           ;main.c: 76:     TRISB = 0x03;
   840  0130  3003               	movlw	3
   841  0131  0086               	movwf	6	;volatile
   842  0132                     l1549:
   843                           
   844                           ;main.c: 77:     TRISC = 0b10000000;
   845  0132  3080               	movlw	128
   846  0133  0087               	movwf	7	;volatile
   847  0134                     l1551:
   848                           
   849                           ;main.c: 78:     TRISD = 0x00;
   850  0134  0188               	clrf	8	;volatile
   851  0135                     l1553:
   852                           
   853                           ;main.c: 81:     OSCCONbits.IRCF = 0b111;
   854  0135  3070               	movlw	112
   855  0136  048F               	iorwf	15,f	;volatile
   856  0137                     l1555:
   857                           
   858                           ;main.c: 82:     OSCCONbits.SCS = 1;
   859  0137  140F               	bsf	15,0	;volatile
   860  0138                     l1557:
   861                           
   862                           ;main.c: 85:     I2C_Master_Init(100000);
   863  0138  3000               	movlw	0
   864  0139  1283               	bcf	3,5	;RP0=0, select bank0
   865  013A  1303               	bcf	3,6	;RP1=0, select bank0
   866  013B  00C2               	movwf	I2C_Master_Init@c+3
   867  013C  3001               	movlw	1
   868  013D  00C1               	movwf	I2C_Master_Init@c+2
   869  013E  3086               	movlw	134
   870  013F  00C0               	movwf	I2C_Master_Init@c+1
   871  0140  30A0               	movlw	160
   872  0141  00BF               	movwf	I2C_Master_Init@c
   873  0142  120A  118A  21FE  120A  118A  	fcall	_I2C_Master_Init
   874  0147                     l1559:
   875                           
   876                           ;main.c: 88:     PORTA = 0x00;
   877  0147  1283               	bcf	3,5	;RP0=0, select bank0
   878  0148  1303               	bcf	3,6	;RP1=0, select bank0
   879  0149  0185               	clrf	5	;volatile
   880  014A                     l1561:
   881                           
   882                           ;main.c: 89:     PORTB = 0x00;
   883  014A  0186               	clrf	6	;volatile
   884  014B                     l1563:
   885                           
   886                           ;main.c: 90:     PORTC = 0x00;
   887  014B  0187               	clrf	7	;volatile
   888  014C                     l1565:
   889                           
   890                           ;main.c: 91:     PORTD = 0x00;
   891  014C  0188               	clrf	8	;volatile
   892  014D                     l1567:
   893                           
   894                           ;main.c: 93:     I2C_Init(100000);
   895  014D  3000               	movlw	0
   896  014E  00C2               	movwf	I2C_Init@i2c_clk_freq+3
   897  014F  3001               	movlw	1
   898  0150  00C1               	movwf	I2C_Init@i2c_clk_freq+2
   899  0151  3086               	movlw	134
   900  0152  00C0               	movwf	I2C_Init@i2c_clk_freq+1
   901  0153  30A0               	movlw	160
   902  0154  00BF               	movwf	I2C_Init@i2c_clk_freq
   903  0155  120A  118A  2236  120A  118A  	fcall	_I2C_Init
   904  015A                     l1569:
   905                           
   906                           ;main.c: 94:     LCD_Begin(0x4E);
   907  015A  304E               	movlw	78
   908  015B  120A  118A  2023  120A  118A  	fcall	_LCD_Begin
   909  0160                     l1571:
   910                           
   911                           ;main.c: 95:     LCD_Goto(2, 1);
   912  0160  01F9               	clrf	LCD_Goto@row
   913  0161  0AF9               	incf	LCD_Goto@row,f
   914  0162  3002               	movlw	2
   915  0163  120A  118A  21C6  120A  118A  	fcall	_LCD_Goto
   916  0168                     l1573:
   917                           
   918                           ;main.c: 96:     LCD_Print("Hello, world!");
   919  0168  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   920  0169  120A  118A  218B  120A  118A  	fcall	_LCD_Print
   921  016E                     l1575:
   922                           
   923                           ;main.c: 145:         LCD_Goto(7, 2);
   924  016E  3002               	movlw	2
   925  016F  1283               	bcf	3,5	;RP0=0, select bank0
   926  0170  1303               	bcf	3,6	;RP1=0, select bank0
   927  0171  00C7               	movwf	??_main
   928  0172  0847               	movf	??_main,w
   929  0173  00F9               	movwf	LCD_Goto@row
   930  0174  3007               	movlw	7
   931  0175  120A  118A  21C6  120A  118A  	fcall	_LCD_Goto
   932  017A                     l1577:
   933                           
   934                           ;main.c: 146:         LCD_Print("1");
   935  017A  300F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   936  017B  120A  118A  218B  120A  118A  	fcall	_LCD_Print
   937  0180                     l1579:
   938                           
   939                           ;main.c: 148:         _delay((unsigned long)((100)*(8000000/4000000.0)));
   940  0180  3041               	movlw	65
   941  0181  1283               	bcf	3,5	;RP0=0, select bank0
   942  0182  1303               	bcf	3,6	;RP1=0, select bank0
   943  0183  00C7               	movwf	??_main
   944  0184                     u677:
   945  0184  0BC7               	decfsz	??_main,f
   946  0185  2984               	goto	u677
   947  0186  2987               	nop2
   948  0187  296E               	goto	l1575
   949  0188  120A  118A  280C   	ljmp	start
   950  018B                     __end_of_main:
   951                           
   952                           	psect	text1
   953  02EA                     __ptext1:	
   954 ;; *************** function _USART_Init *****************
   955 ;; Defined at:
   956 ;;		line 4 in file "USART.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;		None
   959 ;; Auto vars:     Size  Location     Type
   960 ;;		None
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      void 
   963 ;; Registers used:
   964 ;;		wreg, status,2
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   970 ;;      Params:         0       0       0       0       0
   971 ;;      Locals:         0       0       0       0       0
   972 ;;      Temps:          0       0       0       0       0
   973 ;;      Totals:         0       0       0       0       0
   974 ;;Total ram usage:        0 bytes
   975 ;; Hardware stack levels used:    1
   976 ;; Hardware stack levels required when called:    1
   977 ;; This function calls:
   978 ;;		Nothing
   979 ;; This function is called by:
   980 ;;		_main
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           
   985                           ;psect for function _USART_Init
   986  02EA                     _USART_Init:
   987  02EA                     l941:	
   988                           ;incstack = 0
   989                           ; Regs used in _USART_Init: [wreg+status,2]
   990                           
   991                           
   992                           ;USART.c: 6:     TXSTAbits.SYNC = 0;
   993  02EA  1683               	bsf	3,5	;RP0=1, select bank1
   994  02EB  1303               	bcf	3,6	;RP1=0, select bank1
   995  02EC  1218               	bcf	24,4	;volatile
   996                           
   997                           ;USART.c: 7:     TXSTAbits.BRGH = 1;
   998  02ED  1518               	bsf	24,2	;volatile
   999                           
  1000                           ;USART.c: 8:     BAUDCTLbits.BRG16 = 1;
  1001  02EE  1683               	bsf	3,5	;RP0=1, select bank3
  1002  02EF  1703               	bsf	3,6	;RP1=1, select bank3
  1003  02F0  1587               	bsf	7,3	;volatile
  1004  02F1                     l943:
  1005                           
  1006                           ;USART.c: 10:     SPBRG = 207;
  1007  02F1  30CF               	movlw	207
  1008  02F2  1683               	bsf	3,5	;RP0=1, select bank1
  1009  02F3  1303               	bcf	3,6	;RP1=0, select bank1
  1010  02F4  0099               	movwf	25	;volatile
  1011  02F5                     l945:
  1012                           
  1013                           ;USART.c: 11:     SPBRGH = 0;
  1014  02F5  019A               	clrf	26	;volatile
  1015  02F6                     l947:
  1016                           
  1017                           ;USART.c: 13:     RCSTAbits.SPEN = 1;
  1018  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  1019  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  1020  02F8  1798               	bsf	24,7	;volatile
  1021  02F9                     l949:
  1022                           
  1023                           ;USART.c: 14:     RCSTAbits.RX9 = 0;
  1024  02F9  1318               	bcf	24,6	;volatile
  1025  02FA                     l951:
  1026                           
  1027                           ;USART.c: 15:     RCSTAbits.CREN = 1;
  1028  02FA  1618               	bsf	24,4	;volatile
  1029  02FB                     l953:
  1030                           
  1031                           ;USART.c: 16:     TXSTAbits.TXEN = 1;
  1032  02FB  1683               	bsf	3,5	;RP0=1, select bank1
  1033  02FC  1303               	bcf	3,6	;RP1=0, select bank1
  1034  02FD  1698               	bsf	24,5	;volatile
  1035  02FE                     l159:
  1036  02FE  0008               	return
  1037  02FF                     __end_of_USART_Init:
  1038                           
  1039                           	psect	text2
  1040  018B                     __ptext2:	
  1041 ;; *************** function _LCD_Print *****************
  1042 ;; Defined at:
  1043 ;;		line 121 in file "I2C_LCD.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;  LCD_Str         1    wreg     PTR unsigned char 
  1046 ;;		 -> STR_2(2), STR_1(14), 
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;  LCD_Str         1    8[COMMON] PTR unsigned char 
  1049 ;;		 -> STR_2(2), STR_1(14), 
  1050 ;;  i               1    7[COMMON] unsigned char 
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  1    wreg      void 
  1053 ;; Registers used:
  1054 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1060 ;;      Params:         0       0       0       0       0
  1061 ;;      Locals:         2       0       0       0       0
  1062 ;;      Temps:          1       0       0       0       0
  1063 ;;      Totals:         3       0       0       0       0
  1064 ;;Total ram usage:        3 bytes
  1065 ;; Hardware stack levels used:    1
  1066 ;; Hardware stack levels required when called:    4
  1067 ;; This function calls:
  1068 ;;		_LCD_Write_Nibble
  1069 ;; This function is called by:
  1070 ;;		_main
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074                           
  1075                           ;psect for function _LCD_Print
  1076  018B                     _LCD_Print:
  1077                           
  1078                           ;incstack = 0
  1079                           ; Regs used in _LCD_Print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1080                           ;LCD_Print@LCD_Str stored from wreg
  1081  018B  00F8               	movwf	LCD_Print@LCD_Str
  1082  018C                     l1359:
  1083                           
  1084                           ;I2C_LCD.c: 121: void LCD_Print(char* LCD_Str);I2C_LCD.c: 122: {;I2C_LCD.c: 123:   uint8
      +                          _t i = 0;
  1085  018C  01F7               	clrf	LCD_Print@i
  1086  018D                     l1361:
  1087                           
  1088                           ;I2C_LCD.c: 124:   RS = 1;
  1089  018D  147A               	bsf	_RS/(0+8),_RS& (0+7)
  1090                           
  1091                           ;I2C_LCD.c: 125:   while(LCD_Str[i] != '\0')
  1092  018E  29B8               	goto	l1367
  1093  018F                     l1363:
  1094                           
  1095                           ;I2C_LCD.c: 126:   {;I2C_LCD.c: 127:     LCD_Write_Nibble(LCD_Str[i] & 0xF0);
  1096  018F  0877               	movf	LCD_Print@i,w
  1097  0190  0778               	addwf	LCD_Print@LCD_Str,w
  1098  0191  0084               	movwf	4
  1099  0192  120A  118A  22D4  120A  118A  	fcall	stringdir
  1100  0197  39F0               	andlw	240
  1101  0198  120A  118A  2295  120A  118A  	fcall	_LCD_Write_Nibble
  1102                           
  1103                           ;I2C_LCD.c: 128:     LCD_Write_Nibble( (LCD_Str[i++] << 4) & 0xF0 );
  1104  019D  0877               	movf	LCD_Print@i,w
  1105  019E  0778               	addwf	LCD_Print@LCD_Str,w
  1106  019F  0084               	movwf	4
  1107  01A0  120A  118A  22D4  120A  118A  	fcall	stringdir
  1108  01A5  00F6               	movwf	??_LCD_Print
  1109  01A6  3003               	movlw	3
  1110  01A7                     u555:
  1111  01A7  1003               	clrc
  1112  01A8  0DF6               	rlf	??_LCD_Print,f
  1113  01A9  3EFF               	addlw	-1
  1114  01AA  1D03               	skipz
  1115  01AB  29A7               	goto	u555
  1116  01AC  1003               	clrc
  1117  01AD  0D76               	rlf	??_LCD_Print,w
  1118  01AE  39F0               	andlw	240
  1119  01AF  120A  118A  2295  120A  118A  	fcall	_LCD_Write_Nibble
  1120  01B4                     l1365:
  1121  01B4  3001               	movlw	1
  1122  01B5  00F6               	movwf	??_LCD_Print
  1123  01B6  0876               	movf	??_LCD_Print,w
  1124  01B7  07F7               	addwf	LCD_Print@i,f
  1125  01B8                     l1367:
  1126                           
  1127                           ;I2C_LCD.c: 125:   while(LCD_Str[i] != '\0')
  1128  01B8  0877               	movf	LCD_Print@i,w
  1129  01B9  0778               	addwf	LCD_Print@LCD_Str,w
  1130  01BA  0084               	movwf	4
  1131  01BB  120A  118A  22D4  120A  118A  	fcall	stringdir
  1132  01C0  3A00               	xorlw	0
  1133  01C1  1D03               	skipz
  1134  01C2  29C4               	goto	u561
  1135  01C3  29C5               	goto	u560
  1136  01C4                     u561:
  1137  01C4  298F               	goto	l1363
  1138  01C5                     u560:
  1139  01C5                     l276:
  1140  01C5  0008               	return
  1141  01C6                     __end_of_LCD_Print:
  1142                           
  1143                           	psect	text3
  1144  01C6                     __ptext3:	
  1145 ;; *************** function _LCD_Goto *****************
  1146 ;; Defined at:
  1147 ;;		line 95 in file "I2C_LCD.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;  col             1    wreg     unsigned char 
  1150 ;;  row             1    9[COMMON] unsigned char 
  1151 ;; Auto vars:     Size  Location     Type
  1152 ;;  col             1    2[BANK0 ] unsigned char 
  1153 ;; Return value:  Size  Location     Type
  1154 ;;                  1    wreg      void 
  1155 ;; Registers used:
  1156 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1157 ;; Tracked objects:
  1158 ;;		On entry : 0/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1162 ;;      Params:         1       0       0       0       0
  1163 ;;      Locals:         0       1       0       0       0
  1164 ;;      Temps:          0       2       0       0       0
  1165 ;;      Totals:         1       3       0       0       0
  1166 ;;Total ram usage:        4 bytes
  1167 ;; Hardware stack levels used:    1
  1168 ;; Hardware stack levels required when called:    5
  1169 ;; This function calls:
  1170 ;;		_LCD_Cmd
  1171 ;; This function is called by:
  1172 ;;		_main
  1173 ;; This function uses a non-reentrant model
  1174 ;;
  1175                           
  1176                           
  1177                           ;psect for function _LCD_Goto
  1178  01C6                     _LCD_Goto:
  1179                           
  1180                           ;incstack = 0
  1181                           ; Regs used in _LCD_Goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1182                           ;LCD_Goto@col stored from wreg
  1183  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  1184  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  1185  01C8  00BB               	movwf	LCD_Goto@col
  1186  01C9                     l1521:
  1187                           
  1188                           ;I2C_LCD.c: 95: void LCD_Goto(uint8_t col, uint8_t row);I2C_LCD.c: 96: {;I2C_LCD.c: 97: 
      +                            switch(row)
  1189  01C9  29EA               	goto	l1531
  1190  01CA                     l1523:
  1191                           
  1192                           ;I2C_LCD.c: 100:       LCD_Cmd(0xC0 + col - 1);
  1193  01CA  083B               	movf	LCD_Goto@col,w
  1194  01CB  3EBF               	addlw	191
  1195  01CC  120A  118A  2267  120A  118A  	fcall	_LCD_Cmd
  1196                           
  1197                           ;I2C_LCD.c: 101:       break;
  1198  01D1  29FD               	goto	l267
  1199  01D2                     l1525:
  1200                           
  1201                           ;I2C_LCD.c: 103:       LCD_Cmd(0x94 + col - 1);
  1202  01D2  083B               	movf	LCD_Goto@col,w
  1203  01D3  3E93               	addlw	147
  1204  01D4  120A  118A  2267  120A  118A  	fcall	_LCD_Cmd
  1205                           
  1206                           ;I2C_LCD.c: 104:       break;
  1207  01D9  29FD               	goto	l267
  1208  01DA                     l1527:
  1209                           
  1210                           ;I2C_LCD.c: 106:       LCD_Cmd(0xD4 + col - 1);
  1211  01DA  083B               	movf	LCD_Goto@col,w
  1212  01DB  3ED3               	addlw	211
  1213  01DC  120A  118A  2267  120A  118A  	fcall	_LCD_Cmd
  1214                           
  1215                           ;I2C_LCD.c: 107:     break;
  1216  01E1  29FD               	goto	l267
  1217  01E2                     l1529:
  1218                           
  1219                           ;I2C_LCD.c: 109:       LCD_Cmd(0x80 + col - 1);
  1220  01E2  083B               	movf	LCD_Goto@col,w
  1221  01E3  3E7F               	addlw	127
  1222  01E4  120A  118A  2267  120A  118A  	fcall	_LCD_Cmd
  1223                           
  1224                           ;I2C_LCD.c: 110:   }
  1225  01E9  29FD               	goto	l267
  1226  01EA                     l1531:
  1227  01EA  0879               	movf	LCD_Goto@row,w
  1228  01EB  00B9               	movwf	??_LCD_Goto
  1229  01EC  01BA               	clrf	??_LCD_Goto+1
  1230                           
  1231                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1232                           ; Switch size 1, requested type "simple"
  1233                           ; Number of cases is 1, Range of values is 0 to 0
  1234                           ; switch strategies available:
  1235                           ; Name         Instructions Cycles
  1236                           ; simple_byte            4     3 (average)
  1237                           ; direct_byte           11     8 (fixed)
  1238                           ; jumptable            260     6 (fixed)
  1239                           ;	Chosen strategy is simple_byte
  1240  01ED  083A               	movf	??_LCD_Goto+1,w
  1241  01EE  3A00               	xorlw	0	; case 0
  1242  01EF  1903               	skipnz
  1243  01F0  29F2               	goto	l1611
  1244  01F1  29E2               	goto	l1529
  1245  01F2                     l1611:
  1246                           
  1247                           ; Switch size 1, requested type "simple"
  1248                           ; Number of cases is 3, Range of values is 2 to 4
  1249                           ; switch strategies available:
  1250                           ; Name         Instructions Cycles
  1251                           ; simple_byte           10     6 (average)
  1252                           ; direct_byte           20    11 (fixed)
  1253                           ; jumptable            263     9 (fixed)
  1254                           ;	Chosen strategy is simple_byte
  1255  01F2  0839               	movf	??_LCD_Goto,w
  1256  01F3  3A02               	xorlw	2	; case 2
  1257  01F4  1903               	skipnz
  1258  01F5  29CA               	goto	l1523
  1259  01F6  3A01               	xorlw	1	; case 3
  1260  01F7  1903               	skipnz
  1261  01F8  29D2               	goto	l1525
  1262  01F9  3A07               	xorlw	7	; case 4
  1263  01FA  1903               	skipnz
  1264  01FB  29DA               	goto	l1527
  1265  01FC  29E2               	goto	l1529
  1266  01FD                     l267:
  1267  01FD  0008               	return
  1268  01FE                     __end_of_LCD_Goto:
  1269                           
  1270                           	psect	text4
  1271  0023                     __ptext4:	
  1272 ;; *************** function _LCD_Begin *****************
  1273 ;; Defined at:
  1274 ;;		line 132 in file "I2C_LCD.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;  _i2c_addr       1    wreg     unsigned char 
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;  _i2c_addr       1    9[COMMON] unsigned char 
  1279 ;; Return value:  Size  Location     Type
  1280 ;;                  1    wreg      void 
  1281 ;; Registers used:
  1282 ;;		wreg, status,2, status,0, pclath, cstack
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1288 ;;      Params:         0       0       0       0       0
  1289 ;;      Locals:         1       0       0       0       0
  1290 ;;      Temps:          0       2       0       0       0
  1291 ;;      Totals:         1       2       0       0       0
  1292 ;;Total ram usage:        3 bytes
  1293 ;; Hardware stack levels used:    1
  1294 ;; Hardware stack levels required when called:    5
  1295 ;; This function calls:
  1296 ;;		_Expander_Write
  1297 ;;		_LCD_Cmd
  1298 ;; This function is called by:
  1299 ;;		_main
  1300 ;; This function uses a non-reentrant model
  1301 ;;
  1302                           
  1303                           
  1304                           ;psect for function _LCD_Begin
  1305  0023                     _LCD_Begin:
  1306                           
  1307                           ;incstack = 0
  1308                           ; Regs used in _LCD_Begin: [wreg+status,2+status,0+pclath+cstack]
  1309                           ;LCD_Begin@_i2c_addr stored from wreg
  1310  0023  00F9               	movwf	LCD_Begin@_i2c_addr
  1311  0024                     l1495:
  1312                           
  1313                           ;I2C_LCD.c: 132: void LCD_Begin(uint8_t _i2c_addr);I2C_LCD.c: 133: {;I2C_LCD.c: 134:   i
      +                          2c_addr = _i2c_addr;
  1314  0024  0879               	movf	LCD_Begin@_i2c_addr,w
  1315  0025  1283               	bcf	3,5	;RP0=0, select bank0
  1316  0026  1303               	bcf	3,6	;RP1=0, select bank0
  1317  0027  00B9               	movwf	??_LCD_Begin
  1318  0028  0839               	movf	??_LCD_Begin,w
  1319  0029  00C8               	movwf	_i2c_addr
  1320  002A                     l1497:
  1321                           
  1322                           ;I2C_LCD.c: 135:   Expander_Write(0);
  1323  002A  3000               	movlw	0
  1324  002B  120A  118A  22B9  120A  118A  	fcall	_Expander_Write
  1325  0030                     l1499:
  1326                           
  1327                           ;I2C_LCD.c: 137:   _delay((unsigned long)((40)*(8000000/4000.0)));
  1328  0030  3068               	movlw	104
  1329  0031  1283               	bcf	3,5	;RP0=0, select bank0
  1330  0032  1303               	bcf	3,6	;RP1=0, select bank0
  1331  0033  00BA               	movwf	??_LCD_Begin+1
  1332  0034  30E3               	movlw	227
  1333  0035  00B9               	movwf	??_LCD_Begin
  1334  0036                     u687:
  1335  0036  0BB9               	decfsz	??_LCD_Begin,f
  1336  0037  2836               	goto	u687
  1337  0038  0BBA               	decfsz	??_LCD_Begin+1,f
  1338  0039  2836               	goto	u687
  1339  003A  283B               	nop2
  1340                           
  1341                           ;I2C_LCD.c: 138:   LCD_Cmd(3);
  1342  003B  3003               	movlw	3
  1343  003C  120A  118A  2267  120A  118A  	fcall	_LCD_Cmd
  1344  0041                     l1501:
  1345                           
  1346                           ;I2C_LCD.c: 139:   _delay((unsigned long)((5)*(8000000/4000.0)));
  1347  0041  300D               	movlw	13
  1348  0042  1283               	bcf	3,5	;RP0=0, select bank0
  1349  0043  1303               	bcf	3,6	;RP1=0, select bank0
  1350  0044  00BA               	movwf	??_LCD_Begin+1
  1351  0045  30FB               	movlw	251
  1352  0046  00B9               	movwf	??_LCD_Begin
  1353  0047                     u697:
  1354  0047  0BB9               	decfsz	??_LCD_Begin,f
  1355  0048  2847               	goto	u697
  1356  0049  0BBA               	decfsz	??_LCD_Begin+1,f
  1357  004A  2847               	goto	u697
  1358  004B                     l1503:
  1359                           
  1360                           ;I2C_LCD.c: 140:   LCD_Cmd(3);
  1361  004B  3003               	movlw	3
  1362  004C  120A  118A  2267  120A  118A  	fcall	_LCD_Cmd
  1363                           
  1364                           ;I2C_LCD.c: 141:   _delay((unsigned long)((5)*(8000000/4000.0)));
  1365  0051  300D               	movlw	13
  1366  0052  1283               	bcf	3,5	;RP0=0, select bank0
  1367  0053  1303               	bcf	3,6	;RP1=0, select bank0
  1368  0054  00BA               	movwf	??_LCD_Begin+1
  1369  0055  30FB               	movlw	251
  1370  0056  00B9               	movwf	??_LCD_Begin
  1371  0057                     u707:
  1372  0057  0BB9               	decfsz	??_LCD_Begin,f
  1373  0058  2857               	goto	u707
  1374  0059  0BBA               	decfsz	??_LCD_Begin+1,f
  1375  005A  2857               	goto	u707
  1376  005B                     l1505:
  1377                           
  1378                           ;I2C_LCD.c: 142:   LCD_Cmd(3);
  1379  005B  3003               	movlw	3
  1380  005C  120A  118A  2267  120A  118A  	fcall	_LCD_Cmd
  1381  0061                     l1507:
  1382                           
  1383                           ;I2C_LCD.c: 143:   _delay((unsigned long)((5)*(8000000/4000.0)));
  1384  0061  300D               	movlw	13
  1385  0062  1283               	bcf	3,5	;RP0=0, select bank0
  1386  0063  1303               	bcf	3,6	;RP1=0, select bank0
  1387  0064  00BA               	movwf	??_LCD_Begin+1
  1388  0065  30FB               	movlw	251
  1389  0066  00B9               	movwf	??_LCD_Begin
  1390  0067                     u717:
  1391  0067  0BB9               	decfsz	??_LCD_Begin,f
  1392  0068  2867               	goto	u717
  1393  0069  0BBA               	decfsz	??_LCD_Begin+1,f
  1394  006A  2867               	goto	u717
  1395                           
  1396                           ;I2C_LCD.c: 144:   LCD_Cmd(0x02);
  1397  006B  3002               	movlw	2
  1398  006C  120A  118A  2267  120A  118A  	fcall	_LCD_Cmd
  1399  0071                     l1509:
  1400                           
  1401                           ;I2C_LCD.c: 145:   _delay((unsigned long)((5)*(8000000/4000.0)));
  1402  0071  300D               	movlw	13
  1403  0072  1283               	bcf	3,5	;RP0=0, select bank0
  1404  0073  1303               	bcf	3,6	;RP1=0, select bank0
  1405  0074  00BA               	movwf	??_LCD_Begin+1
  1406  0075  30FB               	movlw	251
  1407  0076  00B9               	movwf	??_LCD_Begin
  1408  0077                     u727:
  1409  0077  0BB9               	decfsz	??_LCD_Begin,f
  1410  0078  2877               	goto	u727
  1411  0079  0BBA               	decfsz	??_LCD_Begin+1,f
  1412  007A  2877               	goto	u727
  1413  007B                     l1511:
  1414                           
  1415                           ;I2C_LCD.c: 146:   LCD_Cmd(0x20 | (2 << 2));
  1416  007B  3028               	movlw	40
  1417  007C  120A  118A  2267  120A  118A  	fcall	_LCD_Cmd
  1418                           
  1419                           ;I2C_LCD.c: 147:   _delay((unsigned long)((50)*(8000000/4000.0)));
  1420  0081  3082               	movlw	130
  1421  0082  1283               	bcf	3,5	;RP0=0, select bank0
  1422  0083  1303               	bcf	3,6	;RP1=0, select bank0
  1423  0084  00BA               	movwf	??_LCD_Begin+1
  1424  0085  30DD               	movlw	221
  1425  0086  00B9               	movwf	??_LCD_Begin
  1426  0087                     u737:
  1427  0087  0BB9               	decfsz	??_LCD_Begin,f
  1428  0088  2887               	goto	u737
  1429  0089  0BBA               	decfsz	??_LCD_Begin+1,f
  1430  008A  2887               	goto	u737
  1431  008B                     l1513:
  1432                           
  1433                           ;I2C_LCD.c: 148:   LCD_Cmd(0x0C);
  1434  008B  300C               	movlw	12
  1435  008C  120A  118A  2267  120A  118A  	fcall	_LCD_Cmd
  1436  0091                     l1515:
  1437                           
  1438                           ;I2C_LCD.c: 149:   _delay((unsigned long)((50)*(8000000/4000.0)));
  1439  0091  3082               	movlw	130
  1440  0092  1283               	bcf	3,5	;RP0=0, select bank0
  1441  0093  1303               	bcf	3,6	;RP1=0, select bank0
  1442  0094  00BA               	movwf	??_LCD_Begin+1
  1443  0095  30DD               	movlw	221
  1444  0096  00B9               	movwf	??_LCD_Begin
  1445  0097                     u747:
  1446  0097  0BB9               	decfsz	??_LCD_Begin,f
  1447  0098  2897               	goto	u747
  1448  0099  0BBA               	decfsz	??_LCD_Begin+1,f
  1449  009A  2897               	goto	u747
  1450                           
  1451                           ;I2C_LCD.c: 150:   LCD_Cmd(0x01);
  1452  009B  3001               	movlw	1
  1453  009C  120A  118A  2267  120A  118A  	fcall	_LCD_Cmd
  1454  00A1                     l1517:
  1455                           
  1456                           ;I2C_LCD.c: 151:   _delay((unsigned long)((50)*(8000000/4000.0)));
  1457  00A1  3082               	movlw	130
  1458  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  1459  00A3  1303               	bcf	3,6	;RP1=0, select bank0
  1460  00A4  00BA               	movwf	??_LCD_Begin+1
  1461  00A5  30DD               	movlw	221
  1462  00A6  00B9               	movwf	??_LCD_Begin
  1463  00A7                     u757:
  1464  00A7  0BB9               	decfsz	??_LCD_Begin,f
  1465  00A8  28A7               	goto	u757
  1466  00A9  0BBA               	decfsz	??_LCD_Begin+1,f
  1467  00AA  28A7               	goto	u757
  1468  00AB                     l1519:
  1469                           
  1470                           ;I2C_LCD.c: 152:   LCD_Cmd(0x04 | 0x02);
  1471  00AB  3006               	movlw	6
  1472  00AC  120A  118A  2267  120A  118A  	fcall	_LCD_Cmd
  1473                           
  1474                           ;I2C_LCD.c: 153:   _delay((unsigned long)((50)*(8000000/4000.0)));
  1475  00B1  3082               	movlw	130
  1476  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1477  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1478  00B4  00BA               	movwf	??_LCD_Begin+1
  1479  00B5  30DD               	movlw	221
  1480  00B6  00B9               	movwf	??_LCD_Begin
  1481  00B7                     u767:
  1482  00B7  0BB9               	decfsz	??_LCD_Begin,f
  1483  00B8  28B7               	goto	u767
  1484  00B9  0BBA               	decfsz	??_LCD_Begin+1,f
  1485  00BA  28B7               	goto	u767
  1486  00BB                     l279:
  1487  00BB  0008               	return
  1488  00BC                     __end_of_LCD_Begin:
  1489                           
  1490                           	psect	text5
  1491  0267                     __ptext5:	
  1492 ;; *************** function _LCD_Cmd *****************
  1493 ;; Defined at:
  1494 ;;		line 86 in file "I2C_LCD.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;  Command         1    wreg     unsigned char 
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;  Command         1    8[COMMON] unsigned char 
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  1    wreg      void 
  1501 ;; Registers used:
  1502 ;;		wreg, status,2, status,0, pclath, cstack
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1508 ;;      Params:         0       0       0       0       0
  1509 ;;      Locals:         1       0       0       0       0
  1510 ;;      Temps:          2       0       0       0       0
  1511 ;;      Totals:         3       0       0       0       0
  1512 ;;Total ram usage:        3 bytes
  1513 ;; Hardware stack levels used:    1
  1514 ;; Hardware stack levels required when called:    4
  1515 ;; This function calls:
  1516 ;;		_LCD_Write_Nibble
  1517 ;; This function is called by:
  1518 ;;		_LCD_Goto
  1519 ;;		_LCD_Begin
  1520 ;; This function uses a non-reentrant model
  1521 ;;
  1522                           
  1523                           
  1524                           ;psect for function _LCD_Cmd
  1525  0267                     _LCD_Cmd:
  1526                           
  1527                           ;incstack = 0
  1528                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1529                           ;LCD_Cmd@Command stored from wreg
  1530  0267  00F8               	movwf	LCD_Cmd@Command
  1531  0268                     l1263:
  1532                           
  1533                           ;I2C_LCD.c: 86: void LCD_Cmd(uint8_t Command);I2C_LCD.c: 87: {;I2C_LCD.c: 88:   RS = 0;
  1534  0268  107A               	bcf	_RS/(0+8),_RS& (0+7)
  1535  0269                     l1265:
  1536                           
  1537                           ;I2C_LCD.c: 89:   LCD_Write_Nibble(Command & 0xF0);
  1538  0269  0878               	movf	LCD_Cmd@Command,w
  1539  026A  39F0               	andlw	240
  1540  026B  120A  118A  2295  120A  118A  	fcall	_LCD_Write_Nibble
  1541                           
  1542                           ;I2C_LCD.c: 90:   LCD_Write_Nibble((Command << 4) & 0xF0);
  1543  0270  0878               	movf	LCD_Cmd@Command,w
  1544  0271  00F6               	movwf	??_LCD_Cmd
  1545  0272  3003               	movlw	3
  1546  0273                     u435:
  1547  0273  1003               	clrc
  1548  0274  0DF6               	rlf	??_LCD_Cmd,f
  1549  0275  3EFF               	addlw	-1
  1550  0276  1D03               	skipz
  1551  0277  2A73               	goto	u435
  1552  0278  1003               	clrc
  1553  0279  0D76               	rlf	??_LCD_Cmd,w
  1554  027A  39F0               	andlw	240
  1555  027B  120A  118A  2295  120A  118A  	fcall	_LCD_Write_Nibble
  1556  0280                     l1267:
  1557                           
  1558                           ;I2C_LCD.c: 91:   if((Command == 0x01) || (Command == 0x02))
  1559  0280  0378               	decf	LCD_Cmd@Command,w
  1560  0281  1903               	btfsc	3,2
  1561  0282  2A84               	goto	u441
  1562  0283  2A85               	goto	u440
  1563  0284                     u441:
  1564  0284  2A8B               	goto	l1271
  1565  0285                     u440:
  1566  0285                     l1269:
  1567  0285  3002               	movlw	2
  1568  0286  0678               	xorwf	LCD_Cmd@Command,w
  1569  0287  1D03               	btfss	3,2
  1570  0288  2A8A               	goto	u451
  1571  0289  2A8B               	goto	u450
  1572  028A                     u451:
  1573  028A  2A94               	goto	l258
  1574  028B                     u450:
  1575  028B                     l1271:
  1576                           
  1577                           ;I2C_LCD.c: 92:     _delay((unsigned long)((2)*(8000000/4000.0)));
  1578  028B  3006               	movlw	6
  1579  028C  00F7               	movwf	??_LCD_Cmd+1
  1580  028D  3030               	movlw	48
  1581  028E  00F6               	movwf	??_LCD_Cmd
  1582  028F                     u777:
  1583  028F  0BF6               	decfsz	??_LCD_Cmd,f
  1584  0290  2A8F               	goto	u777
  1585  0291  0BF7               	decfsz	??_LCD_Cmd+1,f
  1586  0292  2A8F               	goto	u777
  1587  0293  0000               	nop
  1588  0294                     l258:
  1589  0294  0008               	return
  1590  0295                     __end_of_LCD_Cmd:
  1591                           
  1592                           	psect	text6
  1593  0295                     __ptext6:	
  1594 ;; *************** function _LCD_Write_Nibble *****************
  1595 ;; Defined at:
  1596 ;;		line 75 in file "I2C_LCD.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;  n               1    wreg     unsigned char 
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;  n               1    5[COMMON] unsigned char 
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  1    wreg      void 
  1603 ;; Registers used:
  1604 ;;		wreg, status,2, status,0, pclath, cstack
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1610 ;;      Params:         0       0       0       0       0
  1611 ;;      Locals:         1       0       0       0       0
  1612 ;;      Temps:          1       0       0       0       0
  1613 ;;      Totals:         2       0       0       0       0
  1614 ;;Total ram usage:        2 bytes
  1615 ;; Hardware stack levels used:    1
  1616 ;; Hardware stack levels required when called:    3
  1617 ;; This function calls:
  1618 ;;		_Expander_Write
  1619 ;; This function is called by:
  1620 ;;		_LCD_Cmd
  1621 ;;		_LCD_Print
  1622 ;;		_LCD_PutC
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626                           
  1627                           ;psect for function _LCD_Write_Nibble
  1628  0295                     _LCD_Write_Nibble:
  1629                           
  1630                           ;incstack = 0
  1631                           ; Regs used in _LCD_Write_Nibble: [wreg+status,2+status,0+pclath+cstack]
  1632                           ;LCD_Write_Nibble@n stored from wreg
  1633  0295  00F5               	movwf	LCD_Write_Nibble@n
  1634  0296                     l1249:
  1635                           
  1636                           ;I2C_LCD.c: 75: void LCD_Write_Nibble(uint8_t n);I2C_LCD.c: 76: {;I2C_LCD.c: 77:   n |= 
      +                          RS;
  1637  0296  3000               	movlw	0
  1638  0297  187A               	btfsc	_RS/(0+8),_RS& (0+7)
  1639  0298  3001               	movlw	1
  1640  0299  00F4               	movwf	??_LCD_Write_Nibble
  1641  029A  0874               	movf	??_LCD_Write_Nibble,w
  1642  029B  04F5               	iorwf	LCD_Write_Nibble@n,f
  1643  029C                     l1251:
  1644                           
  1645                           ;I2C_LCD.c: 78:   Expander_Write(n & 0xFB);
  1646  029C  0875               	movf	LCD_Write_Nibble@n,w
  1647  029D  39FB               	andlw	251
  1648  029E  120A  118A  22B9  120A  118A  	fcall	_Expander_Write
  1649  02A3                     l1253:
  1650                           
  1651                           ;I2C_LCD.c: 79:   _delay((unsigned long)((1)*(8000000/4000000.0)));
  1652  02A3  2AA4               	nop2	;2 cycle nop
  1653  02A4                     l1255:
  1654                           
  1655                           ;I2C_LCD.c: 80:   Expander_Write(n | 0x04);
  1656  02A4  0875               	movf	LCD_Write_Nibble@n,w
  1657  02A5  3804               	iorlw	4
  1658  02A6  120A  118A  22B9  120A  118A  	fcall	_Expander_Write
  1659  02AB                     l1257:
  1660                           
  1661                           ;I2C_LCD.c: 81:   _delay((unsigned long)((1)*(8000000/4000000.0)));
  1662  02AB  2AAC               	nop2	;2 cycle nop
  1663  02AC                     l1259:
  1664                           
  1665                           ;I2C_LCD.c: 82:   Expander_Write(n & 0xFB);
  1666  02AC  0875               	movf	LCD_Write_Nibble@n,w
  1667  02AD  39FB               	andlw	251
  1668  02AE  120A  118A  22B9  120A  118A  	fcall	_Expander_Write
  1669  02B3                     l1261:
  1670                           
  1671                           ;I2C_LCD.c: 83:   _delay((unsigned long)((100)*(8000000/4000000.0)));
  1672  02B3  3042               	movlw	66
  1673  02B4  00F4               	movwf	??_LCD_Write_Nibble
  1674  02B5                     u787:
  1675  02B5  0BF4               	decfsz	??_LCD_Write_Nibble,f
  1676  02B6  2AB5               	goto	u787
  1677  02B7  0000               	nop
  1678  02B8                     l252:
  1679  02B8  0008               	return
  1680  02B9                     __end_of_LCD_Write_Nibble:
  1681                           
  1682                           	psect	text7
  1683  02B9                     __ptext7:	
  1684 ;; *************** function _Expander_Write *****************
  1685 ;; Defined at:
  1686 ;;		line 67 in file "I2C_LCD.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;  value           1    wreg     unsigned char 
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;  value           1    3[COMMON] unsigned char 
  1691 ;; Return value:  Size  Location     Type
  1692 ;;                  1    wreg      void 
  1693 ;; Registers used:
  1694 ;;		wreg, status,2, status,0, pclath, cstack
  1695 ;; Tracked objects:
  1696 ;;		On entry : 0/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1700 ;;      Params:         0       0       0       0       0
  1701 ;;      Locals:         1       0       0       0       0
  1702 ;;      Temps:          0       0       0       0       0
  1703 ;;      Totals:         1       0       0       0       0
  1704 ;;Total ram usage:        1 bytes
  1705 ;; Hardware stack levels used:    1
  1706 ;; Hardware stack levels required when called:    2
  1707 ;; This function calls:
  1708 ;;		_I2C_Start
  1709 ;;		_I2C_Stop
  1710 ;;		_I2C_Write
  1711 ;; This function is called by:
  1712 ;;		_LCD_Write_Nibble
  1713 ;;		_LCD_Begin
  1714 ;;		_Backlight
  1715 ;;		_noBacklight
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           
  1719                           
  1720                           ;psect for function _Expander_Write
  1721  02B9                     _Expander_Write:
  1722                           
  1723                           ;incstack = 0
  1724                           ; Regs used in _Expander_Write: [wreg+status,2+status,0+pclath+cstack]
  1725                           ;Expander_Write@value stored from wreg
  1726  02B9  00F3               	movwf	Expander_Write@value
  1727  02BA                     l1247:
  1728                           
  1729                           ;I2C_LCD.c: 67: void Expander_Write(uint8_t value);I2C_LCD.c: 68: {;I2C_LCD.c: 69:   I2C
      +                          _Start();
  1730  02BA  120A  118A  231F  120A  118A  	fcall	_I2C_Start
  1731                           
  1732                           ;I2C_LCD.c: 70:   I2C_Write(i2c_addr);
  1733  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  1734  02C0  1303               	bcf	3,6	;RP1=0, select bank0
  1735  02C1  0848               	movf	_i2c_addr,w
  1736  02C2  120A  118A  22FF  120A  118A  	fcall	_I2C_Write
  1737                           
  1738                           ;I2C_LCD.c: 71:   I2C_Write(value | backlight_val);
  1739  02C7  0873               	movf	Expander_Write@value,w
  1740  02C8  047B               	iorwf	_backlight_val,w
  1741  02C9  120A  118A  22FF  120A  118A  	fcall	_I2C_Write
  1742                           
  1743                           ;I2C_LCD.c: 72:   I2C_Stop();
  1744  02CE  120A  118A  2311  120A  118A  	fcall	_I2C_Stop
  1745  02D3                     l249:
  1746  02D3  0008               	return
  1747  02D4                     __end_of_Expander_Write:
  1748                           
  1749                           	psect	text8
  1750  02FF                     __ptext8:	
  1751 ;; *************** function _I2C_Write *****************
  1752 ;; Defined at:
  1753 ;;		line 39 in file "I2C_LCD.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;  i2c_data        1    wreg     unsigned char 
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;  i2c_data        1    2[COMMON] unsigned char 
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		wreg, status,2
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1767 ;;      Params:         0       0       0       0       0
  1768 ;;      Locals:         1       0       0       0       0
  1769 ;;      Temps:          0       0       0       0       0
  1770 ;;      Totals:         1       0       0       0       0
  1771 ;;Total ram usage:        1 bytes
  1772 ;; Hardware stack levels used:    1
  1773 ;; Hardware stack levels required when called:    1
  1774 ;; This function calls:
  1775 ;;		Nothing
  1776 ;; This function is called by:
  1777 ;;		_Expander_Write
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           
  1782                           ;psect for function _I2C_Write
  1783  02FF                     _I2C_Write:
  1784                           
  1785                           ;incstack = 0
  1786                           ; Regs used in _I2C_Write: [wreg+status,2]
  1787                           ;I2C_Write@i2c_data stored from wreg
  1788  02FF  00F2               	movwf	I2C_Write@i2c_data
  1789  0300                     l1241:
  1790  0300                     l225:	
  1791                           ;I2C_LCD.c: 39: void I2C_Write(uint8_t i2c_data);I2C_LCD.c: 40: {;I2C_LCD.c: 41:   while
      +                           ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1792                           
  1793  0300  1683               	bsf	3,5	;RP0=1, select bank1
  1794  0301  1303               	bcf	3,6	;RP1=0, select bank1
  1795  0302  1914               	btfsc	20,2	;volatile
  1796  0303  2B05               	goto	u411
  1797  0304  2B06               	goto	u410
  1798  0305                     u411:
  1799  0305  2B00               	goto	l225
  1800  0306                     u410:
  1801  0306                     l1243:
  1802  0306  0811               	movf	17,w	;volatile
  1803  0307  391F               	andlw	31
  1804  0308  1D03               	btfss	3,2
  1805  0309  2B0B               	goto	u421
  1806  030A  2B0C               	goto	u420
  1807  030B                     u421:
  1808  030B  2B00               	goto	l225
  1809  030C                     u420:
  1810  030C                     l1245:
  1811                           
  1812                           ;I2C_LCD.c: 42:   SSPBUF = i2c_data;
  1813  030C  0872               	movf	I2C_Write@i2c_data,w
  1814  030D  1283               	bcf	3,5	;RP0=0, select bank0
  1815  030E  1303               	bcf	3,6	;RP1=0, select bank0
  1816  030F  0093               	movwf	19	;volatile
  1817  0310                     l228:
  1818  0310  0008               	return
  1819  0311                     __end_of_I2C_Write:
  1820                           
  1821                           	psect	text9
  1822  0311                     __ptext9:	
  1823 ;; *************** function _I2C_Stop *****************
  1824 ;; Defined at:
  1825 ;;		line 33 in file "I2C_LCD.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;		None
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;		None
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  1    wreg      void 
  1832 ;; Registers used:
  1833 ;;		wreg, status,2
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1839 ;;      Params:         0       0       0       0       0
  1840 ;;      Locals:         0       0       0       0       0
  1841 ;;      Temps:          0       0       0       0       0
  1842 ;;      Totals:         0       0       0       0       0
  1843 ;;Total ram usage:        0 bytes
  1844 ;; Hardware stack levels used:    1
  1845 ;; Hardware stack levels required when called:    1
  1846 ;; This function calls:
  1847 ;;		Nothing
  1848 ;; This function is called by:
  1849 ;;		_Expander_Write
  1850 ;; This function uses a non-reentrant model
  1851 ;;
  1852                           
  1853                           
  1854                           ;psect for function _I2C_Stop
  1855  0311                     _I2C_Stop:
  1856  0311                     l1237:	
  1857                           ;incstack = 0
  1858                           ; Regs used in _I2C_Stop: [wreg+status,2]
  1859                           
  1860  0311                     l219:	
  1861                           ;I2C_LCD.c: 35:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1862                           
  1863  0311  1683               	bsf	3,5	;RP0=1, select bank1
  1864  0312  1303               	bcf	3,6	;RP1=0, select bank1
  1865  0313  1914               	btfsc	20,2	;volatile
  1866  0314  2B16               	goto	u391
  1867  0315  2B17               	goto	u390
  1868  0316                     u391:
  1869  0316  2B11               	goto	l219
  1870  0317                     u390:
  1871  0317                     l1239:
  1872  0317  0811               	movf	17,w	;volatile
  1873  0318  391F               	andlw	31
  1874  0319  1D03               	btfss	3,2
  1875  031A  2B1C               	goto	u401
  1876  031B  2B1D               	goto	u400
  1877  031C                     u401:
  1878  031C  2B11               	goto	l219
  1879  031D                     u400:
  1880  031D                     l221:
  1881                           
  1882                           ;I2C_LCD.c: 36:   PEN = 1;
  1883  031D  1511               	bsf	17,2	;volatile
  1884  031E                     l222:
  1885  031E  0008               	return
  1886  031F                     __end_of_I2C_Stop:
  1887                           
  1888                           	psect	text10
  1889  031F                     __ptext10:	
  1890 ;; *************** function _I2C_Start *****************
  1891 ;; Defined at:
  1892 ;;		line 27 in file "I2C_LCD.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;		None
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;		None
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  1    wreg      void 
  1899 ;; Registers used:
  1900 ;;		wreg, status,2
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1906 ;;      Params:         0       0       0       0       0
  1907 ;;      Locals:         0       0       0       0       0
  1908 ;;      Temps:          0       0       0       0       0
  1909 ;;      Totals:         0       0       0       0       0
  1910 ;;Total ram usage:        0 bytes
  1911 ;; Hardware stack levels used:    1
  1912 ;; Hardware stack levels required when called:    1
  1913 ;; This function calls:
  1914 ;;		Nothing
  1915 ;; This function is called by:
  1916 ;;		_Expander_Write
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           
  1921                           ;psect for function _I2C_Start
  1922  031F                     _I2C_Start:
  1923  031F                     l1233:	
  1924                           ;incstack = 0
  1925                           ; Regs used in _I2C_Start: [wreg+status,2]
  1926                           
  1927  031F                     l213:	
  1928                           ;I2C_LCD.c: 29:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1929                           
  1930  031F  1683               	bsf	3,5	;RP0=1, select bank1
  1931  0320  1303               	bcf	3,6	;RP1=0, select bank1
  1932  0321  1914               	btfsc	20,2	;volatile
  1933  0322  2B24               	goto	u371
  1934  0323  2B25               	goto	u370
  1935  0324                     u371:
  1936  0324  2B1F               	goto	l213
  1937  0325                     u370:
  1938  0325                     l1235:
  1939  0325  0811               	movf	17,w	;volatile
  1940  0326  391F               	andlw	31
  1941  0327  1D03               	btfss	3,2
  1942  0328  2B2A               	goto	u381
  1943  0329  2B2B               	goto	u380
  1944  032A                     u381:
  1945  032A  2B1F               	goto	l213
  1946  032B                     u380:
  1947  032B                     l215:
  1948                           
  1949                           ;I2C_LCD.c: 30:   SEN = 1;
  1950  032B  1411               	bsf	17,0	;volatile
  1951  032C                     l216:
  1952  032C  0008               	return
  1953  032D                     __end_of_I2C_Start:
  1954                           
  1955                           	psect	text11
  1956  01FE                     __ptext11:	
  1957 ;; *************** function _I2C_Master_Init *****************
  1958 ;; Defined at:
  1959 ;;		line 16 in file "I2C.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;  c               4    6[BANK0 ] const unsigned long 
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;		None
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  1    wreg      void 
  1966 ;; Registers used:
  1967 ;;		wreg, status,2, status,0, pclath, cstack
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1973 ;;      Params:         0       4       0       0       0
  1974 ;;      Locals:         0       0       0       0       0
  1975 ;;      Temps:          0       4       0       0       0
  1976 ;;      Totals:         0       8       0       0       0
  1977 ;;Total ram usage:        8 bytes
  1978 ;; Hardware stack levels used:    1
  1979 ;; Hardware stack levels required when called:    2
  1980 ;; This function calls:
  1981 ;;		___lldiv
  1982 ;; This function is called by:
  1983 ;;		_main
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987                           
  1988                           ;psect for function _I2C_Master_Init
  1989  01FE                     _I2C_Master_Init:
  1990  01FE                     l1477:	
  1991                           ;incstack = 0
  1992                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1993                           
  1994                           
  1995                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1996  01FE  3028               	movlw	40
  1997  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  1998  0200  1303               	bcf	3,6	;RP1=0, select bank0
  1999  0201  0094               	movwf	20	;volatile
  2000  0202                     l1479:
  2001                           
  2002                           ;I2C.c: 19:     SSPCON2 = 0;
  2003  0202  1683               	bsf	3,5	;RP0=1, select bank1
  2004  0203  1303               	bcf	3,6	;RP1=0, select bank1
  2005  0204  0191               	clrf	17	;volatile
  2006  0205                     l1481:
  2007                           
  2008                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  2009  0205  1283               	bcf	3,5	;RP0=0, select bank0
  2010  0206  1303               	bcf	3,6	;RP1=0, select bank0
  2011  0207  083F               	movf	I2C_Master_Init@c,w
  2012  0208  00C3               	movwf	??_I2C_Master_Init
  2013  0209  0840               	movf	I2C_Master_Init@c+1,w
  2014  020A  00C4               	movwf	??_I2C_Master_Init+1
  2015  020B  0841               	movf	I2C_Master_Init@c+2,w
  2016  020C  00C5               	movwf	??_I2C_Master_Init+2
  2017  020D  0842               	movf	I2C_Master_Init@c+3,w
  2018  020E  00C6               	movwf	??_I2C_Master_Init+3
  2019  020F  3002               	movlw	2
  2020  0210                     u655:
  2021  0210  1003               	clrc
  2022  0211  0DC3               	rlf	??_I2C_Master_Init,f
  2023  0212  0DC4               	rlf	??_I2C_Master_Init+1,f
  2024  0213  0DC5               	rlf	??_I2C_Master_Init+2,f
  2025  0214  0DC6               	rlf	??_I2C_Master_Init+3,f
  2026  0215                     u650:
  2027  0215  3EFF               	addlw	-1
  2028  0216  1D03               	skipz
  2029  0217  2A10               	goto	u655
  2030  0218  0846               	movf	??_I2C_Master_Init+3,w
  2031  0219  00F5               	movwf	___lldiv@divisor+3
  2032  021A  0845               	movf	??_I2C_Master_Init+2,w
  2033  021B  00F4               	movwf	___lldiv@divisor+2
  2034  021C  0844               	movf	??_I2C_Master_Init+1,w
  2035  021D  00F3               	movwf	___lldiv@divisor+1
  2036  021E  0843               	movf	??_I2C_Master_Init,w
  2037  021F  00F2               	movwf	___lldiv@divisor
  2038  0220  3000               	movlw	0
  2039  0221  00F9               	movwf	___lldiv@dividend+3
  2040  0222  307A               	movlw	122
  2041  0223  00F8               	movwf	___lldiv@dividend+2
  2042  0224  3012               	movlw	18
  2043  0225  00F7               	movwf	___lldiv@dividend+1
  2044  0226  3000               	movlw	0
  2045  0227  00F6               	movwf	___lldiv@dividend
  2046  0228  120A  118A  20BC  120A  118A  	fcall	___lldiv
  2047  022D  0872               	movf	?___lldiv,w
  2048  022E  3EFF               	addlw	255
  2049  022F  1683               	bsf	3,5	;RP0=1, select bank1
  2050  0230  1303               	bcf	3,6	;RP1=0, select bank1
  2051  0231  0093               	movwf	19	;volatile
  2052  0232                     l1483:
  2053                           
  2054                           ;I2C.c: 21:     SSPSTAT = 0;
  2055  0232  0194               	clrf	20	;volatile
  2056  0233                     l1485:
  2057                           
  2058                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2059  0233  1587               	bsf	7,3	;volatile
  2060  0234                     l1487:
  2061                           
  2062                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2063  0234  1607               	bsf	7,4	;volatile
  2064  0235                     l116:
  2065  0235  0008               	return
  2066  0236                     __end_of_I2C_Master_Init:
  2067                           
  2068                           	psect	text12
  2069  0236                     __ptext12:	
  2070 ;; *************** function _I2C_Init *****************
  2071 ;; Defined at:
  2072 ;;		line 20 in file "I2C_LCD.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;  i2c_clk_freq    4    6[BANK0 ] unsigned long 
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;		None
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  1    wreg      void 
  2079 ;; Registers used:
  2080 ;;		wreg, status,2, status,0, pclath, cstack
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2086 ;;      Params:         0       4       0       0       0
  2087 ;;      Locals:         0       0       0       0       0
  2088 ;;      Temps:          0       4       0       0       0
  2089 ;;      Totals:         0       8       0       0       0
  2090 ;;Total ram usage:        8 bytes
  2091 ;; Hardware stack levels used:    1
  2092 ;; Hardware stack levels required when called:    2
  2093 ;; This function calls:
  2094 ;;		___lldiv
  2095 ;; This function is called by:
  2096 ;;		_main
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           
  2101                           ;psect for function _I2C_Init
  2102  0236                     _I2C_Init:
  2103  0236                     l1489:	
  2104                           ;incstack = 0
  2105                           ; Regs used in _I2C_Init: [wreg+status,2+status,0+pclath+cstack]
  2106                           
  2107                           
  2108                           ;I2C_LCD.c: 20: void I2C_Init(uint32_t i2c_clk_freq);I2C_LCD.c: 21: {;I2C_LCD.c: 22:   S
      +                          SPCON = 0x28;
  2109  0236  3028               	movlw	40
  2110  0237  1283               	bcf	3,5	;RP0=0, select bank0
  2111  0238  1303               	bcf	3,6	;RP1=0, select bank0
  2112  0239  0094               	movwf	20	;volatile
  2113  023A                     l1491:
  2114                           
  2115                           ;I2C_LCD.c: 23:   SSPADD = (8000000 /(4 * i2c_clk_freq)) - 1;
  2116  023A  083F               	movf	I2C_Init@i2c_clk_freq,w
  2117  023B  00C3               	movwf	??_I2C_Init
  2118  023C  0840               	movf	I2C_Init@i2c_clk_freq+1,w
  2119  023D  00C4               	movwf	??_I2C_Init+1
  2120  023E  0841               	movf	I2C_Init@i2c_clk_freq+2,w
  2121  023F  00C5               	movwf	??_I2C_Init+2
  2122  0240  0842               	movf	I2C_Init@i2c_clk_freq+3,w
  2123  0241  00C6               	movwf	??_I2C_Init+3
  2124  0242  3002               	movlw	2
  2125  0243                     u665:
  2126  0243  1003               	clrc
  2127  0244  0DC3               	rlf	??_I2C_Init,f
  2128  0245  0DC4               	rlf	??_I2C_Init+1,f
  2129  0246  0DC5               	rlf	??_I2C_Init+2,f
  2130  0247  0DC6               	rlf	??_I2C_Init+3,f
  2131  0248                     u660:
  2132  0248  3EFF               	addlw	-1
  2133  0249  1D03               	skipz
  2134  024A  2A43               	goto	u665
  2135  024B  0846               	movf	??_I2C_Init+3,w
  2136  024C  00F5               	movwf	___lldiv@divisor+3
  2137  024D  0845               	movf	??_I2C_Init+2,w
  2138  024E  00F4               	movwf	___lldiv@divisor+2
  2139  024F  0844               	movf	??_I2C_Init+1,w
  2140  0250  00F3               	movwf	___lldiv@divisor+1
  2141  0251  0843               	movf	??_I2C_Init,w
  2142  0252  00F2               	movwf	___lldiv@divisor
  2143  0253  3000               	movlw	0
  2144  0254  00F9               	movwf	___lldiv@dividend+3
  2145  0255  307A               	movlw	122
  2146  0256  00F8               	movwf	___lldiv@dividend+2
  2147  0257  3012               	movlw	18
  2148  0258  00F7               	movwf	___lldiv@dividend+1
  2149  0259  3000               	movlw	0
  2150  025A  00F6               	movwf	___lldiv@dividend
  2151  025B  120A  118A  20BC  120A  118A  	fcall	___lldiv
  2152  0260  0872               	movf	?___lldiv,w
  2153  0261  3EFF               	addlw	255
  2154  0262  1683               	bsf	3,5	;RP0=1, select bank1
  2155  0263  1303               	bcf	3,6	;RP1=0, select bank1
  2156  0264  0093               	movwf	19	;volatile
  2157  0265                     l1493:
  2158                           
  2159                           ;I2C_LCD.c: 24:   SSPSTAT = 0;
  2160  0265  0194               	clrf	20	;volatile
  2161  0266                     l210:
  2162  0266  0008               	return
  2163  0267                     __end_of_I2C_Init:
  2164                           
  2165                           	psect	text13
  2166  00BC                     __ptext13:	
  2167 ;; *************** function ___lldiv *****************
  2168 ;; Defined at:
  2169 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;  divisor         4    2[COMMON] unsigned long 
  2172 ;;  dividend        4    6[COMMON] unsigned long 
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;  quotient        4    1[BANK0 ] unsigned long 
  2175 ;;  counter         1    5[BANK0 ] unsigned char 
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  4    2[COMMON] unsigned long 
  2178 ;; Registers used:
  2179 ;;		wreg, status,2, status,0
  2180 ;; Tracked objects:
  2181 ;;		On entry : 0/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2185 ;;      Params:         8       0       0       0       0
  2186 ;;      Locals:         0       5       0       0       0
  2187 ;;      Temps:          0       1       0       0       0
  2188 ;;      Totals:         8       6       0       0       0
  2189 ;;Total ram usage:       14 bytes
  2190 ;; Hardware stack levels used:    1
  2191 ;; Hardware stack levels required when called:    1
  2192 ;; This function calls:
  2193 ;;		Nothing
  2194 ;; This function is called by:
  2195 ;;		_I2C_Master_Init
  2196 ;;		_I2C_Init
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200                           
  2201                           ;psect for function ___lldiv
  2202  00BC                     ___lldiv:
  2203  00BC                     l1453:	
  2204                           ;incstack = 0
  2205                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2206                           
  2207  00BC  3000               	movlw	0
  2208  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  2209  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  2210  00BF  00BD               	movwf	___lldiv@quotient+3
  2211  00C0  3000               	movlw	0
  2212  00C1  00BC               	movwf	___lldiv@quotient+2
  2213  00C2  3000               	movlw	0
  2214  00C3  00BB               	movwf	___lldiv@quotient+1
  2215  00C4  3000               	movlw	0
  2216  00C5  00BA               	movwf	___lldiv@quotient
  2217  00C6  0875               	movf	___lldiv@divisor+3,w
  2218  00C7  0474               	iorwf	___lldiv@divisor+2,w
  2219  00C8  0473               	iorwf	___lldiv@divisor+1,w
  2220  00C9  0472               	iorwf	___lldiv@divisor,w
  2221  00CA  1903               	skipnz
  2222  00CB  28CD               	goto	u581
  2223  00CC  28CE               	goto	u580
  2224  00CD                     u581:
  2225  00CD  291B               	goto	l1473
  2226  00CE                     u580:
  2227  00CE                     l1455:
  2228  00CE  01BE               	clrf	___lldiv@counter
  2229  00CF  0ABE               	incf	___lldiv@counter,f
  2230  00D0  28DE               	goto	l1459
  2231  00D1                     l1457:
  2232  00D1  3001               	movlw	1
  2233  00D2  00B9               	movwf	??___lldiv
  2234  00D3                     u595:
  2235  00D3  1003               	clrc
  2236  00D4  0DF2               	rlf	___lldiv@divisor,f
  2237  00D5  0DF3               	rlf	___lldiv@divisor+1,f
  2238  00D6  0DF4               	rlf	___lldiv@divisor+2,f
  2239  00D7  0DF5               	rlf	___lldiv@divisor+3,f
  2240  00D8  0BB9               	decfsz	??___lldiv,f
  2241  00D9  28D3               	goto	u595
  2242  00DA  3001               	movlw	1
  2243  00DB  00B9               	movwf	??___lldiv
  2244  00DC  0839               	movf	??___lldiv,w
  2245  00DD  07BE               	addwf	___lldiv@counter,f
  2246  00DE                     l1459:
  2247  00DE  1FF5               	btfss	___lldiv@divisor+3,7
  2248  00DF  28E1               	goto	u601
  2249  00E0  28E2               	goto	u600
  2250  00E1                     u601:
  2251  00E1  28D1               	goto	l1457
  2252  00E2                     u600:
  2253  00E2                     l1461:
  2254  00E2  3001               	movlw	1
  2255  00E3  00B9               	movwf	??___lldiv
  2256  00E4                     u615:
  2257  00E4  1003               	clrc
  2258  00E5  0DBA               	rlf	___lldiv@quotient,f
  2259  00E6  0DBB               	rlf	___lldiv@quotient+1,f
  2260  00E7  0DBC               	rlf	___lldiv@quotient+2,f
  2261  00E8  0DBD               	rlf	___lldiv@quotient+3,f
  2262  00E9  0BB9               	decfsz	??___lldiv,f
  2263  00EA  28E4               	goto	u615
  2264  00EB                     l1463:
  2265  00EB  0875               	movf	___lldiv@divisor+3,w
  2266  00EC  0279               	subwf	___lldiv@dividend+3,w
  2267  00ED  1D03               	skipz
  2268  00EE  28F9               	goto	u625
  2269  00EF  0874               	movf	___lldiv@divisor+2,w
  2270  00F0  0278               	subwf	___lldiv@dividend+2,w
  2271  00F1  1D03               	skipz
  2272  00F2  28F9               	goto	u625
  2273  00F3  0873               	movf	___lldiv@divisor+1,w
  2274  00F4  0277               	subwf	___lldiv@dividend+1,w
  2275  00F5  1D03               	skipz
  2276  00F6  28F9               	goto	u625
  2277  00F7  0872               	movf	___lldiv@divisor,w
  2278  00F8  0276               	subwf	___lldiv@dividend,w
  2279  00F9                     u625:
  2280  00F9  1C03               	skipc
  2281  00FA  28FC               	goto	u621
  2282  00FB  28FD               	goto	u620
  2283  00FC                     u621:
  2284  00FC  290C               	goto	l1469
  2285  00FD                     u620:
  2286  00FD                     l1465:
  2287  00FD  0872               	movf	___lldiv@divisor,w
  2288  00FE  02F6               	subwf	___lldiv@dividend,f
  2289  00FF  0873               	movf	___lldiv@divisor+1,w
  2290  0100  1C03               	skipc
  2291  0101  0F73               	incfsz	___lldiv@divisor+1,w
  2292  0102  02F7               	subwf	___lldiv@dividend+1,f
  2293  0103  0874               	movf	___lldiv@divisor+2,w
  2294  0104  1C03               	skipc
  2295  0105  0F74               	incfsz	___lldiv@divisor+2,w
  2296  0106  02F8               	subwf	___lldiv@dividend+2,f
  2297  0107  0875               	movf	___lldiv@divisor+3,w
  2298  0108  1C03               	skipc
  2299  0109  0F75               	incfsz	___lldiv@divisor+3,w
  2300  010A  02F9               	subwf	___lldiv@dividend+3,f
  2301  010B                     l1467:
  2302  010B  143A               	bsf	___lldiv@quotient,0
  2303  010C                     l1469:
  2304  010C  3001               	movlw	1
  2305  010D                     u635:
  2306  010D  1003               	clrc
  2307  010E  0CF5               	rrf	___lldiv@divisor+3,f
  2308  010F  0CF4               	rrf	___lldiv@divisor+2,f
  2309  0110  0CF3               	rrf	___lldiv@divisor+1,f
  2310  0111  0CF2               	rrf	___lldiv@divisor,f
  2311  0112  3EFF               	addlw	-1
  2312  0113  1D03               	skipz
  2313  0114  290D               	goto	u635
  2314  0115                     l1471:
  2315  0115  3001               	movlw	1
  2316  0116  02BE               	subwf	___lldiv@counter,f
  2317  0117  1D03               	btfss	3,2
  2318  0118  291A               	goto	u641
  2319  0119  291B               	goto	u640
  2320  011A                     u641:
  2321  011A  28E2               	goto	l1461
  2322  011B                     u640:
  2323  011B                     l1473:
  2324  011B  083D               	movf	___lldiv@quotient+3,w
  2325  011C  00F5               	movwf	?___lldiv+3
  2326  011D  083C               	movf	___lldiv@quotient+2,w
  2327  011E  00F4               	movwf	?___lldiv+2
  2328  011F  083B               	movf	___lldiv@quotient+1,w
  2329  0120  00F3               	movwf	?___lldiv+1
  2330  0121  083A               	movf	___lldiv@quotient,w
  2331  0122  00F2               	movwf	?___lldiv
  2332  0123                     l407:
  2333  0123  0008               	return
  2334  0124                     __end_of___lldiv:
  2335                           
  2336                           	psect	text14
  2337  0335                     __ptext14:	
  2338 ;; *************** function _isr *****************
  2339 ;; Defined at:
  2340 ;;		line 64 in file "main.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;		None
  2343 ;; Auto vars:     Size  Location     Type
  2344 ;;		None
  2345 ;; Return value:  Size  Location     Type
  2346 ;;                  1    wreg      void 
  2347 ;; Registers used:
  2348 ;;		None
  2349 ;; Tracked objects:
  2350 ;;		On entry : 0/0
  2351 ;;		On exit  : 0/0
  2352 ;;		Unchanged: 0/0
  2353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2354 ;;      Params:         0       0       0       0       0
  2355 ;;      Locals:         0       0       0       0       0
  2356 ;;      Temps:          2       0       0       0       0
  2357 ;;      Totals:         2       0       0       0       0
  2358 ;;Total ram usage:        2 bytes
  2359 ;; Hardware stack levels used:    1
  2360 ;; This function calls:
  2361 ;;		Nothing
  2362 ;; This function is called by:
  2363 ;;		Interrupt level 1
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367                           
  2368                           ;psect for function _isr
  2369  0335                     _isr:
  2370  0335                     i1l67:
  2371  0335  0871               	movf	??_isr+1,w
  2372  0336  008A               	movwf	10
  2373  0337  0E70               	swapf	??_isr,w
  2374  0338  0083               	movwf	3
  2375  0339  0EFE               	swapf	btemp,f
  2376  033A  0E7E               	swapf	btemp,w
  2377  033B  0009               	retfie
  2378  033C                     __end_of_isr:
  2379  007E                     btemp	set	126	;btemp
  2380  007E                     wtemp0	set	126
  2381                           
  2382                           	psect	intentry
  2383  0004                     __pintentry:	
  2384                           ;incstack = 0
  2385                           ; Regs used in _isr: []
  2386                           
  2387  0004                     interrupt_function:
  2388  007E                     saved_w	set	btemp
  2389  0004  00FE               	movwf	btemp
  2390  0005  0E03               	swapf	3,w
  2391  0006  00F0               	movwf	??_isr
  2392  0007  080A               	movf	10,w
  2393  0008  00F1               	movwf	??_isr+1
  2394  0009  120A  118A  2B35   	ljmp	_isr
  2395                           
  2396                           	psect	config
  2397                           
  2398                           ;Config register CONFIG1 @ 0x2007
  2399                           ;	Oscillator Selection bits
  2400                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2401                           ;	Watchdog Timer Enable bit
  2402                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2403                           ;	Power-up Timer Enable bit
  2404                           ;	PWRTE = OFF, PWRT disabled
  2405                           ;	RE3/MCLR pin function select bit
  2406                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2407                           ;	Code Protection bit
  2408                           ;	CP = OFF, Program memory code protection is disabled
  2409                           ;	Data Code Protection bit
  2410                           ;	CPD = OFF, Data memory code protection is disabled
  2411                           ;	Brown Out Reset Selection bits
  2412                           ;	BOREN = OFF, BOR disabled
  2413                           ;	Internal External Switchover bit
  2414                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2415                           ;	Fail-Safe Clock Monitor Enabled bit
  2416                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2417                           ;	Low Voltage Programming Enable bit
  2418                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2419                           ;	In-Circuit Debugger Mode bit
  2420                           ;	DEBUG = 0x1, unprogrammed default
  2421  2007                     	org	8199
  2422  2007  20D4               	dw	8404
  2423                           
  2424                           ;Config register CONFIG2 @ 0x2008
  2425                           ;	Brown-out Reset Selection bit
  2426                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2427                           ;	Flash Program Memory Self Write Enable bits
  2428                           ;	WRT = OFF, Write protection off
  2429  2008                     	org	8200
  2430  2008  3FFF               	dw	16383

Data Sizes:
    Strings     16
    Constant    0
    Data        1
    BSS         25
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     15      41
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Print@LCD_Str	PTR unsigned char  size(1) Largest target is 14
		 -> STR_2(CODE[2]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    _main->_LCD_Begin
    _main->_LCD_Goto
    _LCD_Print->_LCD_Write_Nibble
    _LCD_Goto->_LCD_Cmd
    _LCD_Begin->_LCD_Cmd
    _LCD_Cmd->_LCD_Write_Nibble
    _LCD_Write_Nibble->_Expander_Write
    _Expander_Write->_I2C_Write
    _I2C_Master_Init->___lldiv
    _I2C_Init->___lldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_I2C_Init
    _main->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _I2C_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2563
                                             14 BANK0      1     1      0
                           _I2C_Init
                    _I2C_Master_Init
                          _LCD_Begin
                           _LCD_Goto
                          _LCD_Print
                         _USART_Init
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Print                                            3     3      0     311
                                              6 COMMON     3     3      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (1) _LCD_Goto                                             4     3      1     534
                                              9 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Begin                                            3     3      0     274
                                              9 COMMON     1     1      0
                                              0 BANK0      2     2      0
                     _Expander_Write
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Cmd                                              3     3      0     199
                                              6 COMMON     3     3      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Nibble                                     2     2      0     111
                                              4 COMMON     2     2      0
                     _Expander_Write
 ---------------------------------------------------------------------------------
 (3) _Expander_Write                                       1     1      0      44
                                              3 COMMON     1     1      0
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_Write                                            1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     722
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             8     4      4     722
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     601
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
     ___lldiv
   _I2C_Master_Init
     ___lldiv
   _LCD_Begin
     _Expander_Write
       _I2C_Start
       _I2C_Stop
       _I2C_Write
     _LCD_Cmd
       _LCD_Write_Nibble
         _Expander_Write
           _I2C_Start
           _I2C_Stop
           _I2C_Write
   _LCD_Goto
     _LCD_Cmd
       _LCD_Write_Nibble
         _Expander_Write
           _I2C_Start
           _I2C_Stop
           _I2C_Write
   _LCD_Print
     _LCD_Write_Nibble
       _Expander_Write
         _I2C_Start
         _I2C_Stop
         _I2C_Write
   _USART_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      F      29       5       51.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       1       0        7.1%
CODE                 0      0       0       0        0.0%
DATA                 0      0      35      12        0.0%
ABS                  0      0      35       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Aug 23 18:35:51 2021

                        pc 0002         __size_of_I2C_Start 000E         __size_of_I2C_Write 0012  
                       _RS 03D0                         fsr 0004                        l210 0266  
                      l116 0235                        l213 031F                        l221 031D  
                      l222 031E                        l215 032B                        l216 032C  
                      l225 0300                        l219 0311                        l228 0310  
                      l252 02B8                        l407 0123                        l159 02FE  
                      l249 02D3                        l258 0294                        l267 01FD  
                      l276 01C5                        l279 00BB                        l941 02EA  
                      l951 02FA                        l943 02F1                        l953 02FB  
                      l945 02F5                        l947 02F6                        l949 02F9  
                      _GIE 005F                        u400 031D                        u401 031C  
                      u410 0306                        u411 0305                        u420 030C  
                      u421 030B                        u600 00E2                        u440 0285  
                      _PEN 048A                        u601 00E1                        u441 0284  
                      u370 0325                        u450 028B                        u371 0324  
                      u451 028A                        u435 0273                        u620 00FD  
                      u380 032B                        u621 00FC                        u381 032A  
                      u390 0317                        u615 00E4                        u391 0316  
                      u640 011B                        u560 01C5                        u641 011A  
                      u625 00F9                        u561 01C4                        u650 0215  
                      u635 010D                        u707 0057                        u555 01A7  
                      u580 00CE                        u660 0248                        _SEN 0488  
                      u581 00CD                        u717 0067                        u655 0210  
                      u727 0077                        u665 0243                        u737 0087  
                      u595 00D3                        u747 0097                        u757 00A7  
                      u677 0184                        u767 00B7                        u687 0036  
                      u777 028F                        u697 0047                        u787 02B5  
                      _dec 0035                        _cen 0036                        _isr 0335  
                      fsr0 0004                        _uni 0034                        indf 0000  
               _DataBuffer 0020            __end_of_LCD_Cmd 0295                       l1233 031F  
                     l1241 0300                       l1235 0325                       l1243 0306  
                     l1251 029C                       l1237 0311                       l1245 030C  
                     l1261 02B3                       l1253 02A3                       l1501 0041  
                     l1239 0317                       l1247 02BA                       l1255 02A4  
                     l1271 028B                       l1263 0268                       l1511 007B  
                     l1503 004B                       l1257 02AB                       l1249 0296  
                     l1265 0269                       l1513 008B                       l1505 005B  
                     l1521 01C9                       l1361 018D                       l1259 02AC  
                     l1267 0280                       l1515 0091                       l1507 0061  
                     l1611 01F2                       l1523 01CA                       l1531 01EA  
                     l1363 018F                       l1461 00E2                       l1453 00BC  
                     l1269 0285                       l1517 00A1                       l1509 0071  
                     l1525 01D2                       l1365 01B4                       l1541 0129  
                     l1471 0115                       l1463 00EB                       l1455 00CE  
                     l1519 00AB                       l1527 01DA                       l1367 01B8  
                     l1359 018C                       l1551 0134                       l1543 012C  
                     l1465 00FD                       l1457 00D1                       l1473 011B  
                     l1481 0205                       l1529 01E2                       l1561 014A  
                     l1553 0135                       l1545 012D                       l1467 010B  
                     l1459 00DE                       l1491 023A                       l1483 0232  
                     l1571 0160                       l1563 014B                       l1555 0137  
                     l1547 0130                       l1539 0124                       l1469 010C  
                     l1493 0265                       l1485 0233                       l1477 01FE  
                     l1573 0168                       l1565 014C                       l1557 0138  
                     l1549 0132                       l1487 0234                       l1479 0202  
                     l1495 0024                       l1575 016E                       l1567 014D  
                     l1559 0147                       l1489 0236                       l1497 002A  
                     l1577 017A                       l1569 015A                       l1499 0030  
                     l1579 0180          ?_LCD_Write_Nibble 0070                       ?_isr 0070  
                     STR_1 02DA                       STR_2 02E8                       _PEIE 005E  
                     _RCEN 048B                       i1l67 0335                       _RSEN 0489  
       ??_LCD_Write_Nibble 0074                       _main 0124         __size_of_LCD_Begin 0099  
         __end_of_I2C_Init 0267                       btemp 007E           __end_of_I2C_Stop 031F  
       __size_of_LCD_Print 003B                       start 000C                LCD_Goto@col 003B  
              LCD_Goto@row 0079                      ??_isr 0070           __end_of_LCD_Goto 01FE  
         ?_I2C_Master_Init 003F                      ?_main 0070                      _ACKEN 048C  
                    _ACKDT 048D                      _ANSEL 0188            __end_of___lldiv 0124  
                    _RCREG 001A                      _SPBRG 0099                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _SSPIE 0463                      _SSPIF 0063  
                    _TXREG 0019          __end_of_I2C_Start 032D             __pbitbssCOMMON 03D0  
        __end_of_I2C_Write 0311                      pclath 000A                      status 0003  
                    wtemp0 007E       I2C_Init@i2c_clk_freq 003F                ?_USART_Init 0070  
          __initialization 000F               __end_of_main 018B                     ??_main 0047  
        __end_of_LCD_Begin 00BC                  ??_LCD_Cmd 0076          __end_of_LCD_Print 01C6  
                   _ANSELH 0189                     _SPBRGH 009A                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _SSPCON 0014  
                   _SSPBUF 0013                  ??___lldiv 0039                     _entero 0038  
  __size_of_Expander_Write 001B               __pdataCOMMON 007B                  ?_I2C_Init 003F  
                ?_I2C_Stop 0070                     saved_w 007E        __size_of_USART_Init 0015  
  __end_of__initialization 001F                  ?_LCD_Goto 0079              _backlight_val 007B  
           __pcstackCOMMON 0070             LCD_Cmd@Command 0078                 ??_I2C_Init 0043  
               ??_I2C_Stop 0072                 __pbssBANK0 0020                 ??_LCD_Goto 0039  
               __pmaintext 0124  __size_of_LCD_Write_Nibble 0024                 __pintentry 0004  
              _Raw_humedad 002E                    _LCD_Cmd 0267                    _SSPCON2 0091  
                  _SSPSTAT 0094                 __stringtab 02D4                  _I2C_Start 031F  
                _I2C_Write 02FF               ??_USART_Init 0072        Expander_Write@value 0073  
                  ___lldiv 00BC                    _decimal 0037                    __ptext1 02EA  
                  __ptext2 018B                    __ptext3 01C6                    __ptext4 0023  
                  __ptext5 0267                    __ptext6 0295                    __ptext7 02B9  
                  __ptext8 02FF                    __ptext9 0311             _Expander_Write 02B9  
             __size_of_isr 0007                    _humedad 0032   __size_of_I2C_Master_Init 0038  
                _LCD_Begin 0023         __end_of_USART_Init 02FF                  _LCD_Print 018B  
                  clrloop0 032E       end_of_initialization 001F                 ?_I2C_Start 0070  
               ?_I2C_Write 0070            ___lldiv@divisor 0072            ___lldiv@counter 003E  
                _RCSTAbits 0018           I2C_Master_Init@c 003F          LCD_Write_Nibble@n 0075  
   __end_of_Expander_Write 02D4                  _TRISCbits 0087                 ?_LCD_Begin 0070  
        __size_of_I2C_Init 0031          __size_of_I2C_Stop 000E                 ?_LCD_Print 0070  
                _TXSTAbits 0098          __size_of_LCD_Goto 0038           _LCD_Write_Nibble 0295  
               LCD_Print@i 0077              __pidataCOMMON 033C            ?_Expander_Write 0070  
              _BAUDCTLbits 0187        start_initialization 000F                __end_of_isr 033C  
        ??_I2C_Master_Init 0043                ??_I2C_Start 0072                ??_I2C_Write 0072  
                 ?_LCD_Cmd 0070                  ___latbits 0002              __pcstackBANK0 0039  
              ??_LCD_Begin 0039                ??_LCD_Print 0076                  __pnvBANK0 0048  
                 ?___lldiv 0072           LCD_Print@LCD_Str 0078                  __pstrings 02D4  
                 _I2C_Init 0236                   _I2C_Stop 0311          interrupt_function 0004  
                 _LCD_Goto 01C6                  clear_ram0 032D                __stringbase 02D9  
         __size_of_LCD_Cmd 002E   __end_of_LCD_Write_Nibble 02B9                   _i2c_addr 0048  
         ??_Expander_Write 0073           __size_of___lldiv 0068            _Raw_temperatura 002A  
       __end_of__stringtab 02DA            _I2C_Master_Init 01FE                   __ptext10 031F  
                 __ptext11 01FE                   __ptext12 0236                   __ptext13 00BC  
                 __ptext14 0335              __size_of_main 0067          I2C_Write@i2c_data 0072  
       LCD_Begin@_i2c_addr 0079                   intlevel1 0000           ___lldiv@dividend 0076  
                stringcode 02D4                 _OSCCONbits 008F    __end_of_I2C_Master_Init 0236  
              _temperatura 0026           ___lldiv@quotient 003A                   stringdir 02D4  
                 stringtab 02D4                _SSPCON2bits 0091                 _USART_Init 02EA  
