

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Aug 23 20:17:57 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  0105                     	;# 
   365  0107                     	;# 
   366  0108                     	;# 
   367  0109                     	;# 
   368  010C                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  010F                     	;# 
   373  0185                     	;# 
   374  0187                     	;# 
   375  0188                     	;# 
   376  0189                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379                           
   380                           	psect	idataCOMMON
   381  02FF                     __pidataCOMMON:
   382                           
   383                           ;initializer for _backlight_val
   384  02FF  3408               	retlw	8
   385                           
   386                           	psect	nvBANK0
   387  004A                     __pnvBANK0:
   388  004A                     _i2c_addr:
   389  004A                     	ds	1
   390  001A                     _RCREG	set	26
   391  0019                     _TXREG	set	25
   392  0018                     _RCSTAbits	set	24
   393  0013                     _SSPBUF	set	19
   394  0014                     _SSPCON	set	20
   395  0008                     _PORTD	set	8
   396  0007                     _PORTC	set	7
   397  0005                     _PORTA	set	5
   398  0063                     _SSPIF	set	99
   399  005E                     _PEIE	set	94
   400  005F                     _GIE	set	95
   401  009A                     _SPBRGH	set	154
   402  0099                     _SPBRG	set	153
   403  0098                     _TXSTAbits	set	152
   404  0091                     _SSPCON2bits	set	145
   405  0087                     _TRISCbits	set	135
   406  0094                     _SSPSTAT	set	148
   407  0093                     _SSPADD	set	147
   408  0091                     _SSPCON2	set	145
   409  008F                     _OSCCONbits	set	143
   410  0088                     _TRISD	set	136
   411  0087                     _TRISC	set	135
   412  0085                     _TRISA	set	133
   413  0463                     _SSPIE	set	1123
   414  043C                     _TRISC4	set	1084
   415  043B                     _TRISC3	set	1083
   416  0187                     _BAUDCTLbits	set	391
   417  0189                     _ANSELH	set	393
   418  0188                     _ANSEL	set	392
   419                           
   420                           	psect	strings
   421  029B                     __pstrings:
   422  029B                     stringtab:
   423  029B                     __stringtab:
   424  029B                     stringcode:	
   425                           ;	String table - string pointers are 1 byte each
   426                           
   427  029B                     stringdir:
   428  029B  3002               	movlw	high stringdir
   429  029C  008A               	movwf	10
   430  029D  0804               	movf	4,w
   431  029E  0A84               	incf	4,f
   432  029F  0782               	addwf	2,f
   433  02A0                     __stringbase:
   434  02A0  3400               	retlw	0
   435  02A1                     __end_of__stringtab:
   436  02A1                     STR_1:
   437  02A1  3448               	retlw	72	;'H'
   438  02A2  3465               	retlw	101	;'e'
   439  02A3  346C               	retlw	108	;'l'
   440  02A4  346C               	retlw	108	;'l'
   441  02A5  346F               	retlw	111	;'o'
   442  02A6  342C               	retlw	44	;','
   443  02A7  3420               	retlw	32	;' '
   444  02A8  3477               	retlw	119	;'w'
   445  02A9  346F               	retlw	111	;'o'
   446  02AA  3472               	retlw	114	;'r'
   447  02AB  346C               	retlw	108	;'l'
   448  02AC  3464               	retlw	100	;'d'
   449  02AD  3421               	retlw	33	;'!'
   450  02AE  3400               	retlw	0
   451  02AF                     STR_2:
   452  02AF  3431               	retlw	49	;'1'
   453  02B0  3400               	retlw	0
   454                           
   455                           	psect	cinit
   456  000F                     start_initialization:	
   457                           ; #config settings
   458                           
   459  000F                     __initialization:
   460                           
   461                           ; Initialize objects allocated to COMMON
   462  000F  120A  118A  22FF  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   463  0014  00FB               	movwf	__pdataCOMMON& (0+127)
   464                           
   465                           ; Clear objects allocated to BANK0
   466  0015  1383               	bcf	3,7	;select IRP bank0
   467  0016  3020               	movlw	low __pbssBANK0
   468  0017  0084               	movwf	4
   469  0018  3039               	movlw	low (__pbssBANK0+25)
   470  0019  120A  118A  22F0  120A  118A  	fcall	clear_ram0
   471                           
   472                           ; Clear objects allocated to BITCOMMON
   473  001E  01FA               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   474  001F                     end_of_initialization:	
   475                           ;End of C runtime variable initialization code
   476                           
   477  001F                     __end_of__initialization:
   478  001F  0183               	clrf	3
   479  0020  120A  118A  2924   	ljmp	_main	;jump to C main() function
   480                           
   481                           	psect	bitbssCOMMON
   482  03D0                     __pbitbssCOMMON:
   483  03D0                     _RS:
   484  03D0                     	ds	1
   485                           
   486                           	psect	dataCOMMON
   487  007B                     __pdataCOMMON:
   488  007B                     _backlight_val:
   489  007B                     	ds	1
   490                           
   491                           	psect	bssBANK0
   492  0020                     __pbssBANK0:
   493  0020                     _DataBuffer:
   494  0020                     	ds	6
   495  0026                     _temperatura:
   496  0026                     	ds	4
   497  002A                     _Raw_temperatura:
   498  002A                     	ds	4
   499  002E                     _Raw_humedad:
   500  002E                     	ds	4
   501  0032                     _humedad:
   502  0032                     	ds	2
   503  0034                     _uni:
   504  0034                     	ds	1
   505  0035                     _dec:
   506  0035                     	ds	1
   507  0036                     _cen:
   508  0036                     	ds	1
   509  0037                     _decimal:
   510  0037                     	ds	1
   511  0038                     _entero:
   512  0038                     	ds	1
   513                           
   514                           	psect	clrtext
   515  02F0                     clear_ram0:	
   516                           ;	Called with FSR containing the base address, and
   517                           ;	W with the last address+1
   518                           
   519  02F0  0064               	clrwdt	;clear the watchdog before getting into this loop
   520  02F1                     clrloop0:
   521  02F1  0180               	clrf	0	;clear RAM location pointed to by FSR
   522  02F2  0A84               	incf	4,f	;increment pointer
   523  02F3  0604               	xorwf	4,w	;XOR with final address
   524  02F4  1903               	btfsc	3,2	;have we reached the end yet?
   525  02F5  3400               	retlw	0	;all done for this memory range, return
   526  02F6  0604               	xorwf	4,w	;XOR again to restore value
   527  02F7  2AF1               	goto	clrloop0	;do the next byte
   528                           
   529                           	psect	cstackCOMMON
   530  0070                     __pcstackCOMMON:
   531  0070                     ?_USART_Init:
   532  0070                     ?_LCD_Begin:	
   533                           ; 1 bytes @ 0x0
   534                           
   535  0070                     ?_LCD_Print:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  0070                     ?_I2C_Master_Start:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0070                     ?_I2C_Master_Write:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     ?_I2C_Master_Stop:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ?_isr:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ??_isr:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ?_main:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?_I2C_Master_Wait:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ?_Expander_Write:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?_LCD_Write_Nibble:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ?_LCD_Cmd:	
   566                           ; 1 bytes @ 0x0
   567                           
   568                           
   569                           ; 1 bytes @ 0x0
   570  0070                     	ds	2
   571  0072                     ??_USART_Init:
   572  0072                     ??_I2C_Master_Start:	
   573                           ; 1 bytes @ 0x2
   574                           
   575  0072                     ??_I2C_Master_Write:	
   576                           ; 1 bytes @ 0x2
   577                           
   578  0072                     ??_I2C_Master_Stop:	
   579                           ; 1 bytes @ 0x2
   580                           
   581  0072                     ??_I2C_Master_Wait:	
   582                           ; 1 bytes @ 0x2
   583                           
   584  0072                     ?___lldiv:	
   585                           ; 1 bytes @ 0x2
   586                           
   587  0072                     I2C_Master_Write@d:	
   588                           ; 4 bytes @ 0x2
   589                           
   590  0072                     ___lldiv@divisor:	
   591                           ; 1 bytes @ 0x2
   592                           
   593                           
   594                           ; 4 bytes @ 0x2
   595  0072                     	ds	1
   596  0073                     ??_Expander_Write:
   597  0073                     Expander_Write@value:	
   598                           ; 1 bytes @ 0x3
   599                           
   600                           
   601                           ; 1 bytes @ 0x3
   602  0073                     	ds	1
   603  0074                     ??_LCD_Write_Nibble:
   604                           
   605                           ; 1 bytes @ 0x4
   606  0074                     	ds	1
   607  0075                     LCD_Write_Nibble@n:
   608                           
   609                           ; 1 bytes @ 0x5
   610  0075                     	ds	1
   611  0076                     ??_LCD_Print:
   612  0076                     ??_LCD_Cmd:	
   613                           ; 1 bytes @ 0x6
   614                           
   615  0076                     ___lldiv@dividend:	
   616                           ; 1 bytes @ 0x6
   617                           
   618                           
   619                           ; 4 bytes @ 0x6
   620  0076                     	ds	1
   621  0077                     LCD_Print@i:
   622                           
   623                           ; 1 bytes @ 0x7
   624  0077                     	ds	1
   625  0078                     LCD_Cmd@Command:
   626  0078                     LCD_Print@LCD_Str:	
   627                           ; 1 bytes @ 0x8
   628                           
   629                           
   630                           ; 1 bytes @ 0x8
   631  0078                     	ds	1
   632  0079                     ?_LCD_Goto:
   633  0079                     LCD_Goto@row:	
   634                           ; 1 bytes @ 0x9
   635                           
   636  0079                     LCD_Begin@_i2c_addr:	
   637                           ; 1 bytes @ 0x9
   638                           
   639                           
   640                           ; 1 bytes @ 0x9
   641  0079                     	ds	1
   642                           
   643                           	psect	cstackBANK0
   644  0039                     __pcstackBANK0:
   645  0039                     ??_LCD_Begin:
   646  0039                     ??_LCD_Goto:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0039                     ??___lldiv:	
   650                           ; 1 bytes @ 0x0
   651                           
   652                           
   653                           ; 1 bytes @ 0x0
   654  0039                     	ds	1
   655  003A                     ___lldiv@quotient:
   656                           
   657                           ; 4 bytes @ 0x1
   658  003A                     	ds	1
   659  003B                     LCD_Goto@col:
   660                           
   661                           ; 1 bytes @ 0x2
   662  003B                     	ds	3
   663  003E                     ___lldiv@counter:
   664                           
   665                           ; 1 bytes @ 0x5
   666  003E                     	ds	1
   667  003F                     ?_I2C_Master_Init:
   668  003F                     I2C_Master_Init@c:	
   669                           ; 1 bytes @ 0x6
   670                           
   671                           
   672                           ; 4 bytes @ 0x6
   673  003F                     	ds	4
   674  0043                     ??_I2C_Master_Init:
   675                           
   676                           ; 1 bytes @ 0xA
   677  0043                     	ds	4
   678  0047                     ??_main:
   679                           
   680                           ; 1 bytes @ 0xE
   681  0047                     	ds	3
   682                           
   683                           	psect	maintext
   684  0124                     __pmaintext:	
   685 ;;
   686 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   687 ;;
   688 ;; *************** function _main *****************
   689 ;; Defined at:
   690 ;;		line 69 in file "main.c"
   691 ;; Parameters:    Size  Location     Type
   692 ;;		None
   693 ;; Auto vars:     Size  Location     Type
   694 ;;		None
   695 ;; Return value:  Size  Location     Type
   696 ;;                  1    wreg      void 
   697 ;; Registers used:
   698 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   699 ;; Tracked objects:
   700 ;;		On entry : B00/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   704 ;;      Params:         0       0       0       0       0
   705 ;;      Locals:         0       0       0       0       0
   706 ;;      Temps:          0       3       0       0       0
   707 ;;      Totals:         0       3       0       0       0
   708 ;;Total ram usage:        3 bytes
   709 ;; Hardware stack levels required when called:    7
   710 ;; This function calls:
   711 ;;		_I2C_Master_Init
   712 ;;		_LCD_Begin
   713 ;;		_LCD_Goto
   714 ;;		_LCD_Print
   715 ;;		_USART_Init
   716 ;; This function is called by:
   717 ;;		Startup code after reset
   718 ;; This function uses a non-reentrant model
   719 ;;
   720                           
   721                           
   722                           ;psect for function _main
   723  0124                     _main:
   724  0124                     l1448:	
   725                           ;incstack = 0
   726                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   727                           
   728                           
   729                           ;main.c: 70:     USART_Init();
   730  0124  120A  118A  22B1  120A  118A  	fcall	_USART_Init
   731  0129                     l1450:
   732                           
   733                           ;main.c: 71:     ANSEL = 0x00;
   734  0129  1683               	bsf	3,5	;RP0=1, select bank3
   735  012A  1703               	bsf	3,6	;RP1=1, select bank3
   736  012B  0188               	clrf	8	;volatile
   737  012C                     l1452:
   738                           
   739                           ;main.c: 72:     ANSELH = 0x00;
   740  012C  0189               	clrf	9	;volatile
   741  012D                     l1454:
   742                           
   743                           ;main.c: 74:     TRISA = 0x00;
   744  012D  1683               	bsf	3,5	;RP0=1, select bank1
   745  012E  1303               	bcf	3,6	;RP1=0, select bank1
   746  012F  0185               	clrf	5	;volatile
   747  0130                     l1456:
   748                           
   749                           ;main.c: 75:     TRISC = 0b10000000;
   750  0130  3080               	movlw	128
   751  0131  0087               	movwf	7	;volatile
   752  0132                     l1458:
   753                           
   754                           ;main.c: 76:     TRISD = 0x00;
   755  0132  0188               	clrf	8	;volatile
   756  0133                     l1460:
   757                           
   758                           ;main.c: 79:     OSCCONbits.IRCF = 0b111;
   759  0133  3070               	movlw	112
   760  0134  048F               	iorwf	15,f	;volatile
   761  0135                     l1462:
   762                           
   763                           ;main.c: 80:     OSCCONbits.SCS = 1;
   764  0135  140F               	bsf	15,0	;volatile
   765  0136                     l1464:
   766                           
   767                           ;main.c: 83:     I2C_Master_Init(100000);
   768  0136  3000               	movlw	0
   769  0137  1283               	bcf	3,5	;RP0=0, select bank0
   770  0138  1303               	bcf	3,6	;RP1=0, select bank0
   771  0139  00C2               	movwf	I2C_Master_Init@c+3
   772  013A  3001               	movlw	1
   773  013B  00C1               	movwf	I2C_Master_Init@c+2
   774  013C  3086               	movlw	134
   775  013D  00C0               	movwf	I2C_Master_Init@c+1
   776  013E  30A0               	movlw	160
   777  013F  00BF               	movwf	I2C_Master_Init@c
   778  0140  120A  118A  21F6  120A  118A  	fcall	_I2C_Master_Init
   779  0145                     l1466:
   780                           
   781                           ;main.c: 86:     PORTA = 0x00;
   782  0145  1283               	bcf	3,5	;RP0=0, select bank0
   783  0146  1303               	bcf	3,6	;RP1=0, select bank0
   784  0147  0185               	clrf	5	;volatile
   785  0148                     l1468:
   786                           
   787                           ;main.c: 87:     PORTC = 0x00;
   788  0148  0187               	clrf	7	;volatile
   789  0149                     l1470:
   790                           
   791                           ;main.c: 88:     PORTD = 0x00;
   792  0149  0188               	clrf	8	;volatile
   793  014A                     l1472:
   794                           
   795                           ;main.c: 90:     LCD_Begin(0x40);
   796  014A  3040               	movlw	64
   797  014B  120A  118A  2023  120A  118A  	fcall	_LCD_Begin
   798  0150                     l1474:
   799                           
   800                           ;main.c: 91:     LCD_Goto(1, 1);
   801  0150  01F9               	clrf	LCD_Goto@row
   802  0151  0AF9               	incf	LCD_Goto@row,f
   803  0152  3001               	movlw	1
   804  0153  120A  118A  21BE  120A  118A  	fcall	_LCD_Goto
   805  0158                     l1476:
   806                           
   807                           ;main.c: 92:     LCD_Print("Hello, world!");
   808  0158  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   809  0159  120A  118A  2183  120A  118A  	fcall	_LCD_Print
   810  015E                     l1478:
   811                           
   812                           ;main.c: 141:         LCD_Goto(7, 2);
   813  015E  3002               	movlw	2
   814  015F  1283               	bcf	3,5	;RP0=0, select bank0
   815  0160  1303               	bcf	3,6	;RP1=0, select bank0
   816  0161  00C7               	movwf	??_main
   817  0162  0847               	movf	??_main,w
   818  0163  00F9               	movwf	LCD_Goto@row
   819  0164  3007               	movlw	7
   820  0165  120A  118A  21BE  120A  118A  	fcall	_LCD_Goto
   821  016A                     l1480:
   822                           
   823                           ;main.c: 142:         LCD_Print("1");
   824  016A  300F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   825  016B  120A  118A  2183  120A  118A  	fcall	_LCD_Print
   826  0170                     l1482:
   827                           
   828                           ;main.c: 144:         _delay((unsigned long)((200)*(8000000/4000.0)));
   829  0170  3003               	movlw	3
   830  0171  1283               	bcf	3,5	;RP0=0, select bank0
   831  0172  1303               	bcf	3,6	;RP1=0, select bank0
   832  0173  00C9               	movwf	??_main+2
   833  0174  3008               	movlw	8
   834  0175  00C8               	movwf	??_main+1
   835  0176  3076               	movlw	118
   836  0177  00C7               	movwf	??_main
   837  0178                     u457:
   838  0178  0BC7               	decfsz	??_main,f
   839  0179  2978               	goto	u457
   840  017A  0BC8               	decfsz	??_main+1,f
   841  017B  2978               	goto	u457
   842  017C  0BC9               	decfsz	??_main+2,f
   843  017D  2978               	goto	u457
   844  017E  0000               	nop
   845  017F  295E               	goto	l1478
   846  0180  120A  118A  280C   	ljmp	start
   847  0183                     __end_of_main:
   848                           
   849                           	psect	text1
   850  02B1                     __ptext1:	
   851 ;; *************** function _USART_Init *****************
   852 ;; Defined at:
   853 ;;		line 4 in file "USART.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;		None
   856 ;; Auto vars:     Size  Location     Type
   857 ;;		None
   858 ;; Return value:  Size  Location     Type
   859 ;;                  1    wreg      void 
   860 ;; Registers used:
   861 ;;		wreg, status,2
   862 ;; Tracked objects:
   863 ;;		On entry : 0/0
   864 ;;		On exit  : 0/0
   865 ;;		Unchanged: 0/0
   866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   867 ;;      Params:         0       0       0       0       0
   868 ;;      Locals:         0       0       0       0       0
   869 ;;      Temps:          0       0       0       0       0
   870 ;;      Totals:         0       0       0       0       0
   871 ;;Total ram usage:        0 bytes
   872 ;; Hardware stack levels used:    1
   873 ;; Hardware stack levels required when called:    1
   874 ;; This function calls:
   875 ;;		Nothing
   876 ;; This function is called by:
   877 ;;		_main
   878 ;; This function uses a non-reentrant model
   879 ;;
   880                           
   881                           
   882                           ;psect for function _USART_Init
   883  02B1                     _USART_Init:
   884  02B1                     l876:	
   885                           ;incstack = 0
   886                           ; Regs used in _USART_Init: [wreg+status,2]
   887                           
   888                           
   889                           ;USART.c: 6:     TXSTAbits.SYNC = 0;
   890  02B1  1683               	bsf	3,5	;RP0=1, select bank1
   891  02B2  1303               	bcf	3,6	;RP1=0, select bank1
   892  02B3  1218               	bcf	24,4	;volatile
   893                           
   894                           ;USART.c: 7:     TXSTAbits.BRGH = 1;
   895  02B4  1518               	bsf	24,2	;volatile
   896                           
   897                           ;USART.c: 8:     BAUDCTLbits.BRG16 = 1;
   898  02B5  1683               	bsf	3,5	;RP0=1, select bank3
   899  02B6  1703               	bsf	3,6	;RP1=1, select bank3
   900  02B7  1587               	bsf	7,3	;volatile
   901  02B8                     l878:
   902                           
   903                           ;USART.c: 10:     SPBRG = 207;
   904  02B8  30CF               	movlw	207
   905  02B9  1683               	bsf	3,5	;RP0=1, select bank1
   906  02BA  1303               	bcf	3,6	;RP1=0, select bank1
   907  02BB  0099               	movwf	25	;volatile
   908  02BC                     l880:
   909                           
   910                           ;USART.c: 11:     SPBRGH = 0;
   911  02BC  019A               	clrf	26	;volatile
   912  02BD                     l882:
   913                           
   914                           ;USART.c: 13:     RCSTAbits.SPEN = 1;
   915  02BD  1283               	bcf	3,5	;RP0=0, select bank0
   916  02BE  1303               	bcf	3,6	;RP1=0, select bank0
   917  02BF  1798               	bsf	24,7	;volatile
   918  02C0                     l884:
   919                           
   920                           ;USART.c: 14:     RCSTAbits.RX9 = 0;
   921  02C0  1318               	bcf	24,6	;volatile
   922  02C1                     l886:
   923                           
   924                           ;USART.c: 15:     RCSTAbits.CREN = 1;
   925  02C1  1618               	bsf	24,4	;volatile
   926  02C2                     l888:
   927                           
   928                           ;USART.c: 16:     TXSTAbits.TXEN = 1;
   929  02C2  1683               	bsf	3,5	;RP0=1, select bank1
   930  02C3  1303               	bcf	3,6	;RP1=0, select bank1
   931  02C4  1698               	bsf	24,5	;volatile
   932  02C5                     l200:
   933  02C5  0008               	return
   934  02C6                     __end_of_USART_Init:
   935                           
   936                           	psect	text2
   937  0183                     __ptext2:	
   938 ;; *************** function _LCD_Print *****************
   939 ;; Defined at:
   940 ;;		line 167 in file "I2C.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;  LCD_Str         1    wreg     PTR unsigned char 
   943 ;;		 -> STR_2(2), STR_1(14), 
   944 ;; Auto vars:     Size  Location     Type
   945 ;;  LCD_Str         1    8[COMMON] PTR unsigned char 
   946 ;;		 -> STR_2(2), STR_1(14), 
   947 ;;  i               1    7[COMMON] unsigned char 
   948 ;; Return value:  Size  Location     Type
   949 ;;                  1    wreg      void 
   950 ;; Registers used:
   951 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   952 ;; Tracked objects:
   953 ;;		On entry : 0/0
   954 ;;		On exit  : 0/0
   955 ;;		Unchanged: 0/0
   956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   957 ;;      Params:         0       0       0       0       0
   958 ;;      Locals:         2       0       0       0       0
   959 ;;      Temps:          1       0       0       0       0
   960 ;;      Totals:         3       0       0       0       0
   961 ;;Total ram usage:        3 bytes
   962 ;; Hardware stack levels used:    1
   963 ;; Hardware stack levels required when called:    5
   964 ;; This function calls:
   965 ;;		_LCD_Write_Nibble
   966 ;; This function is called by:
   967 ;;		_main
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971                           
   972                           ;psect for function _LCD_Print
   973  0183                     _LCD_Print:
   974                           
   975                           ;incstack = 0
   976                           ; Regs used in _LCD_Print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   977                           ;LCD_Print@LCD_Str stored from wreg
   978  0183  00F8               	movwf	LCD_Print@LCD_Str
   979  0184                     l1242:
   980                           
   981                           ;I2C.c: 167: void LCD_Print(char* LCD_Str);I2C.c: 168: {;I2C.c: 169:   uint8_t i = 0;
   982  0184  01F7               	clrf	LCD_Print@i
   983  0185                     l1244:
   984                           
   985                           ;I2C.c: 170:   RS = 1;
   986  0185  147A               	bsf	_RS/(0+8),_RS& (0+7)
   987                           
   988                           ;I2C.c: 171:   while(LCD_Str[i] != '\0')
   989  0186  29B0               	goto	l1250
   990  0187                     l1246:
   991                           
   992                           ;I2C.c: 172:   {;I2C.c: 173:     LCD_Write_Nibble(LCD_Str[i] & 0xF0);
   993  0187  0877               	movf	LCD_Print@i,w
   994  0188  0778               	addwf	LCD_Print@LCD_Str,w
   995  0189  0084               	movwf	4
   996  018A  120A  118A  229B  120A  118A  	fcall	stringdir
   997  018F  39F0               	andlw	240
   998  0190  120A  118A  225C  120A  118A  	fcall	_LCD_Write_Nibble
   999                           
  1000                           ;I2C.c: 174:     LCD_Write_Nibble( (LCD_Str[i++] << 4) & 0xF0 );
  1001  0195  0877               	movf	LCD_Print@i,w
  1002  0196  0778               	addwf	LCD_Print@LCD_Str,w
  1003  0197  0084               	movwf	4
  1004  0198  120A  118A  229B  120A  118A  	fcall	stringdir
  1005  019D  00F6               	movwf	??_LCD_Print
  1006  019E  3003               	movlw	3
  1007  019F                     u335:
  1008  019F  1003               	clrc
  1009  01A0  0DF6               	rlf	??_LCD_Print,f
  1010  01A1  3EFF               	addlw	-1
  1011  01A2  1D03               	skipz
  1012  01A3  299F               	goto	u335
  1013  01A4  1003               	clrc
  1014  01A5  0D76               	rlf	??_LCD_Print,w
  1015  01A6  39F0               	andlw	240
  1016  01A7  120A  118A  225C  120A  118A  	fcall	_LCD_Write_Nibble
  1017  01AC                     l1248:
  1018  01AC  3001               	movlw	1
  1019  01AD  00F6               	movwf	??_LCD_Print
  1020  01AE  0876               	movf	??_LCD_Print,w
  1021  01AF  07F7               	addwf	LCD_Print@i,f
  1022  01B0                     l1250:
  1023                           
  1024                           ;I2C.c: 171:   while(LCD_Str[i] != '\0')
  1025  01B0  0877               	movf	LCD_Print@i,w
  1026  01B1  0778               	addwf	LCD_Print@LCD_Str,w
  1027  01B2  0084               	movwf	4
  1028  01B3  120A  118A  229B  120A  118A  	fcall	stringdir
  1029  01B8  3A00               	xorlw	0
  1030  01B9  1D03               	skipz
  1031  01BA  29BC               	goto	u341
  1032  01BB  29BD               	goto	u340
  1033  01BC                     u341:
  1034  01BC  2987               	goto	l1246
  1035  01BD                     u340:
  1036  01BD                     l174:
  1037  01BD  0008               	return
  1038  01BE                     __end_of_LCD_Print:
  1039                           
  1040                           	psect	text3
  1041  01BE                     __ptext3:	
  1042 ;; *************** function _LCD_Goto *****************
  1043 ;; Defined at:
  1044 ;;		line 141 in file "I2C.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;  col             1    wreg     unsigned char 
  1047 ;;  row             1    9[COMMON] unsigned char 
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;  col             1    2[BANK0 ] unsigned char 
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      void 
  1052 ;; Registers used:
  1053 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1059 ;;      Params:         1       0       0       0       0
  1060 ;;      Locals:         0       1       0       0       0
  1061 ;;      Temps:          0       2       0       0       0
  1062 ;;      Totals:         1       3       0       0       0
  1063 ;;Total ram usage:        4 bytes
  1064 ;; Hardware stack levels used:    1
  1065 ;; Hardware stack levels required when called:    6
  1066 ;; This function calls:
  1067 ;;		_LCD_Cmd
  1068 ;; This function is called by:
  1069 ;;		_main
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073                           
  1074                           ;psect for function _LCD_Goto
  1075  01BE                     _LCD_Goto:
  1076                           
  1077                           ;incstack = 0
  1078                           ; Regs used in _LCD_Goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1079                           ;LCD_Goto@col stored from wreg
  1080  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  1081  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  1082  01C0  00BB               	movwf	LCD_Goto@col
  1083  01C1                     l1430:
  1084                           
  1085                           ;I2C.c: 141: void LCD_Goto(uint8_t col, uint8_t row);I2C.c: 142: {;I2C.c: 143:   switch(
      +                          row)
  1086  01C1  29E2               	goto	l1440
  1087  01C2                     l1432:
  1088                           
  1089                           ;I2C.c: 146:       LCD_Cmd(0xC0 + col - 1);
  1090  01C2  083B               	movf	LCD_Goto@col,w
  1091  01C3  3EBF               	addlw	191
  1092  01C4  120A  118A  222E  120A  118A  	fcall	_LCD_Cmd
  1093                           
  1094                           ;I2C.c: 147:       break;
  1095  01C9  29F5               	goto	l165
  1096  01CA                     l1434:
  1097                           
  1098                           ;I2C.c: 149:       LCD_Cmd(0x94 + col - 1);
  1099  01CA  083B               	movf	LCD_Goto@col,w
  1100  01CB  3E93               	addlw	147
  1101  01CC  120A  118A  222E  120A  118A  	fcall	_LCD_Cmd
  1102                           
  1103                           ;I2C.c: 150:       break;
  1104  01D1  29F5               	goto	l165
  1105  01D2                     l1436:
  1106                           
  1107                           ;I2C.c: 152:       LCD_Cmd(0xD4 + col - 1);
  1108  01D2  083B               	movf	LCD_Goto@col,w
  1109  01D3  3ED3               	addlw	211
  1110  01D4  120A  118A  222E  120A  118A  	fcall	_LCD_Cmd
  1111                           
  1112                           ;I2C.c: 153:     break;
  1113  01D9  29F5               	goto	l165
  1114  01DA                     l1438:
  1115                           
  1116                           ;I2C.c: 155:       LCD_Cmd(0x80 + col - 1);
  1117  01DA  083B               	movf	LCD_Goto@col,w
  1118  01DB  3E7F               	addlw	127
  1119  01DC  120A  118A  222E  120A  118A  	fcall	_LCD_Cmd
  1120                           
  1121                           ;I2C.c: 156:   }
  1122  01E1  29F5               	goto	l165
  1123  01E2                     l1440:
  1124  01E2  0879               	movf	LCD_Goto@row,w
  1125  01E3  00B9               	movwf	??_LCD_Goto
  1126  01E4  01BA               	clrf	??_LCD_Goto+1
  1127                           
  1128                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1129                           ; Switch size 1, requested type "simple"
  1130                           ; Number of cases is 1, Range of values is 0 to 0
  1131                           ; switch strategies available:
  1132                           ; Name         Instructions Cycles
  1133                           ; simple_byte            4     3 (average)
  1134                           ; direct_byte           11     8 (fixed)
  1135                           ; jumptable            260     6 (fixed)
  1136                           ;	Chosen strategy is simple_byte
  1137  01E5  083A               	movf	??_LCD_Goto+1,w
  1138  01E6  3A00               	xorlw	0	; case 0
  1139  01E7  1903               	skipnz
  1140  01E8  29EA               	goto	l1514
  1141  01E9  29DA               	goto	l1438
  1142  01EA                     l1514:
  1143                           
  1144                           ; Switch size 1, requested type "simple"
  1145                           ; Number of cases is 3, Range of values is 2 to 4
  1146                           ; switch strategies available:
  1147                           ; Name         Instructions Cycles
  1148                           ; simple_byte           10     6 (average)
  1149                           ; direct_byte           20    11 (fixed)
  1150                           ; jumptable            263     9 (fixed)
  1151                           ;	Chosen strategy is simple_byte
  1152  01EA  0839               	movf	??_LCD_Goto,w
  1153  01EB  3A02               	xorlw	2	; case 2
  1154  01EC  1903               	skipnz
  1155  01ED  29C2               	goto	l1432
  1156  01EE  3A01               	xorlw	1	; case 3
  1157  01EF  1903               	skipnz
  1158  01F0  29CA               	goto	l1434
  1159  01F1  3A07               	xorlw	7	; case 4
  1160  01F2  1903               	skipnz
  1161  01F3  29D2               	goto	l1436
  1162  01F4  29DA               	goto	l1438
  1163  01F5                     l165:
  1164  01F5  0008               	return
  1165  01F6                     __end_of_LCD_Goto:
  1166                           
  1167                           	psect	text4
  1168  0023                     __ptext4:	
  1169 ;; *************** function _LCD_Begin *****************
  1170 ;; Defined at:
  1171 ;;		line 178 in file "I2C.c"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;  _i2c_addr       1    wreg     unsigned char 
  1174 ;; Auto vars:     Size  Location     Type
  1175 ;;  _i2c_addr       1    9[COMMON] unsigned char 
  1176 ;; Return value:  Size  Location     Type
  1177 ;;                  1    wreg      void 
  1178 ;; Registers used:
  1179 ;;		wreg, status,2, status,0, pclath, cstack
  1180 ;; Tracked objects:
  1181 ;;		On entry : 0/0
  1182 ;;		On exit  : 0/0
  1183 ;;		Unchanged: 0/0
  1184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1185 ;;      Params:         0       0       0       0       0
  1186 ;;      Locals:         1       0       0       0       0
  1187 ;;      Temps:          0       2       0       0       0
  1188 ;;      Totals:         1       2       0       0       0
  1189 ;;Total ram usage:        3 bytes
  1190 ;; Hardware stack levels used:    1
  1191 ;; Hardware stack levels required when called:    6
  1192 ;; This function calls:
  1193 ;;		_Expander_Write
  1194 ;;		_LCD_Cmd
  1195 ;; This function is called by:
  1196 ;;		_main
  1197 ;; This function uses a non-reentrant model
  1198 ;;
  1199                           
  1200                           
  1201                           ;psect for function _LCD_Begin
  1202  0023                     _LCD_Begin:
  1203                           
  1204                           ;incstack = 0
  1205                           ; Regs used in _LCD_Begin: [wreg+status,2+status,0+pclath+cstack]
  1206                           ;LCD_Begin@_i2c_addr stored from wreg
  1207  0023  00F9               	movwf	LCD_Begin@_i2c_addr
  1208  0024                     l1404:
  1209                           
  1210                           ;I2C.c: 178: void LCD_Begin(uint8_t _i2c_addr);I2C.c: 179: {;I2C.c: 180:   i2c_addr = _i
      +                          2c_addr;
  1211  0024  0879               	movf	LCD_Begin@_i2c_addr,w
  1212  0025  1283               	bcf	3,5	;RP0=0, select bank0
  1213  0026  1303               	bcf	3,6	;RP1=0, select bank0
  1214  0027  00B9               	movwf	??_LCD_Begin
  1215  0028  0839               	movf	??_LCD_Begin,w
  1216  0029  00CA               	movwf	_i2c_addr
  1217  002A                     l1406:
  1218                           
  1219                           ;I2C.c: 181:   Expander_Write(0);
  1220  002A  3000               	movlw	0
  1221  002B  120A  118A  2280  120A  118A  	fcall	_Expander_Write
  1222  0030                     l1408:
  1223                           
  1224                           ;I2C.c: 183:   _delay((unsigned long)((40)*(8000000/4000.0)));
  1225  0030  3068               	movlw	104
  1226  0031  1283               	bcf	3,5	;RP0=0, select bank0
  1227  0032  1303               	bcf	3,6	;RP1=0, select bank0
  1228  0033  00BA               	movwf	??_LCD_Begin+1
  1229  0034  30E3               	movlw	227
  1230  0035  00B9               	movwf	??_LCD_Begin
  1231  0036                     u467:
  1232  0036  0BB9               	decfsz	??_LCD_Begin,f
  1233  0037  2836               	goto	u467
  1234  0038  0BBA               	decfsz	??_LCD_Begin+1,f
  1235  0039  2836               	goto	u467
  1236  003A  283B               	nop2
  1237                           
  1238                           ;I2C.c: 184:   LCD_Cmd(3);
  1239  003B  3003               	movlw	3
  1240  003C  120A  118A  222E  120A  118A  	fcall	_LCD_Cmd
  1241  0041                     l1410:
  1242                           
  1243                           ;I2C.c: 185:   _delay((unsigned long)((5)*(8000000/4000.0)));
  1244  0041  300D               	movlw	13
  1245  0042  1283               	bcf	3,5	;RP0=0, select bank0
  1246  0043  1303               	bcf	3,6	;RP1=0, select bank0
  1247  0044  00BA               	movwf	??_LCD_Begin+1
  1248  0045  30FB               	movlw	251
  1249  0046  00B9               	movwf	??_LCD_Begin
  1250  0047                     u477:
  1251  0047  0BB9               	decfsz	??_LCD_Begin,f
  1252  0048  2847               	goto	u477
  1253  0049  0BBA               	decfsz	??_LCD_Begin+1,f
  1254  004A  2847               	goto	u477
  1255  004B                     l1412:
  1256                           
  1257                           ;I2C.c: 186:   LCD_Cmd(3);
  1258  004B  3003               	movlw	3
  1259  004C  120A  118A  222E  120A  118A  	fcall	_LCD_Cmd
  1260                           
  1261                           ;I2C.c: 187:   _delay((unsigned long)((5)*(8000000/4000.0)));
  1262  0051  300D               	movlw	13
  1263  0052  1283               	bcf	3,5	;RP0=0, select bank0
  1264  0053  1303               	bcf	3,6	;RP1=0, select bank0
  1265  0054  00BA               	movwf	??_LCD_Begin+1
  1266  0055  30FB               	movlw	251
  1267  0056  00B9               	movwf	??_LCD_Begin
  1268  0057                     u487:
  1269  0057  0BB9               	decfsz	??_LCD_Begin,f
  1270  0058  2857               	goto	u487
  1271  0059  0BBA               	decfsz	??_LCD_Begin+1,f
  1272  005A  2857               	goto	u487
  1273  005B                     l1414:
  1274                           
  1275                           ;I2C.c: 188:   LCD_Cmd(3);
  1276  005B  3003               	movlw	3
  1277  005C  120A  118A  222E  120A  118A  	fcall	_LCD_Cmd
  1278  0061                     l1416:
  1279                           
  1280                           ;I2C.c: 189:   _delay((unsigned long)((5)*(8000000/4000.0)));
  1281  0061  300D               	movlw	13
  1282  0062  1283               	bcf	3,5	;RP0=0, select bank0
  1283  0063  1303               	bcf	3,6	;RP1=0, select bank0
  1284  0064  00BA               	movwf	??_LCD_Begin+1
  1285  0065  30FB               	movlw	251
  1286  0066  00B9               	movwf	??_LCD_Begin
  1287  0067                     u497:
  1288  0067  0BB9               	decfsz	??_LCD_Begin,f
  1289  0068  2867               	goto	u497
  1290  0069  0BBA               	decfsz	??_LCD_Begin+1,f
  1291  006A  2867               	goto	u497
  1292                           
  1293                           ;I2C.c: 190:   LCD_Cmd(0x02);
  1294  006B  3002               	movlw	2
  1295  006C  120A  118A  222E  120A  118A  	fcall	_LCD_Cmd
  1296  0071                     l1418:
  1297                           
  1298                           ;I2C.c: 191:   _delay((unsigned long)((5)*(8000000/4000.0)));
  1299  0071  300D               	movlw	13
  1300  0072  1283               	bcf	3,5	;RP0=0, select bank0
  1301  0073  1303               	bcf	3,6	;RP1=0, select bank0
  1302  0074  00BA               	movwf	??_LCD_Begin+1
  1303  0075  30FB               	movlw	251
  1304  0076  00B9               	movwf	??_LCD_Begin
  1305  0077                     u507:
  1306  0077  0BB9               	decfsz	??_LCD_Begin,f
  1307  0078  2877               	goto	u507
  1308  0079  0BBA               	decfsz	??_LCD_Begin+1,f
  1309  007A  2877               	goto	u507
  1310  007B                     l1420:
  1311                           
  1312                           ;I2C.c: 192:   LCD_Cmd(0x20 | (2 << 2));
  1313  007B  3028               	movlw	40
  1314  007C  120A  118A  222E  120A  118A  	fcall	_LCD_Cmd
  1315                           
  1316                           ;I2C.c: 193:   _delay((unsigned long)((50)*(8000000/4000.0)));
  1317  0081  3082               	movlw	130
  1318  0082  1283               	bcf	3,5	;RP0=0, select bank0
  1319  0083  1303               	bcf	3,6	;RP1=0, select bank0
  1320  0084  00BA               	movwf	??_LCD_Begin+1
  1321  0085  30DD               	movlw	221
  1322  0086  00B9               	movwf	??_LCD_Begin
  1323  0087                     u517:
  1324  0087  0BB9               	decfsz	??_LCD_Begin,f
  1325  0088  2887               	goto	u517
  1326  0089  0BBA               	decfsz	??_LCD_Begin+1,f
  1327  008A  2887               	goto	u517
  1328  008B                     l1422:
  1329                           
  1330                           ;I2C.c: 194:   LCD_Cmd(0x0C);
  1331  008B  300C               	movlw	12
  1332  008C  120A  118A  222E  120A  118A  	fcall	_LCD_Cmd
  1333  0091                     l1424:
  1334                           
  1335                           ;I2C.c: 195:   _delay((unsigned long)((50)*(8000000/4000.0)));
  1336  0091  3082               	movlw	130
  1337  0092  1283               	bcf	3,5	;RP0=0, select bank0
  1338  0093  1303               	bcf	3,6	;RP1=0, select bank0
  1339  0094  00BA               	movwf	??_LCD_Begin+1
  1340  0095  30DD               	movlw	221
  1341  0096  00B9               	movwf	??_LCD_Begin
  1342  0097                     u527:
  1343  0097  0BB9               	decfsz	??_LCD_Begin,f
  1344  0098  2897               	goto	u527
  1345  0099  0BBA               	decfsz	??_LCD_Begin+1,f
  1346  009A  2897               	goto	u527
  1347                           
  1348                           ;I2C.c: 196:   LCD_Cmd(0x01);
  1349  009B  3001               	movlw	1
  1350  009C  120A  118A  222E  120A  118A  	fcall	_LCD_Cmd
  1351  00A1                     l1426:
  1352                           
  1353                           ;I2C.c: 197:   _delay((unsigned long)((50)*(8000000/4000.0)));
  1354  00A1  3082               	movlw	130
  1355  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  1356  00A3  1303               	bcf	3,6	;RP1=0, select bank0
  1357  00A4  00BA               	movwf	??_LCD_Begin+1
  1358  00A5  30DD               	movlw	221
  1359  00A6  00B9               	movwf	??_LCD_Begin
  1360  00A7                     u537:
  1361  00A7  0BB9               	decfsz	??_LCD_Begin,f
  1362  00A8  28A7               	goto	u537
  1363  00A9  0BBA               	decfsz	??_LCD_Begin+1,f
  1364  00AA  28A7               	goto	u537
  1365  00AB                     l1428:
  1366                           
  1367                           ;I2C.c: 198:   LCD_Cmd(0x04 | 0x02);
  1368  00AB  3006               	movlw	6
  1369  00AC  120A  118A  222E  120A  118A  	fcall	_LCD_Cmd
  1370                           
  1371                           ;I2C.c: 199:   _delay((unsigned long)((50)*(8000000/4000.0)));
  1372  00B1  3082               	movlw	130
  1373  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1374  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1375  00B4  00BA               	movwf	??_LCD_Begin+1
  1376  00B5  30DD               	movlw	221
  1377  00B6  00B9               	movwf	??_LCD_Begin
  1378  00B7                     u547:
  1379  00B7  0BB9               	decfsz	??_LCD_Begin,f
  1380  00B8  28B7               	goto	u547
  1381  00B9  0BBA               	decfsz	??_LCD_Begin+1,f
  1382  00BA  28B7               	goto	u547
  1383  00BB                     l177:
  1384  00BB  0008               	return
  1385  00BC                     __end_of_LCD_Begin:
  1386                           
  1387                           	psect	text5
  1388  022E                     __ptext5:	
  1389 ;; *************** function _LCD_Cmd *****************
  1390 ;; Defined at:
  1391 ;;		line 132 in file "I2C.c"
  1392 ;; Parameters:    Size  Location     Type
  1393 ;;  Command         1    wreg     unsigned char 
  1394 ;; Auto vars:     Size  Location     Type
  1395 ;;  Command         1    8[COMMON] unsigned char 
  1396 ;; Return value:  Size  Location     Type
  1397 ;;                  1    wreg      void 
  1398 ;; Registers used:
  1399 ;;		wreg, status,2, status,0, pclath, cstack
  1400 ;; Tracked objects:
  1401 ;;		On entry : 0/0
  1402 ;;		On exit  : 0/0
  1403 ;;		Unchanged: 0/0
  1404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1405 ;;      Params:         0       0       0       0       0
  1406 ;;      Locals:         1       0       0       0       0
  1407 ;;      Temps:          2       0       0       0       0
  1408 ;;      Totals:         3       0       0       0       0
  1409 ;;Total ram usage:        3 bytes
  1410 ;; Hardware stack levels used:    1
  1411 ;; Hardware stack levels required when called:    5
  1412 ;; This function calls:
  1413 ;;		_LCD_Write_Nibble
  1414 ;; This function is called by:
  1415 ;;		_LCD_Goto
  1416 ;;		_LCD_Begin
  1417 ;; This function uses a non-reentrant model
  1418 ;;
  1419                           
  1420                           
  1421                           ;psect for function _LCD_Cmd
  1422  022E                     _LCD_Cmd:
  1423                           
  1424                           ;incstack = 0
  1425                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1426                           ;LCD_Cmd@Command stored from wreg
  1427  022E  00F8               	movwf	LCD_Cmd@Command
  1428  022F                     l1152:
  1429                           
  1430                           ;I2C.c: 132: void LCD_Cmd(uint8_t Command);I2C.c: 133: {;I2C.c: 134:   RS = 0;
  1431  022F  107A               	bcf	_RS/(0+8),_RS& (0+7)
  1432  0230                     l1154:
  1433                           
  1434                           ;I2C.c: 135:   LCD_Write_Nibble(Command & 0xF0);
  1435  0230  0878               	movf	LCD_Cmd@Command,w
  1436  0231  39F0               	andlw	240
  1437  0232  120A  118A  225C  120A  118A  	fcall	_LCD_Write_Nibble
  1438                           
  1439                           ;I2C.c: 136:   LCD_Write_Nibble((Command << 4) & 0xF0);
  1440  0237  0878               	movf	LCD_Cmd@Command,w
  1441  0238  00F6               	movwf	??_LCD_Cmd
  1442  0239  3003               	movlw	3
  1443  023A                     u225:
  1444  023A  1003               	clrc
  1445  023B  0DF6               	rlf	??_LCD_Cmd,f
  1446  023C  3EFF               	addlw	-1
  1447  023D  1D03               	skipz
  1448  023E  2A3A               	goto	u225
  1449  023F  1003               	clrc
  1450  0240  0D76               	rlf	??_LCD_Cmd,w
  1451  0241  39F0               	andlw	240
  1452  0242  120A  118A  225C  120A  118A  	fcall	_LCD_Write_Nibble
  1453  0247                     l1156:
  1454                           
  1455                           ;I2C.c: 137:   if((Command == 0x01) || (Command == 0x02))
  1456  0247  0378               	decf	LCD_Cmd@Command,w
  1457  0248  1903               	btfsc	3,2
  1458  0249  2A4B               	goto	u231
  1459  024A  2A4C               	goto	u230
  1460  024B                     u231:
  1461  024B  2A52               	goto	l1160
  1462  024C                     u230:
  1463  024C                     l1158:
  1464  024C  3002               	movlw	2
  1465  024D  0678               	xorwf	LCD_Cmd@Command,w
  1466  024E  1D03               	btfss	3,2
  1467  024F  2A51               	goto	u241
  1468  0250  2A52               	goto	u240
  1469  0251                     u241:
  1470  0251  2A5B               	goto	l156
  1471  0252                     u240:
  1472  0252                     l1160:
  1473                           
  1474                           ;I2C.c: 138:     _delay((unsigned long)((2)*(8000000/4000.0)));
  1475  0252  3006               	movlw	6
  1476  0253  00F7               	movwf	??_LCD_Cmd+1
  1477  0254  3030               	movlw	48
  1478  0255  00F6               	movwf	??_LCD_Cmd
  1479  0256                     u557:
  1480  0256  0BF6               	decfsz	??_LCD_Cmd,f
  1481  0257  2A56               	goto	u557
  1482  0258  0BF7               	decfsz	??_LCD_Cmd+1,f
  1483  0259  2A56               	goto	u557
  1484  025A  0000               	nop
  1485  025B                     l156:
  1486  025B  0008               	return
  1487  025C                     __end_of_LCD_Cmd:
  1488                           
  1489                           	psect	text6
  1490  025C                     __ptext6:	
  1491 ;; *************** function _LCD_Write_Nibble *****************
  1492 ;; Defined at:
  1493 ;;		line 121 in file "I2C.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;  n               1    wreg     unsigned char 
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;  n               1    5[COMMON] unsigned char 
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  1    wreg      void 
  1500 ;; Registers used:
  1501 ;;		wreg, status,2, status,0, pclath, cstack
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1507 ;;      Params:         0       0       0       0       0
  1508 ;;      Locals:         1       0       0       0       0
  1509 ;;      Temps:          1       0       0       0       0
  1510 ;;      Totals:         2       0       0       0       0
  1511 ;;Total ram usage:        2 bytes
  1512 ;; Hardware stack levels used:    1
  1513 ;; Hardware stack levels required when called:    4
  1514 ;; This function calls:
  1515 ;;		_Expander_Write
  1516 ;; This function is called by:
  1517 ;;		_LCD_Cmd
  1518 ;;		_LCD_Print
  1519 ;;		_LCD_PutC
  1520 ;; This function uses a non-reentrant model
  1521 ;;
  1522                           
  1523                           
  1524                           ;psect for function _LCD_Write_Nibble
  1525  025C                     _LCD_Write_Nibble:
  1526                           
  1527                           ;incstack = 0
  1528                           ; Regs used in _LCD_Write_Nibble: [wreg+status,2+status,0+pclath+cstack]
  1529                           ;LCD_Write_Nibble@n stored from wreg
  1530  025C  00F5               	movwf	LCD_Write_Nibble@n
  1531  025D                     l1138:
  1532                           
  1533                           ;I2C.c: 121: void LCD_Write_Nibble(uint8_t n);I2C.c: 122: {;I2C.c: 123:   n |= RS;
  1534  025D  3000               	movlw	0
  1535  025E  187A               	btfsc	_RS/(0+8),_RS& (0+7)
  1536  025F  3001               	movlw	1
  1537  0260  00F4               	movwf	??_LCD_Write_Nibble
  1538  0261  0874               	movf	??_LCD_Write_Nibble,w
  1539  0262  04F5               	iorwf	LCD_Write_Nibble@n,f
  1540  0263                     l1140:
  1541                           
  1542                           ;I2C.c: 124:   Expander_Write(n & 0xFB);
  1543  0263  0875               	movf	LCD_Write_Nibble@n,w
  1544  0264  39FB               	andlw	251
  1545  0265  120A  118A  2280  120A  118A  	fcall	_Expander_Write
  1546  026A                     l1142:
  1547                           
  1548                           ;I2C.c: 125:   _delay((unsigned long)((1)*(8000000/4000000.0)));
  1549  026A  2A6B               	nop2	;2 cycle nop
  1550  026B                     l1144:
  1551                           
  1552                           ;I2C.c: 126:   Expander_Write(n | 0x04);
  1553  026B  0875               	movf	LCD_Write_Nibble@n,w
  1554  026C  3804               	iorlw	4
  1555  026D  120A  118A  2280  120A  118A  	fcall	_Expander_Write
  1556  0272                     l1146:
  1557                           
  1558                           ;I2C.c: 127:   _delay((unsigned long)((1)*(8000000/4000000.0)));
  1559  0272  2A73               	nop2	;2 cycle nop
  1560  0273                     l1148:
  1561                           
  1562                           ;I2C.c: 128:   Expander_Write(n & 0xFB);
  1563  0273  0875               	movf	LCD_Write_Nibble@n,w
  1564  0274  39FB               	andlw	251
  1565  0275  120A  118A  2280  120A  118A  	fcall	_Expander_Write
  1566  027A                     l1150:
  1567                           
  1568                           ;I2C.c: 129:   _delay((unsigned long)((100)*(8000000/4000000.0)));
  1569  027A  3042               	movlw	66
  1570  027B  00F4               	movwf	??_LCD_Write_Nibble
  1571  027C                     u567:
  1572  027C  0BF4               	decfsz	??_LCD_Write_Nibble,f
  1573  027D  2A7C               	goto	u567
  1574  027E  0000               	nop
  1575  027F                     l150:
  1576  027F  0008               	return
  1577  0280                     __end_of_LCD_Write_Nibble:
  1578                           
  1579                           	psect	text7
  1580  0280                     __ptext7:	
  1581 ;; *************** function _Expander_Write *****************
  1582 ;; Defined at:
  1583 ;;		line 113 in file "I2C.c"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;  value           1    wreg     unsigned char 
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;  value           1    3[COMMON] unsigned char 
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  1    wreg      void 
  1590 ;; Registers used:
  1591 ;;		wreg, status,2, status,0, pclath, cstack
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1597 ;;      Params:         0       0       0       0       0
  1598 ;;      Locals:         1       0       0       0       0
  1599 ;;      Temps:          0       0       0       0       0
  1600 ;;      Totals:         1       0       0       0       0
  1601 ;;Total ram usage:        1 bytes
  1602 ;; Hardware stack levels used:    1
  1603 ;; Hardware stack levels required when called:    3
  1604 ;; This function calls:
  1605 ;;		_I2C_Master_Start
  1606 ;;		_I2C_Master_Stop
  1607 ;;		_I2C_Master_Write
  1608 ;; This function is called by:
  1609 ;;		_LCD_Write_Nibble
  1610 ;;		_LCD_Begin
  1611 ;;		_Backlight
  1612 ;;		_noBacklight
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616                           
  1617                           ;psect for function _Expander_Write
  1618  0280                     _Expander_Write:
  1619                           
  1620                           ;incstack = 0
  1621                           ; Regs used in _Expander_Write: [wreg+status,2+status,0+pclath+cstack]
  1622                           ;Expander_Write@value stored from wreg
  1623  0280  00F3               	movwf	Expander_Write@value
  1624  0281                     l1136:
  1625                           
  1626                           ;I2C.c: 113: void Expander_Write(uint8_t value);I2C.c: 114: {;I2C.c: 115:   I2C_Master_S
      +                          tart();
  1627  0281  120A  118A  22E7  120A  118A  	fcall	_I2C_Master_Start
  1628                           
  1629                           ;I2C.c: 116:   I2C_Master_Write(i2c_addr);
  1630  0286  1283               	bcf	3,5	;RP0=0, select bank0
  1631  0287  1303               	bcf	3,6	;RP1=0, select bank0
  1632  0288  084A               	movf	_i2c_addr,w
  1633  0289  120A  118A  22D3  120A  118A  	fcall	_I2C_Master_Write
  1634                           
  1635                           ;I2C.c: 117:   I2C_Master_Write(value | backlight_val);
  1636  028E  0873               	movf	Expander_Write@value,w
  1637  028F  047B               	iorwf	_backlight_val,w
  1638  0290  120A  118A  22D3  120A  118A  	fcall	_I2C_Master_Write
  1639                           
  1640                           ;I2C.c: 118:   I2C_Master_Stop();
  1641  0295  120A  118A  22DE  120A  118A  	fcall	_I2C_Master_Stop
  1642  029A                     l147:
  1643  029A  0008               	return
  1644  029B                     __end_of_Expander_Write:
  1645                           
  1646                           	psect	text8
  1647  02D3                     __ptext8:	
  1648 ;; *************** function _I2C_Master_Write *****************
  1649 ;; Defined at:
  1650 ;;		line 69 in file "I2C.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;  d               1    wreg     unsigned char 
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;  d               1    2[COMMON] unsigned char 
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  1    wreg      void 
  1657 ;; Registers used:
  1658 ;;		wreg, status,2, status,0, pclath, cstack
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1664 ;;      Params:         0       0       0       0       0
  1665 ;;      Locals:         1       0       0       0       0
  1666 ;;      Temps:          0       0       0       0       0
  1667 ;;      Totals:         1       0       0       0       0
  1668 ;;Total ram usage:        1 bytes
  1669 ;; Hardware stack levels used:    1
  1670 ;; Hardware stack levels required when called:    2
  1671 ;; This function calls:
  1672 ;;		_I2C_Master_Wait
  1673 ;; This function is called by:
  1674 ;;		_Expander_Write
  1675 ;;		_Init_AHT10
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679                           
  1680                           ;psect for function _I2C_Master_Write
  1681  02D3                     _I2C_Master_Write:
  1682                           
  1683                           ;incstack = 0
  1684                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1685                           ;I2C_Master_Write@d stored from wreg
  1686  02D3  00F2               	movwf	I2C_Master_Write@d
  1687  02D4                     l1128:
  1688                           
  1689                           ;I2C.c: 69: void I2C_Master_Write(unsigned char d);I2C.c: 70: {;I2C.c: 71:     I2C_Maste
      +                          r_Wait();
  1690  02D4  120A  118A  22C6  120A  118A  	fcall	_I2C_Master_Wait
  1691  02D9                     l1130:
  1692                           
  1693                           ;I2C.c: 72:     SSPBUF = d;
  1694  02D9  0872               	movf	I2C_Master_Write@d,w
  1695  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  1696  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  1697  02DC  0093               	movwf	19	;volatile
  1698  02DD                     l136:
  1699  02DD  0008               	return
  1700  02DE                     __end_of_I2C_Master_Write:
  1701                           
  1702                           	psect	text9
  1703  02DE                     __ptext9:	
  1704 ;; *************** function _I2C_Master_Stop *****************
  1705 ;; Defined at:
  1706 ;;		line 59 in file "I2C.c"
  1707 ;; Parameters:    Size  Location     Type
  1708 ;;		None
  1709 ;; Auto vars:     Size  Location     Type
  1710 ;;		None
  1711 ;; Return value:  Size  Location     Type
  1712 ;;                  1    wreg      void 
  1713 ;; Registers used:
  1714 ;;		wreg, status,2, status,0, pclath, cstack
  1715 ;; Tracked objects:
  1716 ;;		On entry : 0/0
  1717 ;;		On exit  : 0/0
  1718 ;;		Unchanged: 0/0
  1719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1720 ;;      Params:         0       0       0       0       0
  1721 ;;      Locals:         0       0       0       0       0
  1722 ;;      Temps:          0       0       0       0       0
  1723 ;;      Totals:         0       0       0       0       0
  1724 ;;Total ram usage:        0 bytes
  1725 ;; Hardware stack levels used:    1
  1726 ;; Hardware stack levels required when called:    2
  1727 ;; This function calls:
  1728 ;;		_I2C_Master_Wait
  1729 ;; This function is called by:
  1730 ;;		_Expander_Write
  1731 ;;		_Init_AHT10
  1732 ;; This function uses a non-reentrant model
  1733 ;;
  1734                           
  1735                           
  1736                           ;psect for function _I2C_Master_Stop
  1737  02DE                     _I2C_Master_Stop:
  1738  02DE                     l1132:	
  1739                           ;incstack = 0
  1740                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  1741                           
  1742                           
  1743                           ;I2C.c: 61:     I2C_Master_Wait();
  1744  02DE  120A  118A  22C6  120A  118A  	fcall	_I2C_Master_Wait
  1745  02E3                     l1134:
  1746                           
  1747                           ;I2C.c: 62:     SSPCON2bits.PEN = 1;
  1748  02E3  1683               	bsf	3,5	;RP0=1, select bank1
  1749  02E4  1303               	bcf	3,6	;RP1=0, select bank1
  1750  02E5  1511               	bsf	17,2	;volatile
  1751  02E6                     l133:
  1752  02E6  0008               	return
  1753  02E7                     __end_of_I2C_Master_Stop:
  1754                           
  1755                           	psect	text10
  1756  02E7                     __ptext10:	
  1757 ;; *************** function _I2C_Master_Start *****************
  1758 ;; Defined at:
  1759 ;;		line 43 in file "I2C.c"
  1760 ;; Parameters:    Size  Location     Type
  1761 ;;		None
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;		None
  1764 ;; Return value:  Size  Location     Type
  1765 ;;                  1    wreg      void 
  1766 ;; Registers used:
  1767 ;;		wreg, status,2, status,0, pclath, cstack
  1768 ;; Tracked objects:
  1769 ;;		On entry : 0/0
  1770 ;;		On exit  : 0/0
  1771 ;;		Unchanged: 0/0
  1772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1773 ;;      Params:         0       0       0       0       0
  1774 ;;      Locals:         0       0       0       0       0
  1775 ;;      Temps:          0       0       0       0       0
  1776 ;;      Totals:         0       0       0       0       0
  1777 ;;Total ram usage:        0 bytes
  1778 ;; Hardware stack levels used:    1
  1779 ;; Hardware stack levels required when called:    2
  1780 ;; This function calls:
  1781 ;;		_I2C_Master_Wait
  1782 ;; This function is called by:
  1783 ;;		_Expander_Write
  1784 ;;		_Init_AHT10
  1785 ;; This function uses a non-reentrant model
  1786 ;;
  1787                           
  1788                           
  1789                           ;psect for function _I2C_Master_Start
  1790  02E7                     _I2C_Master_Start:
  1791  02E7                     l1124:	
  1792                           ;incstack = 0
  1793                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  1794                           
  1795                           
  1796                           ;I2C.c: 45:     I2C_Master_Wait();
  1797  02E7  120A  118A  22C6  120A  118A  	fcall	_I2C_Master_Wait
  1798  02EC                     l1126:
  1799                           
  1800                           ;I2C.c: 46:     SSPCON2bits.SEN = 1;
  1801  02EC  1683               	bsf	3,5	;RP0=1, select bank1
  1802  02ED  1303               	bcf	3,6	;RP1=0, select bank1
  1803  02EE  1411               	bsf	17,0	;volatile
  1804  02EF                     l127:
  1805  02EF  0008               	return
  1806  02F0                     __end_of_I2C_Master_Start:
  1807                           
  1808                           	psect	text11
  1809  02C6                     __ptext11:	
  1810 ;; *************** function _I2C_Master_Wait *****************
  1811 ;; Defined at:
  1812 ;;		line 36 in file "I2C.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;		None
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;		None
  1817 ;; Return value:  Size  Location     Type
  1818 ;;                  1    wreg      void 
  1819 ;; Registers used:
  1820 ;;		wreg, status,2
  1821 ;; Tracked objects:
  1822 ;;		On entry : 0/0
  1823 ;;		On exit  : 0/0
  1824 ;;		Unchanged: 0/0
  1825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1826 ;;      Params:         0       0       0       0       0
  1827 ;;      Locals:         0       0       0       0       0
  1828 ;;      Temps:          0       0       0       0       0
  1829 ;;      Totals:         0       0       0       0       0
  1830 ;;Total ram usage:        0 bytes
  1831 ;; Hardware stack levels used:    1
  1832 ;; Hardware stack levels required when called:    1
  1833 ;; This function calls:
  1834 ;;		Nothing
  1835 ;; This function is called by:
  1836 ;;		_I2C_Master_Start
  1837 ;;		_I2C_Master_Stop
  1838 ;;		_I2C_Master_Write
  1839 ;;		_I2C_Master_RepeatedStart
  1840 ;;		_I2C_Master_Read
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844                           
  1845                           ;psect for function _I2C_Master_Wait
  1846  02C6                     _I2C_Master_Wait:
  1847  02C6                     l1120:	
  1848                           ;incstack = 0
  1849                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  1850                           
  1851  02C6                     l121:	
  1852                           ;I2C.c: 38:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1853                           
  1854  02C6  1683               	bsf	3,5	;RP0=1, select bank1
  1855  02C7  1303               	bcf	3,6	;RP1=0, select bank1
  1856  02C8  1914               	btfsc	20,2	;volatile
  1857  02C9  2ACB               	goto	u201
  1858  02CA  2ACC               	goto	u200
  1859  02CB                     u201:
  1860  02CB  2AC6               	goto	l121
  1861  02CC                     u200:
  1862  02CC                     l1122:
  1863  02CC  0811               	movf	17,w	;volatile
  1864  02CD  391F               	andlw	31
  1865  02CE  1D03               	btfss	3,2
  1866  02CF  2AD1               	goto	u211
  1867  02D0  2AD2               	goto	u210
  1868  02D1                     u211:
  1869  02D1  2AC6               	goto	l121
  1870  02D2                     u210:
  1871  02D2                     l124:
  1872  02D2  0008               	return
  1873  02D3                     __end_of_I2C_Master_Wait:
  1874                           
  1875                           	psect	text12
  1876  01F6                     __ptext12:	
  1877 ;; *************** function _I2C_Master_Init *****************
  1878 ;; Defined at:
  1879 ;;		line 20 in file "I2C.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;  c               4    6[BANK0 ] const unsigned long 
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;		None
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  1    wreg      void 
  1886 ;; Registers used:
  1887 ;;		wreg, status,2, status,0, pclath, cstack
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1893 ;;      Params:         0       4       0       0       0
  1894 ;;      Locals:         0       0       0       0       0
  1895 ;;      Temps:          0       4       0       0       0
  1896 ;;      Totals:         0       8       0       0       0
  1897 ;;Total ram usage:        8 bytes
  1898 ;; Hardware stack levels used:    1
  1899 ;; Hardware stack levels required when called:    2
  1900 ;; This function calls:
  1901 ;;		___lldiv
  1902 ;; This function is called by:
  1903 ;;		_main
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907                           
  1908                           ;psect for function _I2C_Master_Init
  1909  01F6                     _I2C_Master_Init:
  1910  01F6                     l1392:	
  1911                           ;incstack = 0
  1912                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1913                           
  1914                           
  1915                           ;I2C.c: 20: void I2C_Master_Init(const unsigned long c);I2C.c: 21: {;I2C.c: 22:     SSPC
      +                          ON = 0b00101000;
  1916  01F6  3028               	movlw	40
  1917  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  1918  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  1919  01F9  0094               	movwf	20	;volatile
  1920  01FA                     l1394:
  1921                           
  1922                           ;I2C.c: 23:     SSPCON2 = 0;
  1923  01FA  1683               	bsf	3,5	;RP0=1, select bank1
  1924  01FB  1303               	bcf	3,6	;RP1=0, select bank1
  1925  01FC  0191               	clrf	17	;volatile
  1926  01FD                     l1396:
  1927                           
  1928                           ;I2C.c: 24:     SSPADD = (8000000/(4*c))-1;
  1929  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  1930  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  1931  01FF  083F               	movf	I2C_Master_Init@c,w
  1932  0200  00C3               	movwf	??_I2C_Master_Init
  1933  0201  0840               	movf	I2C_Master_Init@c+1,w
  1934  0202  00C4               	movwf	??_I2C_Master_Init+1
  1935  0203  0841               	movf	I2C_Master_Init@c+2,w
  1936  0204  00C5               	movwf	??_I2C_Master_Init+2
  1937  0205  0842               	movf	I2C_Master_Init@c+3,w
  1938  0206  00C6               	movwf	??_I2C_Master_Init+3
  1939  0207  3002               	movlw	2
  1940  0208                     u445:
  1941  0208  1003               	clrc
  1942  0209  0DC3               	rlf	??_I2C_Master_Init,f
  1943  020A  0DC4               	rlf	??_I2C_Master_Init+1,f
  1944  020B  0DC5               	rlf	??_I2C_Master_Init+2,f
  1945  020C  0DC6               	rlf	??_I2C_Master_Init+3,f
  1946  020D                     u440:
  1947  020D  3EFF               	addlw	-1
  1948  020E  1D03               	skipz
  1949  020F  2A08               	goto	u445
  1950  0210  0846               	movf	??_I2C_Master_Init+3,w
  1951  0211  00F5               	movwf	___lldiv@divisor+3
  1952  0212  0845               	movf	??_I2C_Master_Init+2,w
  1953  0213  00F4               	movwf	___lldiv@divisor+2
  1954  0214  0844               	movf	??_I2C_Master_Init+1,w
  1955  0215  00F3               	movwf	___lldiv@divisor+1
  1956  0216  0843               	movf	??_I2C_Master_Init,w
  1957  0217  00F2               	movwf	___lldiv@divisor
  1958  0218  3000               	movlw	0
  1959  0219  00F9               	movwf	___lldiv@dividend+3
  1960  021A  307A               	movlw	122
  1961  021B  00F8               	movwf	___lldiv@dividend+2
  1962  021C  3012               	movlw	18
  1963  021D  00F7               	movwf	___lldiv@dividend+1
  1964  021E  3000               	movlw	0
  1965  021F  00F6               	movwf	___lldiv@dividend
  1966  0220  120A  118A  20BC  120A  118A  	fcall	___lldiv
  1967  0225  0872               	movf	?___lldiv,w
  1968  0226  3EFF               	addlw	255
  1969  0227  1683               	bsf	3,5	;RP0=1, select bank1
  1970  0228  1303               	bcf	3,6	;RP1=0, select bank1
  1971  0229  0093               	movwf	19	;volatile
  1972  022A                     l1398:
  1973                           
  1974                           ;I2C.c: 25:     SSPSTAT = 0;
  1975  022A  0194               	clrf	20	;volatile
  1976  022B                     l1400:
  1977                           
  1978                           ;I2C.c: 26:     TRISCbits.TRISC3 = 1;
  1979  022B  1587               	bsf	7,3	;volatile
  1980  022C                     l1402:
  1981                           
  1982                           ;I2C.c: 27:     TRISCbits.TRISC4 = 1;
  1983  022C  1607               	bsf	7,4	;volatile
  1984  022D                     l118:
  1985  022D  0008               	return
  1986  022E                     __end_of_I2C_Master_Init:
  1987                           
  1988                           	psect	text13
  1989  00BC                     __ptext13:	
  1990 ;; *************** function ___lldiv *****************
  1991 ;; Defined at:
  1992 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;  divisor         4    2[COMMON] unsigned long 
  1995 ;;  dividend        4    6[COMMON] unsigned long 
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;  quotient        4    1[BANK0 ] unsigned long 
  1998 ;;  counter         1    5[BANK0 ] unsigned char 
  1999 ;; Return value:  Size  Location     Type
  2000 ;;                  4    2[COMMON] unsigned long 
  2001 ;; Registers used:
  2002 ;;		wreg, status,2, status,0
  2003 ;; Tracked objects:
  2004 ;;		On entry : 0/0
  2005 ;;		On exit  : 0/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2008 ;;      Params:         8       0       0       0       0
  2009 ;;      Locals:         0       5       0       0       0
  2010 ;;      Temps:          0       1       0       0       0
  2011 ;;      Totals:         8       6       0       0       0
  2012 ;;Total ram usage:       14 bytes
  2013 ;; Hardware stack levels used:    1
  2014 ;; Hardware stack levels required when called:    1
  2015 ;; This function calls:
  2016 ;;		Nothing
  2017 ;; This function is called by:
  2018 ;;		_I2C_Master_Init
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           
  2023                           ;psect for function ___lldiv
  2024  00BC                     ___lldiv:
  2025  00BC                     l1368:	
  2026                           ;incstack = 0
  2027                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2028                           
  2029  00BC  3000               	movlw	0
  2030  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  2031  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  2032  00BF  00BD               	movwf	___lldiv@quotient+3
  2033  00C0  3000               	movlw	0
  2034  00C1  00BC               	movwf	___lldiv@quotient+2
  2035  00C2  3000               	movlw	0
  2036  00C3  00BB               	movwf	___lldiv@quotient+1
  2037  00C4  3000               	movlw	0
  2038  00C5  00BA               	movwf	___lldiv@quotient
  2039  00C6  0875               	movf	___lldiv@divisor+3,w
  2040  00C7  0474               	iorwf	___lldiv@divisor+2,w
  2041  00C8  0473               	iorwf	___lldiv@divisor+1,w
  2042  00C9  0472               	iorwf	___lldiv@divisor,w
  2043  00CA  1903               	skipnz
  2044  00CB  28CD               	goto	u371
  2045  00CC  28CE               	goto	u370
  2046  00CD                     u371:
  2047  00CD  291B               	goto	l1388
  2048  00CE                     u370:
  2049  00CE                     l1370:
  2050  00CE  01BE               	clrf	___lldiv@counter
  2051  00CF  0ABE               	incf	___lldiv@counter,f
  2052  00D0  28DE               	goto	l1374
  2053  00D1                     l1372:
  2054  00D1  3001               	movlw	1
  2055  00D2  00B9               	movwf	??___lldiv
  2056  00D3                     u385:
  2057  00D3  1003               	clrc
  2058  00D4  0DF2               	rlf	___lldiv@divisor,f
  2059  00D5  0DF3               	rlf	___lldiv@divisor+1,f
  2060  00D6  0DF4               	rlf	___lldiv@divisor+2,f
  2061  00D7  0DF5               	rlf	___lldiv@divisor+3,f
  2062  00D8  0BB9               	decfsz	??___lldiv,f
  2063  00D9  28D3               	goto	u385
  2064  00DA  3001               	movlw	1
  2065  00DB  00B9               	movwf	??___lldiv
  2066  00DC  0839               	movf	??___lldiv,w
  2067  00DD  07BE               	addwf	___lldiv@counter,f
  2068  00DE                     l1374:
  2069  00DE  1FF5               	btfss	___lldiv@divisor+3,7
  2070  00DF  28E1               	goto	u391
  2071  00E0  28E2               	goto	u390
  2072  00E1                     u391:
  2073  00E1  28D1               	goto	l1372
  2074  00E2                     u390:
  2075  00E2                     l1376:
  2076  00E2  3001               	movlw	1
  2077  00E3  00B9               	movwf	??___lldiv
  2078  00E4                     u405:
  2079  00E4  1003               	clrc
  2080  00E5  0DBA               	rlf	___lldiv@quotient,f
  2081  00E6  0DBB               	rlf	___lldiv@quotient+1,f
  2082  00E7  0DBC               	rlf	___lldiv@quotient+2,f
  2083  00E8  0DBD               	rlf	___lldiv@quotient+3,f
  2084  00E9  0BB9               	decfsz	??___lldiv,f
  2085  00EA  28E4               	goto	u405
  2086  00EB                     l1378:
  2087  00EB  0875               	movf	___lldiv@divisor+3,w
  2088  00EC  0279               	subwf	___lldiv@dividend+3,w
  2089  00ED  1D03               	skipz
  2090  00EE  28F9               	goto	u415
  2091  00EF  0874               	movf	___lldiv@divisor+2,w
  2092  00F0  0278               	subwf	___lldiv@dividend+2,w
  2093  00F1  1D03               	skipz
  2094  00F2  28F9               	goto	u415
  2095  00F3  0873               	movf	___lldiv@divisor+1,w
  2096  00F4  0277               	subwf	___lldiv@dividend+1,w
  2097  00F5  1D03               	skipz
  2098  00F6  28F9               	goto	u415
  2099  00F7  0872               	movf	___lldiv@divisor,w
  2100  00F8  0276               	subwf	___lldiv@dividend,w
  2101  00F9                     u415:
  2102  00F9  1C03               	skipc
  2103  00FA  28FC               	goto	u411
  2104  00FB  28FD               	goto	u410
  2105  00FC                     u411:
  2106  00FC  290C               	goto	l1384
  2107  00FD                     u410:
  2108  00FD                     l1380:
  2109  00FD  0872               	movf	___lldiv@divisor,w
  2110  00FE  02F6               	subwf	___lldiv@dividend,f
  2111  00FF  0873               	movf	___lldiv@divisor+1,w
  2112  0100  1C03               	skipc
  2113  0101  0F73               	incfsz	___lldiv@divisor+1,w
  2114  0102  02F7               	subwf	___lldiv@dividend+1,f
  2115  0103  0874               	movf	___lldiv@divisor+2,w
  2116  0104  1C03               	skipc
  2117  0105  0F74               	incfsz	___lldiv@divisor+2,w
  2118  0106  02F8               	subwf	___lldiv@dividend+2,f
  2119  0107  0875               	movf	___lldiv@divisor+3,w
  2120  0108  1C03               	skipc
  2121  0109  0F75               	incfsz	___lldiv@divisor+3,w
  2122  010A  02F9               	subwf	___lldiv@dividend+3,f
  2123  010B                     l1382:
  2124  010B  143A               	bsf	___lldiv@quotient,0
  2125  010C                     l1384:
  2126  010C  3001               	movlw	1
  2127  010D                     u425:
  2128  010D  1003               	clrc
  2129  010E  0CF5               	rrf	___lldiv@divisor+3,f
  2130  010F  0CF4               	rrf	___lldiv@divisor+2,f
  2131  0110  0CF3               	rrf	___lldiv@divisor+1,f
  2132  0111  0CF2               	rrf	___lldiv@divisor,f
  2133  0112  3EFF               	addlw	-1
  2134  0113  1D03               	skipz
  2135  0114  290D               	goto	u425
  2136  0115                     l1386:
  2137  0115  3001               	movlw	1
  2138  0116  02BE               	subwf	___lldiv@counter,f
  2139  0117  1D03               	btfss	3,2
  2140  0118  291A               	goto	u431
  2141  0119  291B               	goto	u430
  2142  011A                     u431:
  2143  011A  28E2               	goto	l1376
  2144  011B                     u430:
  2145  011B                     l1388:
  2146  011B  083D               	movf	___lldiv@quotient+3,w
  2147  011C  00F5               	movwf	?___lldiv+3
  2148  011D  083C               	movf	___lldiv@quotient+2,w
  2149  011E  00F4               	movwf	?___lldiv+2
  2150  011F  083B               	movf	___lldiv@quotient+1,w
  2151  0120  00F3               	movwf	?___lldiv+1
  2152  0121  083A               	movf	___lldiv@quotient,w
  2153  0122  00F2               	movwf	?___lldiv
  2154  0123                     l340:
  2155  0123  0008               	return
  2156  0124                     __end_of___lldiv:
  2157                           
  2158                           	psect	text14
  2159  02F8                     __ptext14:	
  2160 ;; *************** function _isr *****************
  2161 ;; Defined at:
  2162 ;;		line 63 in file "main.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;		None
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;		None
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  1    wreg      void 
  2169 ;; Registers used:
  2170 ;;		None
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2176 ;;      Params:         0       0       0       0       0
  2177 ;;      Locals:         0       0       0       0       0
  2178 ;;      Temps:          2       0       0       0       0
  2179 ;;      Totals:         2       0       0       0       0
  2180 ;;Total ram usage:        2 bytes
  2181 ;; Hardware stack levels used:    1
  2182 ;; This function calls:
  2183 ;;		Nothing
  2184 ;; This function is called by:
  2185 ;;		Interrupt level 1
  2186 ;; This function uses a non-reentrant model
  2187 ;;
  2188                           
  2189                           
  2190                           ;psect for function _isr
  2191  02F8                     _isr:
  2192  02F8                     i1l61:
  2193  02F8  0871               	movf	??_isr+1,w
  2194  02F9  008A               	movwf	10
  2195  02FA  0E70               	swapf	??_isr,w
  2196  02FB  0083               	movwf	3
  2197  02FC  0EFE               	swapf	btemp,f
  2198  02FD  0E7E               	swapf	btemp,w
  2199  02FE  0009               	retfie
  2200  02FF                     __end_of_isr:
  2201  007E                     btemp	set	126	;btemp
  2202  007E                     wtemp0	set	126
  2203                           
  2204                           	psect	intentry
  2205  0004                     __pintentry:	
  2206                           ;incstack = 0
  2207                           ; Regs used in _isr: []
  2208                           
  2209  0004                     interrupt_function:
  2210  007E                     saved_w	set	btemp
  2211  0004  00FE               	movwf	btemp
  2212  0005  0E03               	swapf	3,w
  2213  0006  00F0               	movwf	??_isr
  2214  0007  080A               	movf	10,w
  2215  0008  00F1               	movwf	??_isr+1
  2216  0009  120A  118A  2AF8   	ljmp	_isr
  2217                           
  2218                           	psect	config
  2219                           
  2220                           ;Config register CONFIG1 @ 0x2007
  2221                           ;	Oscillator Selection bits
  2222                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2223                           ;	Watchdog Timer Enable bit
  2224                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2225                           ;	Power-up Timer Enable bit
  2226                           ;	PWRTE = OFF, PWRT disabled
  2227                           ;	RE3/MCLR pin function select bit
  2228                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2229                           ;	Code Protection bit
  2230                           ;	CP = OFF, Program memory code protection is disabled
  2231                           ;	Data Code Protection bit
  2232                           ;	CPD = OFF, Data memory code protection is disabled
  2233                           ;	Brown Out Reset Selection bits
  2234                           ;	BOREN = OFF, BOR disabled
  2235                           ;	Internal External Switchover bit
  2236                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2237                           ;	Fail-Safe Clock Monitor Enabled bit
  2238                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2239                           ;	Low Voltage Programming Enable bit
  2240                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2241                           ;	In-Circuit Debugger Mode bit
  2242                           ;	DEBUG = 0x1, unprogrammed default
  2243  2007                     	org	8199
  2244  2007  20D4               	dw	8404
  2245                           
  2246                           ;Config register CONFIG2 @ 0x2008
  2247                           ;	Brown-out Reset Selection bit
  2248                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2249                           ;	Flash Program Memory Self Write Enable bits
  2250                           ;	WRT = OFF, Write protection off
  2251  2008                     	org	8200
  2252  2008  3FFF               	dw	16383

Data Sizes:
    Strings     16
    Constant    0
    Data        1
    BSS         25
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     17      43
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Print@LCD_Str	PTR unsigned char  size(1) Largest target is 14
		 -> STR_2(CODE[2]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    _main->_LCD_Begin
    _main->_LCD_Goto
    _LCD_Print->_LCD_Write_Nibble
    _LCD_Goto->_LCD_Cmd
    _LCD_Begin->_LCD_Cmd
    _LCD_Cmd->_LCD_Write_Nibble
    _LCD_Write_Nibble->_Expander_Write
    _Expander_Write->_I2C_Master_Write
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1661
                                             14 BANK0      3     3      0
                    _I2C_Master_Init
                          _LCD_Begin
                           _LCD_Goto
                          _LCD_Print
                         _USART_Init
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Print                                            3     3      0     311
                                              6 COMMON     3     3      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (1) _LCD_Goto                                             4     3      1     534
                                              9 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Begin                                            3     3      0     274
                                              9 COMMON     1     1      0
                                              0 BANK0      2     2      0
                     _Expander_Write
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Cmd                                              3     3      0     199
                                              6 COMMON     3     3      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Nibble                                     2     2      0     111
                                              4 COMMON     2     2      0
                     _Expander_Write
 ---------------------------------------------------------------------------------
 (3) _Expander_Write                                       1     1      0      44
                                              3 COMMON     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Write                                     1     1      0      22
                                              2 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     542
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _LCD_Begin
     _Expander_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _LCD_Cmd
       _LCD_Write_Nibble
         _Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_Goto
     _LCD_Cmd
       _LCD_Write_Nibble
         _Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_Print
     _LCD_Write_Nibble
       _Expander_Write
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
   _USART_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     11      2B       5       53.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       1       0        7.1%
CODE                 0      0       0       0        0.0%
DATA                 0      0      37      12        0.0%
ABS                  0      0      37       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Aug 23 20:17:57 2021

                        pc 0002                         _RS 03D0                         fsr 0004  
                      l200 02C5                        l121 02C6                        l124 02D2  
                      l133 02E6                        l118 022D                        l150 027F  
                      l127 02EF                        l136 02DD                        l147 029A  
                      l340 0123                        l156 025B                        l165 01F5  
                      l174 01BD                        l177 00BB                        l880 02BC  
                      l882 02BD                        l884 02C0                        l876 02B1  
                      l886 02C1                        l878 02B8                        l888 02C2  
                      _GIE 005F                        u200 02CC                        u201 02CB  
                      u210 02D2                        u211 02D1                        u230 024C  
                      u231 024B                        u240 0252                        u241 0251  
                      u225 023A                        u410 00FD                        u411 00FC  
                      u340 01BD                        u405 00E4                        u341 01BC  
                      u430 011B                        u431 011A                        u415 00F9  
                      u335 019F                        u440 020D                        u425 010D  
                      u370 00CE                        u371 00CD                        u507 0077  
                      u445 0208                        u517 0087                        u390 00E2  
                      u391 00E1                        u527 0097                        u385 00D3  
                      u537 00A7                        u457 0178                        u547 00B7  
                      u467 0036                        u557 0256                        u477 0047  
                      u567 027C                        u487 0057                        u497 0067  
                      _dec 0035                        _cen 0036                        _isr 02F8  
                      fsr0 0004                        _uni 0034                        indf 0000  
               _DataBuffer 0020            __end_of_LCD_Cmd 025C                       l1120 02C6  
                     l1122 02CC                       l1130 02D9                       l1124 02E7  
                     l1132 02DE                       l1140 0263                       l1126 02EC  
                     l1134 02E3                       l1150 027A                       l1142 026A  
                     l1400 022B                       l1128 02D4                       l1136 0281  
                     l1144 026B                       l1160 0252                       l1152 022F  
                     l1402 022C                       l1146 0272                       l1138 025D  
                     l1154 0230                       l1410 0041                       l1250 01B0  
                     l1242 0184                       l1148 0273                       l1156 0247  
                     l1420 007B                       l1412 004B                       l1404 0024  
                     l1244 0185                       l1158 024C                       l1422 008B  
                     l1414 005B                       l1406 002A                       l1430 01C1  
                     l1246 0187                       l1424 0091                       l1416 0061  
                     l1408 0030                       l1432 01C2                       l1440 01E2  
                     l1248 01AC                       l1370 00CE                       l1426 00A1  
                     l1418 0071                       l1514 01EA                       l1434 01CA  
                     l1450 0129                       l1380 00FD                       l1372 00D1  
                     l1428 00AB                       l1436 01D2                       l1460 0133  
                     l1452 012C                       l1382 010B                       l1374 00DE  
                     l1438 01DA                       l1470 0149                       l1462 0135  
                     l1454 012D                       l1384 010C                       l1376 00E2  
                     l1368 00BC                       l1392 01F6                       l1480 016A  
                     l1472 014A                       l1464 0136                       l1456 0130  
                     l1448 0124                       l1386 0115                       l1378 00EB  
                     l1394 01FA                       l1482 0170                       l1474 0150  
                     l1466 0145                       l1458 0132                       l1388 011B  
                     l1396 01FD                       l1476 0158                       l1468 0148  
                     l1398 022A                       l1478 015E          ?_LCD_Write_Nibble 0070  
                     ?_isr 0070                       STR_1 02A1                       STR_2 02AF  
                     _PEIE 005E                       i1l61 02F8         ??_LCD_Write_Nibble 0074  
                     _main 0124         __size_of_LCD_Begin 0099                       btemp 007E  
       __size_of_LCD_Print 003B                       start 000C                LCD_Goto@col 003B  
              LCD_Goto@row 0079                      ??_isr 0070           __end_of_LCD_Goto 01F6  
         ?_I2C_Master_Init 003F           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
                    ?_main 0070                      _ANSEL 0188            __end_of___lldiv 0124  
                    _RCREG 001A                      _SPBRG 0099                      _PORTA 0005  
                    _PORTC 0007                      _PORTD 0008                      _TRISA 0085  
                    _TRISC 0087                      _TRISD 0088                      _SSPIE 0463  
                    _SSPIF 0063                      _TXREG 0019             __pbitbssCOMMON 03D0  
                    pclath 000A                      status 0003                      wtemp0 007E  
              ?_USART_Init 0070            __initialization 000F               __end_of_main 0183  
                   ??_main 0047          __end_of_LCD_Begin 00BC                  ??_LCD_Cmd 0076  
        __end_of_LCD_Print 01BE          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070  
       ??_I2C_Master_Start 0072         ??_I2C_Master_Write 0072                     _ANSELH 0189  
                   _SPBRGH 009A                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
                ??___lldiv 0039                     _entero 0038    __size_of_Expander_Write 001B  
             __pdataCOMMON 007B                     saved_w 007E        __size_of_USART_Init 0015  
  __end_of__initialization 001F                  ?_LCD_Goto 0079              _backlight_val 007B  
           __pcstackCOMMON 0070             LCD_Cmd@Command 0078                 __pbssBANK0 0020  
               ??_LCD_Goto 0039                 __pmaintext 0124  __size_of_LCD_Write_Nibble 0024  
               __pintentry 0004                _Raw_humedad 002E                    _LCD_Cmd 022E  
                  _SSPCON2 0091                    _SSPSTAT 0094                 __stringtab 029B  
             ??_USART_Init 0072        Expander_Write@value 0073                    ___lldiv 00BC  
                  _decimal 0037                    __ptext1 02B1                    __ptext2 0183  
                  __ptext3 01BE                    __ptext4 0023                    __ptext5 022E  
                  __ptext6 025C                    __ptext7 0280                    __ptext8 02D3  
                  __ptext9 02DE             _Expander_Write 0280               __size_of_isr 0007  
                  _humedad 0032   __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Wait 000D  
                _LCD_Begin 0023   __size_of_I2C_Master_Stop 0009         __end_of_USART_Init 02C6  
                _LCD_Print 0183                    clrloop0 02F1       end_of_initialization 001F  
__size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000B            ___lldiv@divisor 0072  
          ___lldiv@counter 003E                  _RCSTAbits 0018           I2C_Master_Init@c 003F  
        LCD_Write_Nibble@n 0075     __end_of_Expander_Write 029B                  _TRISCbits 0087  
               ?_LCD_Begin 0070                 ?_LCD_Print 0070                  _TXSTAbits 0098  
        __size_of_LCD_Goto 0038           _LCD_Write_Nibble 025C                 LCD_Print@i 0077  
            __pidataCOMMON 02FF            ?_Expander_Write 0070                _BAUDCTLbits 0187  
      start_initialization 000F                __end_of_isr 02FF          ??_I2C_Master_Init 0043  
        ??_I2C_Master_Wait 0072          ??_I2C_Master_Stop 0072                   ?_LCD_Cmd 0070  
                ___latbits 0002              __pcstackBANK0 0039                ??_LCD_Begin 0039  
              ??_LCD_Print 0076                  __pnvBANK0 004A           _I2C_Master_Start 02E7  
         _I2C_Master_Write 02D3                   ?___lldiv 0072           LCD_Print@LCD_Str 0078  
                __pstrings 029B          interrupt_function 0004                   _LCD_Goto 01BE  
                clear_ram0 02F0                __stringbase 02A0           __size_of_LCD_Cmd 002E  
 __end_of_LCD_Write_Nibble 0280                   _i2c_addr 004A           ??_Expander_Write 0073  
         __size_of___lldiv 0068            _Raw_temperatura 002A         __end_of__stringtab 02A1  
          _I2C_Master_Init 01F6            _I2C_Master_Wait 02C6            _I2C_Master_Stop 02DE  
                 __ptext10 02E7                   __ptext11 02C6                   __ptext12 01F6  
                 __ptext13 00BC                   __ptext14 02F8              __size_of_main 005F  
 __end_of_I2C_Master_Start 02F0   __end_of_I2C_Master_Write 02DE         LCD_Begin@_i2c_addr 0079  
                 intlevel1 0000           ___lldiv@dividend 0076                  stringcode 029B  
               _OSCCONbits 008F    __end_of_I2C_Master_Init 022E    __end_of_I2C_Master_Wait 02D3  
  __end_of_I2C_Master_Stop 02E7                _temperatura 0026           ___lldiv@quotient 003A  
        I2C_Master_Write@d 0072                   stringdir 029B                   stringtab 029B  
              _SSPCON2bits 0091                 _USART_Init 02B1  
