

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Sep 02 12:46:20 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 12/02/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  008F                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  0105                     	;# 
   137  0107                     	;# 
   138  0108                     	;# 
   139  0109                     	;# 
   140  010C                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  0185                     	;# 
   146  0187                     	;# 
   147  0188                     	;# 
   148  0189                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  0000                     	;# 
   152  0001                     	;# 
   153  0002                     	;# 
   154  0003                     	;# 
   155  0004                     	;# 
   156  0005                     	;# 
   157  0006                     	;# 
   158  0007                     	;# 
   159  0008                     	;# 
   160  0009                     	;# 
   161  000A                     	;# 
   162  000B                     	;# 
   163  000C                     	;# 
   164  000D                     	;# 
   165  000E                     	;# 
   166  000E                     	;# 
   167  000F                     	;# 
   168  0010                     	;# 
   169  0011                     	;# 
   170  0012                     	;# 
   171  0013                     	;# 
   172  0014                     	;# 
   173  0015                     	;# 
   174  0015                     	;# 
   175  0016                     	;# 
   176  0017                     	;# 
   177  0018                     	;# 
   178  0019                     	;# 
   179  001A                     	;# 
   180  001B                     	;# 
   181  001B                     	;# 
   182  001C                     	;# 
   183  001D                     	;# 
   184  001E                     	;# 
   185  001F                     	;# 
   186  0081                     	;# 
   187  0085                     	;# 
   188  0086                     	;# 
   189  0087                     	;# 
   190  0088                     	;# 
   191  0089                     	;# 
   192  008C                     	;# 
   193  008D                     	;# 
   194  008E                     	;# 
   195  008F                     	;# 
   196  0090                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0094                     	;# 
   203  0095                     	;# 
   204  0096                     	;# 
   205  0097                     	;# 
   206  0098                     	;# 
   207  0099                     	;# 
   208  009A                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  009F                     	;# 
   214  0105                     	;# 
   215  0107                     	;# 
   216  0108                     	;# 
   217  0109                     	;# 
   218  010C                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010F                     	;# 
   223  0185                     	;# 
   224  0187                     	;# 
   225  0188                     	;# 
   226  0189                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  000E                     	;# 
   245  000F                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001D                     	;# 
   262  001E                     	;# 
   263  001F                     	;# 
   264  0081                     	;# 
   265  0085                     	;# 
   266  0086                     	;# 
   267  0087                     	;# 
   268  0088                     	;# 
   269  0089                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  008F                     	;# 
   274  0090                     	;# 
   275  0091                     	;# 
   276  0092                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0094                     	;# 
   281  0095                     	;# 
   282  0096                     	;# 
   283  0097                     	;# 
   284  0098                     	;# 
   285  0099                     	;# 
   286  009A                     	;# 
   287  009B                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  009F                     	;# 
   292  0105                     	;# 
   293  0107                     	;# 
   294  0108                     	;# 
   295  0109                     	;# 
   296  010C                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  010E                     	;# 
   300  010F                     	;# 
   301  0185                     	;# 
   302  0187                     	;# 
   303  0188                     	;# 
   304  0189                     	;# 
   305  018C                     	;# 
   306  018D                     	;# 
   307  0000                     	;# 
   308  0001                     	;# 
   309  0002                     	;# 
   310  0003                     	;# 
   311  0004                     	;# 
   312  0005                     	;# 
   313  0006                     	;# 
   314  0007                     	;# 
   315  0008                     	;# 
   316  0009                     	;# 
   317  000A                     	;# 
   318  000B                     	;# 
   319  000C                     	;# 
   320  000D                     	;# 
   321  000E                     	;# 
   322  000E                     	;# 
   323  000F                     	;# 
   324  0010                     	;# 
   325  0011                     	;# 
   326  0012                     	;# 
   327  0013                     	;# 
   328  0014                     	;# 
   329  0015                     	;# 
   330  0015                     	;# 
   331  0016                     	;# 
   332  0017                     	;# 
   333  0018                     	;# 
   334  0019                     	;# 
   335  001A                     	;# 
   336  001B                     	;# 
   337  001B                     	;# 
   338  001C                     	;# 
   339  001D                     	;# 
   340  001E                     	;# 
   341  001F                     	;# 
   342  0081                     	;# 
   343  0085                     	;# 
   344  0086                     	;# 
   345  0087                     	;# 
   346  0088                     	;# 
   347  0089                     	;# 
   348  008C                     	;# 
   349  008D                     	;# 
   350  008E                     	;# 
   351  008F                     	;# 
   352  0090                     	;# 
   353  0091                     	;# 
   354  0092                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0094                     	;# 
   359  0095                     	;# 
   360  0096                     	;# 
   361  0097                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009A                     	;# 
   365  009B                     	;# 
   366  009C                     	;# 
   367  009D                     	;# 
   368  009E                     	;# 
   369  009F                     	;# 
   370  0105                     	;# 
   371  0107                     	;# 
   372  0108                     	;# 
   373  0109                     	;# 
   374  010C                     	;# 
   375  010C                     	;# 
   376  010D                     	;# 
   377  010E                     	;# 
   378  010F                     	;# 
   379  0185                     	;# 
   380  0187                     	;# 
   381  0188                     	;# 
   382  0189                     	;# 
   383  018C                     	;# 
   384  018D                     	;# 
   385                           
   386                           	psect	idataBANK0
   387  0624                     __pidataBANK0:
   388                           
   389                           ;initializer for _backlight_val
   390  0624  3408               	retlw	8
   391  001A                     _RCREG	set	26
   392  0019                     _TXREG	set	25
   393  0018                     _RCSTAbits	set	24
   394  0013                     _SSPBUF	set	19
   395  0014                     _SSPCON	set	20
   396  0007                     _PORTCbits	set	7
   397  000C                     _PIR1bits	set	12
   398  0008                     _PORTD	set	8
   399  0007                     _PORTC	set	7
   400  0005                     _PORTA	set	5
   401  001F                     _ADCON0bits	set	31
   402  0063                     _SSPIF	set	99
   403  005E                     _PEIE	set	94
   404  005F                     _GIE	set	95
   405  009A                     _SPBRGH	set	154
   406  0099                     _SPBRG	set	153
   407  0098                     _TXSTAbits	set	152
   408  0091                     _SSPCON2bits	set	145
   409  0087                     _TRISCbits	set	135
   410  0094                     _SSPSTAT	set	148
   411  0093                     _SSPADD	set	147
   412  0091                     _SSPCON2	set	145
   413  009F                     _ADCON1bits	set	159
   414  008F                     _OSCCONbits	set	143
   415  0089                     _TRISE	set	137
   416  0087                     _TRISC	set	135
   417  0463                     _SSPIE	set	1123
   418  043C                     _TRISC4	set	1084
   419  043B                     _TRISC3	set	1083
   420  0187                     _BAUDCTLbits	set	391
   421  0189                     _ANSELH	set	393
   422  0188                     _ANSEL	set	392
   423                           
   424                           	psect	strings
   425  054A                     __pstrings:
   426  054A                     stringtab:
   427  054A                     __stringtab:
   428                           
   429                           ;	String table - string pointers are 1 byte each
   430  054A  1BFF               	btfsc	btemp+1,7
   431  054B  2D54               	ljmp	stringcode
   432  054C  1383               	bcf	3,7
   433  054D  187F               	btfsc	btemp+1,0
   434  054E  1783               	bsf	3,7
   435  054F  0800               	movf	0,w
   436  0550  0A84               	incf	4,f
   437  0551  1903               	skipnz
   438  0552  0AFF               	incf	btemp+1,f
   439  0553  0008               	return
   440  0554                     stringcode:
   441  0554                     stringdir:
   442  0554  3005               	movlw	high stringdir
   443  0555  008A               	movwf	10
   444  0556  0804               	movf	4,w
   445  0557  0A84               	incf	4,f
   446  0558  0782               	addwf	2,f
   447  0559                     __stringbase:
   448  0559  3400               	retlw	0
   449  055A                     __end_of__stringtab:
   450  055A                     STR_1:
   451  055A  3448               	retlw	72	;'H'
   452  055B  3465               	retlw	101	;'e'
   453  055C  346C               	retlw	108	;'l'
   454  055D  346C               	retlw	108	;'l'
   455  055E  346F               	retlw	111	;'o'
   456  055F  342C               	retlw	44	;','
   457  0560  3420               	retlw	32	;' '
   458  0561  3477               	retlw	119	;'w'
   459  0562  346F               	retlw	111	;'o'
   460  0563  3472               	retlw	114	;'r'
   461  0564  346C               	retlw	108	;'l'
   462  0565  3464               	retlw	100	;'d'
   463  0566  3421               	retlw	33	;'!'
   464  0567  3400               	retlw	0
   465  0568                     STR_3:
   466  0568  34C2               	retlw	-62
   467  0569  34B0               	retlw	-80
   468  056A  3443               	retlw	67	;'C'
   469  056B  3400               	retlw	0
   470  056C                     STR_2:
   471  056C  3425               	retlw	37	;'%'
   472  056D  3400               	retlw	0
   473                           
   474                           	psect	cinit
   475  000F                     start_initialization:	
   476                           ; #config settings
   477                           
   478  000F                     __initialization:
   479                           
   480                           ; Initialize objects allocated to BANK0
   481  000F  120A  118A  2624  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   482  0014  00CE               	movwf	__pdataBANK0& (0+127)
   483                           
   484                           ; Clear objects allocated to BANK0
   485  0015  1383               	bcf	3,7	;select IRP bank0
   486  0016  3020               	movlw	low __pbssBANK0
   487  0017  0084               	movwf	4
   488  0018  303A               	movlw	low (__pbssBANK0+26)
   489  0019  120A  118A  2611  120A  118A  	fcall	clear_ram0
   490                           
   491                           ; Clear objects allocated to COMMON
   492  001E  01FB               	clrf	__pbssCOMMON& (0+127)
   493                           
   494                           ; Clear objects allocated to BITCOMMON
   495  001F  01FA               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   496  0020                     end_of_initialization:	
   497                           ;End of C runtime variable initialization code
   498                           
   499  0020                     __end_of__initialization:
   500  0020  0183               	clrf	3
   501  0021  120A  118A  2824   	ljmp	_main	;jump to C main() function
   502                           
   503                           	psect	bitbssCOMMON
   504  03D0                     __pbitbssCOMMON:
   505  03D0                     _RS:
   506  03D0                     	ds	1
   507                           
   508                           	psect	bssCOMMON
   509  007B                     __pbssCOMMON:
   510  007B                     _humedad:
   511  007B                     	ds	1
   512                           
   513                           	psect	bssBANK0
   514  0020                     __pbssBANK0:
   515  0020                     _DataBuffer:
   516  0020                     	ds	6
   517  0026                     _Raw_humedad:
   518  0026                     	ds	4
   519  002A                     _Raw_temperatura:
   520  002A                     	ds	4
   521  002E                     _humedad_tem:
   522  002E                     	ds	2
   523  0030                     _i2c_addr:
   524  0030                     	ds	1
   525  0031                     _actuador:
   526  0031                     	ds	1
   527  0032                     _ingreso:
   528  0032                     	ds	1
   529  0033                     _uni:
   530  0033                     	ds	1
   531  0034                     _dec:
   532  0034                     	ds	1
   533  0035                     _cen:
   534  0035                     	ds	1
   535  0036                     _decimal:
   536  0036                     	ds	1
   537  0037                     _entero:
   538  0037                     	ds	1
   539  0038                     _temperatura:
   540  0038                     	ds	2
   541                           
   542                           	psect	dataBANK0
   543  004E                     __pdataBANK0:
   544  004E                     _backlight_val:
   545  004E                     	ds	1
   546                           
   547                           	psect	clrtext
   548  0611                     clear_ram0:	
   549                           ;	Called with FSR containing the base address, and
   550                           ;	W with the last address+1
   551                           
   552  0611  0064               	clrwdt	;clear the watchdog before getting into this loop
   553  0612                     clrloop0:
   554  0612  0180               	clrf	0	;clear RAM location pointed to by FSR
   555  0613  0A84               	incf	4,f	;increment pointer
   556  0614  0604               	xorwf	4,w	;XOR with final address
   557  0615  1903               	btfsc	3,2	;have we reached the end yet?
   558  0616  3400               	retlw	0	;all done for this memory range, return
   559  0617  0604               	xorwf	4,w	;XOR again to restore value
   560  0618  2E12               	goto	clrloop0	;do the next byte
   561                           
   562                           	psect	cstackCOMMON
   563  0070                     __pcstackCOMMON:
   564  0070                     ?_USART_Init:
   565  0070                     ?_Init_AHT10:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ?_LCD_Begin:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?_I2C_Master_Start:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ?_I2C_Master_Write:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_I2C_Master_Stop:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ?_I2C_Master_Read:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?_USART_Rx:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ?_USART_Cadena:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?_isr:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ??_isr:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ?_main:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ?_I2C_Master_Wait:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_Expander_Write:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_LCD_Write_Nibble:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_LCD_Cmd:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_USART_Tx:	
   611                           ; 1 bytes @ 0x0
   612                           
   613                           
   614                           ; 1 bytes @ 0x0
   615  0070                     	ds	2
   616  0072                     ??_USART_Init:
   617  0072                     ??_I2C_Master_Start:	
   618                           ; 1 bytes @ 0x2
   619                           
   620  0072                     ??_I2C_Master_Write:	
   621                           ; 1 bytes @ 0x2
   622                           
   623  0072                     ??_I2C_Master_Stop:	
   624                           ; 1 bytes @ 0x2
   625                           
   626  0072                     ??_I2C_Master_Read:	
   627                           ; 1 bytes @ 0x2
   628                           
   629  0072                     ??_USART_Rx:	
   630                           ; 1 bytes @ 0x2
   631                           
   632  0072                     ??_I2C_Master_Wait:	
   633                           ; 1 bytes @ 0x2
   634                           
   635  0072                     ??_USART_Tx:	
   636                           ; 1 bytes @ 0x2
   637                           
   638  0072                     ?___lmul:	
   639                           ; 1 bytes @ 0x2
   640                           
   641  0072                     ?___lldiv:	
   642                           ; 4 bytes @ 0x2
   643                           
   644  0072                     I2C_Master_Write@d:	
   645                           ; 4 bytes @ 0x2
   646                           
   647  0072                     USART_Tx@data:	
   648                           ; 1 bytes @ 0x2
   649                           
   650  0072                     ___lmul@multiplier:	
   651                           ; 1 bytes @ 0x2
   652                           
   653  0072                     ___lldiv@divisor:	
   654                           ; 4 bytes @ 0x2
   655                           
   656                           
   657                           ; 4 bytes @ 0x2
   658  0072                     	ds	1
   659  0073                     ??_Init_AHT10:
   660  0073                     ??_USART_Cadena:	
   661                           ; 1 bytes @ 0x3
   662                           
   663  0073                     ??_Expander_Write:	
   664                           ; 1 bytes @ 0x3
   665                           
   666  0073                     I2C_Master_Read@a:	
   667                           ; 1 bytes @ 0x3
   668                           
   669  0073                     Expander_Write@value:	
   670                           ; 1 bytes @ 0x3
   671                           
   672                           
   673                           ; 1 bytes @ 0x3
   674  0073                     	ds	1
   675  0074                     ??_LCD_Write_Nibble:
   676  0074                     I2C_Master_Read@temp:	
   677                           ; 1 bytes @ 0x4
   678                           
   679  0074                     USART_Cadena@str:	
   680                           ; 1 bytes @ 0x4
   681                           
   682                           
   683                           ; 1 bytes @ 0x4
   684  0074                     	ds	1
   685  0075                     LCD_Write_Nibble@n:
   686                           
   687                           ; 1 bytes @ 0x5
   688  0075                     	ds	1
   689  0076                     ?_LCD_Print:
   690  0076                     ??_LCD_Cmd:	
   691                           ; 1 bytes @ 0x6
   692                           
   693  0076                     LCD_Print@LCD_Str:	
   694                           ; 1 bytes @ 0x6
   695                           
   696  0076                     ___lmul@multiplicand:	
   697                           ; 2 bytes @ 0x6
   698                           
   699  0076                     ___lldiv@dividend:	
   700                           ; 4 bytes @ 0x6
   701                           
   702                           
   703                           ; 4 bytes @ 0x6
   704  0076                     	ds	2
   705  0078                     ??_LCD_Print:
   706  0078                     LCD_Cmd@Command:	
   707                           ; 1 bytes @ 0x8
   708                           
   709                           
   710                           ; 1 bytes @ 0x8
   711  0078                     	ds	1
   712  0079                     ?_LCD_Goto:
   713  0079                     LCD_Goto@row:	
   714                           ; 1 bytes @ 0x9
   715                           
   716  0079                     LCD_Print@i:	
   717                           ; 1 bytes @ 0x9
   718                           
   719  0079                     LCD_Begin@_i2c_addr:	
   720                           ; 1 bytes @ 0x9
   721                           
   722                           
   723                           ; 1 bytes @ 0x9
   724  0079                     	ds	1
   725                           
   726                           	psect	cstackBANK0
   727  003A                     __pcstackBANK0:
   728  003A                     ??_LCD_Begin:
   729  003A                     ??_LCD_Goto:	
   730                           ; 1 bytes @ 0x0
   731                           
   732  003A                     ??___lmul:	
   733                           ; 1 bytes @ 0x0
   734                           
   735  003A                     ??___lldiv:	
   736                           ; 1 bytes @ 0x0
   737                           
   738                           
   739                           ; 1 bytes @ 0x0
   740  003A                     	ds	1
   741  003B                     ___lmul@product:
   742  003B                     ___lldiv@quotient:	
   743                           ; 4 bytes @ 0x1
   744                           
   745                           
   746                           ; 4 bytes @ 0x1
   747  003B                     	ds	1
   748  003C                     LCD_Goto@col:
   749                           
   750                           ; 1 bytes @ 0x2
   751  003C                     	ds	3
   752  003F                     ___lldiv@counter:
   753                           
   754                           ; 1 bytes @ 0x5
   755  003F                     	ds	1
   756  0040                     ?_I2C_Master_Init:
   757  0040                     I2C_Master_Init@c:	
   758                           ; 1 bytes @ 0x6
   759                           
   760                           
   761                           ; 4 bytes @ 0x6
   762  0040                     	ds	4
   763  0044                     ??_I2C_Master_Init:
   764                           
   765                           ; 1 bytes @ 0xA
   766  0044                     	ds	4
   767  0048                     ??_main:
   768                           
   769                           ; 1 bytes @ 0xE
   770  0048                     	ds	6
   771                           
   772                           	psect	maintext
   773  0024                     __pmaintext:	
   774 ;;
   775 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
   776 ;;
   777 ;; *************** function _main *****************
   778 ;; Defined at:
   779 ;;		line 71 in file "main.c"
   780 ;; Parameters:    Size  Location     Type
   781 ;;		None
   782 ;; Auto vars:     Size  Location     Type
   783 ;;		None
   784 ;; Return value:  Size  Location     Type
   785 ;;                  1    wreg      void 
   786 ;; Registers used:
   787 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   788 ;; Tracked objects:
   789 ;;		On entry : B00/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   793 ;;      Params:         0       0       0       0       0
   794 ;;      Locals:         0       0       0       0       0
   795 ;;      Temps:          0       6       0       0       0
   796 ;;      Totals:         0       6       0       0       0
   797 ;;Total ram usage:        6 bytes
   798 ;; Hardware stack levels required when called:    7
   799 ;; This function calls:
   800 ;;		_I2C_Master_Init
   801 ;;		_I2C_Master_Read
   802 ;;		_I2C_Master_Start
   803 ;;		_I2C_Master_Stop
   804 ;;		_I2C_Master_Write
   805 ;;		_Init_AHT10
   806 ;;		_LCD_Begin
   807 ;;		_LCD_Goto
   808 ;;		_LCD_Print
   809 ;;		_USART_Cadena
   810 ;;		_USART_Init
   811 ;;		_USART_Rx
   812 ;;		___lmul
   813 ;; This function is called by:
   814 ;;		Startup code after reset
   815 ;; This function uses a non-reentrant model
   816 ;;
   817                           
   818                           
   819                           ;psect for function _main
   820  0024                     _main:
   821  0024                     l1890:	
   822                           ;incstack = 0
   823                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   824                           
   825                           
   826                           ;main.c: 72:     USART_Init();
   827  0024  120A  118A  25C6  120A  118A  	fcall	_USART_Init
   828  0029                     l1892:
   829                           
   830                           ;main.c: 73:     ANSEL = 0b01100000;
   831  0029  3060               	movlw	96
   832  002A  1683               	bsf	3,5	;RP0=1, select bank3
   833  002B  1703               	bsf	3,6	;RP1=1, select bank3
   834  002C  0088               	movwf	8	;volatile
   835  002D                     l1894:
   836                           
   837                           ;main.c: 74:     ANSELH = 0x00;
   838  002D  0189               	clrf	9	;volatile
   839  002E                     l1896:
   840                           
   841                           ;main.c: 76:     TRISC = 0b10000000;
   842  002E  3080               	movlw	128
   843  002F  1683               	bsf	3,5	;RP0=1, select bank1
   844  0030  1303               	bcf	3,6	;RP1=0, select bank1
   845  0031  0087               	movwf	7	;volatile
   846  0032                     l1898:
   847                           
   848                           ;main.c: 77:     TRISE = 0b111;
   849  0032  3007               	movlw	7
   850  0033  0089               	movwf	9	;volatile
   851  0034                     l1900:
   852                           
   853                           ;main.c: 79:     OSCCONbits.IRCF = 0b111;
   854  0034  3070               	movlw	112
   855  0035  048F               	iorwf	15,f	;volatile
   856  0036                     l1902:
   857                           
   858                           ;main.c: 80:     OSCCONbits.SCS = 1;
   859  0036  140F               	bsf	15,0	;volatile
   860  0037                     l1904:
   861                           
   862                           ;main.c: 84:     ADCON1bits.ADFM = 0;
   863  0037  139F               	bcf	31,7	;volatile
   864  0038                     l1906:
   865                           
   866                           ;main.c: 85:     ADCON1bits.VCFG0 = 0;
   867  0038  121F               	bcf	31,4	;volatile
   868  0039                     l1908:
   869                           
   870                           ;main.c: 86:     ADCON1bits.VCFG1 = 0;
   871  0039  129F               	bcf	31,5	;volatile
   872  003A                     l1910:
   873                           
   874                           ;main.c: 87:     ADCON0bits.ADCS0 = 0;
   875  003A  1283               	bcf	3,5	;RP0=0, select bank0
   876  003B  1303               	bcf	3,6	;RP1=0, select bank0
   877  003C  131F               	bcf	31,6	;volatile
   878  003D                     l1912:
   879                           
   880                           ;main.c: 88:     ADCON0bits.ADCS1 = 1;
   881  003D  179F               	bsf	31,7	;volatile
   882  003E                     l1914:
   883                           
   884                           ;main.c: 89:     ADCON0bits.CHS = 5;
   885  003E  081F               	movf	31,w	;volatile
   886  003F  39C3               	andlw	-61
   887  0040  3814               	iorlw	20
   888  0041  009F               	movwf	31	;volatile
   889  0042                     l1916:
   890                           
   891                           ;main.c: 90:     _delay((unsigned long)((100)*(8000000/4000000.0)));
   892  0042  3041               	movlw	65
   893  0043  1283               	bcf	3,5	;RP0=0, select bank0
   894  0044  1303               	bcf	3,6	;RP1=0, select bank0
   895  0045  00C8               	movwf	??_main
   896  0046                     u837:
   897  0046  0BC8               	decfsz	??_main,f
   898  0047  2846               	goto	u837
   899  0048  2849               	nop2
   900  0049                     l1918:
   901                           
   902                           ;main.c: 91:     ADCON0bits.ADON = 1;
   903  0049  1283               	bcf	3,5	;RP0=0, select bank0
   904  004A  1303               	bcf	3,6	;RP1=0, select bank0
   905  004B  141F               	bsf	31,0	;volatile
   906  004C                     l1920:
   907                           
   908                           ;main.c: 93:     ADCON0bits.GO = 1;
   909  004C  149F               	bsf	31,1	;volatile
   910  004D                     l1922:
   911                           
   912                           ;main.c: 96:     I2C_Master_Init(100000);
   913  004D  3000               	movlw	0
   914  004E  00C3               	movwf	I2C_Master_Init@c+3
   915  004F  3001               	movlw	1
   916  0050  00C2               	movwf	I2C_Master_Init@c+2
   917  0051  3086               	movlw	134
   918  0052  00C1               	movwf	I2C_Master_Init@c+1
   919  0053  30A0               	movlw	160
   920  0054  00C0               	movwf	I2C_Master_Init@c
   921  0055  120A  118A  24BC  120A  118A  	fcall	_I2C_Master_Init
   922  005A                     l1924:
   923                           
   924                           ;main.c: 97:     Init_AHT10();
   925  005A  120A  118A  243C  120A  118A  	fcall	_Init_AHT10
   926  005F                     l1926:
   927                           
   928                           ;main.c: 101:     PORTA = 0x00;
   929  005F  1283               	bcf	3,5	;RP0=0, select bank0
   930  0060  1303               	bcf	3,6	;RP1=0, select bank0
   931  0061  0185               	clrf	5	;volatile
   932  0062                     l1928:
   933                           
   934                           ;main.c: 102:     PORTC = 0x00;
   935  0062  0187               	clrf	7	;volatile
   936  0063                     l1930:
   937                           
   938                           ;main.c: 103:     PORTD = 0x00;
   939  0063  0188               	clrf	8	;volatile
   940                           
   941                           ;main.c: 105:     LCD_Begin(0x40);
   942  0064  3040               	movlw	64
   943  0065  120A  118A  22A9  120A  118A  	fcall	_LCD_Begin
   944  006A                     l1932:
   945                           
   946                           ;main.c: 106:     LCD_Goto(1, 1);
   947  006A  01F9               	clrf	LCD_Goto@row
   948  006B  0AF9               	incf	LCD_Goto@row,f
   949  006C  3001               	movlw	1
   950  006D  120A  118A  2484  120A  118A  	fcall	_LCD_Goto
   951  0072                     l1934:
   952                           
   953                           ;main.c: 107:     LCD_Print("Hello, world!");
   954  0072  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   955  0073  00F6               	movwf	LCD_Print@LCD_Str
   956  0074  3080               	movlw	128
   957  0075  00F7               	movwf	LCD_Print@LCD_Str+1
   958  0076  120A  118A  23AA  120A  118A  	fcall	_LCD_Print
   959  007B                     l1936:
   960                           
   961                           ;main.c: 115:         I2C_Master_Start();
   962  007B  120A  118A  2608  120A  118A  	fcall	_I2C_Master_Start
   963  0080                     l1938:
   964                           
   965                           ;main.c: 116:         I2C_Master_Write(0x70);
   966  0080  3070               	movlw	112
   967  0081  120A  118A  25F4  120A  118A  	fcall	_I2C_Master_Write
   968  0086                     l1940:
   969                           
   970                           ;main.c: 117:         I2C_Master_Write(0xAC);
   971  0086  30AC               	movlw	172
   972  0087  120A  118A  25F4  120A  118A  	fcall	_I2C_Master_Write
   973  008C                     l1942:
   974                           
   975                           ;main.c: 118:         I2C_Master_Write(0x33);
   976  008C  3033               	movlw	51
   977  008D  120A  118A  25F4  120A  118A  	fcall	_I2C_Master_Write
   978  0092                     l1944:
   979                           
   980                           ;main.c: 119:         I2C_Master_Write(0x00);
   981  0092  3000               	movlw	0
   982  0093  120A  118A  25F4  120A  118A  	fcall	_I2C_Master_Write
   983  0098                     l1946:
   984                           
   985                           ;main.c: 120:         I2C_Master_Stop();
   986  0098  120A  118A  25FF  120A  118A  	fcall	_I2C_Master_Stop
   987  009D                     l1948:
   988                           
   989                           ;main.c: 121:         _delay((unsigned long)((75)*(8000000/4000.0)));
   990  009D  30C3               	movlw	195
   991  009E  1283               	bcf	3,5	;RP0=0, select bank0
   992  009F  1303               	bcf	3,6	;RP1=0, select bank0
   993  00A0  00C9               	movwf	??_main+1
   994  00A1  30CC               	movlw	204
   995  00A2  00C8               	movwf	??_main
   996  00A3                     u847:
   997  00A3  0BC8               	decfsz	??_main,f
   998  00A4  28A3               	goto	u847
   999  00A5  0BC9               	decfsz	??_main+1,f
  1000  00A6  28A3               	goto	u847
  1001  00A7  0000               	nop
  1002  00A8                     l1950:
  1003                           
  1004                           ;main.c: 124:         I2C_Master_Start();
  1005  00A8  120A  118A  2608  120A  118A  	fcall	_I2C_Master_Start
  1006  00AD                     l1952:
  1007                           
  1008                           ;main.c: 125:         I2C_Master_Write(0x71);
  1009  00AD  3071               	movlw	113
  1010  00AE  120A  118A  25F4  120A  118A  	fcall	_I2C_Master_Write
  1011  00B3                     l1954:
  1012                           
  1013                           ;main.c: 126:         DataBuffer[0] = I2C_Master_Read(0);
  1014  00B3  3000               	movlw	0
  1015  00B4  120A  118A  2522  120A  118A  	fcall	_I2C_Master_Read
  1016  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  1017  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  1018  00BB  00C8               	movwf	??_main
  1019  00BC  0848               	movf	??_main,w
  1020  00BD  00A0               	movwf	_DataBuffer
  1021  00BE                     l1956:
  1022                           
  1023                           ;main.c: 127:         DataBuffer[1] = I2C_Master_Read(0);
  1024  00BE  3000               	movlw	0
  1025  00BF  120A  118A  2522  120A  118A  	fcall	_I2C_Master_Read
  1026  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  1027  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  1028  00C6  00C8               	movwf	??_main
  1029  00C7  0848               	movf	??_main,w
  1030  00C8  00A1               	movwf	_DataBuffer+1
  1031  00C9                     l1958:
  1032                           
  1033                           ;main.c: 128:         DataBuffer[2] = I2C_Master_Read(0);
  1034  00C9  3000               	movlw	0
  1035  00CA  120A  118A  2522  120A  118A  	fcall	_I2C_Master_Read
  1036  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1037  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1038  00D1  00C8               	movwf	??_main
  1039  00D2  0848               	movf	??_main,w
  1040  00D3  00A2               	movwf	_DataBuffer+2
  1041  00D4                     l1960:
  1042                           
  1043                           ;main.c: 129:         DataBuffer[3] = I2C_Master_Read(0);
  1044  00D4  3000               	movlw	0
  1045  00D5  120A  118A  2522  120A  118A  	fcall	_I2C_Master_Read
  1046  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  1047  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  1048  00DC  00C8               	movwf	??_main
  1049  00DD  0848               	movf	??_main,w
  1050  00DE  00A3               	movwf	_DataBuffer+3
  1051  00DF                     l1962:
  1052                           
  1053                           ;main.c: 130:         DataBuffer[4] = I2C_Master_Read(0);
  1054  00DF  3000               	movlw	0
  1055  00E0  120A  118A  2522  120A  118A  	fcall	_I2C_Master_Read
  1056  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1057  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  1058  00E7  00C8               	movwf	??_main
  1059  00E8  0848               	movf	??_main,w
  1060  00E9  00A4               	movwf	_DataBuffer+4
  1061  00EA                     l1964:
  1062                           
  1063                           ;main.c: 131:         DataBuffer[5] = I2C_Master_Read(0);
  1064  00EA  3000               	movlw	0
  1065  00EB  120A  118A  2522  120A  118A  	fcall	_I2C_Master_Read
  1066  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  1067  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  1068  00F2  00C8               	movwf	??_main
  1069  00F3  0848               	movf	??_main,w
  1070  00F4  00A5               	movwf	_DataBuffer+5
  1071  00F5                     l1966:
  1072                           
  1073                           ;main.c: 132:         I2C_Master_Stop();
  1074  00F5  120A  118A  25FF  120A  118A  	fcall	_I2C_Master_Stop
  1075  00FA                     l1968:
  1076                           
  1077                           ;main.c: 133:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1078  00FA  3003               	movlw	3
  1079  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1080  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1081  00FD  00CA               	movwf	??_main+2
  1082  00FE  3008               	movlw	8
  1083  00FF  00C9               	movwf	??_main+1
  1084  0100  3076               	movlw	118
  1085  0101  00C8               	movwf	??_main
  1086  0102                     u857:
  1087  0102  0BC8               	decfsz	??_main,f
  1088  0103  2902               	goto	u857
  1089  0104  0BC9               	decfsz	??_main+1,f
  1090  0105  2902               	goto	u857
  1091  0106  0BCA               	decfsz	??_main+2,f
  1092  0107  2902               	goto	u857
  1093  0108  0000               	nop
  1094  0109                     l1970:
  1095                           
  1096                           ;main.c: 142:         Raw_temperatura = ((uint32_t)(DataBuffer[3] & 0x0F) <<16);
  1097  0109  1283               	bcf	3,5	;RP0=0, select bank0
  1098  010A  1303               	bcf	3,6	;RP1=0, select bank0
  1099  010B  0823               	movf	_DataBuffer+3,w
  1100  010C  390F               	andlw	15
  1101  010D  00C8               	movwf	??_main
  1102  010E  01C9               	clrf	??_main+1
  1103  010F  01CA               	clrf	??_main+2
  1104  0110  01CB               	clrf	??_main+3
  1105  0111  3010               	movlw	16
  1106  0112                     u765:
  1107  0112  1003               	clrc
  1108  0113  0DC8               	rlf	??_main,f
  1109  0114  0DC9               	rlf	??_main+1,f
  1110  0115  0DCA               	rlf	??_main+2,f
  1111  0116  0DCB               	rlf	??_main+3,f
  1112  0117                     u760:
  1113  0117  3EFF               	addlw	-1
  1114  0118  1D03               	skipz
  1115  0119  2912               	goto	u765
  1116  011A  084B               	movf	??_main+3,w
  1117  011B  00AD               	movwf	_Raw_temperatura+3
  1118  011C  084A               	movf	??_main+2,w
  1119  011D  00AC               	movwf	_Raw_temperatura+2
  1120  011E  0849               	movf	??_main+1,w
  1121  011F  00AB               	movwf	_Raw_temperatura+1
  1122  0120  0848               	movf	??_main,w
  1123  0121  00AA               	movwf	_Raw_temperatura
  1124  0122                     l1972:
  1125                           
  1126                           ;main.c: 143:         Raw_temperatura |=((uint16_t)DataBuffer[4]<<8);
  1127  0122  0824               	movf	_DataBuffer+4,w
  1128  0123  00C8               	movwf	??_main
  1129  0124  01C9               	clrf	??_main+1
  1130  0125  0848               	movf	??_main,w
  1131  0126  00C9               	movwf	??_main+1
  1132  0127  01C8               	clrf	??_main
  1133  0128  0848               	movf	??_main,w
  1134  0129  00CA               	movwf	??_main+2
  1135  012A  0849               	movf	??_main+1,w
  1136  012B  00CB               	movwf	??_main+3
  1137  012C  01CC               	clrf	??_main+4
  1138  012D  01CD               	clrf	??_main+5
  1139  012E  084A               	movf	??_main+2,w
  1140  012F  04AA               	iorwf	_Raw_temperatura,f
  1141  0130  084B               	movf	??_main+3,w
  1142  0131  04AB               	iorwf	_Raw_temperatura+1,f
  1143  0132  084C               	movf	??_main+4,w
  1144  0133  04AC               	iorwf	_Raw_temperatura+2,f
  1145  0134  084D               	movf	??_main+5,w
  1146  0135  04AD               	iorwf	_Raw_temperatura+3,f
  1147  0136                     l1974:
  1148                           
  1149                           ;main.c: 144:         Raw_temperatura |=DataBuffer[5];
  1150  0136  0825               	movf	_DataBuffer+5,w
  1151  0137  04AA               	iorwf	_Raw_temperatura,f
  1152  0138                     l1976:
  1153                           
  1154                           ;main.c: 145:         temperatura = Raw_temperatura * 200 / 1048576 - 50;
  1155  0138  082D               	movf	_Raw_temperatura+3,w
  1156  0139  00F5               	movwf	___lmul@multiplier+3
  1157  013A  082C               	movf	_Raw_temperatura+2,w
  1158  013B  00F4               	movwf	___lmul@multiplier+2
  1159  013C  082B               	movf	_Raw_temperatura+1,w
  1160  013D  00F3               	movwf	___lmul@multiplier+1
  1161  013E  082A               	movf	_Raw_temperatura,w
  1162  013F  00F2               	movwf	___lmul@multiplier
  1163  0140  3000               	movlw	0
  1164  0141  00F9               	movwf	___lmul@multiplicand+3
  1165  0142  3000               	movlw	0
  1166  0143  00F8               	movwf	___lmul@multiplicand+2
  1167  0144  3000               	movlw	0
  1168  0145  00F7               	movwf	___lmul@multiplicand+1
  1169  0146  30C8               	movlw	200
  1170  0147  00F6               	movwf	___lmul@multiplicand
  1171  0148  120A  118A  23F4  120A  118A  	fcall	___lmul
  1172  014D  0872               	movf	?___lmul,w
  1173  014E  1283               	bcf	3,5	;RP0=0, select bank0
  1174  014F  1303               	bcf	3,6	;RP1=0, select bank0
  1175  0150  00C8               	movwf	??_main
  1176  0151  0873               	movf	?___lmul+1,w
  1177  0152  00C9               	movwf	??_main+1
  1178  0153  0874               	movf	?___lmul+2,w
  1179  0154  00CA               	movwf	??_main+2
  1180  0155  0875               	movf	?___lmul+3,w
  1181  0156  00CB               	movwf	??_main+3
  1182  0157  3014               	movlw	20
  1183  0158                     u775:
  1184  0158  1003               	clrc
  1185  0159  0CCB               	rrf	??_main+3,f
  1186  015A  0CCA               	rrf	??_main+2,f
  1187  015B  0CC9               	rrf	??_main+1,f
  1188  015C  0CC8               	rrf	??_main,f
  1189  015D                     u770:
  1190  015D  3EFF               	addlw	-1
  1191  015E  1D03               	skipz
  1192  015F  2958               	goto	u775
  1193  0160  0848               	movf	??_main,w
  1194  0161  3ECE               	addlw	206
  1195  0162  00B8               	movwf	_temperatura
  1196  0163  0849               	movf	??_main+1,w
  1197  0164  1803               	skipnc
  1198  0165  3E01               	addlw	1
  1199  0166  3EFF               	addlw	255
  1200  0167  00B9               	movwf	_temperatura+1
  1201  0168                     l1978:
  1202                           
  1203                           ;main.c: 148:         I2C_Master_Start();
  1204  0168  120A  118A  2608  120A  118A  	fcall	_I2C_Master_Start
  1205  016D                     l1980:
  1206                           
  1207                           ;main.c: 149:         I2C_Master_Write(0x80);
  1208  016D  3080               	movlw	128
  1209  016E  120A  118A  25F4  120A  118A  	fcall	_I2C_Master_Write
  1210  0173                     l1982:
  1211                           
  1212                           ;main.c: 150:         I2C_Master_Write(0xF3);
  1213  0173  30F3               	movlw	243
  1214  0174  120A  118A  25F4  120A  118A  	fcall	_I2C_Master_Write
  1215  0179                     l1984:
  1216                           
  1217                           ;main.c: 151:         I2C_Master_Stop();
  1218  0179  120A  118A  25FF  120A  118A  	fcall	_I2C_Master_Stop
  1219  017E                     l1986:
  1220                           
  1221                           ;main.c: 152:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1222  017E  3003               	movlw	3
  1223  017F  1283               	bcf	3,5	;RP0=0, select bank0
  1224  0180  1303               	bcf	3,6	;RP1=0, select bank0
  1225  0181  00CA               	movwf	??_main+2
  1226  0182  3008               	movlw	8
  1227  0183  00C9               	movwf	??_main+1
  1228  0184  3076               	movlw	118
  1229  0185  00C8               	movwf	??_main
  1230  0186                     u867:
  1231  0186  0BC8               	decfsz	??_main,f
  1232  0187  2986               	goto	u867
  1233  0188  0BC9               	decfsz	??_main+1,f
  1234  0189  2986               	goto	u867
  1235  018A  0BCA               	decfsz	??_main+2,f
  1236  018B  2986               	goto	u867
  1237  018C  0000               	nop
  1238  018D                     l1988:
  1239                           
  1240                           ;main.c: 153:         I2C_Master_Start();
  1241  018D  120A  118A  2608  120A  118A  	fcall	_I2C_Master_Start
  1242  0192                     l1990:
  1243                           
  1244                           ;main.c: 154:         I2C_Master_Write(0x81);
  1245  0192  3081               	movlw	129
  1246  0193  120A  118A  25F4  120A  118A  	fcall	_I2C_Master_Write
  1247  0198                     l1992:
  1248                           
  1249                           ;main.c: 155:         humedad_tem = ((I2C_Master_Read(0))<<8);
  1250  0198  3000               	movlw	0
  1251  0199  120A  118A  2522  120A  118A  	fcall	_I2C_Master_Read
  1252  019E  1283               	bcf	3,5	;RP0=0, select bank0
  1253  019F  1303               	bcf	3,6	;RP1=0, select bank0
  1254  01A0  00C8               	movwf	??_main
  1255  01A1  01C9               	clrf	??_main+1
  1256  01A2  0848               	movf	??_main,w
  1257  01A3  00C9               	movwf	??_main+1
  1258  01A4  01C8               	clrf	??_main
  1259  01A5  0848               	movf	??_main,w
  1260  01A6  00AE               	movwf	_humedad_tem
  1261  01A7  0849               	movf	??_main+1,w
  1262  01A8  00AF               	movwf	_humedad_tem+1
  1263  01A9                     l1994:
  1264                           
  1265                           ;main.c: 156:         humedad_tem += I2C_Master_Read(0);
  1266  01A9  3000               	movlw	0
  1267  01AA  120A  118A  2522  120A  118A  	fcall	_I2C_Master_Read
  1268  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  1269  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  1270  01B1  00C8               	movwf	??_main
  1271  01B2  01C9               	clrf	??_main+1
  1272  01B3  0848               	movf	??_main,w
  1273  01B4  07AE               	addwf	_humedad_tem,f
  1274  01B5  1803               	skipnc
  1275  01B6  0AAF               	incf	_humedad_tem+1,f
  1276  01B7  0849               	movf	??_main+1,w
  1277  01B8  07AF               	addwf	_humedad_tem+1,f
  1278  01B9                     l1996:
  1279                           
  1280                           ;main.c: 157:         I2C_Master_Stop();
  1281  01B9  120A  118A  25FF  120A  118A  	fcall	_I2C_Master_Stop
  1282  01BE                     l1998:
  1283                           
  1284                           ;main.c: 158:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1285  01BE  3003               	movlw	3
  1286  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  1287  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  1288  01C1  00CA               	movwf	??_main+2
  1289  01C2  3008               	movlw	8
  1290  01C3  00C9               	movwf	??_main+1
  1291  01C4  3076               	movlw	118
  1292  01C5  00C8               	movwf	??_main
  1293  01C6                     u877:
  1294  01C6  0BC8               	decfsz	??_main,f
  1295  01C7  29C6               	goto	u877
  1296  01C8  0BC9               	decfsz	??_main+1,f
  1297  01C9  29C6               	goto	u877
  1298  01CA  0BCA               	decfsz	??_main+2,f
  1299  01CB  29C6               	goto	u877
  1300  01CC  0000               	nop
  1301  01CD                     l2000:
  1302                           
  1303                           ;main.c: 159:         humedad = 175 - ((25/22)*humedad_tem);
  1304  01CD  1283               	bcf	3,5	;RP0=0, select bank0
  1305  01CE  1303               	bcf	3,6	;RP1=0, select bank0
  1306  01CF  082E               	movf	_humedad_tem,w
  1307  01D0  3CAF               	sublw	175
  1308  01D1  00C8               	movwf	??_main
  1309  01D2  0848               	movf	??_main,w
  1310  01D3  00FB               	movwf	_humedad
  1311  01D4                     l2004:	
  1312                           ;main.c: 162:         if(humedad < 0){humedad = 0;}
  1313                           
  1314                           
  1315                           ;main.c: 163:         if(humedad > 100){humedad = 100;}
  1316  01D4  3065               	movlw	101
  1317  01D5  027B               	subwf	_humedad,w
  1318  01D6  1C03               	skipc
  1319  01D7  29D9               	goto	u781
  1320  01D8  29DA               	goto	u780
  1321  01D9                     u781:
  1322  01D9  29DE               	goto	l2008
  1323  01DA                     u780:
  1324  01DA                     l2006:
  1325  01DA  3064               	movlw	100
  1326  01DB  00C8               	movwf	??_main
  1327  01DC  0848               	movf	??_main,w
  1328  01DD  00FB               	movwf	_humedad
  1329  01DE                     l2008:
  1330                           
  1331                           ;main.c: 166:         LCD_Goto(1, 2);
  1332  01DE  3002               	movlw	2
  1333  01DF  00C8               	movwf	??_main
  1334  01E0  0848               	movf	??_main,w
  1335  01E1  00F9               	movwf	LCD_Goto@row
  1336  01E2  3001               	movlw	1
  1337  01E3  120A  118A  2484  120A  118A  	fcall	_LCD_Goto
  1338  01E8                     l2010:
  1339                           
  1340                           ;main.c: 167:         LCD_Print(&humedad);
  1341  01E8  307B               	movlw	(low (_humedad| 0))& (0+255)
  1342  01E9  00F6               	movwf	LCD_Print@LCD_Str
  1343  01EA  3000               	movlw	0
  1344  01EB  00F7               	movwf	LCD_Print@LCD_Str+1
  1345  01EC  120A  118A  23AA  120A  118A  	fcall	_LCD_Print
  1346  01F1                     l2012:
  1347                           
  1348                           ;main.c: 168:         LCD_Print("%");
  1349  01F1  3013               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1350  01F2  00F6               	movwf	LCD_Print@LCD_Str
  1351  01F3  3080               	movlw	128
  1352  01F4  00F7               	movwf	LCD_Print@LCD_Str+1
  1353  01F5  120A  118A  23AA  120A  118A  	fcall	_LCD_Print
  1354  01FA                     l2014:
  1355                           
  1356                           ;main.c: 170:         LCD_Goto(7, 2);
  1357  01FA  3002               	movlw	2
  1358  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  1359  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  1360  01FD  00C8               	movwf	??_main
  1361  01FE  0848               	movf	??_main,w
  1362  01FF  00F9               	movwf	LCD_Goto@row
  1363  0200  3007               	movlw	7
  1364  0201  120A  118A  2484  120A  118A  	fcall	_LCD_Goto
  1365  0206                     l2016:
  1366                           
  1367                           ;main.c: 171:         LCD_Print(&temperatura);
  1368  0206  3038               	movlw	(low (_temperatura| 0))& (0+255)
  1369  0207  00F6               	movwf	LCD_Print@LCD_Str
  1370  0208  3000               	movlw	0
  1371  0209  00F7               	movwf	LCD_Print@LCD_Str+1
  1372  020A  120A  118A  23AA  120A  118A  	fcall	_LCD_Print
  1373  020F                     l2018:
  1374                           
  1375                           ;main.c: 172:         LCD_Goto(11, 2);
  1376  020F  3002               	movlw	2
  1377  0210  1283               	bcf	3,5	;RP0=0, select bank0
  1378  0211  1303               	bcf	3,6	;RP1=0, select bank0
  1379  0212  00C8               	movwf	??_main
  1380  0213  0848               	movf	??_main,w
  1381  0214  00F9               	movwf	LCD_Goto@row
  1382  0215  300B               	movlw	11
  1383  0216  120A  118A  2484  120A  118A  	fcall	_LCD_Goto
  1384  021B                     l2020:
  1385                           
  1386                           ;main.c: 173:         LCD_Print("Â°C");
  1387  021B  300F               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1388  021C  00F6               	movwf	LCD_Print@LCD_Str
  1389  021D  3080               	movlw	128
  1390  021E  00F7               	movwf	LCD_Print@LCD_Str+1
  1391  021F  120A  118A  23AA  120A  118A  	fcall	_LCD_Print
  1392  0224                     l2022:
  1393                           
  1394                           ;main.c: 175:         if (PIR1bits.RCIF == 1){
  1395  0224  1283               	bcf	3,5	;RP0=0, select bank0
  1396  0225  1303               	bcf	3,6	;RP1=0, select bank0
  1397  0226  1E8C               	btfss	12,5	;volatile
  1398  0227  2A29               	goto	u791
  1399  0228  2A2A               	goto	u790
  1400  0229                     u791:
  1401  0229  2A34               	goto	l2026
  1402  022A                     u790:
  1403  022A                     l2024:
  1404                           
  1405                           ;main.c: 176:             ingreso = USART_Rx();
  1406  022A  120A  118A  2620  120A  118A  	fcall	_USART_Rx
  1407  022F  1283               	bcf	3,5	;RP0=0, select bank0
  1408  0230  1303               	bcf	3,6	;RP1=0, select bank0
  1409  0231  00C8               	movwf	??_main
  1410  0232  0848               	movf	??_main,w
  1411  0233  00B2               	movwf	_ingreso
  1412  0234                     l2026:
  1413                           
  1414                           ;main.c: 178:         if(ingreso == 'h'){
  1415  0234  3068               	movlw	104
  1416  0235  0632               	xorwf	_ingreso,w
  1417  0236  1D03               	btfss	3,2
  1418  0237  2A39               	goto	u801
  1419  0238  2A3A               	goto	u800
  1420  0239                     u801:
  1421  0239  2A40               	goto	l2030
  1422  023A                     u800:
  1423  023A                     l2028:
  1424                           
  1425                           ;main.c: 179:             USART_Cadena(&humedad);
  1426  023A  307B               	movlw	(low (_humedad| 0))& (0+255)
  1427  023B  120A  118A  25AF  120A  118A  	fcall	_USART_Cadena
  1428  0240                     l2030:
  1429                           
  1430                           ;main.c: 181:         if(ingreso == 't'){
  1431  0240  3074               	movlw	116
  1432  0241  1283               	bcf	3,5	;RP0=0, select bank0
  1433  0242  1303               	bcf	3,6	;RP1=0, select bank0
  1434  0243  0632               	xorwf	_ingreso,w
  1435  0244  1D03               	btfss	3,2
  1436  0245  2A47               	goto	u811
  1437  0246  2A48               	goto	u810
  1438  0247                     u811:
  1439  0247  2A4E               	goto	l2034
  1440  0248                     u810:
  1441  0248                     l2032:
  1442                           
  1443                           ;main.c: 182:             USART_Cadena(&temperatura);
  1444  0248  3038               	movlw	(low (_temperatura| 0))& (0+255)
  1445  0249  120A  118A  25AF  120A  118A  	fcall	_USART_Cadena
  1446  024E                     l2034:
  1447                           
  1448                           ;main.c: 184:         ingreso = 0;
  1449  024E  1283               	bcf	3,5	;RP0=0, select bank0
  1450  024F  1303               	bcf	3,6	;RP1=0, select bank0
  1451  0250  01B2               	clrf	_ingreso
  1452                           
  1453                           ;main.c: 186:         switch(temperatura){
  1454  0251  2A61               	goto	l2044
  1455  0252                     l2036:
  1456                           
  1457                           ;main.c: 188:                 actuador = 0b00000011;
  1458  0252  3003               	movlw	3
  1459  0253  00C8               	movwf	??_main
  1460  0254  0848               	movf	??_main,w
  1461  0255  00B1               	movwf	_actuador
  1462                           
  1463                           ;main.c: 189:                 break;
  1464  0256  2A74               	goto	l2046
  1465  0257                     l2038:
  1466                           
  1467                           ;main.c: 191:                 actuador = 0b00000010;
  1468  0257  3002               	movlw	2
  1469  0258  00C8               	movwf	??_main
  1470  0259  0848               	movf	??_main,w
  1471  025A  00B1               	movwf	_actuador
  1472                           
  1473                           ;main.c: 192:                 break;
  1474  025B  2A74               	goto	l2046
  1475  025C                     l96:	
  1476                           ;main.c: 193:             case(24):
  1477                           
  1478                           
  1479                           ;main.c: 194:                 actuador = 0b00000001;
  1480  025C  01B1               	clrf	_actuador
  1481  025D  0AB1               	incf	_actuador,f
  1482                           
  1483                           ;main.c: 195:                 break;
  1484  025E  2A74               	goto	l2046
  1485  025F                     l2040:
  1486                           
  1487                           ;main.c: 197:                 actuador = 0b00000000;
  1488  025F  01B1               	clrf	_actuador
  1489                           
  1490                           ;main.c: 198:                 break;
  1491  0260  2A74               	goto	l2046
  1492  0261                     l2044:
  1493                           
  1494                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1495                           ; Switch size 1, requested type "simple"
  1496                           ; Number of cases is 1, Range of values is 0 to 0
  1497                           ; switch strategies available:
  1498                           ; Name         Instructions Cycles
  1499                           ; simple_byte            4     3 (average)
  1500                           ; direct_byte           11     8 (fixed)
  1501                           ; jumptable            260     6 (fixed)
  1502                           ;	Chosen strategy is simple_byte
  1503  0261  0839               	movf	_temperatura+1,w
  1504  0262  3A00               	xorlw	0	; case 0
  1505  0263  1903               	skipnz
  1506  0264  2A66               	goto	l2114
  1507  0265  2A74               	goto	l2046
  1508  0266                     l2114:
  1509                           
  1510                           ; Switch size 1, requested type "simple"
  1511                           ; Number of cases is 4, Range of values is 22 to 28
  1512                           ; switch strategies available:
  1513                           ; Name         Instructions Cycles
  1514                           ; simple_byte           13     7 (average)
  1515                           ; direct_byte           32    11 (fixed)
  1516                           ; jumptable            263     9 (fixed)
  1517                           ;	Chosen strategy is simple_byte
  1518  0266  0838               	movf	_temperatura,w
  1519  0267  3A16               	xorlw	22	; case 22
  1520  0268  1903               	skipnz
  1521  0269  2A5F               	goto	l2040
  1522  026A  3A0E               	xorlw	14	; case 24
  1523  026B  1903               	skipnz
  1524  026C  2A5C               	goto	l96
  1525  026D  3A02               	xorlw	2	; case 26
  1526  026E  1903               	skipnz
  1527  026F  2A57               	goto	l2038
  1528  0270  3A06               	xorlw	6	; case 28
  1529  0271  1903               	skipnz
  1530  0272  2A52               	goto	l2036
  1531  0273  2A74               	goto	l2046
  1532  0274                     l2046:
  1533                           
  1534                           ;main.c: 201:         if (humedad < 22){
  1535  0274  3016               	movlw	22
  1536  0275  027B               	subwf	_humedad,w
  1537  0276  1803               	skipnc
  1538  0277  2A79               	goto	u821
  1539  0278  2A7A               	goto	u820
  1540  0279                     u821:
  1541  0279  2A7F               	goto	l2050
  1542  027A                     u820:
  1543  027A                     l2048:
  1544                           
  1545                           ;main.c: 202:             actuador = actuador | 0b00000100;
  1546  027A  0831               	movf	_actuador,w
  1547  027B  3804               	iorlw	4
  1548  027C  00C8               	movwf	??_main
  1549  027D  0848               	movf	??_main,w
  1550  027E  00B1               	movwf	_actuador
  1551  027F                     l2050:
  1552                           
  1553                           ;main.c: 206:         I2C_Master_Start();
  1554  027F  120A  118A  2608  120A  118A  	fcall	_I2C_Master_Start
  1555  0284                     l2052:
  1556                           
  1557                           ;main.c: 207:         I2C_Master_Write(0x50);
  1558  0284  3050               	movlw	80
  1559  0285  120A  118A  25F4  120A  118A  	fcall	_I2C_Master_Write
  1560  028A                     l2054:
  1561                           
  1562                           ;main.c: 208:         I2C_Master_Write(actuador);
  1563  028A  1283               	bcf	3,5	;RP0=0, select bank0
  1564  028B  1303               	bcf	3,6	;RP1=0, select bank0
  1565  028C  0831               	movf	_actuador,w
  1566  028D  120A  118A  25F4  120A  118A  	fcall	_I2C_Master_Write
  1567  0292                     l2056:
  1568                           
  1569                           ;main.c: 209:         I2C_Master_Stop();
  1570  0292  120A  118A  25FF  120A  118A  	fcall	_I2C_Master_Stop
  1571  0297                     l2058:
  1572                           
  1573                           ;main.c: 211:          _delay((unsigned long)((500)*(8000000/4000.0)));
  1574  0297  3006               	movlw	6
  1575  0298  1283               	bcf	3,5	;RP0=0, select bank0
  1576  0299  1303               	bcf	3,6	;RP1=0, select bank0
  1577  029A  00CA               	movwf	??_main+2
  1578  029B  3013               	movlw	19
  1579  029C  00C9               	movwf	??_main+1
  1580  029D  30AD               	movlw	173
  1581  029E  00C8               	movwf	??_main
  1582  029F                     u887:
  1583  029F  0BC8               	decfsz	??_main,f
  1584  02A0  2A9F               	goto	u887
  1585  02A1  0BC9               	decfsz	??_main+1,f
  1586  02A2  2A9F               	goto	u887
  1587  02A3  0BCA               	decfsz	??_main+2,f
  1588  02A4  2A9F               	goto	u887
  1589  02A5  287B               	goto	l1936
  1590  02A6  120A  118A  280C   	ljmp	start
  1591  02A9                     __end_of_main:
  1592                           
  1593                           	psect	text1
  1594  03F4                     __ptext1:	
  1595 ;; *************** function ___lmul *****************
  1596 ;; Defined at:
  1597 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul32.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;  multiplier      4    2[COMMON] unsigned long 
  1600 ;;  multiplicand    4    6[COMMON] unsigned long 
  1601 ;; Auto vars:     Size  Location     Type
  1602 ;;  product         4    1[BANK0 ] unsigned long 
  1603 ;; Return value:  Size  Location     Type
  1604 ;;                  4    2[COMMON] unsigned long 
  1605 ;; Registers used:
  1606 ;;		wreg, status,2, status,0
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1612 ;;      Params:         8       0       0       0       0
  1613 ;;      Locals:         0       4       0       0       0
  1614 ;;      Temps:          0       1       0       0       0
  1615 ;;      Totals:         8       5       0       0       0
  1616 ;;Total ram usage:       13 bytes
  1617 ;; Hardware stack levels used:    1
  1618 ;; Hardware stack levels required when called:    1
  1619 ;; This function calls:
  1620 ;;		Nothing
  1621 ;; This function is called by:
  1622 ;;		_main
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626                           
  1627                           ;psect for function ___lmul
  1628  03F4                     ___lmul:
  1629  03F4                     l1876:	
  1630                           ;incstack = 0
  1631                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1632                           
  1633  03F4  3000               	movlw	0
  1634  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  1635  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  1636  03F7  00BE               	movwf	___lmul@product+3
  1637  03F8  3000               	movlw	0
  1638  03F9  00BD               	movwf	___lmul@product+2
  1639  03FA  3000               	movlw	0
  1640  03FB  00BC               	movwf	___lmul@product+1
  1641  03FC  3000               	movlw	0
  1642  03FD  00BB               	movwf	___lmul@product
  1643  03FE                     l1878:
  1644  03FE  1C72               	btfss	___lmul@multiplier,0
  1645  03FF  2C01               	goto	u711
  1646  0400  2C02               	goto	u710
  1647  0401                     u711:
  1648  0401  2C19               	goto	l1882
  1649  0402                     u710:
  1650  0402                     l1880:
  1651  0402  0876               	movf	___lmul@multiplicand,w
  1652  0403  07BB               	addwf	___lmul@product,f
  1653  0404  0877               	movf	___lmul@multiplicand+1,w
  1654  0405  1103               	clrz
  1655  0406  1803               	skipnc
  1656  0407  3E01               	addlw	1
  1657  0408  1903               	skipnz
  1658  0409  2C0B               	goto	u721
  1659  040A  07BC               	addwf	___lmul@product+1,f
  1660  040B                     u721:
  1661  040B  0878               	movf	___lmul@multiplicand+2,w
  1662  040C  1103               	clrz
  1663  040D  1803               	skipnc
  1664  040E  3E01               	addlw	1
  1665  040F  1903               	skipnz
  1666  0410  2C12               	goto	u722
  1667  0411  07BD               	addwf	___lmul@product+2,f
  1668  0412                     u722:
  1669  0412  0879               	movf	___lmul@multiplicand+3,w
  1670  0413  1103               	clrz
  1671  0414  1803               	skipnc
  1672  0415  3E01               	addlw	1
  1673  0416  1903               	skipnz
  1674  0417  2C19               	goto	u723
  1675  0418  07BE               	addwf	___lmul@product+3,f
  1676  0419                     u723:
  1677  0419                     l1882:
  1678  0419  3001               	movlw	1
  1679  041A  00BA               	movwf	??___lmul
  1680  041B                     u735:
  1681  041B  1003               	clrc
  1682  041C  0DF6               	rlf	___lmul@multiplicand,f
  1683  041D  0DF7               	rlf	___lmul@multiplicand+1,f
  1684  041E  0DF8               	rlf	___lmul@multiplicand+2,f
  1685  041F  0DF9               	rlf	___lmul@multiplicand+3,f
  1686  0420  0BBA               	decfsz	??___lmul,f
  1687  0421  2C1B               	goto	u735
  1688  0422                     l1884:
  1689  0422  3001               	movlw	1
  1690  0423                     u745:
  1691  0423  1003               	clrc
  1692  0424  0CF5               	rrf	___lmul@multiplier+3,f
  1693  0425  0CF4               	rrf	___lmul@multiplier+2,f
  1694  0426  0CF3               	rrf	___lmul@multiplier+1,f
  1695  0427  0CF2               	rrf	___lmul@multiplier,f
  1696  0428  3EFF               	addlw	-1
  1697  0429  1D03               	skipz
  1698  042A  2C23               	goto	u745
  1699  042B  0875               	movf	___lmul@multiplier+3,w
  1700  042C  0474               	iorwf	___lmul@multiplier+2,w
  1701  042D  0473               	iorwf	___lmul@multiplier+1,w
  1702  042E  0472               	iorwf	___lmul@multiplier,w
  1703  042F  1D03               	skipz
  1704  0430  2C32               	goto	u751
  1705  0431  2C33               	goto	u750
  1706  0432                     u751:
  1707  0432  2BFE               	goto	l1878
  1708  0433                     u750:
  1709  0433                     l1886:
  1710  0433  083E               	movf	___lmul@product+3,w
  1711  0434  00F5               	movwf	?___lmul+3
  1712  0435  083D               	movf	___lmul@product+2,w
  1713  0436  00F4               	movwf	?___lmul+2
  1714  0437  083C               	movf	___lmul@product+1,w
  1715  0438  00F3               	movwf	?___lmul+1
  1716  0439  083B               	movf	___lmul@product,w
  1717  043A  00F2               	movwf	?___lmul
  1718  043B                     l350:
  1719  043B  0008               	return
  1720  043C                     __end_of___lmul:
  1721                           
  1722                           	psect	text2
  1723  0620                     __ptext2:	
  1724 ;; *************** function _USART_Rx *****************
  1725 ;; Defined at:
  1726 ;;		line 25 in file "USART.c"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;		None
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;		None
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  1    wreg      unsigned char 
  1733 ;; Registers used:
  1734 ;;		wreg
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1740 ;;      Params:         0       0       0       0       0
  1741 ;;      Locals:         0       0       0       0       0
  1742 ;;      Temps:          0       0       0       0       0
  1743 ;;      Totals:         0       0       0       0       0
  1744 ;;Total ram usage:        0 bytes
  1745 ;; Hardware stack levels used:    1
  1746 ;; Hardware stack levels required when called:    1
  1747 ;; This function calls:
  1748 ;;		Nothing
  1749 ;; This function is called by:
  1750 ;;		_main
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           
  1754                           
  1755                           ;psect for function _USART_Rx
  1756  0620                     _USART_Rx:
  1757  0620                     l1512:	
  1758                           ;incstack = 0
  1759                           ; Regs used in _USART_Rx: [wreg]
  1760                           
  1761                           
  1762                           ;USART.c: 26:     return RCREG;
  1763  0620  1283               	bcf	3,5	;RP0=0, select bank0
  1764  0621  1303               	bcf	3,6	;RP1=0, select bank0
  1765  0622  081A               	movf	26,w	;volatile
  1766  0623                     l241:
  1767  0623  0008               	return
  1768  0624                     __end_of_USART_Rx:
  1769                           
  1770                           	psect	text3
  1771  05C6                     __ptext3:	
  1772 ;; *************** function _USART_Init *****************
  1773 ;; Defined at:
  1774 ;;		line 4 in file "USART.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;		None
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;		None
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  1    wreg      void 
  1781 ;; Registers used:
  1782 ;;		wreg, status,2
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1788 ;;      Params:         0       0       0       0       0
  1789 ;;      Locals:         0       0       0       0       0
  1790 ;;      Temps:          0       0       0       0       0
  1791 ;;      Totals:         0       0       0       0       0
  1792 ;;Total ram usage:        0 bytes
  1793 ;; Hardware stack levels used:    1
  1794 ;; Hardware stack levels required when called:    1
  1795 ;; This function calls:
  1796 ;;		Nothing
  1797 ;; This function is called by:
  1798 ;;		_main
  1799 ;; This function uses a non-reentrant model
  1800 ;;
  1801                           
  1802                           
  1803                           ;psect for function _USART_Init
  1804  05C6                     _USART_Init:
  1805  05C6                     l1396:	
  1806                           ;incstack = 0
  1807                           ; Regs used in _USART_Init: [wreg+status,2]
  1808                           
  1809                           
  1810                           ;USART.c: 6:     TXSTAbits.SYNC = 0;
  1811  05C6  1683               	bsf	3,5	;RP0=1, select bank1
  1812  05C7  1303               	bcf	3,6	;RP1=0, select bank1
  1813  05C8  1218               	bcf	24,4	;volatile
  1814                           
  1815                           ;USART.c: 7:     TXSTAbits.BRGH = 1;
  1816  05C9  1518               	bsf	24,2	;volatile
  1817                           
  1818                           ;USART.c: 8:     BAUDCTLbits.BRG16 = 1;
  1819  05CA  1683               	bsf	3,5	;RP0=1, select bank3
  1820  05CB  1703               	bsf	3,6	;RP1=1, select bank3
  1821  05CC  1587               	bsf	7,3	;volatile
  1822  05CD                     l1398:
  1823                           
  1824                           ;USART.c: 10:     SPBRG = 207;
  1825  05CD  30CF               	movlw	207
  1826  05CE  1683               	bsf	3,5	;RP0=1, select bank1
  1827  05CF  1303               	bcf	3,6	;RP1=0, select bank1
  1828  05D0  0099               	movwf	25	;volatile
  1829  05D1                     l1400:
  1830                           
  1831                           ;USART.c: 11:     SPBRGH = 0;
  1832  05D1  019A               	clrf	26	;volatile
  1833  05D2                     l1402:
  1834                           
  1835                           ;USART.c: 13:     RCSTAbits.SPEN = 1;
  1836  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  1837  05D3  1303               	bcf	3,6	;RP1=0, select bank0
  1838  05D4  1798               	bsf	24,7	;volatile
  1839  05D5                     l1404:
  1840                           
  1841                           ;USART.c: 14:     RCSTAbits.RX9 = 0;
  1842  05D5  1318               	bcf	24,6	;volatile
  1843  05D6                     l1406:
  1844                           
  1845                           ;USART.c: 15:     RCSTAbits.CREN = 1;
  1846  05D6  1618               	bsf	24,4	;volatile
  1847  05D7                     l1408:
  1848                           
  1849                           ;USART.c: 16:     TXSTAbits.TXEN = 1;
  1850  05D7  1683               	bsf	3,5	;RP0=1, select bank1
  1851  05D8  1303               	bcf	3,6	;RP1=0, select bank1
  1852  05D9  1698               	bsf	24,5	;volatile
  1853  05DA                     l232:
  1854  05DA  0008               	return
  1855  05DB                     __end_of_USART_Init:
  1856                           
  1857                           	psect	text4
  1858  05AF                     __ptext4:	
  1859 ;; *************** function _USART_Cadena *****************
  1860 ;; Defined at:
  1861 ;;		line 29 in file "USART.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;  str             1    wreg     PTR unsigned char 
  1864 ;;		 -> humedad(1), temperatura(2), 
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;  str             1    4[COMMON] PTR unsigned char 
  1867 ;;		 -> humedad(1), temperatura(2), 
  1868 ;; Return value:  Size  Location     Type
  1869 ;;                  1    wreg      void 
  1870 ;; Registers used:
  1871 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1872 ;; Tracked objects:
  1873 ;;		On entry : 0/0
  1874 ;;		On exit  : 0/0
  1875 ;;		Unchanged: 0/0
  1876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1877 ;;      Params:         0       0       0       0       0
  1878 ;;      Locals:         1       0       0       0       0
  1879 ;;      Temps:          1       0       0       0       0
  1880 ;;      Totals:         2       0       0       0       0
  1881 ;;Total ram usage:        2 bytes
  1882 ;; Hardware stack levels used:    1
  1883 ;; Hardware stack levels required when called:    2
  1884 ;; This function calls:
  1885 ;;		_USART_Tx
  1886 ;; This function is called by:
  1887 ;;		_main
  1888 ;; This function uses a non-reentrant model
  1889 ;;
  1890                           
  1891                           
  1892                           ;psect for function _USART_Cadena
  1893  05AF                     _USART_Cadena:
  1894                           
  1895                           ;incstack = 0
  1896                           ; Regs used in _USART_Cadena: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1897                           ;USART_Cadena@str stored from wreg
  1898  05AF  00F4               	movwf	USART_Cadena@str
  1899  05B0                     l1516:
  1900                           
  1901                           ;USART.c: 30:     while(*str != '\0'){
  1902  05B0  2DBD               	goto	l1522
  1903  05B1                     l1518:
  1904                           
  1905                           ;USART.c: 31:         USART_Tx(*str);
  1906  05B1  0874               	movf	USART_Cadena@str,w
  1907  05B2  0084               	movwf	4
  1908  05B3  0800               	movf	0,w
  1909  05B4  120A  118A  25E8  120A  118A  	fcall	_USART_Tx
  1910  05B9                     l1520:
  1911                           
  1912                           ;USART.c: 32:         str++;
  1913  05B9  3001               	movlw	1
  1914  05BA  00F3               	movwf	??_USART_Cadena
  1915  05BB  0873               	movf	??_USART_Cadena,w
  1916  05BC  07F4               	addwf	USART_Cadena@str,f
  1917  05BD                     l1522:
  1918                           
  1919                           ;USART.c: 30:     while(*str != '\0'){
  1920  05BD  0874               	movf	USART_Cadena@str,w
  1921  05BE  0084               	movwf	4
  1922  05BF  1383               	bcf	3,7	;select IRP bank0
  1923  05C0  0800               	movf	0,w
  1924  05C1  1D03               	btfss	3,2
  1925  05C2  2DC4               	goto	u491
  1926  05C3  2DC5               	goto	u490
  1927  05C4                     u491:
  1928  05C4  2DB1               	goto	l1518
  1929  05C5                     u490:
  1930  05C5                     l247:
  1931  05C5  0008               	return
  1932  05C6                     __end_of_USART_Cadena:
  1933                           
  1934                           	psect	text5
  1935  05E8                     __ptext5:	
  1936 ;; *************** function _USART_Tx *****************
  1937 ;; Defined at:
  1938 ;;		line 20 in file "USART.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;  data            1    wreg     unsigned char 
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;  data            1    2[COMMON] unsigned char 
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  1    wreg      void 
  1945 ;; Registers used:
  1946 ;;		wreg
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1952 ;;      Params:         0       0       0       0       0
  1953 ;;      Locals:         1       0       0       0       0
  1954 ;;      Temps:          0       0       0       0       0
  1955 ;;      Totals:         1       0       0       0       0
  1956 ;;Total ram usage:        1 bytes
  1957 ;; Hardware stack levels used:    1
  1958 ;; Hardware stack levels required when called:    1
  1959 ;; This function calls:
  1960 ;;		Nothing
  1961 ;; This function is called by:
  1962 ;;		_USART_Cadena
  1963 ;;		_USART_volt
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967                           
  1968                           ;psect for function _USART_Tx
  1969  05E8                     _USART_Tx:
  1970                           
  1971                           ;incstack = 0
  1972                           ; Regs used in _USART_Tx: [wreg]
  1973                           ;USART_Tx@data stored from wreg
  1974  05E8  00F2               	movwf	USART_Tx@data
  1975  05E9                     l1368:
  1976  05E9                     l235:	
  1977                           ;USART.c: 21:     while(TXSTAbits.TRMT == 0);
  1978                           
  1979  05E9  1683               	bsf	3,5	;RP0=1, select bank1
  1980  05EA  1303               	bcf	3,6	;RP1=0, select bank1
  1981  05EB  1C98               	btfss	24,1	;volatile
  1982  05EC  2DEE               	goto	u371
  1983  05ED  2DEF               	goto	u370
  1984  05EE                     u371:
  1985  05EE  2DE9               	goto	l235
  1986  05EF                     u370:
  1987  05EF                     l1370:
  1988                           
  1989                           ;USART.c: 22:     TXREG = data;
  1990  05EF  0872               	movf	USART_Tx@data,w
  1991  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  1992  05F1  1303               	bcf	3,6	;RP1=0, select bank0
  1993  05F2  0099               	movwf	25	;volatile
  1994  05F3                     l238:
  1995  05F3  0008               	return
  1996  05F4                     __end_of_USART_Tx:
  1997                           
  1998                           	psect	text6
  1999  03AA                     __ptext6:	
  2000 ;; *************** function _LCD_Print *****************
  2001 ;; Defined at:
  2002 ;;		line 167 in file "I2C.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;  LCD_Str         2    6[COMMON] PTR unsigned char 
  2005 ;;		 -> STR_3(4), STR_2(2), humedad(1), temperatura(2), 
  2006 ;;		 -> STR_1(14), 
  2007 ;; Auto vars:     Size  Location     Type
  2008 ;;  i               1    9[COMMON] unsigned char 
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  1    wreg      void 
  2011 ;; Registers used:
  2012 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2018 ;;      Params:         2       0       0       0       0
  2019 ;;      Locals:         1       0       0       0       0
  2020 ;;      Temps:          1       0       0       0       0
  2021 ;;      Totals:         4       0       0       0       0
  2022 ;;Total ram usage:        4 bytes
  2023 ;; Hardware stack levels used:    1
  2024 ;; Hardware stack levels required when called:    5
  2025 ;; This function calls:
  2026 ;;		_LCD_Write_Nibble
  2027 ;; This function is called by:
  2028 ;;		_main
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032                           
  2033                           ;psect for function _LCD_Print
  2034  03AA                     _LCD_Print:
  2035  03AA                     l1486:	
  2036                           ;incstack = 0
  2037                           ; Regs used in _LCD_Print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2038                           
  2039                           
  2040                           ;I2C.c: 167: void LCD_Print(char* LCD_Str);I2C.c: 168: {;I2C.c: 169:   uint8_t i = 0;
  2041  03AA  01F9               	clrf	LCD_Print@i
  2042  03AB                     l1488:
  2043                           
  2044                           ;I2C.c: 170:   RS = 1;
  2045  03AB  147A               	bsf	_RS/(0+8),_RS& (0+7)
  2046                           
  2047                           ;I2C.c: 171:   while(LCD_Str[i] != '\0')
  2048  03AC  2BE0               	goto	l1494
  2049  03AD                     l1490:
  2050                           
  2051                           ;I2C.c: 172:   {;I2C.c: 173:     LCD_Write_Nibble(LCD_Str[i] & 0xF0);
  2052  03AD  0879               	movf	LCD_Print@i,w
  2053  03AE  0776               	addwf	LCD_Print@LCD_Str,w
  2054  03AF  0084               	movwf	4
  2055  03B0  0877               	movf	LCD_Print@LCD_Str+1,w
  2056  03B1  1803               	skipnc
  2057  03B2  0A77               	incf	LCD_Print@LCD_Str+1,w
  2058  03B3  00FF               	movwf	btemp+1
  2059  03B4  120A  118A  254A  120A  118A  	fcall	stringtab
  2060  03B9  39F0               	andlw	240
  2061  03BA  120A  118A  256E  120A  118A  	fcall	_LCD_Write_Nibble
  2062                           
  2063                           ;I2C.c: 174:     LCD_Write_Nibble( (LCD_Str[i++] << 4) & 0xF0 );
  2064  03BF  0879               	movf	LCD_Print@i,w
  2065  03C0  0776               	addwf	LCD_Print@LCD_Str,w
  2066  03C1  0084               	movwf	4
  2067  03C2  0877               	movf	LCD_Print@LCD_Str+1,w
  2068  03C3  1803               	skipnc
  2069  03C4  0A77               	incf	LCD_Print@LCD_Str+1,w
  2070  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  2071  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  2072  03C7  00FF               	movwf	btemp+1
  2073  03C8  120A  118A  254A  120A  118A  	fcall	stringtab
  2074  03CD  00F8               	movwf	??_LCD_Print
  2075  03CE  3003               	movlw	3
  2076  03CF                     u465:
  2077  03CF  1003               	clrc
  2078  03D0  0DF8               	rlf	??_LCD_Print,f
  2079  03D1  3EFF               	addlw	-1
  2080  03D2  1D03               	skipz
  2081  03D3  2BCF               	goto	u465
  2082  03D4  1003               	clrc
  2083  03D5  0D78               	rlf	??_LCD_Print,w
  2084  03D6  39F0               	andlw	240
  2085  03D7  120A  118A  256E  120A  118A  	fcall	_LCD_Write_Nibble
  2086  03DC                     l1492:
  2087  03DC  3001               	movlw	1
  2088  03DD  00F8               	movwf	??_LCD_Print
  2089  03DE  0878               	movf	??_LCD_Print,w
  2090  03DF  07F9               	addwf	LCD_Print@i,f
  2091  03E0                     l1494:
  2092                           
  2093                           ;I2C.c: 171:   while(LCD_Str[i] != '\0')
  2094  03E0  0879               	movf	LCD_Print@i,w
  2095  03E1  0776               	addwf	LCD_Print@LCD_Str,w
  2096  03E2  0084               	movwf	4
  2097  03E3  0877               	movf	LCD_Print@LCD_Str+1,w
  2098  03E4  1803               	skipnc
  2099  03E5  0A77               	incf	LCD_Print@LCD_Str+1,w
  2100  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  2101  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  2102  03E8  00FF               	movwf	btemp+1
  2103  03E9  120A  118A  254A  120A  118A  	fcall	stringtab
  2104  03EE  3A00               	xorlw	0
  2105  03EF  1D03               	skipz
  2106  03F0  2BF2               	goto	u471
  2107  03F1  2BF3               	goto	u470
  2108  03F2                     u471:
  2109  03F2  2BAD               	goto	l1490
  2110  03F3                     u470:
  2111  03F3                     l206:
  2112  03F3  0008               	return
  2113  03F4                     __end_of_LCD_Print:
  2114                           
  2115                           	psect	text7
  2116  0484                     __ptext7:	
  2117 ;; *************** function _LCD_Goto *****************
  2118 ;; Defined at:
  2119 ;;		line 141 in file "I2C.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;  col             1    wreg     unsigned char 
  2122 ;;  row             1    9[COMMON] unsigned char 
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;  col             1    2[BANK0 ] unsigned char 
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  1    wreg      void 
  2127 ;; Registers used:
  2128 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2134 ;;      Params:         1       0       0       0       0
  2135 ;;      Locals:         0       1       0       0       0
  2136 ;;      Temps:          0       2       0       0       0
  2137 ;;      Totals:         1       3       0       0       0
  2138 ;;Total ram usage:        4 bytes
  2139 ;; Hardware stack levels used:    1
  2140 ;; Hardware stack levels required when called:    6
  2141 ;; This function calls:
  2142 ;;		_LCD_Cmd
  2143 ;; This function is called by:
  2144 ;;		_main
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148                           
  2149                           ;psect for function _LCD_Goto
  2150  0484                     _LCD_Goto:
  2151                           
  2152                           ;incstack = 0
  2153                           ; Regs used in _LCD_Goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2154                           ;LCD_Goto@col stored from wreg
  2155  0484  1283               	bcf	3,5	;RP0=0, select bank0
  2156  0485  1303               	bcf	3,6	;RP1=0, select bank0
  2157  0486  00BC               	movwf	LCD_Goto@col
  2158  0487                     l1858:
  2159                           
  2160                           ;I2C.c: 141: void LCD_Goto(uint8_t col, uint8_t row);I2C.c: 142: {;I2C.c: 143:   switch(
      +                          row)
  2161  0487  2CA8               	goto	l1868
  2162  0488                     l1860:
  2163                           
  2164                           ;I2C.c: 146:       LCD_Cmd(0xC0 + col - 1);
  2165  0488  083C               	movf	LCD_Goto@col,w
  2166  0489  3EBF               	addlw	191
  2167  048A  120A  118A  24F4  120A  118A  	fcall	_LCD_Cmd
  2168                           
  2169                           ;I2C.c: 147:       break;
  2170  048F  2CBB               	goto	l197
  2171  0490                     l1862:
  2172                           
  2173                           ;I2C.c: 149:       LCD_Cmd(0x94 + col - 1);
  2174  0490  083C               	movf	LCD_Goto@col,w
  2175  0491  3E93               	addlw	147
  2176  0492  120A  118A  24F4  120A  118A  	fcall	_LCD_Cmd
  2177                           
  2178                           ;I2C.c: 150:       break;
  2179  0497  2CBB               	goto	l197
  2180  0498                     l1864:
  2181                           
  2182                           ;I2C.c: 152:       LCD_Cmd(0xD4 + col - 1);
  2183  0498  083C               	movf	LCD_Goto@col,w
  2184  0499  3ED3               	addlw	211
  2185  049A  120A  118A  24F4  120A  118A  	fcall	_LCD_Cmd
  2186                           
  2187                           ;I2C.c: 153:     break;
  2188  049F  2CBB               	goto	l197
  2189  04A0                     l1866:
  2190                           
  2191                           ;I2C.c: 155:       LCD_Cmd(0x80 + col - 1);
  2192  04A0  083C               	movf	LCD_Goto@col,w
  2193  04A1  3E7F               	addlw	127
  2194  04A2  120A  118A  24F4  120A  118A  	fcall	_LCD_Cmd
  2195                           
  2196                           ;I2C.c: 156:   }
  2197  04A7  2CBB               	goto	l197
  2198  04A8                     l1868:
  2199  04A8  0879               	movf	LCD_Goto@row,w
  2200  04A9  00BA               	movwf	??_LCD_Goto
  2201  04AA  01BB               	clrf	??_LCD_Goto+1
  2202                           
  2203                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2204                           ; Switch size 1, requested type "simple"
  2205                           ; Number of cases is 1, Range of values is 0 to 0
  2206                           ; switch strategies available:
  2207                           ; Name         Instructions Cycles
  2208                           ; simple_byte            4     3 (average)
  2209                           ; direct_byte           11     8 (fixed)
  2210                           ; jumptable            260     6 (fixed)
  2211                           ;	Chosen strategy is simple_byte
  2212  04AB  083B               	movf	??_LCD_Goto+1,w
  2213  04AC  3A00               	xorlw	0	; case 0
  2214  04AD  1903               	skipnz
  2215  04AE  2CB0               	goto	l2116
  2216  04AF  2CA0               	goto	l1866
  2217  04B0                     l2116:
  2218                           
  2219                           ; Switch size 1, requested type "simple"
  2220                           ; Number of cases is 3, Range of values is 2 to 4
  2221                           ; switch strategies available:
  2222                           ; Name         Instructions Cycles
  2223                           ; simple_byte           10     6 (average)
  2224                           ; direct_byte           20    11 (fixed)
  2225                           ; jumptable            263     9 (fixed)
  2226                           ;	Chosen strategy is simple_byte
  2227  04B0  083A               	movf	??_LCD_Goto,w
  2228  04B1  3A02               	xorlw	2	; case 2
  2229  04B2  1903               	skipnz
  2230  04B3  2C88               	goto	l1860
  2231  04B4  3A01               	xorlw	1	; case 3
  2232  04B5  1903               	skipnz
  2233  04B6  2C90               	goto	l1862
  2234  04B7  3A07               	xorlw	7	; case 4
  2235  04B8  1903               	skipnz
  2236  04B9  2C98               	goto	l1864
  2237  04BA  2CA0               	goto	l1866
  2238  04BB                     l197:
  2239  04BB  0008               	return
  2240  04BC                     __end_of_LCD_Goto:
  2241                           
  2242                           	psect	text8
  2243  02A9                     __ptext8:	
  2244 ;; *************** function _LCD_Begin *****************
  2245 ;; Defined at:
  2246 ;;		line 178 in file "I2C.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;  _i2c_addr       1    wreg     unsigned char 
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;  _i2c_addr       1    9[COMMON] unsigned char 
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  1    wreg      void 
  2253 ;; Registers used:
  2254 ;;		wreg, status,2, status,0, pclath, cstack
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2260 ;;      Params:         0       0       0       0       0
  2261 ;;      Locals:         1       0       0       0       0
  2262 ;;      Temps:          0       2       0       0       0
  2263 ;;      Totals:         1       2       0       0       0
  2264 ;;Total ram usage:        3 bytes
  2265 ;; Hardware stack levels used:    1
  2266 ;; Hardware stack levels required when called:    6
  2267 ;; This function calls:
  2268 ;;		_Expander_Write
  2269 ;;		_LCD_Cmd
  2270 ;; This function is called by:
  2271 ;;		_main
  2272 ;; This function uses a non-reentrant model
  2273 ;;
  2274                           
  2275                           
  2276                           ;psect for function _LCD_Begin
  2277  02A9                     _LCD_Begin:
  2278                           
  2279                           ;incstack = 0
  2280                           ; Regs used in _LCD_Begin: [wreg+status,2+status,0+pclath+cstack]
  2281                           ;LCD_Begin@_i2c_addr stored from wreg
  2282  02A9  00F9               	movwf	LCD_Begin@_i2c_addr
  2283  02AA                     l1832:
  2284                           
  2285                           ;I2C.c: 178: void LCD_Begin(uint8_t _i2c_addr);I2C.c: 179: {;I2C.c: 180:   i2c_addr = _i
      +                          2c_addr;
  2286  02AA  0879               	movf	LCD_Begin@_i2c_addr,w
  2287  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  2288  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  2289  02AD  00BA               	movwf	??_LCD_Begin
  2290  02AE  083A               	movf	??_LCD_Begin,w
  2291  02AF  00B0               	movwf	_i2c_addr
  2292  02B0                     l1834:
  2293                           
  2294                           ;I2C.c: 181:   Expander_Write(0);
  2295  02B0  3000               	movlw	0
  2296  02B1  120A  118A  2592  120A  118A  	fcall	_Expander_Write
  2297  02B6                     l1836:
  2298                           
  2299                           ;I2C.c: 183:   _delay((unsigned long)((40)*(8000000/4000.0)));
  2300  02B6  3068               	movlw	104
  2301  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  2302  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  2303  02B9  00BB               	movwf	??_LCD_Begin+1
  2304  02BA  30E3               	movlw	227
  2305  02BB  00BA               	movwf	??_LCD_Begin
  2306  02BC                     u897:
  2307  02BC  0BBA               	decfsz	??_LCD_Begin,f
  2308  02BD  2ABC               	goto	u897
  2309  02BE  0BBB               	decfsz	??_LCD_Begin+1,f
  2310  02BF  2ABC               	goto	u897
  2311  02C0  2AC1               	nop2
  2312                           
  2313                           ;I2C.c: 184:   LCD_Cmd(3);
  2314  02C1  3003               	movlw	3
  2315  02C2  120A  118A  24F4  120A  118A  	fcall	_LCD_Cmd
  2316  02C7                     l1838:
  2317                           
  2318                           ;I2C.c: 185:   _delay((unsigned long)((5)*(8000000/4000.0)));
  2319  02C7  300D               	movlw	13
  2320  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  2321  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  2322  02CA  00BB               	movwf	??_LCD_Begin+1
  2323  02CB  30FB               	movlw	251
  2324  02CC  00BA               	movwf	??_LCD_Begin
  2325  02CD                     u907:
  2326  02CD  0BBA               	decfsz	??_LCD_Begin,f
  2327  02CE  2ACD               	goto	u907
  2328  02CF  0BBB               	decfsz	??_LCD_Begin+1,f
  2329  02D0  2ACD               	goto	u907
  2330  02D1                     l1840:
  2331                           
  2332                           ;I2C.c: 186:   LCD_Cmd(3);
  2333  02D1  3003               	movlw	3
  2334  02D2  120A  118A  24F4  120A  118A  	fcall	_LCD_Cmd
  2335                           
  2336                           ;I2C.c: 187:   _delay((unsigned long)((5)*(8000000/4000.0)));
  2337  02D7  300D               	movlw	13
  2338  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  2339  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  2340  02DA  00BB               	movwf	??_LCD_Begin+1
  2341  02DB  30FB               	movlw	251
  2342  02DC  00BA               	movwf	??_LCD_Begin
  2343  02DD                     u917:
  2344  02DD  0BBA               	decfsz	??_LCD_Begin,f
  2345  02DE  2ADD               	goto	u917
  2346  02DF  0BBB               	decfsz	??_LCD_Begin+1,f
  2347  02E0  2ADD               	goto	u917
  2348  02E1                     l1842:
  2349                           
  2350                           ;I2C.c: 188:   LCD_Cmd(3);
  2351  02E1  3003               	movlw	3
  2352  02E2  120A  118A  24F4  120A  118A  	fcall	_LCD_Cmd
  2353  02E7                     l1844:
  2354                           
  2355                           ;I2C.c: 189:   _delay((unsigned long)((5)*(8000000/4000.0)));
  2356  02E7  300D               	movlw	13
  2357  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  2358  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  2359  02EA  00BB               	movwf	??_LCD_Begin+1
  2360  02EB  30FB               	movlw	251
  2361  02EC  00BA               	movwf	??_LCD_Begin
  2362  02ED                     u927:
  2363  02ED  0BBA               	decfsz	??_LCD_Begin,f
  2364  02EE  2AED               	goto	u927
  2365  02EF  0BBB               	decfsz	??_LCD_Begin+1,f
  2366  02F0  2AED               	goto	u927
  2367                           
  2368                           ;I2C.c: 190:   LCD_Cmd(0x02);
  2369  02F1  3002               	movlw	2
  2370  02F2  120A  118A  24F4  120A  118A  	fcall	_LCD_Cmd
  2371  02F7                     l1846:
  2372                           
  2373                           ;I2C.c: 191:   _delay((unsigned long)((5)*(8000000/4000.0)));
  2374  02F7  300D               	movlw	13
  2375  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  2376  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  2377  02FA  00BB               	movwf	??_LCD_Begin+1
  2378  02FB  30FB               	movlw	251
  2379  02FC  00BA               	movwf	??_LCD_Begin
  2380  02FD                     u937:
  2381  02FD  0BBA               	decfsz	??_LCD_Begin,f
  2382  02FE  2AFD               	goto	u937
  2383  02FF  0BBB               	decfsz	??_LCD_Begin+1,f
  2384  0300  2AFD               	goto	u937
  2385  0301                     l1848:
  2386                           
  2387                           ;I2C.c: 192:   LCD_Cmd(0x20 | (2 << 2));
  2388  0301  3028               	movlw	40
  2389  0302  120A  118A  24F4  120A  118A  	fcall	_LCD_Cmd
  2390                           
  2391                           ;I2C.c: 193:   _delay((unsigned long)((50)*(8000000/4000.0)));
  2392  0307  3082               	movlw	130
  2393  0308  1283               	bcf	3,5	;RP0=0, select bank0
  2394  0309  1303               	bcf	3,6	;RP1=0, select bank0
  2395  030A  00BB               	movwf	??_LCD_Begin+1
  2396  030B  30DD               	movlw	221
  2397  030C  00BA               	movwf	??_LCD_Begin
  2398  030D                     u947:
  2399  030D  0BBA               	decfsz	??_LCD_Begin,f
  2400  030E  2B0D               	goto	u947
  2401  030F  0BBB               	decfsz	??_LCD_Begin+1,f
  2402  0310  2B0D               	goto	u947
  2403  0311                     l1850:
  2404                           
  2405                           ;I2C.c: 194:   LCD_Cmd(0x0C);
  2406  0311  300C               	movlw	12
  2407  0312  120A  118A  24F4  120A  118A  	fcall	_LCD_Cmd
  2408  0317                     l1852:
  2409                           
  2410                           ;I2C.c: 195:   _delay((unsigned long)((50)*(8000000/4000.0)));
  2411  0317  3082               	movlw	130
  2412  0318  1283               	bcf	3,5	;RP0=0, select bank0
  2413  0319  1303               	bcf	3,6	;RP1=0, select bank0
  2414  031A  00BB               	movwf	??_LCD_Begin+1
  2415  031B  30DD               	movlw	221
  2416  031C  00BA               	movwf	??_LCD_Begin
  2417  031D                     u957:
  2418  031D  0BBA               	decfsz	??_LCD_Begin,f
  2419  031E  2B1D               	goto	u957
  2420  031F  0BBB               	decfsz	??_LCD_Begin+1,f
  2421  0320  2B1D               	goto	u957
  2422                           
  2423                           ;I2C.c: 196:   LCD_Cmd(0x01);
  2424  0321  3001               	movlw	1
  2425  0322  120A  118A  24F4  120A  118A  	fcall	_LCD_Cmd
  2426  0327                     l1854:
  2427                           
  2428                           ;I2C.c: 197:   _delay((unsigned long)((50)*(8000000/4000.0)));
  2429  0327  3082               	movlw	130
  2430  0328  1283               	bcf	3,5	;RP0=0, select bank0
  2431  0329  1303               	bcf	3,6	;RP1=0, select bank0
  2432  032A  00BB               	movwf	??_LCD_Begin+1
  2433  032B  30DD               	movlw	221
  2434  032C  00BA               	movwf	??_LCD_Begin
  2435  032D                     u967:
  2436  032D  0BBA               	decfsz	??_LCD_Begin,f
  2437  032E  2B2D               	goto	u967
  2438  032F  0BBB               	decfsz	??_LCD_Begin+1,f
  2439  0330  2B2D               	goto	u967
  2440  0331                     l1856:
  2441                           
  2442                           ;I2C.c: 198:   LCD_Cmd(0x04 | 0x02);
  2443  0331  3006               	movlw	6
  2444  0332  120A  118A  24F4  120A  118A  	fcall	_LCD_Cmd
  2445                           
  2446                           ;I2C.c: 199:   _delay((unsigned long)((50)*(8000000/4000.0)));
  2447  0337  3082               	movlw	130
  2448  0338  1283               	bcf	3,5	;RP0=0, select bank0
  2449  0339  1303               	bcf	3,6	;RP1=0, select bank0
  2450  033A  00BB               	movwf	??_LCD_Begin+1
  2451  033B  30DD               	movlw	221
  2452  033C  00BA               	movwf	??_LCD_Begin
  2453  033D                     u977:
  2454  033D  0BBA               	decfsz	??_LCD_Begin,f
  2455  033E  2B3D               	goto	u977
  2456  033F  0BBB               	decfsz	??_LCD_Begin+1,f
  2457  0340  2B3D               	goto	u977
  2458  0341                     l209:
  2459  0341  0008               	return
  2460  0342                     __end_of_LCD_Begin:
  2461                           
  2462                           	psect	text9
  2463  04F4                     __ptext9:	
  2464 ;; *************** function _LCD_Cmd *****************
  2465 ;; Defined at:
  2466 ;;		line 132 in file "I2C.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;  Command         1    wreg     unsigned char 
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;  Command         1    8[COMMON] unsigned char 
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  1    wreg      void 
  2473 ;; Registers used:
  2474 ;;		wreg, status,2, status,0, pclath, cstack
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2480 ;;      Params:         0       0       0       0       0
  2481 ;;      Locals:         1       0       0       0       0
  2482 ;;      Temps:          2       0       0       0       0
  2483 ;;      Totals:         3       0       0       0       0
  2484 ;;Total ram usage:        3 bytes
  2485 ;; Hardware stack levels used:    1
  2486 ;; Hardware stack levels required when called:    5
  2487 ;; This function calls:
  2488 ;;		_LCD_Write_Nibble
  2489 ;; This function is called by:
  2490 ;;		_LCD_Goto
  2491 ;;		_LCD_Begin
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495                           
  2496                           ;psect for function _LCD_Cmd
  2497  04F4                     _LCD_Cmd:
  2498                           
  2499                           ;incstack = 0
  2500                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2501                           ;LCD_Cmd@Command stored from wreg
  2502  04F4  00F8               	movwf	LCD_Cmd@Command
  2503  04F5                     l1358:
  2504                           
  2505                           ;I2C.c: 132: void LCD_Cmd(uint8_t Command);I2C.c: 133: {;I2C.c: 134:   RS = 0;
  2506  04F5  107A               	bcf	_RS/(0+8),_RS& (0+7)
  2507  04F6                     l1360:
  2508                           
  2509                           ;I2C.c: 135:   LCD_Write_Nibble(Command & 0xF0);
  2510  04F6  0878               	movf	LCD_Cmd@Command,w
  2511  04F7  39F0               	andlw	240
  2512  04F8  120A  118A  256E  120A  118A  	fcall	_LCD_Write_Nibble
  2513                           
  2514                           ;I2C.c: 136:   LCD_Write_Nibble((Command << 4) & 0xF0);
  2515  04FD  0878               	movf	LCD_Cmd@Command,w
  2516  04FE  00F6               	movwf	??_LCD_Cmd
  2517  04FF  3003               	movlw	3
  2518  0500                     u345:
  2519  0500  1003               	clrc
  2520  0501  0DF6               	rlf	??_LCD_Cmd,f
  2521  0502  3EFF               	addlw	-1
  2522  0503  1D03               	skipz
  2523  0504  2D00               	goto	u345
  2524  0505  1003               	clrc
  2525  0506  0D76               	rlf	??_LCD_Cmd,w
  2526  0507  39F0               	andlw	240
  2527  0508  120A  118A  256E  120A  118A  	fcall	_LCD_Write_Nibble
  2528  050D                     l1362:
  2529                           
  2530                           ;I2C.c: 137:   if((Command == 0x01) || (Command == 0x02))
  2531  050D  0378               	decf	LCD_Cmd@Command,w
  2532  050E  1903               	btfsc	3,2
  2533  050F  2D11               	goto	u351
  2534  0510  2D12               	goto	u350
  2535  0511                     u351:
  2536  0511  2D18               	goto	l1366
  2537  0512                     u350:
  2538  0512                     l1364:
  2539  0512  3002               	movlw	2
  2540  0513  0678               	xorwf	LCD_Cmd@Command,w
  2541  0514  1D03               	btfss	3,2
  2542  0515  2D17               	goto	u361
  2543  0516  2D18               	goto	u360
  2544  0517                     u361:
  2545  0517  2D21               	goto	l188
  2546  0518                     u360:
  2547  0518                     l1366:
  2548                           
  2549                           ;I2C.c: 138:     _delay((unsigned long)((2)*(8000000/4000.0)));
  2550  0518  3006               	movlw	6
  2551  0519  00F7               	movwf	??_LCD_Cmd+1
  2552  051A  3030               	movlw	48
  2553  051B  00F6               	movwf	??_LCD_Cmd
  2554  051C                     u987:
  2555  051C  0BF6               	decfsz	??_LCD_Cmd,f
  2556  051D  2D1C               	goto	u987
  2557  051E  0BF7               	decfsz	??_LCD_Cmd+1,f
  2558  051F  2D1C               	goto	u987
  2559  0520  0000               	nop
  2560  0521                     l188:
  2561  0521  0008               	return
  2562  0522                     __end_of_LCD_Cmd:
  2563                           
  2564                           	psect	text10
  2565  056E                     __ptext10:	
  2566 ;; *************** function _LCD_Write_Nibble *****************
  2567 ;; Defined at:
  2568 ;;		line 121 in file "I2C.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;  n               1    wreg     unsigned char 
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;  n               1    5[COMMON] unsigned char 
  2573 ;; Return value:  Size  Location     Type
  2574 ;;                  1    wreg      void 
  2575 ;; Registers used:
  2576 ;;		wreg, status,2, status,0, pclath, cstack
  2577 ;; Tracked objects:
  2578 ;;		On entry : 0/0
  2579 ;;		On exit  : 0/0
  2580 ;;		Unchanged: 0/0
  2581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2582 ;;      Params:         0       0       0       0       0
  2583 ;;      Locals:         1       0       0       0       0
  2584 ;;      Temps:          1       0       0       0       0
  2585 ;;      Totals:         2       0       0       0       0
  2586 ;;Total ram usage:        2 bytes
  2587 ;; Hardware stack levels used:    1
  2588 ;; Hardware stack levels required when called:    4
  2589 ;; This function calls:
  2590 ;;		_Expander_Write
  2591 ;; This function is called by:
  2592 ;;		_LCD_Cmd
  2593 ;;		_LCD_Print
  2594 ;;		_LCD_PutC
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598                           
  2599                           ;psect for function _LCD_Write_Nibble
  2600  056E                     _LCD_Write_Nibble:
  2601                           
  2602                           ;incstack = 0
  2603                           ; Regs used in _LCD_Write_Nibble: [wreg+status,2+status,0+pclath+cstack]
  2604                           ;LCD_Write_Nibble@n stored from wreg
  2605  056E  00F5               	movwf	LCD_Write_Nibble@n
  2606  056F                     l1344:
  2607                           
  2608                           ;I2C.c: 121: void LCD_Write_Nibble(uint8_t n);I2C.c: 122: {;I2C.c: 123:   n |= RS;
  2609  056F  3000               	movlw	0
  2610  0570  187A               	btfsc	_RS/(0+8),_RS& (0+7)
  2611  0571  3001               	movlw	1
  2612  0572  00F4               	movwf	??_LCD_Write_Nibble
  2613  0573  0874               	movf	??_LCD_Write_Nibble,w
  2614  0574  04F5               	iorwf	LCD_Write_Nibble@n,f
  2615  0575                     l1346:
  2616                           
  2617                           ;I2C.c: 124:   Expander_Write(n & 0xFB);
  2618  0575  0875               	movf	LCD_Write_Nibble@n,w
  2619  0576  39FB               	andlw	251
  2620  0577  120A  118A  2592  120A  118A  	fcall	_Expander_Write
  2621  057C                     l1348:
  2622                           
  2623                           ;I2C.c: 125:   _delay((unsigned long)((1)*(8000000/4000000.0)));
  2624  057C  2D7D               	nop2	;2 cycle nop
  2625  057D                     l1350:
  2626                           
  2627                           ;I2C.c: 126:   Expander_Write(n | 0x04);
  2628  057D  0875               	movf	LCD_Write_Nibble@n,w
  2629  057E  3804               	iorlw	4
  2630  057F  120A  118A  2592  120A  118A  	fcall	_Expander_Write
  2631  0584                     l1352:
  2632                           
  2633                           ;I2C.c: 127:   _delay((unsigned long)((1)*(8000000/4000000.0)));
  2634  0584  2D85               	nop2	;2 cycle nop
  2635  0585                     l1354:
  2636                           
  2637                           ;I2C.c: 128:   Expander_Write(n & 0xFB);
  2638  0585  0875               	movf	LCD_Write_Nibble@n,w
  2639  0586  39FB               	andlw	251
  2640  0587  120A  118A  2592  120A  118A  	fcall	_Expander_Write
  2641  058C                     l1356:
  2642                           
  2643                           ;I2C.c: 129:   _delay((unsigned long)((100)*(8000000/4000000.0)));
  2644  058C  3042               	movlw	66
  2645  058D  00F4               	movwf	??_LCD_Write_Nibble
  2646  058E                     u997:
  2647  058E  0BF4               	decfsz	??_LCD_Write_Nibble,f
  2648  058F  2D8E               	goto	u997
  2649  0590  0000               	nop
  2650  0591                     l182:
  2651  0591  0008               	return
  2652  0592                     __end_of_LCD_Write_Nibble:
  2653                           
  2654                           	psect	text11
  2655  0592                     __ptext11:	
  2656 ;; *************** function _Expander_Write *****************
  2657 ;; Defined at:
  2658 ;;		line 113 in file "I2C.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;  value           1    wreg     unsigned char 
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;  value           1    3[COMMON] unsigned char 
  2663 ;; Return value:  Size  Location     Type
  2664 ;;                  1    wreg      void 
  2665 ;; Registers used:
  2666 ;;		wreg, status,2, status,0, pclath, cstack
  2667 ;; Tracked objects:
  2668 ;;		On entry : 0/0
  2669 ;;		On exit  : 0/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2672 ;;      Params:         0       0       0       0       0
  2673 ;;      Locals:         1       0       0       0       0
  2674 ;;      Temps:          0       0       0       0       0
  2675 ;;      Totals:         1       0       0       0       0
  2676 ;;Total ram usage:        1 bytes
  2677 ;; Hardware stack levels used:    1
  2678 ;; Hardware stack levels required when called:    3
  2679 ;; This function calls:
  2680 ;;		_I2C_Master_Start
  2681 ;;		_I2C_Master_Stop
  2682 ;;		_I2C_Master_Write
  2683 ;; This function is called by:
  2684 ;;		_LCD_Write_Nibble
  2685 ;;		_LCD_Begin
  2686 ;;		_Backlight
  2687 ;;		_noBacklight
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691                           
  2692                           ;psect for function _Expander_Write
  2693  0592                     _Expander_Write:
  2694                           
  2695                           ;incstack = 0
  2696                           ; Regs used in _Expander_Write: [wreg+status,2+status,0+pclath+cstack]
  2697                           ;Expander_Write@value stored from wreg
  2698  0592  00F3               	movwf	Expander_Write@value
  2699  0593                     l1342:
  2700                           
  2701                           ;I2C.c: 113: void Expander_Write(uint8_t value);I2C.c: 114: {;I2C.c: 115:   I2C_Master_S
      +                          tart();
  2702  0593  120A  118A  2608  120A  118A  	fcall	_I2C_Master_Start
  2703                           
  2704                           ;I2C.c: 116:   I2C_Master_Write(i2c_addr);
  2705  0598  1283               	bcf	3,5	;RP0=0, select bank0
  2706  0599  1303               	bcf	3,6	;RP1=0, select bank0
  2707  059A  0830               	movf	_i2c_addr,w
  2708  059B  120A  118A  25F4  120A  118A  	fcall	_I2C_Master_Write
  2709                           
  2710                           ;I2C.c: 117:   I2C_Master_Write(value | backlight_val);
  2711  05A0  0873               	movf	Expander_Write@value,w
  2712  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  2713  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  2714  05A3  044E               	iorwf	_backlight_val,w
  2715  05A4  120A  118A  25F4  120A  118A  	fcall	_I2C_Master_Write
  2716                           
  2717                           ;I2C.c: 118:   I2C_Master_Stop();
  2718  05A9  120A  118A  25FF  120A  118A  	fcall	_I2C_Master_Stop
  2719  05AE                     l179:
  2720  05AE  0008               	return
  2721  05AF                     __end_of_Expander_Write:
  2722                           
  2723                           	psect	text12
  2724  043C                     __ptext12:	
  2725 ;; *************** function _Init_AHT10 *****************
  2726 ;; Defined at:
  2727 ;;		line 234 in file "main.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;		None
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;		None
  2732 ;; Return value:  Size  Location     Type
  2733 ;;                  1    wreg      void 
  2734 ;; Registers used:
  2735 ;;		wreg, status,2, status,0, pclath, cstack
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2741 ;;      Params:         0       0       0       0       0
  2742 ;;      Locals:         0       0       0       0       0
  2743 ;;      Temps:          3       0       0       0       0
  2744 ;;      Totals:         3       0       0       0       0
  2745 ;;Total ram usage:        3 bytes
  2746 ;; Hardware stack levels used:    1
  2747 ;; Hardware stack levels required when called:    3
  2748 ;; This function calls:
  2749 ;;		_I2C_Master_Start
  2750 ;;		_I2C_Master_Stop
  2751 ;;		_I2C_Master_Write
  2752 ;; This function is called by:
  2753 ;;		_main
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757                           
  2758                           ;psect for function _Init_AHT10
  2759  043C                     _Init_AHT10:
  2760  043C                     l1422:	
  2761                           ;incstack = 0
  2762                           ; Regs used in _Init_AHT10: [wreg+status,2+status,0+pclath+cstack]
  2763                           
  2764                           
  2765                           ;main.c: 236:     PORTCbits.RC3 = 1;
  2766  043C  1283               	bcf	3,5	;RP0=0, select bank0
  2767  043D  1303               	bcf	3,6	;RP1=0, select bank0
  2768  043E  1587               	bsf	7,3	;volatile
  2769  043F                     l1424:
  2770                           
  2771                           ;main.c: 237:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2772  043F  3034               	movlw	52
  2773  0440  00F4               	movwf	??_Init_AHT10+1
  2774  0441  30F1               	movlw	241
  2775  0442  00F3               	movwf	??_Init_AHT10
  2776  0443                     u1007:
  2777  0443  0BF3               	decfsz	??_Init_AHT10,f
  2778  0444  2C43               	goto	u1007
  2779  0445  0BF4               	decfsz	??_Init_AHT10+1,f
  2780  0446  2C43               	goto	u1007
  2781  0447  2C48               	nop2
  2782  0448                     l1426:
  2783                           
  2784                           ;main.c: 240:     I2C_Master_Start();
  2785  0448  120A  118A  2608  120A  118A  	fcall	_I2C_Master_Start
  2786  044D                     l1428:
  2787                           
  2788                           ;main.c: 241:     I2C_Master_Write(0x70);
  2789  044D  3070               	movlw	112
  2790  044E  120A  118A  25F4  120A  118A  	fcall	_I2C_Master_Write
  2791  0453                     l1430:
  2792                           
  2793                           ;main.c: 242:     I2C_Master_Write(0x70);
  2794  0453  3070               	movlw	112
  2795  0454  120A  118A  25F4  120A  118A  	fcall	_I2C_Master_Write
  2796  0459                     l1432:
  2797                           
  2798                           ;main.c: 243:     I2C_Master_Write(0xE1);
  2799  0459  30E1               	movlw	225
  2800  045A  120A  118A  25F4  120A  118A  	fcall	_I2C_Master_Write
  2801  045F                     l1434:
  2802                           
  2803                           ;main.c: 244:     I2C_Master_Write(0xAC);
  2804  045F  30AC               	movlw	172
  2805  0460  120A  118A  25F4  120A  118A  	fcall	_I2C_Master_Write
  2806  0465                     l1436:
  2807                           
  2808                           ;main.c: 245:     I2C_Master_Write(0x08);
  2809  0465  3008               	movlw	8
  2810  0466  120A  118A  25F4  120A  118A  	fcall	_I2C_Master_Write
  2811  046B                     l1438:
  2812                           
  2813                           ;main.c: 246:     I2C_Master_Write(0x00);
  2814  046B  3000               	movlw	0
  2815  046C  120A  118A  25F4  120A  118A  	fcall	_I2C_Master_Write
  2816  0471                     l1440:
  2817                           
  2818                           ;main.c: 247:     I2C_Master_Stop();
  2819  0471  120A  118A  25FF  120A  118A  	fcall	_I2C_Master_Stop
  2820                           
  2821                           ;main.c: 248:     _delay((unsigned long)((350)*(8000000/4000.0)));
  2822  0476  3004               	movlw	4
  2823  0477  00F5               	movwf	??_Init_AHT10+2
  2824  0478  308E               	movlw	142
  2825  0479  00F4               	movwf	??_Init_AHT10+1
  2826  047A  3012               	movlw	18
  2827  047B  00F3               	movwf	??_Init_AHT10
  2828  047C                     u1017:
  2829  047C  0BF3               	decfsz	??_Init_AHT10,f
  2830  047D  2C7C               	goto	u1017
  2831  047E  0BF4               	decfsz	??_Init_AHT10+1,f
  2832  047F  2C7C               	goto	u1017
  2833  0480  0BF5               	decfsz	??_Init_AHT10+2,f
  2834  0481  2C7C               	goto	u1017
  2835  0482  0000               	nop
  2836  0483                     l113:
  2837  0483  0008               	return
  2838  0484                     __end_of_Init_AHT10:
  2839                           
  2840                           	psect	text13
  2841  05F4                     __ptext13:	
  2842 ;; *************** function _I2C_Master_Write *****************
  2843 ;; Defined at:
  2844 ;;		line 69 in file "I2C.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;  d               1    wreg     unsigned char 
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;  d               1    2[COMMON] unsigned char 
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  1    wreg      void 
  2851 ;; Registers used:
  2852 ;;		wreg, status,2, status,0, pclath, cstack
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2858 ;;      Params:         0       0       0       0       0
  2859 ;;      Locals:         1       0       0       0       0
  2860 ;;      Temps:          0       0       0       0       0
  2861 ;;      Totals:         1       0       0       0       0
  2862 ;;Total ram usage:        1 bytes
  2863 ;; Hardware stack levels used:    1
  2864 ;; Hardware stack levels required when called:    2
  2865 ;; This function calls:
  2866 ;;		_I2C_Master_Wait
  2867 ;; This function is called by:
  2868 ;;		_main
  2869 ;;		_Init_AHT10
  2870 ;;		_Expander_Write
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874                           
  2875                           ;psect for function _I2C_Master_Write
  2876  05F4                     _I2C_Master_Write:
  2877                           
  2878                           ;incstack = 0
  2879                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2880                           ;I2C_Master_Write@d stored from wreg
  2881  05F4  00F2               	movwf	I2C_Master_Write@d
  2882  05F5                     l1334:
  2883                           
  2884                           ;I2C.c: 69: void I2C_Master_Write(unsigned char d);I2C.c: 70: {;I2C.c: 71:     I2C_Maste
      +                          r_Wait();
  2885  05F5  120A  118A  25DB  120A  118A  	fcall	_I2C_Master_Wait
  2886  05FA                     l1336:
  2887                           
  2888                           ;I2C.c: 72:     SSPBUF = d;
  2889  05FA  0872               	movf	I2C_Master_Write@d,w
  2890  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  2891  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  2892  05FD  0093               	movwf	19	;volatile
  2893  05FE                     l168:
  2894  05FE  0008               	return
  2895  05FF                     __end_of_I2C_Master_Write:
  2896                           
  2897                           	psect	text14
  2898  05FF                     __ptext14:	
  2899 ;; *************** function _I2C_Master_Stop *****************
  2900 ;; Defined at:
  2901 ;;		line 59 in file "I2C.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;		None
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;		None
  2906 ;; Return value:  Size  Location     Type
  2907 ;;                  1    wreg      void 
  2908 ;; Registers used:
  2909 ;;		wreg, status,2, status,0, pclath, cstack
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2915 ;;      Params:         0       0       0       0       0
  2916 ;;      Locals:         0       0       0       0       0
  2917 ;;      Temps:          0       0       0       0       0
  2918 ;;      Totals:         0       0       0       0       0
  2919 ;;Total ram usage:        0 bytes
  2920 ;; Hardware stack levels used:    1
  2921 ;; Hardware stack levels required when called:    2
  2922 ;; This function calls:
  2923 ;;		_I2C_Master_Wait
  2924 ;; This function is called by:
  2925 ;;		_main
  2926 ;;		_Init_AHT10
  2927 ;;		_Expander_Write
  2928 ;; This function uses a non-reentrant model
  2929 ;;
  2930                           
  2931                           
  2932                           ;psect for function _I2C_Master_Stop
  2933  05FF                     _I2C_Master_Stop:
  2934  05FF                     l1338:	
  2935                           ;incstack = 0
  2936                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2937                           
  2938                           
  2939                           ;I2C.c: 61:     I2C_Master_Wait();
  2940  05FF  120A  118A  25DB  120A  118A  	fcall	_I2C_Master_Wait
  2941  0604                     l1340:
  2942                           
  2943                           ;I2C.c: 62:     SSPCON2bits.PEN = 1;
  2944  0604  1683               	bsf	3,5	;RP0=1, select bank1
  2945  0605  1303               	bcf	3,6	;RP1=0, select bank1
  2946  0606  1511               	bsf	17,2	;volatile
  2947  0607                     l165:
  2948  0607  0008               	return
  2949  0608                     __end_of_I2C_Master_Stop:
  2950                           
  2951                           	psect	text15
  2952  0608                     __ptext15:	
  2953 ;; *************** function _I2C_Master_Start *****************
  2954 ;; Defined at:
  2955 ;;		line 43 in file "I2C.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;		None
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;		None
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  1    wreg      void 
  2962 ;; Registers used:
  2963 ;;		wreg, status,2, status,0, pclath, cstack
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2969 ;;      Params:         0       0       0       0       0
  2970 ;;      Locals:         0       0       0       0       0
  2971 ;;      Temps:          0       0       0       0       0
  2972 ;;      Totals:         0       0       0       0       0
  2973 ;;Total ram usage:        0 bytes
  2974 ;; Hardware stack levels used:    1
  2975 ;; Hardware stack levels required when called:    2
  2976 ;; This function calls:
  2977 ;;		_I2C_Master_Wait
  2978 ;; This function is called by:
  2979 ;;		_main
  2980 ;;		_Init_AHT10
  2981 ;;		_Expander_Write
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           
  2986                           ;psect for function _I2C_Master_Start
  2987  0608                     _I2C_Master_Start:
  2988  0608                     l1330:	
  2989                           ;incstack = 0
  2990                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2991                           
  2992                           
  2993                           ;I2C.c: 45:     I2C_Master_Wait();
  2994  0608  120A  118A  25DB  120A  118A  	fcall	_I2C_Master_Wait
  2995  060D                     l1332:
  2996                           
  2997                           ;I2C.c: 46:     SSPCON2bits.SEN = 1;
  2998  060D  1683               	bsf	3,5	;RP0=1, select bank1
  2999  060E  1303               	bcf	3,6	;RP1=0, select bank1
  3000  060F  1411               	bsf	17,0	;volatile
  3001  0610                     l159:
  3002  0610  0008               	return
  3003  0611                     __end_of_I2C_Master_Start:
  3004                           
  3005                           	psect	text16
  3006  0522                     __ptext16:	
  3007 ;; *************** function _I2C_Master_Read *****************
  3008 ;; Defined at:
  3009 ;;		line 78 in file "I2C.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;  a               1    wreg     unsigned char 
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;  a               1    3[COMMON] unsigned char 
  3014 ;;  temp            1    4[COMMON] unsigned char 
  3015 ;; Return value:  Size  Location     Type
  3016 ;;                  1    wreg      unsigned char 
  3017 ;; Registers used:
  3018 ;;		wreg, status,2, status,0, pclath, cstack
  3019 ;; Tracked objects:
  3020 ;;		On entry : 0/0
  3021 ;;		On exit  : 0/0
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3024 ;;      Params:         0       0       0       0       0
  3025 ;;      Locals:         2       0       0       0       0
  3026 ;;      Temps:          1       0       0       0       0
  3027 ;;      Totals:         3       0       0       0       0
  3028 ;;Total ram usage:        3 bytes
  3029 ;; Hardware stack levels used:    1
  3030 ;; Hardware stack levels required when called:    2
  3031 ;; This function calls:
  3032 ;;		_I2C_Master_Wait
  3033 ;; This function is called by:
  3034 ;;		_main
  3035 ;; This function uses a non-reentrant model
  3036 ;;
  3037                           
  3038                           
  3039                           ;psect for function _I2C_Master_Read
  3040  0522                     _I2C_Master_Read:
  3041                           
  3042                           ;incstack = 0
  3043                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3044                           ;I2C_Master_Read@a stored from wreg
  3045  0522  00F3               	movwf	I2C_Master_Read@a
  3046  0523                     l1496:
  3047                           
  3048                           ;I2C.c: 78: unsigned char I2C_Master_Read(unsigned char a);I2C.c: 79: {;I2C.c: 80:     u
      +                          nsigned char temp;;I2C.c: 81:     I2C_Master_Wait();
  3049  0523  120A  118A  25DB  120A  118A  	fcall	_I2C_Master_Wait
  3050  0528                     l1498:
  3051                           
  3052                           ;I2C.c: 82:     SSPCON2bits.RCEN = 1;
  3053  0528  1683               	bsf	3,5	;RP0=1, select bank1
  3054  0529  1303               	bcf	3,6	;RP1=0, select bank1
  3055  052A  1591               	bsf	17,3	;volatile
  3056                           
  3057                           ;I2C.c: 83:     I2C_Master_Wait();
  3058  052B  120A  118A  25DB  120A  118A  	fcall	_I2C_Master_Wait
  3059  0530                     l1500:
  3060                           
  3061                           ;I2C.c: 84:     temp = SSPBUF;
  3062  0530  1283               	bcf	3,5	;RP0=0, select bank0
  3063  0531  1303               	bcf	3,6	;RP1=0, select bank0
  3064  0532  0813               	movf	19,w	;volatile
  3065  0533  00F2               	movwf	??_I2C_Master_Read
  3066  0534  0872               	movf	??_I2C_Master_Read,w
  3067  0535  00F4               	movwf	I2C_Master_Read@temp
  3068  0536                     l1502:
  3069                           
  3070                           ;I2C.c: 85:     I2C_Master_Wait();
  3071  0536  120A  118A  25DB  120A  118A  	fcall	_I2C_Master_Wait
  3072  053B                     l1504:
  3073                           
  3074                           ;I2C.c: 86:     if(a == 1){
  3075  053B  0373               	decf	I2C_Master_Read@a,w
  3076  053C  1D03               	btfss	3,2
  3077  053D  2D3F               	goto	u481
  3078  053E  2D40               	goto	u480
  3079  053F                     u481:
  3080  053F  2D44               	goto	l171
  3081  0540                     u480:
  3082  0540                     l1506:
  3083                           
  3084                           ;I2C.c: 87:         SSPCON2bits.ACKDT = 0;
  3085  0540  1683               	bsf	3,5	;RP0=1, select bank1
  3086  0541  1303               	bcf	3,6	;RP1=0, select bank1
  3087  0542  1291               	bcf	17,5	;volatile
  3088                           
  3089                           ;I2C.c: 88:     }else{
  3090  0543  2D47               	goto	l172
  3091  0544                     l171:
  3092                           
  3093                           ;I2C.c: 89:         SSPCON2bits.ACKDT = 1;
  3094  0544  1683               	bsf	3,5	;RP0=1, select bank1
  3095  0545  1303               	bcf	3,6	;RP1=0, select bank1
  3096  0546  1691               	bsf	17,5	;volatile
  3097  0547                     l172:	
  3098                           ;I2C.c: 90:     }
  3099                           
  3100                           
  3101                           ;I2C.c: 91:     SSPCON2bits.ACKEN = 1;
  3102  0547  1611               	bsf	17,4	;volatile
  3103  0548                     l1508:
  3104                           
  3105                           ;I2C.c: 92:     return temp;
  3106  0548  0874               	movf	I2C_Master_Read@temp,w
  3107  0549                     l173:
  3108  0549  0008               	return
  3109  054A                     __end_of_I2C_Master_Read:
  3110                           
  3111                           	psect	text17
  3112  05DB                     __ptext17:	
  3113 ;; *************** function _I2C_Master_Wait *****************
  3114 ;; Defined at:
  3115 ;;		line 36 in file "I2C.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;		None
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;		None
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  1    wreg      void 
  3122 ;; Registers used:
  3123 ;;		wreg, status,2
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3129 ;;      Params:         0       0       0       0       0
  3130 ;;      Locals:         0       0       0       0       0
  3131 ;;      Temps:          0       0       0       0       0
  3132 ;;      Totals:         0       0       0       0       0
  3133 ;;Total ram usage:        0 bytes
  3134 ;; Hardware stack levels used:    1
  3135 ;; Hardware stack levels required when called:    1
  3136 ;; This function calls:
  3137 ;;		Nothing
  3138 ;; This function is called by:
  3139 ;;		_I2C_Master_Start
  3140 ;;		_I2C_Master_Stop
  3141 ;;		_I2C_Master_Write
  3142 ;;		_I2C_Master_Read
  3143 ;;		_I2C_Master_RepeatedStart
  3144 ;; This function uses a non-reentrant model
  3145 ;;
  3146                           
  3147                           
  3148                           ;psect for function _I2C_Master_Wait
  3149  05DB                     _I2C_Master_Wait:
  3150  05DB                     l1326:	
  3151                           ;incstack = 0
  3152                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3153                           
  3154  05DB                     l153:	
  3155                           ;I2C.c: 38:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3156                           
  3157  05DB  1683               	bsf	3,5	;RP0=1, select bank1
  3158  05DC  1303               	bcf	3,6	;RP1=0, select bank1
  3159  05DD  1914               	btfsc	20,2	;volatile
  3160  05DE  2DE0               	goto	u321
  3161  05DF  2DE1               	goto	u320
  3162  05E0                     u321:
  3163  05E0  2DDB               	goto	l153
  3164  05E1                     u320:
  3165  05E1                     l1328:
  3166  05E1  0811               	movf	17,w	;volatile
  3167  05E2  391F               	andlw	31
  3168  05E3  1D03               	btfss	3,2
  3169  05E4  2DE6               	goto	u331
  3170  05E5  2DE7               	goto	u330
  3171  05E6                     u331:
  3172  05E6  2DDB               	goto	l153
  3173  05E7                     u330:
  3174  05E7                     l156:
  3175  05E7  0008               	return
  3176  05E8                     __end_of_I2C_Master_Wait:
  3177                           
  3178                           	psect	text18
  3179  04BC                     __ptext18:	
  3180 ;; *************** function _I2C_Master_Init *****************
  3181 ;; Defined at:
  3182 ;;		line 20 in file "I2C.c"
  3183 ;; Parameters:    Size  Location     Type
  3184 ;;  c               4    6[BANK0 ] const unsigned long 
  3185 ;; Auto vars:     Size  Location     Type
  3186 ;;		None
  3187 ;; Return value:  Size  Location     Type
  3188 ;;                  1    wreg      void 
  3189 ;; Registers used:
  3190 ;;		wreg, status,2, status,0, pclath, cstack
  3191 ;; Tracked objects:
  3192 ;;		On entry : 0/0
  3193 ;;		On exit  : 0/0
  3194 ;;		Unchanged: 0/0
  3195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3196 ;;      Params:         0       4       0       0       0
  3197 ;;      Locals:         0       0       0       0       0
  3198 ;;      Temps:          0       4       0       0       0
  3199 ;;      Totals:         0       8       0       0       0
  3200 ;;Total ram usage:        8 bytes
  3201 ;; Hardware stack levels used:    1
  3202 ;; Hardware stack levels required when called:    2
  3203 ;; This function calls:
  3204 ;;		___lldiv
  3205 ;; This function is called by:
  3206 ;;		_main
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210                           
  3211                           ;psect for function _I2C_Master_Init
  3212  04BC                     _I2C_Master_Init:
  3213  04BC                     l1820:	
  3214                           ;incstack = 0
  3215                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3216                           
  3217                           
  3218                           ;I2C.c: 20: void I2C_Master_Init(const unsigned long c);I2C.c: 21: {;I2C.c: 22:     SSPC
      +                          ON = 0b00101000;
  3219  04BC  3028               	movlw	40
  3220  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  3221  04BE  1303               	bcf	3,6	;RP1=0, select bank0
  3222  04BF  0094               	movwf	20	;volatile
  3223  04C0                     l1822:
  3224                           
  3225                           ;I2C.c: 23:     SSPCON2 = 0;
  3226  04C0  1683               	bsf	3,5	;RP0=1, select bank1
  3227  04C1  1303               	bcf	3,6	;RP1=0, select bank1
  3228  04C2  0191               	clrf	17	;volatile
  3229  04C3                     l1824:
  3230                           
  3231                           ;I2C.c: 24:     SSPADD = (8000000/(4*c))-1;
  3232  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  3233  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  3234  04C5  0840               	movf	I2C_Master_Init@c,w
  3235  04C6  00C4               	movwf	??_I2C_Master_Init
  3236  04C7  0841               	movf	I2C_Master_Init@c+1,w
  3237  04C8  00C5               	movwf	??_I2C_Master_Init+1
  3238  04C9  0842               	movf	I2C_Master_Init@c+2,w
  3239  04CA  00C6               	movwf	??_I2C_Master_Init+2
  3240  04CB  0843               	movf	I2C_Master_Init@c+3,w
  3241  04CC  00C7               	movwf	??_I2C_Master_Init+3
  3242  04CD  3002               	movlw	2
  3243  04CE                     u705:
  3244  04CE  1003               	clrc
  3245  04CF  0DC4               	rlf	??_I2C_Master_Init,f
  3246  04D0  0DC5               	rlf	??_I2C_Master_Init+1,f
  3247  04D1  0DC6               	rlf	??_I2C_Master_Init+2,f
  3248  04D2  0DC7               	rlf	??_I2C_Master_Init+3,f
  3249  04D3                     u700:
  3250  04D3  3EFF               	addlw	-1
  3251  04D4  1D03               	skipz
  3252  04D5  2CCE               	goto	u705
  3253  04D6  0847               	movf	??_I2C_Master_Init+3,w
  3254  04D7  00F5               	movwf	___lldiv@divisor+3
  3255  04D8  0846               	movf	??_I2C_Master_Init+2,w
  3256  04D9  00F4               	movwf	___lldiv@divisor+2
  3257  04DA  0845               	movf	??_I2C_Master_Init+1,w
  3258  04DB  00F3               	movwf	___lldiv@divisor+1
  3259  04DC  0844               	movf	??_I2C_Master_Init,w
  3260  04DD  00F2               	movwf	___lldiv@divisor
  3261  04DE  3000               	movlw	0
  3262  04DF  00F9               	movwf	___lldiv@dividend+3
  3263  04E0  307A               	movlw	122
  3264  04E1  00F8               	movwf	___lldiv@dividend+2
  3265  04E2  3012               	movlw	18
  3266  04E3  00F7               	movwf	___lldiv@dividend+1
  3267  04E4  3000               	movlw	0
  3268  04E5  00F6               	movwf	___lldiv@dividend
  3269  04E6  120A  118A  2342  120A  118A  	fcall	___lldiv
  3270  04EB  0872               	movf	?___lldiv,w
  3271  04EC  3EFF               	addlw	255
  3272  04ED  1683               	bsf	3,5	;RP0=1, select bank1
  3273  04EE  1303               	bcf	3,6	;RP1=0, select bank1
  3274  04EF  0093               	movwf	19	;volatile
  3275  04F0                     l1826:
  3276                           
  3277                           ;I2C.c: 25:     SSPSTAT = 0;
  3278  04F0  0194               	clrf	20	;volatile
  3279  04F1                     l1828:
  3280                           
  3281                           ;I2C.c: 26:     TRISCbits.TRISC3 = 1;
  3282  04F1  1587               	bsf	7,3	;volatile
  3283  04F2                     l1830:
  3284                           
  3285                           ;I2C.c: 27:     TRISCbits.TRISC4 = 1;
  3286  04F2  1607               	bsf	7,4	;volatile
  3287  04F3                     l150:
  3288  04F3  0008               	return
  3289  04F4                     __end_of_I2C_Master_Init:
  3290                           
  3291                           	psect	text19
  3292  0342                     __ptext19:	
  3293 ;; *************** function ___lldiv *****************
  3294 ;; Defined at:
  3295 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;  divisor         4    2[COMMON] unsigned long 
  3298 ;;  dividend        4    6[COMMON] unsigned long 
  3299 ;; Auto vars:     Size  Location     Type
  3300 ;;  quotient        4    1[BANK0 ] unsigned long 
  3301 ;;  counter         1    5[BANK0 ] unsigned char 
  3302 ;; Return value:  Size  Location     Type
  3303 ;;                  4    2[COMMON] unsigned long 
  3304 ;; Registers used:
  3305 ;;		wreg, status,2, status,0
  3306 ;; Tracked objects:
  3307 ;;		On entry : 0/0
  3308 ;;		On exit  : 0/0
  3309 ;;		Unchanged: 0/0
  3310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3311 ;;      Params:         8       0       0       0       0
  3312 ;;      Locals:         0       5       0       0       0
  3313 ;;      Temps:          0       1       0       0       0
  3314 ;;      Totals:         8       6       0       0       0
  3315 ;;Total ram usage:       14 bytes
  3316 ;; Hardware stack levels used:    1
  3317 ;; Hardware stack levels required when called:    1
  3318 ;; This function calls:
  3319 ;;		Nothing
  3320 ;; This function is called by:
  3321 ;;		_I2C_Master_Init
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325                           
  3326                           ;psect for function ___lldiv
  3327  0342                     ___lldiv:
  3328  0342                     l1796:	
  3329                           ;incstack = 0
  3330                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3331                           
  3332  0342  3000               	movlw	0
  3333  0343  1283               	bcf	3,5	;RP0=0, select bank0
  3334  0344  1303               	bcf	3,6	;RP1=0, select bank0
  3335  0345  00BE               	movwf	___lldiv@quotient+3
  3336  0346  3000               	movlw	0
  3337  0347  00BD               	movwf	___lldiv@quotient+2
  3338  0348  3000               	movlw	0
  3339  0349  00BC               	movwf	___lldiv@quotient+1
  3340  034A  3000               	movlw	0
  3341  034B  00BB               	movwf	___lldiv@quotient
  3342  034C  0875               	movf	___lldiv@divisor+3,w
  3343  034D  0474               	iorwf	___lldiv@divisor+2,w
  3344  034E  0473               	iorwf	___lldiv@divisor+1,w
  3345  034F  0472               	iorwf	___lldiv@divisor,w
  3346  0350  1903               	skipnz
  3347  0351  2B53               	goto	u631
  3348  0352  2B54               	goto	u630
  3349  0353                     u631:
  3350  0353  2BA1               	goto	l1816
  3351  0354                     u630:
  3352  0354                     l1798:
  3353  0354  01BF               	clrf	___lldiv@counter
  3354  0355  0ABF               	incf	___lldiv@counter,f
  3355  0356  2B64               	goto	l1802
  3356  0357                     l1800:
  3357  0357  3001               	movlw	1
  3358  0358  00BA               	movwf	??___lldiv
  3359  0359                     u645:
  3360  0359  1003               	clrc
  3361  035A  0DF2               	rlf	___lldiv@divisor,f
  3362  035B  0DF3               	rlf	___lldiv@divisor+1,f
  3363  035C  0DF4               	rlf	___lldiv@divisor+2,f
  3364  035D  0DF5               	rlf	___lldiv@divisor+3,f
  3365  035E  0BBA               	decfsz	??___lldiv,f
  3366  035F  2B59               	goto	u645
  3367  0360  3001               	movlw	1
  3368  0361  00BA               	movwf	??___lldiv
  3369  0362  083A               	movf	??___lldiv,w
  3370  0363  07BF               	addwf	___lldiv@counter,f
  3371  0364                     l1802:
  3372  0364  1FF5               	btfss	___lldiv@divisor+3,7
  3373  0365  2B67               	goto	u651
  3374  0366  2B68               	goto	u650
  3375  0367                     u651:
  3376  0367  2B57               	goto	l1800
  3377  0368                     u650:
  3378  0368                     l1804:
  3379  0368  3001               	movlw	1
  3380  0369  00BA               	movwf	??___lldiv
  3381  036A                     u665:
  3382  036A  1003               	clrc
  3383  036B  0DBB               	rlf	___lldiv@quotient,f
  3384  036C  0DBC               	rlf	___lldiv@quotient+1,f
  3385  036D  0DBD               	rlf	___lldiv@quotient+2,f
  3386  036E  0DBE               	rlf	___lldiv@quotient+3,f
  3387  036F  0BBA               	decfsz	??___lldiv,f
  3388  0370  2B6A               	goto	u665
  3389  0371                     l1806:
  3390  0371  0875               	movf	___lldiv@divisor+3,w
  3391  0372  0279               	subwf	___lldiv@dividend+3,w
  3392  0373  1D03               	skipz
  3393  0374  2B7F               	goto	u675
  3394  0375  0874               	movf	___lldiv@divisor+2,w
  3395  0376  0278               	subwf	___lldiv@dividend+2,w
  3396  0377  1D03               	skipz
  3397  0378  2B7F               	goto	u675
  3398  0379  0873               	movf	___lldiv@divisor+1,w
  3399  037A  0277               	subwf	___lldiv@dividend+1,w
  3400  037B  1D03               	skipz
  3401  037C  2B7F               	goto	u675
  3402  037D  0872               	movf	___lldiv@divisor,w
  3403  037E  0276               	subwf	___lldiv@dividend,w
  3404  037F                     u675:
  3405  037F  1C03               	skipc
  3406  0380  2B82               	goto	u671
  3407  0381  2B83               	goto	u670
  3408  0382                     u671:
  3409  0382  2B92               	goto	l1812
  3410  0383                     u670:
  3411  0383                     l1808:
  3412  0383  0872               	movf	___lldiv@divisor,w
  3413  0384  02F6               	subwf	___lldiv@dividend,f
  3414  0385  0873               	movf	___lldiv@divisor+1,w
  3415  0386  1C03               	skipc
  3416  0387  0F73               	incfsz	___lldiv@divisor+1,w
  3417  0388  02F7               	subwf	___lldiv@dividend+1,f
  3418  0389  0874               	movf	___lldiv@divisor+2,w
  3419  038A  1C03               	skipc
  3420  038B  0F74               	incfsz	___lldiv@divisor+2,w
  3421  038C  02F8               	subwf	___lldiv@dividend+2,f
  3422  038D  0875               	movf	___lldiv@divisor+3,w
  3423  038E  1C03               	skipc
  3424  038F  0F75               	incfsz	___lldiv@divisor+3,w
  3425  0390  02F9               	subwf	___lldiv@dividend+3,f
  3426  0391                     l1810:
  3427  0391  143B               	bsf	___lldiv@quotient,0
  3428  0392                     l1812:
  3429  0392  3001               	movlw	1
  3430  0393                     u685:
  3431  0393  1003               	clrc
  3432  0394  0CF5               	rrf	___lldiv@divisor+3,f
  3433  0395  0CF4               	rrf	___lldiv@divisor+2,f
  3434  0396  0CF3               	rrf	___lldiv@divisor+1,f
  3435  0397  0CF2               	rrf	___lldiv@divisor,f
  3436  0398  3EFF               	addlw	-1
  3437  0399  1D03               	skipz
  3438  039A  2B93               	goto	u685
  3439  039B                     l1814:
  3440  039B  3001               	movlw	1
  3441  039C  02BF               	subwf	___lldiv@counter,f
  3442  039D  1D03               	btfss	3,2
  3443  039E  2BA0               	goto	u691
  3444  039F  2BA1               	goto	u690
  3445  03A0                     u691:
  3446  03A0  2B68               	goto	l1804
  3447  03A1                     u690:
  3448  03A1                     l1816:
  3449  03A1  083E               	movf	___lldiv@quotient+3,w
  3450  03A2  00F5               	movwf	?___lldiv+3
  3451  03A3  083D               	movf	___lldiv@quotient+2,w
  3452  03A4  00F4               	movwf	?___lldiv+2
  3453  03A5  083C               	movf	___lldiv@quotient+1,w
  3454  03A6  00F3               	movwf	?___lldiv+1
  3455  03A7  083B               	movf	___lldiv@quotient,w
  3456  03A8  00F2               	movwf	?___lldiv
  3457  03A9                     l372:
  3458  03A9  0008               	return
  3459  03AA                     __end_of___lldiv:
  3460                           
  3461                           	psect	text20
  3462  0619                     __ptext20:	
  3463 ;; *************** function _isr *****************
  3464 ;; Defined at:
  3465 ;;		line 65 in file "main.c"
  3466 ;; Parameters:    Size  Location     Type
  3467 ;;		None
  3468 ;; Auto vars:     Size  Location     Type
  3469 ;;		None
  3470 ;; Return value:  Size  Location     Type
  3471 ;;                  1    wreg      void 
  3472 ;; Registers used:
  3473 ;;		None
  3474 ;; Tracked objects:
  3475 ;;		On entry : 0/0
  3476 ;;		On exit  : 0/0
  3477 ;;		Unchanged: 0/0
  3478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3479 ;;      Params:         0       0       0       0       0
  3480 ;;      Locals:         0       0       0       0       0
  3481 ;;      Temps:          2       0       0       0       0
  3482 ;;      Totals:         2       0       0       0       0
  3483 ;;Total ram usage:        2 bytes
  3484 ;; Hardware stack levels used:    1
  3485 ;; This function calls:
  3486 ;;		Nothing
  3487 ;; This function is called by:
  3488 ;;		Interrupt level 1
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492                           
  3493                           ;psect for function _isr
  3494  0619                     _isr:
  3495  0619                     i1l81:
  3496  0619  0871               	movf	??_isr+1,w
  3497  061A  008A               	movwf	10
  3498  061B  0E70               	swapf	??_isr,w
  3499  061C  0083               	movwf	3
  3500  061D  0EFE               	swapf	btemp,f
  3501  061E  0E7E               	swapf	btemp,w
  3502  061F  0009               	retfie
  3503  0620                     __end_of_isr:
  3504  007E                     btemp	set	126	;btemp
  3505  007E                     wtemp0	set	126
  3506                           
  3507                           	psect	intentry
  3508  0004                     __pintentry:	
  3509                           ;incstack = 0
  3510                           ; Regs used in _isr: []
  3511                           
  3512  0004                     interrupt_function:
  3513  007E                     saved_w	set	btemp
  3514  0004  00FE               	movwf	btemp
  3515  0005  0E03               	swapf	3,w
  3516  0006  00F0               	movwf	??_isr
  3517  0007  080A               	movf	10,w
  3518  0008  00F1               	movwf	??_isr+1
  3519  0009  120A  118A  2E19   	ljmp	_isr
  3520                           
  3521                           	psect	config
  3522                           
  3523                           ;Config register CONFIG1 @ 0x2007
  3524                           ;	Oscillator Selection bits
  3525                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3526                           ;	Watchdog Timer Enable bit
  3527                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3528                           ;	Power-up Timer Enable bit
  3529                           ;	PWRTE = OFF, PWRT disabled
  3530                           ;	RE3/MCLR pin function select bit
  3531                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3532                           ;	Code Protection bit
  3533                           ;	CP = OFF, Program memory code protection is disabled
  3534                           ;	Data Code Protection bit
  3535                           ;	CPD = OFF, Data memory code protection is disabled
  3536                           ;	Brown Out Reset Selection bits
  3537                           ;	BOREN = OFF, BOR disabled
  3538                           ;	Internal External Switchover bit
  3539                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3540                           ;	Fail-Safe Clock Monitor Enabled bit
  3541                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3542                           ;	Low Voltage Programming Enable bit
  3543                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3544                           ;	In-Circuit Debugger Mode bit
  3545                           ;	DEBUG = 0x1, unprogrammed default
  3546  2007                     	org	8199
  3547  2007  20D4               	dw	8404
  3548                           
  3549                           ;Config register CONFIG2 @ 0x2008
  3550                           ;	Brown-out Reset Selection bit
  3551                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3552                           ;	Flash Program Memory Self Write Enable bits
  3553                           ;	WRT = OFF, Write protection off
  3554  2008                     	org	8200
  3555  2008  3FFF               	dw	16383

Data Sizes:
    Strings     20
    Constant    0
    Data        1
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     20      47
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    USART_Cadena@str	PTR unsigned char  size(1) Largest target is 2
		 -> humedad(COMMON[1]), temperatura(BANK0[2]), 

    LCD_Print@LCD_Str	PTR unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[4]), STR_2(CODE[2]), humedad(COMMON[1]), temperatura(BANK0[2]), 
		 -> STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    _main->_LCD_Begin
    _main->_LCD_Goto
    _main->_LCD_Print
    _main->___lmul
    _USART_Cadena->_USART_Tx
    _LCD_Print->_LCD_Write_Nibble
    _LCD_Goto->_LCD_Cmd
    _LCD_Begin->_LCD_Cmd
    _LCD_Cmd->_LCD_Write_Nibble
    _LCD_Write_Nibble->_Expander_Write
    _Expander_Write->_I2C_Master_Write
    _Init_AHT10->_I2C_Master_Write
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    2693
                                             14 BANK0      6     6      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _Init_AHT10
                          _LCD_Begin
                           _LCD_Goto
                          _LCD_Print
                       _USART_Cadena
                         _USART_Init
                           _USART_Rx
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              13     5      8     316
                                              2 COMMON     8     0      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _USART_Rx                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Cadena                                         2     2      0     133
                                              3 COMMON     2     2      0
                           _USART_Tx
 ---------------------------------------------------------------------------------
 (2) _USART_Tx                                             1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Print                                            4     2      2     625
                                              6 COMMON     4     2      2
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (1) _LCD_Goto                                             4     3      1     714
                                              9 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Begin                                            3     3      0     274
                                              9 COMMON     1     1      0
                                              0 BANK0      2     2      0
                     _Expander_Write
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Cmd                                              3     3      0     199
                                              6 COMMON     3     3      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Nibble                                     2     2      0     111
                                              4 COMMON     2     2      0
                     _Expander_Write
 ---------------------------------------------------------------------------------
 (3) _Expander_Write                                       1     1      0      44
                                              3 COMMON     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _Init_AHT10                                           3     3      0      22
                                              3 COMMON     3     3      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Write                                     1     1      0      22
                                              2 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      3     3      0      45
                                              2 COMMON     3     3      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     542
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Init_AHT10
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _LCD_Begin
     _Expander_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _LCD_Cmd
       _LCD_Write_Nibble
         _Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_Goto
     _LCD_Cmd
       _LCD_Write_Nibble
         _Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_Print
     _LCD_Write_Nibble
       _Expander_Write
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
   _USART_Cadena
     _USART_Tx
   _USART_Init
   _USART_Rx
   ___lmul

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     14      2F       5       58.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       1       0        7.1%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3B      12        0.0%
ABS                  0      0      3B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Sep 02 12:46:20 2021

                        pc 0002                         l96 025C                         _RS 03D0  
                       fsr 0004                        l113 0483                        l150 04F3  
                      l206 03F3                        l232 05DA                        l153 05DB  
                      l209 0341                        l241 0623                        l171 0544  
                      l235 05E9                        l156 05E7                        l172 0547  
                      l173 0549                        l165 0607                        l182 0591  
                      l238 05F3                        l350 043B                        l159 0610  
                      l247 05C5                        l168 05FE                        l179 05AE  
                      l372 03A9                        l188 0521                        l197 04BB  
                      _GIE 005F                        u320 05E1                        u321 05E0  
                      u330 05E7                        u331 05E6                        u350 0512  
                      u351 0511                        u360 0518                        u361 0517  
                      u345 0500                        u370 05EF                        u371 05EE  
                      u700 04D3                        u630 0354                        u470 03F3  
                      u710 0402                        u631 0353                        u471 03F2  
                      u711 0401                        u480 0540                        u800 023A  
                      u705 04CE                        u481 053F                        u465 03CF  
                      u721 040B                        u801 0239                        u650 0368  
                      u490 05C5                        u722 0412                        u810 0248  
                      u651 0367                        u491 05C4                        u723 0419  
                      u811 0247                        u820 027A                        u645 0359  
                      u821 0279                        u670 0383                        u750 0433  
                      u671 0382                        u751 0432                        u735 041B  
                      u760 0117                        u665 036A                        u745 0423  
                      u690 03A1                        u770 015D                        u691 03A0  
                      u675 037F                        u907 02CD                        u780 01DA  
                      u685 0393                        u917 02DD                        u781 01D9  
                      u765 0112                        u837 0046                        u790 022A  
                      u927 02ED                        u791 0229                        u775 0158  
                      u847 00A3                        u937 02FD                        u857 0102  
                      u947 030D                        u867 0186                        u957 031D  
                      u877 01C6                        u967 032D                        u887 029F  
                      u977 033D                        u897 02BC                        u987 051C  
                      u997 058E                        _dec 0034                        _cen 0035  
                      _isr 0619                        fsr0 0004                        _uni 0033  
                      indf 0000                 _DataBuffer 0020            __end_of_LCD_Cmd 0522  
                     l2000 01CD                       l2010 01E8                       l2020 021B  
                     l2012 01F1                       l2004 01D4                       l2030 0240  
                     l2022 0224                       l2014 01FA                       l2006 01DA  
                     l1400 05D1                       l2040 025F                       l2032 0248  
                     l2024 022A                       l2016 0206                       l2008 01DE  
                     l1330 0608                       l1402 05D2                       l2050 027F  
                     l2114 0266                       l2034 024E                       l2026 0234  
                     l2018 020F                       l1500 0530                       l1332 060D  
                     l1340 0604                       l2116 04B0                       l1404 05D5  
                     l2052 0284                       l2036 0252                       l2044 0261  
                     l2028 023A                       l1326 05DB                       l1502 0536  
                     l1334 05F5                       l1430 0453                       l1422 043C  
                     l1342 0593                       l1350 057D                       l1406 05D6  
                     l2054 028A                       l2038 0257                       l2046 0274  
                     l1328 05E1                       l1504 053B                       l1336 05FA  
                     l1440 0471                       l1432 0459                       l1424 043F  
                     l1352 0584                       l1344 056F                       l1360 04F6  
                     l1520 05B9                       l1408 05D7                       l1512 0620  
                     l2056 0292                       l2048 027A                       l1506 0540  
                     l1338 05FF                       l1434 045F                       l1426 0448  
                     l1354 0585                       l1346 0575                       l1362 050D  
                     l1370 05EF                       l1522 05BD                       l2058 0297  
                     l1508 0548                       l1436 0465                       l1428 044D  
                     l1356 058C                       l1348 057C                       l1364 0512  
                     l1516 05B0                       l1438 046B                       l1366 0518  
                     l1358 04F5                       l1518 05B1                       l1800 0357  
                     l1368 05E9                       l1810 0391                       l1802 0364  
                     l1490 03AD                       l1812 0392                       l1804 0368  
                     l1820 04BC                       l1492 03DC                       l1396 05C6  
                     l1900 0034                       l1814 039B                       l1806 0371  
                     l1830 04F2                       l1822 04C0                       l1494 03E0  
                     l1486 03AA                       l1398 05CD                       l1910 003A  
                     l1902 0036                       l1808 0383                       l1816 03A1  
                     l1824 04C3                       l1496 0523                       l1840 02D1  
                     l1832 02AA                       l1488 03AB                       l1920 004C  
                     l1912 003D                       l1904 0037                       l1826 04F0  
                     l1498 0528                       l1850 0311                       l1842 02E1  
                     l1834 02B0                       l1930 0063                       l1922 004D  
                     l1914 003E                       l1906 0038                       l1828 04F1  
                     l1852 0317                       l1844 02E7                       l1836 02B6  
                     l1860 0488                       l1940 0086                       l1932 006A  
                     l1924 005A                       l1916 0042                       l1908 0039  
                     l1854 0327                       l1846 02F7                       l1838 02C7  
                     l1862 0490                       l1950 00A8                       l1942 008C  
                     l1934 0072                       l1926 005F                       l1918 0049  
                     l1856 0331                       l1848 0301                       l1864 0498  
                     l1880 0402                       l1960 00D4                       l1952 00AD  
                     l1944 0092                       l1936 007B                       l1928 0062  
                     l1866 04A0                       l1858 0487                       l1882 0419  
                     l1970 0109                       l1962 00DF                       l1954 00B3  
                     l1946 0098                       l1938 0080                       l1890 0024  
                     l1796 0342                       l1868 04A8                       l1884 0422  
                     l1876 03F4                       l1980 016D                       l1972 0122  
                     l1964 00EA                       l1956 00BE                       l1948 009D  
                     l1892 0029                       l1798 0354                       l1886 0433  
                     l1878 03FE                       l1990 0192                       l1982 0173  
                     l1974 0136                       l1966 00F5                       l1958 00C9  
                     l1894 002D                       l1992 0198                       l1984 0179  
                     l1976 0138                       l1968 00FA                       l1896 002E  
                     l1994 01A9                       l1986 017E                       l1978 0168  
                     l1898 0032                       l1996 01B9                       l1988 018D  
                     l1998 01BE          ?_LCD_Write_Nibble 0070                       ?_isr 0070  
                     STR_1 055A                       STR_2 056C                       STR_3 0568  
                     u1007 0443                       u1017 047C                       _PEIE 005E  
                     i1l81 0619         ??_LCD_Write_Nibble 0074                       _main 0024  
       __size_of_LCD_Begin 0099                       btemp 007E         __size_of_LCD_Print 004A  
                     start 000C                LCD_Goto@col 003C                LCD_Goto@row 0079  
                    ??_isr 0070           __end_of_LCD_Goto 04BC           ?_I2C_Master_Init 0040  
         ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
                    ?_main 0070                      _ANSEL 0188            __end_of___lldiv 03AA  
                    _RCREG 001A                      _SPBRG 0099                      _PORTA 0005  
                    _PORTC 0007                      _PORTD 0008                      _TRISC 0087  
                    _SSPIE 0463                      _TRISE 0089                      _SSPIF 0063  
                    _TXREG 0019        ___lmul@multiplicand 0076           __end_of_USART_Rx 0624  
         __end_of_USART_Tx 05F4               USART_Tx@data 0072             __pbitbssCOMMON 03D0  
                    pclath 000A                      status 0003                      wtemp0 007E  
               _Init_AHT10 043C                ?_USART_Init 0070            __initialization 000F  
             __end_of_main 02A9                     ??_main 0048          __end_of_LCD_Begin 0342  
                ??_LCD_Cmd 0076          __end_of_LCD_Print 03F4          ?_I2C_Master_Start 0070  
        ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0072         ??_I2C_Master_Write 0072  
                   _ANSELH 0189                     _SPBRGH 009A                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _SSPCON 0014  
                   _SSPBUF 0013                     ___lmul 03F4                  ??___lldiv 003A  
                   _entero 0037    __size_of_Expander_Write 001D                     saved_w 007E  
      __size_of_USART_Init 0015    __end_of__initialization 0020                  ?_LCD_Goto 0079  
              ?_Init_AHT10 0070              _backlight_val 004E             __pcstackCOMMON 0070  
             __pidataBANK0 0624             LCD_Cmd@Command 0078                  ?_USART_Rx 0070  
                ?_USART_Tx 0070                 __pbssBANK0 0020                 ??_LCD_Goto 003A  
               __pmaintext 0024                    ?___lmul 0072  __size_of_LCD_Write_Nibble 0024  
               __pintentry 0004             ___lmul@product 003B                 ??_USART_Rx 0072  
               ??_USART_Tx 0072                _Raw_humedad 0026                    _LCD_Cmd 04F4  
      __size_of_Init_AHT10 0048                    _SSPCON2 0091                    _SSPSTAT 0094  
               __stringtab 054A               ??_USART_Init 0072        Expander_Write@value 0073  
          __size_of___lmul 0048                    ___lldiv 0342                    _decimal 0036  
                  __ptext1 03F4                    __ptext2 0620                    __ptext3 05C6  
                  __ptext4 05AF                    __ptext5 05E8                    __ptext6 03AA  
                  __ptext7 0484                    __ptext8 02A9                    __ptext9 04F4  
           _Expander_Write 0592                    _ingreso 0032               __size_of_isr 0007  
                  _humedad 007B   __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 0028  
 __size_of_I2C_Master_Wait 000D                  _LCD_Begin 02A9   __size_of_I2C_Master_Stop 0009  
       __end_of_USART_Init 05DB                  _LCD_Print 03AA                    clrloop0 0612  
     end_of_initialization 0020  __size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000B  
          ___lldiv@divisor 0072            ___lldiv@counter 003F                  _RCSTAbits 0018  
         I2C_Master_Init@c 0040           I2C_Master_Read@a 0073          LCD_Write_Nibble@n 0075  
   __end_of_Expander_Write 05AF                  _PORTCbits 0007                  _TRISCbits 0087  
               ?_LCD_Begin 0070                 ?_LCD_Print 0076              ?_USART_Cadena 0070  
             ??_Init_AHT10 0073                  _TXSTAbits 0098          __size_of_LCD_Goto 0038  
         _LCD_Write_Nibble 056E                 LCD_Print@i 0079             __end_of___lmul 043C  
          ?_Expander_Write 0070                _BAUDCTLbits 0187          __size_of_USART_Rx 0004  
        __size_of_USART_Tx 000C        start_initialization 000F         __end_of_Init_AHT10 0484  
              __end_of_isr 0620             ??_USART_Cadena 0073          ??_I2C_Master_Init 0044  
        ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0072          ??_I2C_Master_Stop 0072  
                 ??___lmul 003A                __pdataBANK0 004E                   ?_LCD_Cmd 0070  
              __pbssCOMMON 007B                  ___latbits 0002              __pcstackBANK0 003A  
              ??_LCD_Begin 003A                ??_LCD_Print 0078           _I2C_Master_Start 0608  
         _I2C_Master_Write 05F4                   ?___lldiv 0072           LCD_Print@LCD_Str 0076  
                __pstrings 054A          interrupt_function 0004                   _LCD_Goto 0484  
                clear_ram0 0611                   _PIR1bits 000C            USART_Cadena@str 0074  
     __end_of_USART_Cadena 05C6                   _USART_Rx 0620                   _USART_Tx 05E8  
               _ADCON0bits 001F                __stringbase 0559                 _ADCON1bits 009F  
         __size_of_LCD_Cmd 002E        I2C_Master_Read@temp 0074   __end_of_LCD_Write_Nibble 0592  
        ___lmul@multiplier 0072                   _i2c_addr 0030           ??_Expander_Write 0073  
         __size_of___lldiv 0068            _Raw_temperatura 002A         __end_of__stringtab 055A  
          _I2C_Master_Init 04BC            _I2C_Master_Read 0522            _I2C_Master_Wait 05DB  
          _I2C_Master_Stop 05FF                   _actuador 0031                   __ptext10 056E  
                 __ptext11 0592                   __ptext20 0619                   __ptext12 043C  
                 __ptext13 05F4                   __ptext14 05FF                   __ptext15 0608  
                 __ptext16 0522                   __ptext17 05DB                   __ptext18 04BC  
                 __ptext19 0342                _humedad_tem 002E              __size_of_main 0285  
 __end_of_I2C_Master_Start 0611   __end_of_I2C_Master_Write 05FF         LCD_Begin@_i2c_addr 0079  
                 intlevel1 0000           ___lldiv@dividend 0076                  stringcode 0554  
    __size_of_USART_Cadena 0017                 _OSCCONbits 008F    __end_of_I2C_Master_Init 04F4  
  __end_of_I2C_Master_Read 054A    __end_of_I2C_Master_Wait 05E8    __end_of_I2C_Master_Stop 0608  
              _temperatura 0038           ___lldiv@quotient 003B          I2C_Master_Write@d 0072  
                 stringdir 0554                   stringtab 054A                _SSPCON2bits 0091  
             _USART_Cadena 05AF                 _USART_Init 05C6  
