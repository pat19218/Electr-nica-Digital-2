

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Jul 15 12:46:55 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287                           
   288                           	psect	strings
   289  016D                     __pstrings:
   290  016D                     stringtab:
   291  016D                     __stringtab:
   292  016D                     stringcode:	
   293                           ;	String table - string pointers are 1 byte each
   294                           
   295  016D                     stringdir:
   296  016D  3001               	movlw	high stringdir
   297  016E  008A               	movwf	10
   298  016F  0804               	movf	4,w
   299  0170  0A84               	incf	4,f
   300  0171  0782               	addwf	2,f
   301  0172                     __stringbase:
   302  0172  3400               	retlw	0
   303  0173                     __end_of__stringtab:
   304  0173                     _num_display:
   305  0173  34FC               	retlw	252
   306  0174  3460               	retlw	96
   307  0175  34DA               	retlw	218
   308  0176  34F2               	retlw	242
   309  0177  3466               	retlw	102
   310  0178  34B6               	retlw	182
   311  0179  34BE               	retlw	190
   312  017A  34E0               	retlw	224
   313  017B  34FE               	retlw	254
   314  017C  34F6               	retlw	246
   315  017D  34EE               	retlw	238
   316  017E  343E               	retlw	62
   317  017F  349C               	retlw	156
   318  0180  347A               	retlw	122
   319  0181  349E               	retlw	158
   320  0182  348E               	retlw	142
   321  0183                     __end_of_num_display:
   322  001E                     _ADRESH	set	30
   323  0009                     _PORTE	set	9
   324  0006                     _PORTB	set	6
   325  0005                     _PORTA	set	5
   326  000B                     _INTCONbits	set	11
   327  001F                     _ADCON0bits	set	31
   328  0001                     _TMR0	set	1
   329  0007                     _PORTC	set	7
   330  0008                     _PORTD	set	8
   331  0036                     _RB6	set	54
   332  0040                     _RD0	set	64
   333  0041                     _RD1	set	65
   334  005A                     _T0IF	set	90
   335  0031                     _RB1	set	49
   336  0030                     _RB0	set	48
   337  0058                     _RBIF	set	88
   338  009F                     _ADCON1bits	set	159
   339  0096                     _IOCBbits	set	150
   340  0095                     _WPUBbits	set	149
   341  0081                     _OPTION_REGbits	set	129
   342  008F                     _OSCCONbits	set	143
   343  0089                     _TRISE	set	137
   344  0088                     _TRISD	set	136
   345  0087                     _TRISC	set	135
   346  0086                     _TRISB	set	134
   347  0085                     _TRISA	set	133
   348  0189                     _ANSELH	set	393
   349  0188                     _ANSEL	set	392
   350                           
   351                           	psect	cinit
   352  0015                     start_initialization:	
   353                           ; #config settings
   354                           
   355  0015                     __initialization:
   356                           
   357                           ; Clear objects allocated to COMMON
   358  0015  01F0               	clrf	__pbssCOMMON& (0+127)
   359  0016  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   360  0017  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   361  0018  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   362  0019  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   363                           
   364                           ; Clear objects allocated to BANK0
   365  001A  1283               	bcf	3,5	;RP0=0, select bank0
   366  001B  1303               	bcf	3,6	;RP1=0, select bank0
   367  001C  01AE               	clrf	__pbssBANK0& (0+127)
   368  001D  01AF               	clrf	(__pbssBANK0+1)& (0+127)
   369  001E                     end_of_initialization:	
   370                           ;End of C runtime variable initialization code
   371                           
   372  001E                     __end_of__initialization:
   373  001E  0183               	clrf	3
   374  001F  120A  118A  2822   	ljmp	_main	;jump to C main() function
   375                           
   376                           	psect	bssCOMMON
   377  0070                     __pbssCOMMON:
   378  0070                     _dato_menor:
   379  0070                     	ds	1
   380  0071                     _dato_mayor:
   381  0071                     	ds	1
   382  0072                     _valor_adc:
   383  0072                     	ds	1
   384  0073                     _turno:
   385  0073                     	ds	1
   386  0074                     _ref:
   387  0074                     	ds	1
   388                           
   389                           	psect	bssBANK0
   390  002E                     __pbssBANK0:
   391  002E                     _data_menor:
   392  002E                     	ds	1
   393  002F                     _data_mayor:
   394  002F                     	ds	1
   395                           
   396                           	psect	cstackCOMMON
   397  0075                     __pcstackCOMMON:
   398  0075                     ?_hex_mayor:
   399  0075                     ?_hex_menor:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  0075                     ?_isr:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0075                     ??_isr:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0075                     ?_main:	
   409                           ; 1 bytes @ 0x0
   410                           
   411                           
   412                           ; 1 bytes @ 0x0
   413  0075                     	ds	5
   414                           
   415                           	psect	cstackBANK0
   416  0020                     __pcstackBANK0:
   417  0020                     ??_hex_mayor:
   418  0020                     ?___awdiv:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0020                     ___awdiv@divisor:	
   422                           ; 2 bytes @ 0x0
   423                           
   424                           
   425                           ; 2 bytes @ 0x0
   426  0020                     	ds	1
   427  0021                     hex_mayor@in:
   428                           
   429                           ; 1 bytes @ 0x1
   430  0021                     	ds	1
   431  0022                     ___awdiv@dividend:
   432                           
   433                           ; 2 bytes @ 0x2
   434  0022                     	ds	2
   435  0024                     ??___awdiv:
   436                           
   437                           ; 1 bytes @ 0x4
   438  0024                     	ds	1
   439  0025                     ___awdiv@counter:
   440                           
   441                           ; 1 bytes @ 0x5
   442  0025                     	ds	1
   443  0026                     ___awdiv@sign:
   444                           
   445                           ; 1 bytes @ 0x6
   446  0026                     	ds	1
   447  0027                     ___awdiv@quotient:
   448                           
   449                           ; 2 bytes @ 0x7
   450  0027                     	ds	2
   451  0029                     ??_hex_menor:
   452                           
   453                           ; 1 bytes @ 0x9
   454  0029                     	ds	3
   455  002C                     hex_menor@in:
   456                           
   457                           ; 1 bytes @ 0xC
   458  002C                     	ds	1
   459  002D                     ??_main:
   460                           
   461                           ; 1 bytes @ 0xD
   462  002D                     	ds	1
   463                           
   464                           	psect	maintext
   465  0022                     __pmaintext:	
   466 ;;
   467 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   468 ;;
   469 ;; *************** function _main *****************
   470 ;; Defined at:
   471 ;;		line 92 in file "Lab_1/LAB_1.c"
   472 ;; Parameters:    Size  Location     Type
   473 ;;		None
   474 ;; Auto vars:     Size  Location     Type
   475 ;;		None
   476 ;; Return value:  Size  Location     Type
   477 ;;                  1    wreg      void 
   478 ;; Registers used:
   479 ;;		wreg, status,2, status,0, pclath, cstack
   480 ;; Tracked objects:
   481 ;;		On entry : B00/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   485 ;;      Params:         0       0       0       0       0
   486 ;;      Locals:         0       0       0       0       0
   487 ;;      Temps:          0       1       0       0       0
   488 ;;      Totals:         0       1       0       0       0
   489 ;;Total ram usage:        1 bytes
   490 ;; Hardware stack levels required when called:    4
   491 ;; This function calls:
   492 ;;		_hex_mayor
   493 ;;		_hex_menor
   494 ;; This function is called by:
   495 ;;		Startup code after reset
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499                           
   500                           ;psect for function _main
   501  0022                     _main:
   502  0022                     l1095:	
   503                           ;incstack = 0
   504                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   505                           
   506                           
   507                           ;Lab_1/LAB_1.c: 93:     ANSEL = 0b100000000;
   508  0022  1683               	bsf	3,5	;RP0=1, select bank3
   509  0023  1703               	bsf	3,6	;RP1=1, select bank3
   510  0024  0188               	clrf	8	;volatile
   511                           
   512                           ;Lab_1/LAB_1.c: 94:     ANSELH = 0x00;
   513  0025  0189               	clrf	9	;volatile
   514                           
   515                           ;Lab_1/LAB_1.c: 96:     TRISA = 0x00;
   516  0026  1683               	bsf	3,5	;RP0=1, select bank1
   517  0027  1303               	bcf	3,6	;RP1=0, select bank1
   518  0028  0185               	clrf	5	;volatile
   519  0029                     l1097:
   520                           
   521                           ;Lab_1/LAB_1.c: 97:     TRISB = 0b00000011;
   522  0029  3003               	movlw	3
   523  002A  0086               	movwf	6	;volatile
   524  002B                     l1099:
   525                           
   526                           ;Lab_1/LAB_1.c: 98:     TRISC = 0x00;
   527  002B  0187               	clrf	7	;volatile
   528  002C                     l1101:
   529                           
   530                           ;Lab_1/LAB_1.c: 99:     TRISD = 0x00;
   531  002C  0188               	clrf	8	;volatile
   532  002D                     l1103:
   533                           
   534                           ;Lab_1/LAB_1.c: 100:     TRISE = 0b0100;
   535  002D  3004               	movlw	4
   536  002E  0089               	movwf	9	;volatile
   537  002F                     l1105:
   538                           
   539                           ;Lab_1/LAB_1.c: 102:     OSCCONbits.IRCF = 0b111;
   540  002F  3070               	movlw	112
   541  0030  048F               	iorwf	15,f	;volatile
   542  0031                     l1107:
   543                           
   544                           ;Lab_1/LAB_1.c: 103:     OSCCONbits.SCS = 1;
   545  0031  140F               	bsf	15,0	;volatile
   546  0032                     l1109:
   547                           
   548                           ;Lab_1/LAB_1.c: 106:     OPTION_REGbits.nRBPU = 0;
   549  0032  1381               	bcf	1,7	;volatile
   550  0033                     l1111:
   551                           
   552                           ;Lab_1/LAB_1.c: 107:     WPUBbits.WPUB0 = 1;
   553  0033  1415               	bsf	21,0	;volatile
   554  0034                     l1113:
   555                           
   556                           ;Lab_1/LAB_1.c: 108:     WPUBbits.WPUB1 = 1;
   557  0034  1495               	bsf	21,1	;volatile
   558  0035                     l1115:
   559                           
   560                           ;Lab_1/LAB_1.c: 110:     IOCBbits.IOCB0 = 1;
   561  0035  1416               	bsf	22,0	;volatile
   562  0036                     l1117:
   563                           
   564                           ;Lab_1/LAB_1.c: 111:     IOCBbits.IOCB1 = 1;
   565  0036  1496               	bsf	22,1	;volatile
   566  0037                     l1119:
   567                           
   568                           ;Lab_1/LAB_1.c: 112:     RBIF = 0;
   569  0037  100B               	bcf	11,0	;volatile
   570  0038                     l1121:
   571                           
   572                           ;Lab_1/LAB_1.c: 115:     OPTION_REGbits.T0CS = 0;
   573  0038  1281               	bcf	1,5	;volatile
   574  0039                     l1123:
   575                           
   576                           ;Lab_1/LAB_1.c: 116:     OPTION_REGbits.PSA = 0;
   577  0039  1181               	bcf	1,3	;volatile
   578  003A                     l1125:
   579                           
   580                           ;Lab_1/LAB_1.c: 117:     OPTION_REGbits.PS = 0b111;
   581  003A  3007               	movlw	7
   582  003B  0481               	iorwf	1,f	;volatile
   583  003C                     l1127:
   584                           
   585                           ;Lab_1/LAB_1.c: 118:     TMR0 = 60;
   586  003C  303C               	movlw	60
   587  003D  1283               	bcf	3,5	;RP0=0, select bank0
   588  003E  1303               	bcf	3,6	;RP1=0, select bank0
   589  003F  0081               	movwf	1	;volatile
   590  0040                     l1129:
   591                           
   592                           ;Lab_1/LAB_1.c: 121:     ADCON1bits.ADFM = 0;
   593  0040  1683               	bsf	3,5	;RP0=1, select bank1
   594  0041  1303               	bcf	3,6	;RP1=0, select bank1
   595  0042  139F               	bcf	31,7	;volatile
   596  0043                     l1131:
   597                           
   598                           ;Lab_1/LAB_1.c: 122:     ADCON1bits.VCFG0 = 0;
   599  0043  121F               	bcf	31,4	;volatile
   600  0044                     l1133:
   601                           
   602                           ;Lab_1/LAB_1.c: 123:     ADCON1bits.VCFG1 = 0;
   603  0044  129F               	bcf	31,5	;volatile
   604  0045                     l1135:
   605                           
   606                           ;Lab_1/LAB_1.c: 124:     ADCON0bits.ADCS0 = 0;
   607  0045  1283               	bcf	3,5	;RP0=0, select bank0
   608  0046  1303               	bcf	3,6	;RP1=0, select bank0
   609  0047  131F               	bcf	31,6	;volatile
   610  0048                     l1137:
   611                           
   612                           ;Lab_1/LAB_1.c: 125:     ADCON0bits.ADCS1 = 1;
   613  0048  179F               	bsf	31,7	;volatile
   614  0049                     l1139:
   615                           
   616                           ;Lab_1/LAB_1.c: 126:     ADCON0bits.CHS = 7;
   617  0049  081F               	movf	31,w	;volatile
   618  004A  39C3               	andlw	-61
   619  004B  381C               	iorlw	28
   620  004C  009F               	movwf	31	;volatile
   621  004D                     l1141:
   622                           
   623                           ;Lab_1/LAB_1.c: 127:     _delay((unsigned long)((100)*(8000000/4000000.0)));
   624  004D  3041               	movlw	65
   625  004E  1283               	bcf	3,5	;RP0=0, select bank0
   626  004F  1303               	bcf	3,6	;RP1=0, select bank0
   627  0050  00AD               	movwf	??_main
   628  0051                     u527:
   629  0051  0BAD               	decfsz	??_main,f
   630  0052  2851               	goto	u527
   631  0053  2854               	nop2
   632  0054                     l1143:
   633                           
   634                           ;Lab_1/LAB_1.c: 128:     ADCON0bits.ADON = 1;
   635  0054  1283               	bcf	3,5	;RP0=0, select bank0
   636  0055  1303               	bcf	3,6	;RP1=0, select bank0
   637  0056  141F               	bsf	31,0	;volatile
   638  0057                     l1145:
   639                           
   640                           ;Lab_1/LAB_1.c: 131:     INTCONbits.GIE = 1;
   641  0057  178B               	bsf	11,7	;volatile
   642  0058                     l1147:
   643                           
   644                           ;Lab_1/LAB_1.c: 132:     INTCONbits.RBIE = 1;
   645  0058  158B               	bsf	11,3	;volatile
   646  0059                     l1149:
   647                           
   648                           ;Lab_1/LAB_1.c: 133:     INTCONbits.RBIF = 0;
   649  0059  100B               	bcf	11,0	;volatile
   650  005A                     l1151:
   651                           
   652                           ;Lab_1/LAB_1.c: 134:     INTCONbits.T0IE = 1;
   653  005A  168B               	bsf	11,5	;volatile
   654  005B                     l1153:
   655                           
   656                           ;Lab_1/LAB_1.c: 135:     INTCONbits.T0IF = 0;
   657  005B  110B               	bcf	11,2	;volatile
   658  005C                     l1155:
   659                           
   660                           ;Lab_1/LAB_1.c: 137:     ADCON0bits.GO = 1;
   661  005C  149F               	bsf	31,1	;volatile
   662  005D                     l1157:
   663                           
   664                           ;Lab_1/LAB_1.c: 139:     ref = 0;
   665  005D  01F4               	clrf	_ref
   666  005E                     l1159:
   667                           
   668                           ;Lab_1/LAB_1.c: 140:     dato_mayor = 0;
   669  005E  01F1               	clrf	_dato_mayor
   670  005F                     l1161:
   671                           
   672                           ;Lab_1/LAB_1.c: 141:     dato_menor = 0;
   673  005F  01F0               	clrf	_dato_menor
   674  0060                     l1163:
   675                           
   676                           ;Lab_1/LAB_1.c: 143:     PORTA = 0x00;
   677  0060  0185               	clrf	5	;volatile
   678  0061                     l1165:
   679                           
   680                           ;Lab_1/LAB_1.c: 144:     PORTB = 0x00;
   681  0061  0186               	clrf	6	;volatile
   682  0062                     l1167:
   683                           
   684                           ;Lab_1/LAB_1.c: 145:     PORTC = 0x00;
   685  0062  0187               	clrf	7	;volatile
   686  0063                     l1169:
   687                           
   688                           ;Lab_1/LAB_1.c: 146:     PORTD = 0x00;
   689  0063  0188               	clrf	8	;volatile
   690  0064                     l1171:
   691                           
   692                           ;Lab_1/LAB_1.c: 147:     PORTE = 0x00;
   693  0064  0189               	clrf	9	;volatile
   694  0065                     l1173:
   695                           
   696                           ;Lab_1/LAB_1.c: 152:         PORTA = ref;
   697  0065  0874               	movf	_ref,w
   698  0066  0085               	movwf	5	;volatile
   699  0067                     l1175:
   700                           
   701                           ;Lab_1/LAB_1.c: 154:         if(ADCON0bits.GO == 0){
   702  0067  189F               	btfsc	31,1	;volatile
   703  0068  286A               	goto	u491
   704  0069  286B               	goto	u490
   705  006A                     u491:
   706  006A  2879               	goto	l1181
   707  006B                     u490:
   708  006B                     l1177:
   709                           
   710                           ;Lab_1/LAB_1.c: 155:           valor_adc = ADRESH;
   711  006B  081E               	movf	30,w	;volatile
   712  006C  00AD               	movwf	??_main
   713  006D  082D               	movf	??_main,w
   714  006E  00F2               	movwf	_valor_adc
   715                           
   716                           ;Lab_1/LAB_1.c: 157:         _delay((unsigned long)((50)*(8000000/4000000.0)));
   717  006F  3020               	movlw	32
   718  0070  1283               	bcf	3,5	;RP0=0, select bank0
   719  0071  1303               	bcf	3,6	;RP1=0, select bank0
   720  0072  00AD               	movwf	??_main
   721  0073                     u537:
   722  0073  0BAD               	decfsz	??_main,f
   723  0074  2873               	goto	u537
   724  0075  0000               	nop
   725  0076                     l1179:
   726                           
   727                           ;Lab_1/LAB_1.c: 159:         ADCON0bits.GO = 1;
   728  0076  1283               	bcf	3,5	;RP0=0, select bank0
   729  0077  1303               	bcf	3,6	;RP1=0, select bank0
   730  0078  149F               	bsf	31,1	;volatile
   731  0079                     l1181:
   732                           
   733                           ;Lab_1/LAB_1.c: 161:         dato_mayor = hex_mayor(valor_adc);
   734  0079  0872               	movf	_valor_adc,w
   735  007A  120A  118A  2183  120A  118A  	fcall	_hex_mayor
   736  007F  1283               	bcf	3,5	;RP0=0, select bank0
   737  0080  1303               	bcf	3,6	;RP1=0, select bank0
   738  0081  00AD               	movwf	??_main
   739  0082  082D               	movf	??_main,w
   740  0083  00F1               	movwf	_dato_mayor
   741  0084                     l1183:
   742                           
   743                           ;Lab_1/LAB_1.c: 162:         dato_menor = hex_menor(valor_adc);
   744  0084  0872               	movf	_valor_adc,w
   745  0085  120A  118A  2152  120A  118A  	fcall	_hex_menor
   746  008A  1283               	bcf	3,5	;RP0=0, select bank0
   747  008B  1303               	bcf	3,6	;RP1=0, select bank0
   748  008C  00AD               	movwf	??_main
   749  008D  082D               	movf	??_main,w
   750  008E  00F0               	movwf	_dato_menor
   751  008F                     l1185:
   752                           
   753                           ;Lab_1/LAB_1.c: 168:         RB6 = (valor_adc > ref) ? 1:0;
   754  008F  0872               	movf	_valor_adc,w
   755  0090  0274               	subwf	_ref,w
   756  0091  1C03               	skipc
   757  0092  2894               	goto	u501
   758  0093  2898               	goto	u500
   759  0094                     u501:
   760  0094  1283               	bcf	3,5	;RP0=0, select bank0
   761  0095  1303               	bcf	3,6	;RP1=0, select bank0
   762  0096  1706               	bsf	6,6	;volatile
   763  0097  289B               	goto	u514
   764  0098                     u500:
   765  0098  1283               	bcf	3,5	;RP0=0, select bank0
   766  0099  1303               	bcf	3,6	;RP1=0, select bank0
   767  009A  1306               	bcf	6,6	;volatile
   768  009B                     u514:
   769  009B  2865               	goto	l1173
   770  009C  120A  118A  2812   	ljmp	start
   771  009F                     __end_of_main:
   772                           
   773                           	psect	text1
   774  0152                     __ptext1:	
   775 ;; *************** function _hex_menor *****************
   776 ;; Defined at:
   777 ;;		line 9 in file "Lab_1/valor_ADC.c"
   778 ;; Parameters:    Size  Location     Type
   779 ;;  in              1    wreg     unsigned char 
   780 ;; Auto vars:     Size  Location     Type
   781 ;;  in              1   12[BANK0 ] unsigned char 
   782 ;; Return value:  Size  Location     Type
   783 ;;                  1    wreg      unsigned char 
   784 ;; Registers used:
   785 ;;		wreg, status,2, status,0, pclath, cstack
   786 ;; Tracked objects:
   787 ;;		On entry : 0/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   791 ;;      Params:         0       0       0       0       0
   792 ;;      Locals:         0       1       0       0       0
   793 ;;      Temps:          0       3       0       0       0
   794 ;;      Totals:         0       4       0       0       0
   795 ;;Total ram usage:        4 bytes
   796 ;; Hardware stack levels used:    1
   797 ;; Hardware stack levels required when called:    3
   798 ;; This function calls:
   799 ;;		___awdiv
   800 ;; This function is called by:
   801 ;;		_main
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805                           
   806                           ;psect for function _hex_menor
   807  0152                     _hex_menor:
   808                           
   809                           ;incstack = 0
   810                           ; Regs used in _hex_menor: [wreg+status,2+status,0+pclath+cstack]
   811                           ;hex_menor@in stored from wreg
   812  0152  1283               	bcf	3,5	;RP0=0, select bank0
   813  0153  1303               	bcf	3,6	;RP1=0, select bank0
   814  0154  00AC               	movwf	hex_menor@in
   815  0155                     l1093:
   816                           
   817                           ;Lab_1/valor_ADC.c: 10:     data_menor = (in/16) % 16;
   818  0155  3010               	movlw	16
   819  0156  00A0               	movwf	___awdiv@divisor
   820  0157  3000               	movlw	0
   821  0158  00A1               	movwf	___awdiv@divisor+1
   822  0159  082C               	movf	hex_menor@in,w
   823  015A  00A9               	movwf	??_hex_menor
   824  015B  01AA               	clrf	??_hex_menor+1
   825  015C  0829               	movf	??_hex_menor,w
   826  015D  00A2               	movwf	___awdiv@dividend
   827  015E  082A               	movf	??_hex_menor+1,w
   828  015F  00A3               	movwf	___awdiv@dividend+1
   829  0160  120A  118A  209F  120A  118A  	fcall	___awdiv
   830  0165  1283               	bcf	3,5	;RP0=0, select bank0
   831  0166  1303               	bcf	3,6	;RP1=0, select bank0
   832  0167  0820               	movf	?___awdiv,w
   833  0168  390F               	andlw	15
   834  0169  00AB               	movwf	??_hex_menor+2
   835  016A  082B               	movf	??_hex_menor+2,w
   836  016B  00AE               	movwf	_data_menor
   837  016C                     l111:
   838  016C  0008               	return
   839  016D                     __end_of_hex_menor:
   840                           
   841                           	psect	text2
   842  009F                     __ptext2:	
   843 ;; *************** function ___awdiv *****************
   844 ;; Defined at:
   845 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;  divisor         2    0[BANK0 ] int 
   848 ;;  dividend        2    2[BANK0 ] int 
   849 ;; Auto vars:     Size  Location     Type
   850 ;;  quotient        2    7[BANK0 ] int 
   851 ;;  sign            1    6[BANK0 ] unsigned char 
   852 ;;  counter         1    5[BANK0 ] unsigned char 
   853 ;; Return value:  Size  Location     Type
   854 ;;                  2    0[BANK0 ] int 
   855 ;; Registers used:
   856 ;;		wreg, status,2, status,0
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   862 ;;      Params:         0       4       0       0       0
   863 ;;      Locals:         0       4       0       0       0
   864 ;;      Temps:          0       1       0       0       0
   865 ;;      Totals:         0       9       0       0       0
   866 ;;Total ram usage:        9 bytes
   867 ;; Hardware stack levels used:    1
   868 ;; Hardware stack levels required when called:    2
   869 ;; This function calls:
   870 ;;		Nothing
   871 ;; This function is called by:
   872 ;;		_hex_menor
   873 ;; This function uses a non-reentrant model
   874 ;;
   875                           
   876                           
   877                           ;psect for function ___awdiv
   878  009F                     ___awdiv:
   879  009F                     l1047:	
   880                           ;incstack = 0
   881                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   882                           
   883  009F  1283               	bcf	3,5	;RP0=0, select bank0
   884  00A0  1303               	bcf	3,6	;RP1=0, select bank0
   885  00A1  01A6               	clrf	___awdiv@sign
   886  00A2                     l1049:
   887  00A2  1FA1               	btfss	___awdiv@divisor+1,7
   888  00A3  28A5               	goto	u391
   889  00A4  28A6               	goto	u390
   890  00A5                     u391:
   891  00A5  28AD               	goto	l1055
   892  00A6                     u390:
   893  00A6                     l1051:
   894  00A6  09A0               	comf	___awdiv@divisor,f
   895  00A7  09A1               	comf	___awdiv@divisor+1,f
   896  00A8  0AA0               	incf	___awdiv@divisor,f
   897  00A9  1903               	skipnz
   898  00AA  0AA1               	incf	___awdiv@divisor+1,f
   899  00AB                     l1053:
   900  00AB  01A6               	clrf	___awdiv@sign
   901  00AC  0AA6               	incf	___awdiv@sign,f
   902  00AD                     l1055:
   903  00AD  1FA3               	btfss	___awdiv@dividend+1,7
   904  00AE  28B0               	goto	u401
   905  00AF  28B1               	goto	u400
   906  00B0                     u401:
   907  00B0  28BA               	goto	l1061
   908  00B1                     u400:
   909  00B1                     l1057:
   910  00B1  09A2               	comf	___awdiv@dividend,f
   911  00B2  09A3               	comf	___awdiv@dividend+1,f
   912  00B3  0AA2               	incf	___awdiv@dividend,f
   913  00B4  1903               	skipnz
   914  00B5  0AA3               	incf	___awdiv@dividend+1,f
   915  00B6                     l1059:
   916  00B6  3001               	movlw	1
   917  00B7  00A4               	movwf	??___awdiv
   918  00B8  0824               	movf	??___awdiv,w
   919  00B9  06A6               	xorwf	___awdiv@sign,f
   920  00BA                     l1061:
   921  00BA  01A7               	clrf	___awdiv@quotient
   922  00BB  01A8               	clrf	___awdiv@quotient+1
   923  00BC                     l1063:
   924  00BC  0820               	movf	___awdiv@divisor,w
   925  00BD  0421               	iorwf	___awdiv@divisor+1,w
   926  00BE  1903               	btfsc	3,2
   927  00BF  28C1               	goto	u411
   928  00C0  28C2               	goto	u410
   929  00C1                     u411:
   930  00C1  28F9               	goto	l1083
   931  00C2                     u410:
   932  00C2                     l1065:
   933  00C2  01A5               	clrf	___awdiv@counter
   934  00C3  0AA5               	incf	___awdiv@counter,f
   935  00C4  28D0               	goto	l1071
   936  00C5                     l1067:
   937  00C5  3001               	movlw	1
   938  00C6                     u425:
   939  00C6  1003               	clrc
   940  00C7  0DA0               	rlf	___awdiv@divisor,f
   941  00C8  0DA1               	rlf	___awdiv@divisor+1,f
   942  00C9  3EFF               	addlw	-1
   943  00CA  1D03               	skipz
   944  00CB  28C6               	goto	u425
   945  00CC                     l1069:
   946  00CC  3001               	movlw	1
   947  00CD  00A4               	movwf	??___awdiv
   948  00CE  0824               	movf	??___awdiv,w
   949  00CF  07A5               	addwf	___awdiv@counter,f
   950  00D0                     l1071:
   951  00D0  1FA1               	btfss	___awdiv@divisor+1,7
   952  00D1  28D3               	goto	u431
   953  00D2  28D4               	goto	u430
   954  00D3                     u431:
   955  00D3  28C5               	goto	l1067
   956  00D4                     u430:
   957  00D4                     l1073:
   958  00D4  3001               	movlw	1
   959  00D5                     u445:
   960  00D5  1003               	clrc
   961  00D6  0DA7               	rlf	___awdiv@quotient,f
   962  00D7  0DA8               	rlf	___awdiv@quotient+1,f
   963  00D8  3EFF               	addlw	-1
   964  00D9  1D03               	skipz
   965  00DA  28D5               	goto	u445
   966  00DB  0821               	movf	___awdiv@divisor+1,w
   967  00DC  0223               	subwf	___awdiv@dividend+1,w
   968  00DD  1D03               	skipz
   969  00DE  28E1               	goto	u455
   970  00DF  0820               	movf	___awdiv@divisor,w
   971  00E0  0222               	subwf	___awdiv@dividend,w
   972  00E1                     u455:
   973  00E1  1C03               	skipc
   974  00E2  28E4               	goto	u451
   975  00E3  28E5               	goto	u450
   976  00E4                     u451:
   977  00E4  28EC               	goto	l1079
   978  00E5                     u450:
   979  00E5                     l1075:
   980  00E5  0820               	movf	___awdiv@divisor,w
   981  00E6  02A2               	subwf	___awdiv@dividend,f
   982  00E7  0821               	movf	___awdiv@divisor+1,w
   983  00E8  1C03               	skipc
   984  00E9  03A3               	decf	___awdiv@dividend+1,f
   985  00EA  02A3               	subwf	___awdiv@dividend+1,f
   986  00EB                     l1077:
   987  00EB  1427               	bsf	___awdiv@quotient,0
   988  00EC                     l1079:
   989  00EC  3001               	movlw	1
   990  00ED                     u465:
   991  00ED  1003               	clrc
   992  00EE  0CA1               	rrf	___awdiv@divisor+1,f
   993  00EF  0CA0               	rrf	___awdiv@divisor,f
   994  00F0  3EFF               	addlw	-1
   995  00F1  1D03               	skipz
   996  00F2  28ED               	goto	u465
   997  00F3                     l1081:
   998  00F3  3001               	movlw	1
   999  00F4  02A5               	subwf	___awdiv@counter,f
  1000  00F5  1D03               	btfss	3,2
  1001  00F6  28F8               	goto	u471
  1002  00F7  28F9               	goto	u470
  1003  00F8                     u471:
  1004  00F8  28D4               	goto	l1073
  1005  00F9                     u470:
  1006  00F9                     l1083:
  1007  00F9  0826               	movf	___awdiv@sign,w
  1008  00FA  1903               	btfsc	3,2
  1009  00FB  28FD               	goto	u481
  1010  00FC  28FE               	goto	u480
  1011  00FD                     u481:
  1012  00FD  2903               	goto	l1087
  1013  00FE                     u480:
  1014  00FE                     l1085:
  1015  00FE  09A7               	comf	___awdiv@quotient,f
  1016  00FF  09A8               	comf	___awdiv@quotient+1,f
  1017  0100  0AA7               	incf	___awdiv@quotient,f
  1018  0101  1903               	skipnz
  1019  0102  0AA8               	incf	___awdiv@quotient+1,f
  1020  0103                     l1087:
  1021  0103  0828               	movf	___awdiv@quotient+1,w
  1022  0104  00A1               	movwf	?___awdiv+1
  1023  0105  0827               	movf	___awdiv@quotient,w
  1024  0106  00A0               	movwf	?___awdiv
  1025  0107                     l350:
  1026  0107  0008               	return
  1027  0108                     __end_of___awdiv:
  1028                           
  1029                           	psect	text3
  1030  0183                     __ptext3:	
  1031 ;; *************** function _hex_mayor *****************
  1032 ;; Defined at:
  1033 ;;		line 5 in file "Lab_1/valor_ADC.c"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;  in              1    wreg     unsigned char 
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;  in              1    1[BANK0 ] unsigned char 
  1038 ;; Return value:  Size  Location     Type
  1039 ;;                  1    wreg      unsigned char 
  1040 ;; Registers used:
  1041 ;;		wreg, status,2
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1047 ;;      Params:         0       0       0       0       0
  1048 ;;      Locals:         0       1       0       0       0
  1049 ;;      Temps:          0       1       0       0       0
  1050 ;;      Totals:         0       2       0       0       0
  1051 ;;Total ram usage:        2 bytes
  1052 ;; Hardware stack levels used:    1
  1053 ;; Hardware stack levels required when called:    2
  1054 ;; This function calls:
  1055 ;;		Nothing
  1056 ;; This function is called by:
  1057 ;;		_main
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061                           
  1062                           ;psect for function _hex_mayor
  1063  0183                     _hex_mayor:
  1064                           
  1065                           ;incstack = 0
  1066                           ; Regs used in _hex_mayor: [wreg+status,2]
  1067                           ;hex_mayor@in stored from wreg
  1068  0183  1283               	bcf	3,5	;RP0=0, select bank0
  1069  0184  1303               	bcf	3,6	;RP1=0, select bank0
  1070  0185  00A1               	movwf	hex_mayor@in
  1071  0186                     l1091:
  1072                           
  1073                           ;Lab_1/valor_ADC.c: 6:     data_mayor = in % 16;
  1074  0186  0821               	movf	hex_mayor@in,w
  1075  0187  390F               	andlw	15
  1076  0188  00A0               	movwf	??_hex_mayor
  1077  0189  0820               	movf	??_hex_mayor,w
  1078  018A  00AF               	movwf	_data_mayor
  1079  018B                     l108:
  1080  018B  0008               	return
  1081  018C                     __end_of_hex_mayor:
  1082                           
  1083                           	psect	text4
  1084  0108                     __ptext4:	
  1085 ;; *************** function _isr *****************
  1086 ;; Defined at:
  1087 ;;		line 59 in file "Lab_1/LAB_1.c"
  1088 ;; Parameters:    Size  Location     Type
  1089 ;;		None
  1090 ;; Auto vars:     Size  Location     Type
  1091 ;;		None
  1092 ;; Return value:  Size  Location     Type
  1093 ;;                  1    wreg      void 
  1094 ;; Registers used:
  1095 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1096 ;; Tracked objects:
  1097 ;;		On entry : 0/0
  1098 ;;		On exit  : 0/0
  1099 ;;		Unchanged: 0/0
  1100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1101 ;;      Params:         0       0       0       0       0
  1102 ;;      Locals:         0       0       0       0       0
  1103 ;;      Temps:          5       0       0       0       0
  1104 ;;      Totals:         5       0       0       0       0
  1105 ;;Total ram usage:        5 bytes
  1106 ;; Hardware stack levels used:    2
  1107 ;; This function calls:
  1108 ;;		Nothing
  1109 ;; This function is called by:
  1110 ;;		Interrupt level 1
  1111 ;; This function uses a non-reentrant model
  1112 ;;
  1113                           
  1114                           
  1115                           ;psect for function _isr
  1116  0108                     _isr:
  1117  0108                     i1l923:
  1118                           
  1119                           ;Lab_1/LAB_1.c: 61:     if(RBIF == 1){
  1120  0108  1C0B               	btfss	11,0	;volatile
  1121  0109  290B               	goto	u30_21
  1122  010A  290C               	goto	u30_20
  1123  010B                     u30_21:
  1124  010B  291D               	goto	i1l83
  1125  010C                     u30_20:
  1126  010C                     i1l925:
  1127                           
  1128                           ;Lab_1/LAB_1.c: 62:         if (RB0 == 0){
  1129  010C  1806               	btfsc	6,0	;volatile
  1130  010D  290F               	goto	u31_21
  1131  010E  2910               	goto	u31_20
  1132  010F                     u31_21:
  1133  010F  2915               	goto	i1l84
  1134  0110                     u31_20:
  1135  0110                     i1l927:
  1136                           
  1137                           ;Lab_1/LAB_1.c: 63:             ref++;
  1138  0110  3001               	movlw	1
  1139  0111  00F5               	movwf	??_isr
  1140  0112  0875               	movf	??_isr,w
  1141  0113  07F4               	addwf	_ref,f
  1142                           
  1143                           ;Lab_1/LAB_1.c: 64:         }else if(RB1 == 0){
  1144  0114  291B               	goto	i1l931
  1145  0115                     i1l84:
  1146  0115  1886               	btfsc	6,1	;volatile
  1147  0116  2918               	goto	u32_21
  1148  0117  2919               	goto	u32_20
  1149  0118                     u32_21:
  1150  0118  291B               	goto	i1l931
  1151  0119                     u32_20:
  1152  0119                     i1l929:
  1153                           
  1154                           ;Lab_1/LAB_1.c: 65:             ref--;
  1155  0119  3001               	movlw	1
  1156  011A  02F4               	subwf	_ref,f
  1157  011B                     i1l931:
  1158                           
  1159                           ;Lab_1/LAB_1.c: 67:         RBIF = 0;
  1160  011B  100B               	bcf	11,0	;volatile
  1161                           
  1162                           ;Lab_1/LAB_1.c: 68:     }
  1163  011C  2947               	goto	i1l92
  1164  011D                     i1l83:	
  1165                           ;Lab_1/LAB_1.c: 70:     else if(T0IF == 1){
  1166                           
  1167  011D  1D0B               	btfss	11,2	;volatile
  1168  011E  2920               	goto	u33_21
  1169  011F  2921               	goto	u33_20
  1170  0120                     u33_21:
  1171  0120  2947               	goto	i1l92
  1172  0121                     u33_20:
  1173  0121                     i1l933:
  1174                           
  1175                           ;Lab_1/LAB_1.c: 72:         PORTD = 0x00;
  1176  0121  0188               	clrf	8	;volatile
  1177  0122                     i1l935:
  1178                           
  1179                           ;Lab_1/LAB_1.c: 74:         if (turno == 1){
  1180  0122  0373               	decf	_turno,w
  1181  0123  1D03               	btfss	3,2
  1182  0124  2926               	goto	u34_21
  1183  0125  2927               	goto	u34_20
  1184  0126                     u34_21:
  1185  0126  2933               	goto	i1l943
  1186  0127                     u34_20:
  1187  0127                     i1l937:
  1188                           
  1189                           ;Lab_1/LAB_1.c: 75:             PORTC = (num_display[dato_mayor]);
  1190  0127  0871               	movf	_dato_mayor,w
  1191  0128  3E01               	addlw	low ((_num_display-__stringbase)| (0+32768))
  1192  0129  0084               	movwf	4
  1193  012A  120A  118A  216D  120A  118A  	fcall	stringdir
  1194  012F  0087               	movwf	7	;volatile
  1195  0130                     i1l939:
  1196                           
  1197                           ;Lab_1/LAB_1.c: 76:             RD1 = 1;
  1198  0130  1488               	bsf	8,1	;volatile
  1199  0131                     i1l941:
  1200                           
  1201                           ;Lab_1/LAB_1.c: 77:             turno = 0;
  1202  0131  01F3               	clrf	_turno
  1203                           
  1204                           ;Lab_1/LAB_1.c: 78:         }else if(turno == 0){
  1205  0132  2944               	goto	i1l951
  1206  0133                     i1l943:
  1207  0133  0873               	movf	_turno,w
  1208  0134  1D03               	btfss	3,2
  1209  0135  2937               	goto	u35_21
  1210  0136  2938               	goto	u35_20
  1211  0137                     u35_21:
  1212  0137  2944               	goto	i1l951
  1213  0138                     u35_20:
  1214  0138                     i1l945:
  1215                           
  1216                           ;Lab_1/LAB_1.c: 79:             PORTC = (num_display[dato_menor]);
  1217  0138  0870               	movf	_dato_menor,w
  1218  0139  3E01               	addlw	low ((_num_display-__stringbase)| (0+32768))
  1219  013A  0084               	movwf	4
  1220  013B  120A  118A  216D  120A  118A  	fcall	stringdir
  1221  0140  0087               	movwf	7	;volatile
  1222  0141                     i1l947:
  1223                           
  1224                           ;Lab_1/LAB_1.c: 80:             RD0 = 1;
  1225  0141  1408               	bsf	8,0	;volatile
  1226  0142                     i1l949:
  1227                           
  1228                           ;Lab_1/LAB_1.c: 81:             turno = 1;
  1229  0142  01F3               	clrf	_turno
  1230  0143  0AF3               	incf	_turno,f
  1231  0144                     i1l951:
  1232                           
  1233                           ;Lab_1/LAB_1.c: 84:         T0IF = 0;
  1234  0144  110B               	bcf	11,2	;volatile
  1235  0145                     i1l953:
  1236                           
  1237                           ;Lab_1/LAB_1.c: 85:         TMR0 = 60;
  1238  0145  303C               	movlw	60
  1239  0146  0081               	movwf	1	;volatile
  1240  0147                     i1l92:
  1241  0147  0879               	movf	??_isr+4,w
  1242  0148  00FF               	movwf	btemp+1
  1243  0149  0878               	movf	??_isr+3,w
  1244  014A  008A               	movwf	10
  1245  014B  0877               	movf	??_isr+2,w
  1246  014C  0084               	movwf	4
  1247  014D  0E76               	swapf	??_isr+1,w
  1248  014E  0083               	movwf	3
  1249  014F  0EFE               	swapf	btemp,f
  1250  0150  0E7E               	swapf	btemp,w
  1251  0151  0009               	retfie
  1252  0152                     __end_of_isr:
  1253  007E                     btemp	set	126	;btemp
  1254  007E                     wtemp0	set	126
  1255                           
  1256                           	psect	intentry
  1257  0004                     __pintentry:	
  1258                           ;incstack = 0
  1259                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath]
  1260                           
  1261  0004                     interrupt_function:
  1262  007E                     saved_w	set	btemp
  1263  0004  00FE               	movwf	btemp
  1264  0005  0E03               	swapf	3,w
  1265  0006  00F6               	movwf	??_isr+1
  1266  0007  0804               	movf	4,w
  1267  0008  00F7               	movwf	??_isr+2
  1268  0009  080A               	movf	10,w
  1269  000A  00F8               	movwf	??_isr+3
  1270  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1271  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1272  000D  087F               	movf	btemp+1,w
  1273  000E  00F9               	movwf	??_isr+4
  1274  000F  120A  118A  2908   	ljmp	_isr
  1275                           
  1276                           	psect	config
  1277                           
  1278                           ;Config register CONFIG1 @ 0x2007
  1279                           ;	Oscillator Selection bits
  1280                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1281                           ;	Watchdog Timer Enable bit
  1282                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1283                           ;	Power-up Timer Enable bit
  1284                           ;	PWRTE = OFF, PWRT disabled
  1285                           ;	RE3/MCLR pin function select bit
  1286                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1287                           ;	Code Protection bit
  1288                           ;	CP = OFF, Program memory code protection is disabled
  1289                           ;	Data Code Protection bit
  1290                           ;	CPD = OFF, Data memory code protection is disabled
  1291                           ;	Brown Out Reset Selection bits
  1292                           ;	BOREN = OFF, BOR disabled
  1293                           ;	Internal External Switchover bit
  1294                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1295                           ;	Fail-Safe Clock Monitor Enabled bit
  1296                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1297                           ;	Low Voltage Programming Enable bit
  1298                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1299                           ;	In-Circuit Debugger Mode bit
  1300                           ;	DEBUG = 0x1, unprogrammed default
  1301  2007                     	org	8199
  1302  2007  20D4               	dw	8404
  1303                           
  1304                           ;Config register CONFIG2 @ 0x2008
  1305                           ;	Brown-out Reset Selection bit
  1306                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1307                           ;	Flash Program Memory Self Write Enable bits
  1308                           ;	WRT = OFF, Write protection off
  1309  2008                     	org	8200
  1310  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     14      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_hex_menor
    _hex_menor->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     687
                                             13 BANK0      1     1      0
                          _hex_mayor
                          _hex_menor
 ---------------------------------------------------------------------------------
 (1) _hex_menor                                            4     4      0     656
                                              9 BANK0      4     4      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     625
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _hex_mayor                                            2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _hex_mayor
   _hex_menor
     ___awdiv

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      E      10       5       20.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Jul 15 12:46:55 2021

                      pc 0002             ___awdiv@sign 0026                       fsr 0004  
                    l111 016C                      l108 018B                      l350 0107  
                    _RB0 0030                      _RB1 0031                      _RD0 0040  
                    _RD1 0041                      _RB6 0036                      u400 00B1  
                    u401 00B0                      u410 00C2                      u411 00C1  
                    u500 0098                      u501 0094                      u430 00D4  
                    u431 00D3                      u425 00C6                      u450 00E5  
                    u514 009B                      u451 00E4                      u445 00D5  
                    u470 00F9                      u390 00A6                      u471 00F8  
                    u455 00E1                      u391 00A5                      u527 0051  
                    u480 00FE                      u481 00FD                      u465 00ED  
                    u537 0073                      u490 006B                      u491 006A  
                    _ref 0074                      _isr 0108                      fsr0 0004  
                   l1101 002C                     l1111 0033                     l1103 002D  
                   l1121 0038                     l1113 0034                     l1105 002F  
                   l1051 00A6                     l1131 0043                     l1123 0039  
                   l1115 0035                     l1107 0031                     l1061 00BA  
                   l1053 00AB                     l1141 004D                     l1133 0044  
                   l1125 003A                     l1117 0036                     l1109 0032  
                   l1071 00D0                     l1063 00BC                     l1055 00AD  
                   l1047 009F                     l1151 005A                     l1143 0054  
                   l1135 0045                     l1127 003C                     l1119 0037  
                   l1081 00F3                     l1073 00D4                     l1065 00C2  
                   l1057 00B1                     l1049 00A2                     l1161 005F  
                   l1153 005B                     l1145 0057                     l1137 0048  
                   l1129 0040                     l1091 0186                     l1075 00E5  
                   l1067 00C5                     l1083 00F9                     l1059 00B6  
                   l1171 0064                     l1163 0060                     l1155 005C  
                   l1147 0058                     l1139 0049                     l1085 00FE  
                   l1077 00EB                     l1069 00CC                     l1093 0155  
                   l1181 0079                     l1173 0065                     l1165 0061  
                   l1157 005D                     l1149 0059                     l1087 0103  
                   l1079 00EC                     l1183 0084                     l1175 0067  
                   l1167 0062                     l1159 005E                     l1095 0022  
                   l1185 008F                     l1177 006B                     l1169 0063  
                   l1097 0029                     l1179 0076                     l1099 002B  
                   ?_isr 0075                     _T0IF 005A                     _RBIF 0058  
                   i1l83 011D                     i1l92 0147                     i1l84 0115  
                   _TMR0 0001                     _main 0022                     btemp 007E  
                   start 0012                    ??_isr 0075                    ?_main 0075  
        __end_of___awdiv 0108                    _ANSEL 0188          ___awdiv@divisor 0020  
                  i1l931 011B                    i1l923 0108                    i1l941 0131  
                  i1l933 0121                    i1l925 010C                    i1l951 0144  
                  i1l943 0133                    i1l935 0122                    i1l927 0110  
                  i1l953 0145                    i1l945 0138                    i1l937 0127  
                  i1l929 0119                    i1l947 0141                    i1l939 0130  
                  i1l949 0142          ___awdiv@counter 0025                    u30_20 010C  
                  u30_21 010B                    u31_20 0110                    u31_21 010F  
                  u32_20 0119                    u32_21 0118                    u33_20 0121  
                  u33_21 0120                    u34_20 0127                    u34_21 0126  
                  u35_20 0138                    u35_21 0137                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
            hex_menor@in 002C              hex_mayor@in 0021                    _turno 0073  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0015             __end_of_main 009F                   ??_main 002D  
                 _ADRESH 001E         ___awdiv@dividend 0022                   _ANSELH 0189  
              ??___awdiv 0024         ___awdiv@quotient 0027                   saved_w 007E  
__end_of__initialization 001E           __pcstackCOMMON 0075           _OPTION_REGbits 0081  
     __size_of_hex_menor 001B       __size_of_hex_mayor 0009               __pbssBANK0 002E  
             _data_menor 002E               _data_mayor 002F               __pmaintext 0022  
             _dato_menor 0070               _dato_mayor 0071               __pintentry 0004  
             __stringtab 016D                  ___awdiv 009F        __end_of_hex_menor 016D  
      __end_of_hex_mayor 018C                  __ptext1 0152                  __ptext2 009F  
                __ptext3 0183                  __ptext4 0108             __size_of_isr 004A  
   end_of_initialization 001E      start_initialization 0015              __end_of_isr 0152  
            __pbssCOMMON 0070                ___latbits 0002            __pcstackBANK0 0020  
               ?___awdiv 0020                __pstrings 016D                _hex_menor 0152  
              _hex_mayor 0183        interrupt_function 0004                 _IOCBbits 0096  
              _valor_adc 0072               _ADCON0bits 001F              __stringbase 0172  
             _ADCON1bits 009F               ?_hex_menor 0075               ?_hex_mayor 0075  
               _WPUBbits 0095         __size_of___awdiv 0069       __end_of__stringtab 0173  
    __end_of_num_display 0183            __size_of_main 007D              ??_hex_menor 0029  
            ??_hex_mayor 0020               _INTCONbits 000B                 intlevel1 0000  
              stringcode 016D               _OSCCONbits 008F              _num_display 0173  
               stringdir 016D                 stringtab 016D  
