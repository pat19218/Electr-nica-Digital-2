

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Aug 15 16:41:33 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0105                     	;# 
   123  0107                     	;# 
   124  0108                     	;# 
   125  0109                     	;# 
   126  010C                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0185                     	;# 
   132  0187                     	;# 
   133  0188                     	;# 
   134  0189                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  0105                     	;# 
   201  0107                     	;# 
   202  0108                     	;# 
   203  0109                     	;# 
   204  010C                     	;# 
   205  010C                     	;# 
   206  010D                     	;# 
   207  010E                     	;# 
   208  010F                     	;# 
   209  0185                     	;# 
   210  0187                     	;# 
   211  0188                     	;# 
   212  0189                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215  0000                     	;# 
   216  0001                     	;# 
   217  0002                     	;# 
   218  0003                     	;# 
   219  0004                     	;# 
   220  0005                     	;# 
   221  0006                     	;# 
   222  0007                     	;# 
   223  0008                     	;# 
   224  0009                     	;# 
   225  000A                     	;# 
   226  000B                     	;# 
   227  000C                     	;# 
   228  000D                     	;# 
   229  000E                     	;# 
   230  000E                     	;# 
   231  000F                     	;# 
   232  0010                     	;# 
   233  0011                     	;# 
   234  0012                     	;# 
   235  0013                     	;# 
   236  0014                     	;# 
   237  0015                     	;# 
   238  0015                     	;# 
   239  0016                     	;# 
   240  0017                     	;# 
   241  0018                     	;# 
   242  0019                     	;# 
   243  001A                     	;# 
   244  001B                     	;# 
   245  001B                     	;# 
   246  001C                     	;# 
   247  001D                     	;# 
   248  001E                     	;# 
   249  001F                     	;# 
   250  0081                     	;# 
   251  0085                     	;# 
   252  0086                     	;# 
   253  0087                     	;# 
   254  0088                     	;# 
   255  0089                     	;# 
   256  008C                     	;# 
   257  008D                     	;# 
   258  008E                     	;# 
   259  008F                     	;# 
   260  0090                     	;# 
   261  0091                     	;# 
   262  0092                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0094                     	;# 
   267  0095                     	;# 
   268  0096                     	;# 
   269  0097                     	;# 
   270  0098                     	;# 
   271  0099                     	;# 
   272  009A                     	;# 
   273  009B                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009E                     	;# 
   277  009F                     	;# 
   278  0105                     	;# 
   279  0107                     	;# 
   280  0108                     	;# 
   281  0109                     	;# 
   282  010C                     	;# 
   283  010C                     	;# 
   284  010D                     	;# 
   285  010E                     	;# 
   286  010F                     	;# 
   287  0185                     	;# 
   288  0187                     	;# 
   289  0188                     	;# 
   290  0189                     	;# 
   291  018C                     	;# 
   292  018D                     	;# 
   293                           
   294                           	psect	nvCOMMON
   295  0079                     __pnvCOMMON:
   296  0079                     _old:
   297  0079                     	ds	1
   298                           
   299                           	psect	nvBANK0
   300  0037                     __pnvBANK0:
   301  0037                     _unidad:
   302  0037                     	ds	1
   303  0038                     _decena:
   304  0038                     	ds	1
   305  0039                     _centena:
   306  0039                     	ds	1
   307  000C                     _PIR1bits	set	12
   308  0007                     _PORTC	set	7
   309  0006                     _PORTB	set	6
   310  0005                     _PORTA	set	5
   311  000B                     _INTCONbits	set	11
   312  0008                     _PORTD	set	8
   313  001A                     _RCREG	set	26
   314  0019                     _TXREG	set	25
   315  0018                     _RCSTAbits	set	24
   316  0031                     _RB1	set	49
   317  0030                     _RB0	set	48
   318  0058                     _RBIF	set	88
   319  0096                     _IOCBbits	set	150
   320  0095                     _WPUBbits	set	149
   321  0081                     _OPTION_REGbits	set	129
   322  008F                     _OSCCONbits	set	143
   323  0088                     _TRISD	set	136
   324  0087                     _TRISC	set	135
   325  0086                     _TRISB	set	134
   326  0085                     _TRISA	set	133
   327  009A                     _SPBRGH	set	154
   328  0099                     _SPBRG	set	153
   329  0098                     _TXSTAbits	set	152
   330  0189                     _ANSELH	set	393
   331  0188                     _ANSEL	set	392
   332  0187                     _BAUDCTLbits	set	391
   333                           
   334                           	psect	cinit
   335  000F                     start_initialization:	
   336                           ; #config settings
   337                           
   338  000F                     __initialization:
   339                           
   340                           ; Clear objects allocated to BANK0
   341  000F  1283               	bcf	3,5	;RP0=0, select bank0
   342  0010  1303               	bcf	3,6	;RP1=0, select bank0
   343  0011  01B2               	clrf	__pbssBANK0& (0+127)
   344  0012  01B3               	clrf	(__pbssBANK0+1)& (0+127)
   345  0013  01B4               	clrf	(__pbssBANK0+2)& (0+127)
   346  0014  01B5               	clrf	(__pbssBANK0+3)& (0+127)
   347  0015  01B6               	clrf	(__pbssBANK0+4)& (0+127)
   348  0016                     end_of_initialization:	
   349                           ;End of C runtime variable initialization code
   350                           
   351  0016                     __end_of__initialization:
   352  0016  0183               	clrf	3
   353  0017  120A  118A  281A   	ljmp	_main	;jump to C main() function
   354                           
   355                           	psect	bssBANK0
   356  0032                     __pbssBANK0:
   357  0032                     _total:
   358  0032                     	ds	1
   359  0033                     _pos:
   360  0033                     	ds	1
   361  0034                     _ingreso:
   362  0034                     	ds	1
   363  0035                     _entrante:
   364  0035                     	ds	2
   365                           
   366                           	psect	cstackCOMMON
   367  0070                     __pcstackCOMMON:
   368  0070                     ?_USART_Init:
   369  0070                     ?_USART_Tx:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0070                     ?_USART_Rx:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0070                     ?_isr:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0070                     ??_isr:	
   379                           ; 1 bytes @ 0x0
   380                           
   381  0070                     ?_main:	
   382                           ; 1 bytes @ 0x0
   383                           
   384                           
   385                           ; 1 bytes @ 0x0
   386  0070                     	ds	3
   387  0073                     _isr$362:
   388                           
   389                           ; 1 bytes @ 0x3
   390  0073                     	ds	1
   391  0074                     ??_USART_Init:
   392  0074                     ??_USART_Tx:	
   393                           ; 1 bytes @ 0x4
   394                           
   395  0074                     ??_USART_Rx:	
   396                           ; 1 bytes @ 0x4
   397                           
   398  0074                     ?___bmul:	
   399                           ; 1 bytes @ 0x4
   400                           
   401  0074                     ?___awmod:	
   402                           ; 1 bytes @ 0x4
   403                           
   404  0074                     USART_Tx@data:	
   405                           ; 2 bytes @ 0x4
   406                           
   407  0074                     ___bmul@multiplicand:	
   408                           ; 1 bytes @ 0x4
   409                           
   410  0074                     ___awmod@divisor:	
   411                           ; 1 bytes @ 0x4
   412                           
   413                           
   414                           ; 2 bytes @ 0x4
   415  0074                     	ds	1
   416  0075                     ??___bmul:
   417                           
   418                           ; 1 bytes @ 0x5
   419  0075                     	ds	1
   420  0076                     ___bmul@product:
   421  0076                     ___awmod@dividend:	
   422                           ; 1 bytes @ 0x6
   423                           
   424                           
   425                           ; 2 bytes @ 0x6
   426  0076                     	ds	1
   427  0077                     ___bmul@multiplier:
   428                           
   429                           ; 1 bytes @ 0x7
   430  0077                     	ds	1
   431  0078                     ??___awmod:
   432                           
   433                           ; 1 bytes @ 0x8
   434  0078                     	ds	1
   435                           
   436                           	psect	cstackBANK0
   437  0020                     __pcstackBANK0:
   438  0020                     ___awmod@counter:
   439                           
   440                           ; 1 bytes @ 0x0
   441  0020                     	ds	1
   442  0021                     ___awmod@sign:
   443                           
   444                           ; 1 bytes @ 0x1
   445  0021                     	ds	1
   446  0022                     ?_unidades:
   447  0022                     ?___awdiv:	
   448                           ; 1 bytes @ 0x2
   449                           
   450  0022                     unidades@dato:	
   451                           ; 2 bytes @ 0x2
   452                           
   453  0022                     ___awdiv@divisor:	
   454                           ; 2 bytes @ 0x2
   455                           
   456                           
   457                           ; 2 bytes @ 0x2
   458  0022                     	ds	2
   459  0024                     ??_unidades:
   460  0024                     ___awdiv@dividend:	
   461                           ; 1 bytes @ 0x4
   462                           
   463                           
   464                           ; 2 bytes @ 0x4
   465  0024                     	ds	1
   466  0025                     _unidades$1014:
   467                           
   468                           ; 2 bytes @ 0x5
   469  0025                     	ds	1
   470  0026                     ??___awdiv:
   471                           
   472                           ; 1 bytes @ 0x6
   473  0026                     	ds	1
   474  0027                     unidades@out:
   475  0027                     ___awdiv@counter:	
   476                           ; 1 bytes @ 0x7
   477                           
   478                           
   479                           ; 1 bytes @ 0x7
   480  0027                     	ds	1
   481  0028                     ___awdiv@sign:
   482                           
   483                           ; 1 bytes @ 0x8
   484  0028                     	ds	1
   485  0029                     ___awdiv@quotient:
   486                           
   487                           ; 2 bytes @ 0x9
   488  0029                     	ds	2
   489  002B                     ?_centenas:
   490  002B                     ?_decenas:	
   491                           ; 1 bytes @ 0xB
   492                           
   493  002B                     centenas@dato:	
   494                           ; 1 bytes @ 0xB
   495                           
   496  002B                     decenas@dato:	
   497                           ; 2 bytes @ 0xB
   498                           
   499                           
   500                           ; 2 bytes @ 0xB
   501  002B                     	ds	2
   502  002D                     ??_centenas:
   503  002D                     ??_decenas:	
   504                           ; 1 bytes @ 0xD
   505                           
   506                           
   507                           ; 1 bytes @ 0xD
   508  002D                     	ds	1
   509  002E                     centenas@out:
   510  002E                     decenas@out:	
   511                           ; 1 bytes @ 0xE
   512                           
   513                           
   514                           ; 1 bytes @ 0xE
   515  002E                     	ds	1
   516  002F                     ??_main:
   517                           
   518                           ; 1 bytes @ 0xF
   519  002F                     	ds	3
   520                           
   521                           	psect	maintext
   522  001A                     __pmaintext:	
   523 ;;
   524 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   525 ;;
   526 ;; *************** function _main *****************
   527 ;; Defined at:
   528 ;;		line 70 in file "Lab_5/LAB5.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;		None
   531 ;; Auto vars:     Size  Location     Type
   532 ;;		None
   533 ;; Return value:  Size  Location     Type
   534 ;;                  1    wreg      void 
   535 ;; Registers used:
   536 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   537 ;; Tracked objects:
   538 ;;		On entry : B00/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   542 ;;      Params:         0       0       0       0       0
   543 ;;      Locals:         0       0       0       0       0
   544 ;;      Temps:          0       3       0       0       0
   545 ;;      Totals:         0       3       0       0       0
   546 ;;Total ram usage:        3 bytes
   547 ;; Hardware stack levels required when called:    3
   548 ;; This function calls:
   549 ;;		_USART_Init
   550 ;;		_USART_Rx
   551 ;;		_USART_Tx
   552 ;;		___bmul
   553 ;;		_centenas
   554 ;;		_decenas
   555 ;;		_unidades
   556 ;; This function is called by:
   557 ;;		Startup code after reset
   558 ;; This function uses a non-reentrant model
   559 ;;
   560                           
   561                           
   562                           ;psect for function _main
   563  001A                     _main:
   564  001A                     l1315:	
   565                           ;incstack = 0
   566                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   567                           
   568                           
   569                           ;Lab_5/LAB5.c: 71:     USART_Init();
   570  001A  120A  118A  2261  120A  118A  	fcall	_USART_Init
   571  001F                     l1317:
   572                           
   573                           ;Lab_5/LAB5.c: 72:     ANSEL = 0x00;
   574  001F  1683               	bsf	3,5	;RP0=1, select bank3
   575  0020  1703               	bsf	3,6	;RP1=1, select bank3
   576  0021  0188               	clrf	8	;volatile
   577  0022                     l1319:
   578                           
   579                           ;Lab_5/LAB5.c: 73:     ANSELH = 0x00;
   580  0022  0189               	clrf	9	;volatile
   581  0023                     l1321:
   582                           
   583                           ;Lab_5/LAB5.c: 75:     TRISA = 0x00;
   584  0023  1683               	bsf	3,5	;RP0=1, select bank1
   585  0024  1303               	bcf	3,6	;RP1=0, select bank1
   586  0025  0185               	clrf	5	;volatile
   587  0026                     l1323:
   588                           
   589                           ;Lab_5/LAB5.c: 76:     TRISB = 0x03;
   590  0026  3003               	movlw	3
   591  0027  0086               	movwf	6	;volatile
   592  0028                     l1325:
   593                           
   594                           ;Lab_5/LAB5.c: 77:     TRISC = 0b10000000;
   595  0028  3080               	movlw	128
   596  0029  0087               	movwf	7	;volatile
   597  002A                     l1327:
   598                           
   599                           ;Lab_5/LAB5.c: 78:     TRISD = 0x00;
   600  002A  0188               	clrf	8	;volatile
   601  002B                     l1329:
   602                           
   603                           ;Lab_5/LAB5.c: 81:     OSCCONbits.IRCF = 0b111;
   604  002B  3070               	movlw	112
   605  002C  048F               	iorwf	15,f	;volatile
   606  002D                     l1331:
   607                           
   608                           ;Lab_5/LAB5.c: 82:     OSCCONbits.SCS = 1;
   609  002D  140F               	bsf	15,0	;volatile
   610  002E                     l1333:
   611                           
   612                           ;Lab_5/LAB5.c: 86:     OPTION_REGbits.nRBPU = 0;
   613  002E  1381               	bcf	1,7	;volatile
   614  002F                     l1335:
   615                           
   616                           ;Lab_5/LAB5.c: 87:     WPUBbits.WPUB0 = 1;
   617  002F  1415               	bsf	21,0	;volatile
   618  0030                     l1337:
   619                           
   620                           ;Lab_5/LAB5.c: 88:     WPUBbits.WPUB1 = 1;
   621  0030  1495               	bsf	21,1	;volatile
   622  0031                     l1339:
   623                           
   624                           ;Lab_5/LAB5.c: 91:     IOCBbits.IOCB0 = 1;
   625  0031  1416               	bsf	22,0	;volatile
   626  0032                     l1341:
   627                           
   628                           ;Lab_5/LAB5.c: 92:     IOCBbits.IOCB1 = 1;
   629  0032  1496               	bsf	22,1	;volatile
   630  0033                     l1343:
   631                           
   632                           ;Lab_5/LAB5.c: 93:     RBIF = 0;
   633  0033  100B               	bcf	11,0	;volatile
   634  0034                     l1345:
   635                           
   636                           ;Lab_5/LAB5.c: 95:     INTCONbits.GIE = 1;
   637  0034  178B               	bsf	11,7	;volatile
   638  0035                     l1347:
   639                           
   640                           ;Lab_5/LAB5.c: 96:     INTCONbits.RBIE = 1;
   641  0035  158B               	bsf	11,3	;volatile
   642  0036                     l1349:
   643                           
   644                           ;Lab_5/LAB5.c: 97:     INTCONbits.RBIF = 0;
   645  0036  100B               	bcf	11,0	;volatile
   646  0037                     l1351:
   647                           
   648                           ;Lab_5/LAB5.c: 100:     old = 1;
   649  0037  01F9               	clrf	_old
   650  0038  0AF9               	incf	_old,f
   651  0039                     l1353:
   652                           
   653                           ;Lab_5/LAB5.c: 101:     PORTA = 0x00;
   654  0039  1283               	bcf	3,5	;RP0=0, select bank0
   655  003A  1303               	bcf	3,6	;RP1=0, select bank0
   656  003B  0185               	clrf	5	;volatile
   657  003C                     l1355:
   658                           
   659                           ;Lab_5/LAB5.c: 102:     PORTB = 0x00;
   660  003C  0186               	clrf	6	;volatile
   661  003D                     l1357:
   662                           
   663                           ;Lab_5/LAB5.c: 103:     PORTC = 0x00;
   664  003D  0187               	clrf	7	;volatile
   665  003E                     l1359:
   666                           
   667                           ;Lab_5/LAB5.c: 104:     PORTD = 0x00;
   668  003E  0188               	clrf	8	;volatile
   669  003F                     l1361:
   670                           
   671                           ;Lab_5/LAB5.c: 109:         centena = centenas(PORTD);
   672  003F  0808               	movf	8,w	;volatile
   673  0040  00AF               	movwf	??_main
   674  0041  01B0               	clrf	??_main+1
   675  0042  082F               	movf	??_main,w
   676  0043  00AB               	movwf	centenas@dato
   677  0044  0830               	movf	??_main+1,w
   678  0045  00AC               	movwf	centenas@dato+1
   679  0046  120A  118A  2235  120A  118A  	fcall	_centenas
   680  004B  1283               	bcf	3,5	;RP0=0, select bank0
   681  004C  1303               	bcf	3,6	;RP1=0, select bank0
   682  004D  00B1               	movwf	??_main+2
   683  004E  0831               	movf	??_main+2,w
   684  004F  00B9               	movwf	_centena
   685  0050                     l1363:
   686                           
   687                           ;Lab_5/LAB5.c: 110:         decena = decenas(PORTD);
   688  0050  0808               	movf	8,w	;volatile
   689  0051  00AF               	movwf	??_main
   690  0052  01B0               	clrf	??_main+1
   691  0053  082F               	movf	??_main,w
   692  0054  00AB               	movwf	decenas@dato
   693  0055  0830               	movf	??_main+1,w
   694  0056  00AC               	movwf	decenas@dato+1
   695  0057  120A  118A  220F  120A  118A  	fcall	_decenas
   696  005C  1283               	bcf	3,5	;RP0=0, select bank0
   697  005D  1303               	bcf	3,6	;RP1=0, select bank0
   698  005E  00B1               	movwf	??_main+2
   699  005F  0831               	movf	??_main+2,w
   700  0060  00B8               	movwf	_decena
   701  0061                     l1365:
   702                           
   703                           ;Lab_5/LAB5.c: 111:         unidad = unidades(PORTD);
   704  0061  0808               	movf	8,w	;volatile
   705  0062  00AF               	movwf	??_main
   706  0063  01B0               	clrf	??_main+1
   707  0064  082F               	movf	??_main,w
   708  0065  00A2               	movwf	unidades@dato
   709  0066  0830               	movf	??_main+1,w
   710  0067  00A3               	movwf	unidades@dato+1
   711  0068  120A  118A  21E5  120A  118A  	fcall	_unidades
   712  006D  1283               	bcf	3,5	;RP0=0, select bank0
   713  006E  1303               	bcf	3,6	;RP1=0, select bank0
   714  006F  00B1               	movwf	??_main+2
   715  0070  0831               	movf	??_main+2,w
   716  0071  00B7               	movwf	_unidad
   717                           
   718                           ;Lab_5/LAB5.c: 112:         centena += 48;
   719  0072  3030               	movlw	48
   720  0073  00AF               	movwf	??_main
   721  0074  082F               	movf	??_main,w
   722  0075  07B9               	addwf	_centena,f
   723                           
   724                           ;Lab_5/LAB5.c: 113:         decena += 48;
   725  0076  3030               	movlw	48
   726  0077  00AF               	movwf	??_main
   727  0078  082F               	movf	??_main,w
   728  0079  07B8               	addwf	_decena,f
   729                           
   730                           ;Lab_5/LAB5.c: 114:         unidad += 48;
   731  007A  3030               	movlw	48
   732  007B  00AF               	movwf	??_main
   733  007C  082F               	movf	??_main,w
   734  007D  07B7               	addwf	_unidad,f
   735  007E                     l1367:
   736                           
   737                           ;Lab_5/LAB5.c: 115:         if (PIR1bits.RCIF == 1){
   738  007E  1E8C               	btfss	12,5	;volatile
   739  007F  2881               	goto	u771
   740  0080  2882               	goto	u770
   741  0081                     u771:
   742  0081  28F0               	goto	l1395
   743  0082                     u770:
   744  0082                     l1369:
   745                           
   746                           ;Lab_5/LAB5.c: 116:             ingreso = USART_Rx();
   747  0082  120A  118A  2282  120A  118A  	fcall	_USART_Rx
   748  0087  1283               	bcf	3,5	;RP0=0, select bank0
   749  0088  1303               	bcf	3,6	;RP1=0, select bank0
   750  0089  00AF               	movwf	??_main
   751  008A  082F               	movf	??_main,w
   752  008B  00B4               	movwf	_ingreso
   753  008C                     l1371:
   754                           
   755                           ;Lab_5/LAB5.c: 118:             if(ingreso == 's'){
   756  008C  3073               	movlw	115
   757  008D  0634               	xorwf	_ingreso,w
   758  008E  1D03               	btfss	3,2
   759  008F  2891               	goto	u781
   760  0090  2892               	goto	u780
   761  0091                     u781:
   762  0091  28A8               	goto	l1375
   763  0092                     u780:
   764  0092                     l1373:
   765                           
   766                           ;Lab_5/LAB5.c: 119:                 USART_Tx(centena);
   767  0092  0839               	movf	_centena,w
   768  0093  120A  118A  2276  120A  118A  	fcall	_USART_Tx
   769                           
   770                           ;Lab_5/LAB5.c: 120:                 USART_Tx(decena);
   771  0098  1283               	bcf	3,5	;RP0=0, select bank0
   772  0099  1303               	bcf	3,6	;RP1=0, select bank0
   773  009A  0838               	movf	_decena,w
   774  009B  120A  118A  2276  120A  118A  	fcall	_USART_Tx
   775                           
   776                           ;Lab_5/LAB5.c: 121:                 USART_Tx(unidad);
   777  00A0  1283               	bcf	3,5	;RP0=0, select bank0
   778  00A1  1303               	bcf	3,6	;RP1=0, select bank0
   779  00A2  0837               	movf	_unidad,w
   780  00A3  120A  118A  2276  120A  118A  	fcall	_USART_Tx
   781  00A8                     l1375:
   782                           
   783                           ;Lab_5/LAB5.c: 124:             if(ingreso > 47 && ingreso < 58){
   784  00A8  3030               	movlw	48
   785  00A9  1283               	bcf	3,5	;RP0=0, select bank0
   786  00AA  1303               	bcf	3,6	;RP1=0, select bank0
   787  00AB  0234               	subwf	_ingreso,w
   788  00AC  1C03               	skipc
   789  00AD  28AF               	goto	u791
   790  00AE  28B0               	goto	u790
   791  00AF                     u791:
   792  00AF  28F0               	goto	l1395
   793  00B0                     u790:
   794  00B0                     l1377:
   795  00B0  303A               	movlw	58
   796  00B1  0234               	subwf	_ingreso,w
   797  00B2  1803               	skipnc
   798  00B3  28B5               	goto	u801
   799  00B4  28B6               	goto	u800
   800  00B5                     u801:
   801  00B5  28F0               	goto	l1395
   802  00B6                     u800:
   803  00B6                     l1379:
   804                           
   805                           ;Lab_5/LAB5.c: 125:                 entrante[pos] = ingreso;
   806  00B6  0834               	movf	_ingreso,w
   807  00B7  00AF               	movwf	??_main
   808  00B8  0833               	movf	_pos,w
   809  00B9  3E35               	addlw	(low (_entrante| 0))& (0+255)
   810  00BA  0084               	movwf	4
   811  00BB  082F               	movf	??_main,w
   812  00BC  1383               	bcf	3,7	;select IRP bank0
   813  00BD  0080               	movwf	0
   814  00BE                     l1381:
   815                           
   816                           ;Lab_5/LAB5.c: 126:                 pos++;
   817  00BE  3001               	movlw	1
   818  00BF  00AF               	movwf	??_main
   819  00C0  082F               	movf	??_main,w
   820  00C1  07B3               	addwf	_pos,f
   821  00C2                     l1383:
   822                           
   823                           ;Lab_5/LAB5.c: 128:                 if (pos > 2){
   824  00C2  3003               	movlw	3
   825  00C3  0233               	subwf	_pos,w
   826  00C4  1C03               	skipc
   827  00C5  28C7               	goto	u811
   828  00C6  28C8               	goto	u810
   829  00C7                     u811:
   830  00C7  28F0               	goto	l1395
   831  00C8                     u810:
   832  00C8                     l1385:
   833                           
   834                           ;Lab_5/LAB5.c: 129:                     pos = 0;
   835  00C8  01B3               	clrf	_pos
   836  00C9                     l1387:
   837                           
   838                           ;Lab_5/LAB5.c: 130:                     total = (entrante[0] - 48) * 100;
   839  00C9  3064               	movlw	100
   840  00CA  00AF               	movwf	??_main
   841  00CB  082F               	movf	??_main,w
   842  00CC  00F4               	movwf	___bmul@multiplicand
   843  00CD  0835               	movf	_entrante,w
   844  00CE  3ED0               	addlw	208
   845  00CF  120A  118A  224C  120A  118A  	fcall	___bmul
   846  00D4  1283               	bcf	3,5	;RP0=0, select bank0
   847  00D5  1303               	bcf	3,6	;RP1=0, select bank0
   848  00D6  00B0               	movwf	??_main+1
   849  00D7  0830               	movf	??_main+1,w
   850  00D8  00B2               	movwf	_total
   851  00D9                     l1389:
   852                           
   853                           ;Lab_5/LAB5.c: 131:                     total +=(entrante[1] - 48) *10;
   854  00D9  300A               	movlw	10
   855  00DA  00AF               	movwf	??_main
   856  00DB  082F               	movf	??_main,w
   857  00DC  00F4               	movwf	___bmul@multiplicand
   858  00DD  0836               	movf	_entrante+1,w
   859  00DE  3ED0               	addlw	208
   860  00DF  120A  118A  224C  120A  118A  	fcall	___bmul
   861  00E4  1283               	bcf	3,5	;RP0=0, select bank0
   862  00E5  1303               	bcf	3,6	;RP1=0, select bank0
   863  00E6  00B0               	movwf	??_main+1
   864  00E7  0830               	movf	??_main+1,w
   865  00E8  07B2               	addwf	_total,f
   866  00E9                     l1391:
   867                           
   868                           ;Lab_5/LAB5.c: 132:                     total +=(entrante[2] - 48);
   869  00E9  0837               	movf	_entrante+2,w
   870  00EA  3ED0               	addlw	208
   871  00EB  00AF               	movwf	??_main
   872  00EC  082F               	movf	??_main,w
   873  00ED  07B2               	addwf	_total,f
   874  00EE                     l1393:
   875                           
   876                           ;Lab_5/LAB5.c: 133:                     PORTA = total;
   877  00EE  0832               	movf	_total,w
   878  00EF  0085               	movwf	5	;volatile
   879  00F0                     l1395:
   880                           
   881                           ;Lab_5/LAB5.c: 138:         ingreso = 0;
   882  00F0  01B4               	clrf	_ingreso
   883  00F1  283F               	goto	l1361
   884  00F2  120A  118A  280C   	ljmp	start
   885  00F5                     __end_of_main:
   886                           
   887                           	psect	text1
   888  01E5                     __ptext1:	
   889 ;; *************** function _unidades *****************
   890 ;; Defined at:
   891 ;;		line 154 in file "Lab_5/LAB5.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;  dato            2    2[BANK0 ] int 
   894 ;; Auto vars:     Size  Location     Type
   895 ;;  out             1    7[BANK0 ] unsigned char 
   896 ;; Return value:  Size  Location     Type
   897 ;;                  1    wreg      unsigned char 
   898 ;; Registers used:
   899 ;;		wreg, status,2, status,0, pclath, cstack
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   905 ;;      Params:         0       2       0       0       0
   906 ;;      Locals:         0       3       0       0       0
   907 ;;      Temps:          0       1       0       0       0
   908 ;;      Totals:         0       6       0       0       0
   909 ;;Total ram usage:        6 bytes
   910 ;; Hardware stack levels used:    1
   911 ;; Hardware stack levels required when called:    2
   912 ;; This function calls:
   913 ;;		___awmod
   914 ;; This function is called by:
   915 ;;		_main
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           
   920                           ;psect for function _unidades
   921  01E5                     _unidades:
   922  01E5                     l1309:	
   923                           ;incstack = 0
   924                           ; Regs used in _unidades: [wreg+status,2+status,0+pclath+cstack]
   925                           
   926                           
   927                           ;Lab_5/LAB5.c: 155:     char out;;Lab_5/LAB5.c: 156:     out = (dato % 100) % 10;
   928  01E5  1283               	bcf	3,5	;RP0=0, select bank0
   929  01E6  1303               	bcf	3,6	;RP1=0, select bank0
   930  01E7  0823               	movf	unidades@dato+1,w
   931  01E8  00F7               	movwf	___awmod@dividend+1
   932  01E9  0822               	movf	unidades@dato,w
   933  01EA  00F6               	movwf	___awmod@dividend
   934  01EB  3064               	movlw	100
   935  01EC  00F4               	movwf	___awmod@divisor
   936  01ED  3000               	movlw	0
   937  01EE  00F5               	movwf	___awmod@divisor+1
   938  01EF  120A  118A  215E  120A  118A  	fcall	___awmod
   939  01F4  0875               	movf	?___awmod+1,w
   940  01F5  1283               	bcf	3,5	;RP0=0, select bank0
   941  01F6  1303               	bcf	3,6	;RP1=0, select bank0
   942  01F7  00A6               	movwf	_unidades$1014+1
   943  01F8  0874               	movf	?___awmod,w
   944  01F9  00A5               	movwf	_unidades$1014
   945                           
   946                           ;Lab_5/LAB5.c: 155:     char out;;Lab_5/LAB5.c: 156:     out = (dato % 100) % 10;
   947  01FA  300A               	movlw	10
   948  01FB  00F4               	movwf	___awmod@divisor
   949  01FC  3000               	movlw	0
   950  01FD  00F5               	movwf	___awmod@divisor+1
   951  01FE  0826               	movf	_unidades$1014+1,w
   952  01FF  00F7               	movwf	___awmod@dividend+1
   953  0200  0825               	movf	_unidades$1014,w
   954  0201  00F6               	movwf	___awmod@dividend
   955  0202  120A  118A  215E  120A  118A  	fcall	___awmod
   956  0207  0874               	movf	?___awmod,w
   957  0208  1283               	bcf	3,5	;RP0=0, select bank0
   958  0209  1303               	bcf	3,6	;RP1=0, select bank0
   959  020A  00A4               	movwf	??_unidades
   960  020B  0824               	movf	??_unidades,w
   961  020C  00A7               	movwf	unidades@out
   962  020D                     l1311:
   963                           
   964                           ;Lab_5/LAB5.c: 157:     return out;
   965  020D  0827               	movf	unidades@out,w
   966  020E                     l133:
   967  020E  0008               	return
   968  020F                     __end_of_unidades:
   969                           
   970                           	psect	text2
   971  020F                     __ptext2:	
   972 ;; *************** function _decenas *****************
   973 ;; Defined at:
   974 ;;		line 148 in file "Lab_5/LAB5.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;  dato            2   11[BANK0 ] int 
   977 ;; Auto vars:     Size  Location     Type
   978 ;;  out             1   14[BANK0 ] unsigned char 
   979 ;; Return value:  Size  Location     Type
   980 ;;                  1    wreg      unsigned char 
   981 ;; Registers used:
   982 ;;		wreg, status,2, status,0, pclath, cstack
   983 ;; Tracked objects:
   984 ;;		On entry : 0/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   988 ;;      Params:         0       2       0       0       0
   989 ;;      Locals:         0       1       0       0       0
   990 ;;      Temps:          0       1       0       0       0
   991 ;;      Totals:         0       4       0       0       0
   992 ;;Total ram usage:        4 bytes
   993 ;; Hardware stack levels used:    1
   994 ;; Hardware stack levels required when called:    2
   995 ;; This function calls:
   996 ;;		___awdiv
   997 ;;		___awmod
   998 ;; This function is called by:
   999 ;;		_main
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           
  1004                           ;psect for function _decenas
  1005  020F                     _decenas:
  1006  020F                     l1303:	
  1007                           ;incstack = 0
  1008                           ; Regs used in _decenas: [wreg+status,2+status,0+pclath+cstack]
  1009                           
  1010                           
  1011                           ;Lab_5/LAB5.c: 149:     char out;;Lab_5/LAB5.c: 150:     out = (dato % 100) / 10;
  1012  020F  300A               	movlw	10
  1013  0210  1283               	bcf	3,5	;RP0=0, select bank0
  1014  0211  1303               	bcf	3,6	;RP1=0, select bank0
  1015  0212  00A2               	movwf	___awdiv@divisor
  1016  0213  3000               	movlw	0
  1017  0214  00A3               	movwf	___awdiv@divisor+1
  1018  0215  082C               	movf	decenas@dato+1,w
  1019  0216  00F7               	movwf	___awmod@dividend+1
  1020  0217  082B               	movf	decenas@dato,w
  1021  0218  00F6               	movwf	___awmod@dividend
  1022  0219  3064               	movlw	100
  1023  021A  00F4               	movwf	___awmod@divisor
  1024  021B  3000               	movlw	0
  1025  021C  00F5               	movwf	___awmod@divisor+1
  1026  021D  120A  118A  215E  120A  118A  	fcall	___awmod
  1027  0222  0875               	movf	?___awmod+1,w
  1028  0223  1283               	bcf	3,5	;RP0=0, select bank0
  1029  0224  1303               	bcf	3,6	;RP1=0, select bank0
  1030  0225  00A5               	movwf	___awdiv@dividend+1
  1031  0226  0874               	movf	?___awmod,w
  1032  0227  00A4               	movwf	___awdiv@dividend
  1033  0228  120A  118A  20F5  120A  118A  	fcall	___awdiv
  1034  022D  1283               	bcf	3,5	;RP0=0, select bank0
  1035  022E  1303               	bcf	3,6	;RP1=0, select bank0
  1036  022F  0822               	movf	?___awdiv,w
  1037  0230  00AD               	movwf	??_decenas
  1038  0231  082D               	movf	??_decenas,w
  1039  0232  00AE               	movwf	decenas@out
  1040  0233                     l1305:
  1041                           
  1042                           ;Lab_5/LAB5.c: 151:     return out;
  1043  0233  082E               	movf	decenas@out,w
  1044  0234                     l130:
  1045  0234  0008               	return
  1046  0235                     __end_of_decenas:
  1047                           
  1048                           	psect	text3
  1049  015E                     __ptext3:	
  1050 ;; *************** function ___awmod *****************
  1051 ;; Defined at:
  1052 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;  divisor         2    4[COMMON] int 
  1055 ;;  dividend        2    6[COMMON] int 
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;  sign            1    1[BANK0 ] unsigned char 
  1058 ;;  counter         1    0[BANK0 ] unsigned char 
  1059 ;; Return value:  Size  Location     Type
  1060 ;;                  2    4[COMMON] int 
  1061 ;; Registers used:
  1062 ;;		wreg, status,2, status,0
  1063 ;; Tracked objects:
  1064 ;;		On entry : 0/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1068 ;;      Params:         4       0       0       0       0
  1069 ;;      Locals:         0       2       0       0       0
  1070 ;;      Temps:          1       0       0       0       0
  1071 ;;      Totals:         5       2       0       0       0
  1072 ;;Total ram usage:        7 bytes
  1073 ;; Hardware stack levels used:    1
  1074 ;; Hardware stack levels required when called:    1
  1075 ;; This function calls:
  1076 ;;		Nothing
  1077 ;; This function is called by:
  1078 ;;		_decenas
  1079 ;;		_unidades
  1080 ;; This function uses a non-reentrant model
  1081 ;;
  1082                           
  1083                           
  1084                           ;psect for function ___awmod
  1085  015E                     ___awmod:
  1086  015E                     l1033:	
  1087                           ;incstack = 0
  1088                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1089                           
  1090  015E  1283               	bcf	3,5	;RP0=0, select bank0
  1091  015F  1303               	bcf	3,6	;RP1=0, select bank0
  1092  0160  01A1               	clrf	___awmod@sign
  1093  0161                     l1035:
  1094  0161  1FF7               	btfss	___awmod@dividend+1,7
  1095  0162  2964               	goto	u441
  1096  0163  2965               	goto	u440
  1097  0164                     u441:
  1098  0164  296C               	goto	l1041
  1099  0165                     u440:
  1100  0165                     l1037:
  1101  0165  09F6               	comf	___awmod@dividend,f
  1102  0166  09F7               	comf	___awmod@dividend+1,f
  1103  0167  0AF6               	incf	___awmod@dividend,f
  1104  0168  1903               	skipnz
  1105  0169  0AF7               	incf	___awmod@dividend+1,f
  1106  016A                     l1039:
  1107  016A  01A1               	clrf	___awmod@sign
  1108  016B  0AA1               	incf	___awmod@sign,f
  1109  016C                     l1041:
  1110  016C  1FF5               	btfss	___awmod@divisor+1,7
  1111  016D  296F               	goto	u451
  1112  016E  2970               	goto	u450
  1113  016F                     u451:
  1114  016F  2975               	goto	l1045
  1115  0170                     u450:
  1116  0170                     l1043:
  1117  0170  09F4               	comf	___awmod@divisor,f
  1118  0171  09F5               	comf	___awmod@divisor+1,f
  1119  0172  0AF4               	incf	___awmod@divisor,f
  1120  0173  1903               	skipnz
  1121  0174  0AF5               	incf	___awmod@divisor+1,f
  1122  0175                     l1045:
  1123  0175  0874               	movf	___awmod@divisor,w
  1124  0176  0475               	iorwf	___awmod@divisor+1,w
  1125  0177  1903               	btfsc	3,2
  1126  0178  297A               	goto	u461
  1127  0179  297B               	goto	u460
  1128  017A                     u461:
  1129  017A  29AA               	goto	l1063
  1130  017B                     u460:
  1131  017B                     l1047:
  1132  017B  01A0               	clrf	___awmod@counter
  1133  017C  0AA0               	incf	___awmod@counter,f
  1134  017D  2989               	goto	l1053
  1135  017E                     l1049:
  1136  017E  3001               	movlw	1
  1137  017F                     u475:
  1138  017F  1003               	clrc
  1139  0180  0DF4               	rlf	___awmod@divisor,f
  1140  0181  0DF5               	rlf	___awmod@divisor+1,f
  1141  0182  3EFF               	addlw	-1
  1142  0183  1D03               	skipz
  1143  0184  297F               	goto	u475
  1144  0185                     l1051:
  1145  0185  3001               	movlw	1
  1146  0186  00F8               	movwf	??___awmod
  1147  0187  0878               	movf	??___awmod,w
  1148  0188  07A0               	addwf	___awmod@counter,f
  1149  0189                     l1053:
  1150  0189  1FF5               	btfss	___awmod@divisor+1,7
  1151  018A  298C               	goto	u481
  1152  018B  298D               	goto	u480
  1153  018C                     u481:
  1154  018C  297E               	goto	l1049
  1155  018D                     u480:
  1156  018D                     l1055:
  1157  018D  0875               	movf	___awmod@divisor+1,w
  1158  018E  0277               	subwf	___awmod@dividend+1,w
  1159  018F  1D03               	skipz
  1160  0190  2993               	goto	u495
  1161  0191  0874               	movf	___awmod@divisor,w
  1162  0192  0276               	subwf	___awmod@dividend,w
  1163  0193                     u495:
  1164  0193  1C03               	skipc
  1165  0194  2996               	goto	u491
  1166  0195  2997               	goto	u490
  1167  0196                     u491:
  1168  0196  299D               	goto	l1059
  1169  0197                     u490:
  1170  0197                     l1057:
  1171  0197  0874               	movf	___awmod@divisor,w
  1172  0198  02F6               	subwf	___awmod@dividend,f
  1173  0199  0875               	movf	___awmod@divisor+1,w
  1174  019A  1C03               	skipc
  1175  019B  03F7               	decf	___awmod@dividend+1,f
  1176  019C  02F7               	subwf	___awmod@dividend+1,f
  1177  019D                     l1059:
  1178  019D  3001               	movlw	1
  1179  019E                     u505:
  1180  019E  1003               	clrc
  1181  019F  0CF5               	rrf	___awmod@divisor+1,f
  1182  01A0  0CF4               	rrf	___awmod@divisor,f
  1183  01A1  3EFF               	addlw	-1
  1184  01A2  1D03               	skipz
  1185  01A3  299E               	goto	u505
  1186  01A4                     l1061:
  1187  01A4  3001               	movlw	1
  1188  01A5  02A0               	subwf	___awmod@counter,f
  1189  01A6  1D03               	btfss	3,2
  1190  01A7  29A9               	goto	u511
  1191  01A8  29AA               	goto	u510
  1192  01A9                     u511:
  1193  01A9  298D               	goto	l1055
  1194  01AA                     u510:
  1195  01AA                     l1063:
  1196  01AA  0821               	movf	___awmod@sign,w
  1197  01AB  1903               	btfsc	3,2
  1198  01AC  29AE               	goto	u521
  1199  01AD  29AF               	goto	u520
  1200  01AE                     u521:
  1201  01AE  29B4               	goto	l1067
  1202  01AF                     u520:
  1203  01AF                     l1065:
  1204  01AF  09F6               	comf	___awmod@dividend,f
  1205  01B0  09F7               	comf	___awmod@dividend+1,f
  1206  01B1  0AF6               	incf	___awmod@dividend,f
  1207  01B2  1903               	skipnz
  1208  01B3  0AF7               	incf	___awmod@dividend+1,f
  1209  01B4                     l1067:
  1210  01B4  0877               	movf	___awmod@dividend+1,w
  1211  01B5  00F5               	movwf	?___awmod+1
  1212  01B6  0876               	movf	___awmod@dividend,w
  1213  01B7  00F4               	movwf	?___awmod
  1214  01B8                     l385:
  1215  01B8  0008               	return
  1216  01B9                     __end_of___awmod:
  1217                           
  1218                           	psect	text4
  1219  0235                     __ptext4:	
  1220 ;; *************** function _centenas *****************
  1221 ;; Defined at:
  1222 ;;		line 143 in file "Lab_5/LAB5.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;  dato            2   11[BANK0 ] int 
  1225 ;; Auto vars:     Size  Location     Type
  1226 ;;  out             1   14[BANK0 ] unsigned char 
  1227 ;; Return value:  Size  Location     Type
  1228 ;;                  1    wreg      unsigned char 
  1229 ;; Registers used:
  1230 ;;		wreg, status,2, status,0, pclath, cstack
  1231 ;; Tracked objects:
  1232 ;;		On entry : 0/0
  1233 ;;		On exit  : 0/0
  1234 ;;		Unchanged: 0/0
  1235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1236 ;;      Params:         0       2       0       0       0
  1237 ;;      Locals:         0       1       0       0       0
  1238 ;;      Temps:          0       1       0       0       0
  1239 ;;      Totals:         0       4       0       0       0
  1240 ;;Total ram usage:        4 bytes
  1241 ;; Hardware stack levels used:    1
  1242 ;; Hardware stack levels required when called:    2
  1243 ;; This function calls:
  1244 ;;		___awdiv
  1245 ;; This function is called by:
  1246 ;;		_main
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           
  1251                           ;psect for function _centenas
  1252  0235                     _centenas:
  1253  0235                     l1297:	
  1254                           ;incstack = 0
  1255                           ; Regs used in _centenas: [wreg+status,2+status,0+pclath+cstack]
  1256                           
  1257                           
  1258                           ;Lab_5/LAB5.c: 144:     char out = dato / 100;
  1259  0235  3064               	movlw	100
  1260  0236  1283               	bcf	3,5	;RP0=0, select bank0
  1261  0237  1303               	bcf	3,6	;RP1=0, select bank0
  1262  0238  00A2               	movwf	___awdiv@divisor
  1263  0239  3000               	movlw	0
  1264  023A  00A3               	movwf	___awdiv@divisor+1
  1265  023B  082C               	movf	centenas@dato+1,w
  1266  023C  00A5               	movwf	___awdiv@dividend+1
  1267  023D  082B               	movf	centenas@dato,w
  1268  023E  00A4               	movwf	___awdiv@dividend
  1269  023F  120A  118A  20F5  120A  118A  	fcall	___awdiv
  1270  0244  1283               	bcf	3,5	;RP0=0, select bank0
  1271  0245  1303               	bcf	3,6	;RP1=0, select bank0
  1272  0246  0822               	movf	?___awdiv,w
  1273  0247  00AD               	movwf	??_centenas
  1274  0248  082D               	movf	??_centenas,w
  1275  0249  00AE               	movwf	centenas@out
  1276  024A                     l1299:
  1277                           
  1278                           ;Lab_5/LAB5.c: 145:     return out;
  1279  024A  082E               	movf	centenas@out,w
  1280  024B                     l127:
  1281  024B  0008               	return
  1282  024C                     __end_of_centenas:
  1283                           
  1284                           	psect	text5
  1285  00F5                     __ptext5:	
  1286 ;; *************** function ___awdiv *****************
  1287 ;; Defined at:
  1288 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;  divisor         2    2[BANK0 ] int 
  1291 ;;  dividend        2    4[BANK0 ] int 
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;  quotient        2    9[BANK0 ] int 
  1294 ;;  sign            1    8[BANK0 ] unsigned char 
  1295 ;;  counter         1    7[BANK0 ] unsigned char 
  1296 ;; Return value:  Size  Location     Type
  1297 ;;                  2    2[BANK0 ] int 
  1298 ;; Registers used:
  1299 ;;		wreg, status,2, status,0
  1300 ;; Tracked objects:
  1301 ;;		On entry : 0/0
  1302 ;;		On exit  : 0/0
  1303 ;;		Unchanged: 0/0
  1304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1305 ;;      Params:         0       4       0       0       0
  1306 ;;      Locals:         0       4       0       0       0
  1307 ;;      Temps:          0       1       0       0       0
  1308 ;;      Totals:         0       9       0       0       0
  1309 ;;Total ram usage:        9 bytes
  1310 ;; Hardware stack levels used:    1
  1311 ;; Hardware stack levels required when called:    1
  1312 ;; This function calls:
  1313 ;;		Nothing
  1314 ;; This function is called by:
  1315 ;;		_centenas
  1316 ;;		_decenas
  1317 ;; This function uses a non-reentrant model
  1318 ;;
  1319                           
  1320                           
  1321                           ;psect for function ___awdiv
  1322  00F5                     ___awdiv:
  1323  00F5                     l1253:	
  1324                           ;incstack = 0
  1325                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1326                           
  1327  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  1328  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  1329  00F7  01A8               	clrf	___awdiv@sign
  1330  00F8                     l1255:
  1331  00F8  1FA3               	btfss	___awdiv@divisor+1,7
  1332  00F9  28FB               	goto	u671
  1333  00FA  28FC               	goto	u670
  1334  00FB                     u671:
  1335  00FB  2903               	goto	l1261
  1336  00FC                     u670:
  1337  00FC                     l1257:
  1338  00FC  09A2               	comf	___awdiv@divisor,f
  1339  00FD  09A3               	comf	___awdiv@divisor+1,f
  1340  00FE  0AA2               	incf	___awdiv@divisor,f
  1341  00FF  1903               	skipnz
  1342  0100  0AA3               	incf	___awdiv@divisor+1,f
  1343  0101                     l1259:
  1344  0101  01A8               	clrf	___awdiv@sign
  1345  0102  0AA8               	incf	___awdiv@sign,f
  1346  0103                     l1261:
  1347  0103  1FA5               	btfss	___awdiv@dividend+1,7
  1348  0104  2906               	goto	u681
  1349  0105  2907               	goto	u680
  1350  0106                     u681:
  1351  0106  2910               	goto	l1267
  1352  0107                     u680:
  1353  0107                     l1263:
  1354  0107  09A4               	comf	___awdiv@dividend,f
  1355  0108  09A5               	comf	___awdiv@dividend+1,f
  1356  0109  0AA4               	incf	___awdiv@dividend,f
  1357  010A  1903               	skipnz
  1358  010B  0AA5               	incf	___awdiv@dividend+1,f
  1359  010C                     l1265:
  1360  010C  3001               	movlw	1
  1361  010D  00A6               	movwf	??___awdiv
  1362  010E  0826               	movf	??___awdiv,w
  1363  010F  06A8               	xorwf	___awdiv@sign,f
  1364  0110                     l1267:
  1365  0110  01A9               	clrf	___awdiv@quotient
  1366  0111  01AA               	clrf	___awdiv@quotient+1
  1367  0112                     l1269:
  1368  0112  0822               	movf	___awdiv@divisor,w
  1369  0113  0423               	iorwf	___awdiv@divisor+1,w
  1370  0114  1903               	btfsc	3,2
  1371  0115  2917               	goto	u691
  1372  0116  2918               	goto	u690
  1373  0117                     u691:
  1374  0117  294F               	goto	l1289
  1375  0118                     u690:
  1376  0118                     l1271:
  1377  0118  01A7               	clrf	___awdiv@counter
  1378  0119  0AA7               	incf	___awdiv@counter,f
  1379  011A  2926               	goto	l1277
  1380  011B                     l1273:
  1381  011B  3001               	movlw	1
  1382  011C                     u705:
  1383  011C  1003               	clrc
  1384  011D  0DA2               	rlf	___awdiv@divisor,f
  1385  011E  0DA3               	rlf	___awdiv@divisor+1,f
  1386  011F  3EFF               	addlw	-1
  1387  0120  1D03               	skipz
  1388  0121  291C               	goto	u705
  1389  0122                     l1275:
  1390  0122  3001               	movlw	1
  1391  0123  00A6               	movwf	??___awdiv
  1392  0124  0826               	movf	??___awdiv,w
  1393  0125  07A7               	addwf	___awdiv@counter,f
  1394  0126                     l1277:
  1395  0126  1FA3               	btfss	___awdiv@divisor+1,7
  1396  0127  2929               	goto	u711
  1397  0128  292A               	goto	u710
  1398  0129                     u711:
  1399  0129  291B               	goto	l1273
  1400  012A                     u710:
  1401  012A                     l1279:
  1402  012A  3001               	movlw	1
  1403  012B                     u725:
  1404  012B  1003               	clrc
  1405  012C  0DA9               	rlf	___awdiv@quotient,f
  1406  012D  0DAA               	rlf	___awdiv@quotient+1,f
  1407  012E  3EFF               	addlw	-1
  1408  012F  1D03               	skipz
  1409  0130  292B               	goto	u725
  1410  0131  0823               	movf	___awdiv@divisor+1,w
  1411  0132  0225               	subwf	___awdiv@dividend+1,w
  1412  0133  1D03               	skipz
  1413  0134  2937               	goto	u735
  1414  0135  0822               	movf	___awdiv@divisor,w
  1415  0136  0224               	subwf	___awdiv@dividend,w
  1416  0137                     u735:
  1417  0137  1C03               	skipc
  1418  0138  293A               	goto	u731
  1419  0139  293B               	goto	u730
  1420  013A                     u731:
  1421  013A  2942               	goto	l1285
  1422  013B                     u730:
  1423  013B                     l1281:
  1424  013B  0822               	movf	___awdiv@divisor,w
  1425  013C  02A4               	subwf	___awdiv@dividend,f
  1426  013D  0823               	movf	___awdiv@divisor+1,w
  1427  013E  1C03               	skipc
  1428  013F  03A5               	decf	___awdiv@dividend+1,f
  1429  0140  02A5               	subwf	___awdiv@dividend+1,f
  1430  0141                     l1283:
  1431  0141  1429               	bsf	___awdiv@quotient,0
  1432  0142                     l1285:
  1433  0142  3001               	movlw	1
  1434  0143                     u745:
  1435  0143  1003               	clrc
  1436  0144  0CA3               	rrf	___awdiv@divisor+1,f
  1437  0145  0CA2               	rrf	___awdiv@divisor,f
  1438  0146  3EFF               	addlw	-1
  1439  0147  1D03               	skipz
  1440  0148  2943               	goto	u745
  1441  0149                     l1287:
  1442  0149  3001               	movlw	1
  1443  014A  02A7               	subwf	___awdiv@counter,f
  1444  014B  1D03               	btfss	3,2
  1445  014C  294E               	goto	u751
  1446  014D  294F               	goto	u750
  1447  014E                     u751:
  1448  014E  292A               	goto	l1279
  1449  014F                     u750:
  1450  014F                     l1289:
  1451  014F  0828               	movf	___awdiv@sign,w
  1452  0150  1903               	btfsc	3,2
  1453  0151  2953               	goto	u761
  1454  0152  2954               	goto	u760
  1455  0153                     u761:
  1456  0153  2959               	goto	l1293
  1457  0154                     u760:
  1458  0154                     l1291:
  1459  0154  09A9               	comf	___awdiv@quotient,f
  1460  0155  09AA               	comf	___awdiv@quotient+1,f
  1461  0156  0AA9               	incf	___awdiv@quotient,f
  1462  0157  1903               	skipnz
  1463  0158  0AAA               	incf	___awdiv@quotient+1,f
  1464  0159                     l1293:
  1465  0159  082A               	movf	___awdiv@quotient+1,w
  1466  015A  00A3               	movwf	?___awdiv+1
  1467  015B  0829               	movf	___awdiv@quotient,w
  1468  015C  00A2               	movwf	?___awdiv
  1469  015D                     l372:
  1470  015D  0008               	return
  1471  015E                     __end_of___awdiv:
  1472                           
  1473                           	psect	text6
  1474  024C                     __ptext6:	
  1475 ;; *************** function ___bmul *****************
  1476 ;; Defined at:
  1477 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  1478 ;; Parameters:    Size  Location     Type
  1479 ;;  multiplier      1    wreg     unsigned char 
  1480 ;;  multiplicand    1    4[COMMON] unsigned char 
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;  multiplier      1    7[COMMON] unsigned char 
  1483 ;;  product         1    6[COMMON] unsigned char 
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  1    wreg      unsigned char 
  1486 ;; Registers used:
  1487 ;;		wreg, status,2, status,0
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1493 ;;      Params:         1       0       0       0       0
  1494 ;;      Locals:         2       0       0       0       0
  1495 ;;      Temps:          1       0       0       0       0
  1496 ;;      Totals:         4       0       0       0       0
  1497 ;;Total ram usage:        4 bytes
  1498 ;; Hardware stack levels used:    1
  1499 ;; Hardware stack levels required when called:    1
  1500 ;; This function calls:
  1501 ;;		Nothing
  1502 ;; This function is called by:
  1503 ;;		_main
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           
  1508                           ;psect for function ___bmul
  1509  024C                     ___bmul:
  1510                           
  1511                           ;incstack = 0
  1512                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1513                           ;___bmul@multiplier stored from wreg
  1514  024C  00F7               	movwf	___bmul@multiplier
  1515  024D                     l1111:
  1516  024D  01F6               	clrf	___bmul@product
  1517  024E                     l1113:
  1518  024E  1C77               	btfss	___bmul@multiplier,0
  1519  024F  2A51               	goto	u541
  1520  0250  2A52               	goto	u540
  1521  0251                     u541:
  1522  0251  2A56               	goto	l1117
  1523  0252                     u540:
  1524  0252                     l1115:
  1525  0252  0874               	movf	___bmul@multiplicand,w
  1526  0253  00F5               	movwf	??___bmul
  1527  0254  0875               	movf	??___bmul,w
  1528  0255  07F6               	addwf	___bmul@product,f
  1529  0256                     l1117:
  1530  0256  1003               	clrc
  1531  0257  0DF4               	rlf	___bmul@multiplicand,f
  1532  0258                     l1119:
  1533  0258  1003               	clrc
  1534  0259  0CF7               	rrf	___bmul@multiplier,f
  1535  025A  0877               	movf	___bmul@multiplier,w
  1536  025B  1D03               	btfss	3,2
  1537  025C  2A5E               	goto	u551
  1538  025D  2A5F               	goto	u550
  1539  025E                     u551:
  1540  025E  2A4E               	goto	l1113
  1541  025F                     u550:
  1542  025F                     l1121:
  1543  025F  0876               	movf	___bmul@product,w
  1544  0260                     l245:
  1545  0260  0008               	return
  1546  0261                     __end_of___bmul:
  1547                           
  1548                           	psect	text7
  1549  0276                     __ptext7:	
  1550 ;; *************** function _USART_Tx *****************
  1551 ;; Defined at:
  1552 ;;		line 20 in file "Lab_2/USART.c"
  1553 ;; Parameters:    Size  Location     Type
  1554 ;;  data            1    wreg     unsigned char 
  1555 ;; Auto vars:     Size  Location     Type
  1556 ;;  data            1    4[COMMON] unsigned char 
  1557 ;; Return value:  Size  Location     Type
  1558 ;;                  1    wreg      void 
  1559 ;; Registers used:
  1560 ;;		wreg
  1561 ;; Tracked objects:
  1562 ;;		On entry : 0/0
  1563 ;;		On exit  : 0/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1566 ;;      Params:         0       0       0       0       0
  1567 ;;      Locals:         1       0       0       0       0
  1568 ;;      Temps:          0       0       0       0       0
  1569 ;;      Totals:         1       0       0       0       0
  1570 ;;Total ram usage:        1 bytes
  1571 ;; Hardware stack levels used:    1
  1572 ;; Hardware stack levels required when called:    1
  1573 ;; This function calls:
  1574 ;;		Nothing
  1575 ;; This function is called by:
  1576 ;;		_main
  1577 ;;		_USART_Cadena
  1578 ;;		_USART_volt
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           
  1583                           ;psect for function _USART_Tx
  1584  0276                     _USART_Tx:
  1585                           
  1586                           ;incstack = 0
  1587                           ; Regs used in _USART_Tx: [wreg]
  1588                           ;USART_Tx@data stored from wreg
  1589  0276  00F4               	movwf	USART_Tx@data
  1590  0277                     l1085:
  1591  0277                     l20:	
  1592                           ;Lab_2/USART.c: 21:     while(TXSTAbits.TRMT == 0);
  1593                           
  1594  0277  1683               	bsf	3,5	;RP0=1, select bank1
  1595  0278  1303               	bcf	3,6	;RP1=0, select bank1
  1596  0279  1C98               	btfss	24,1	;volatile
  1597  027A  2A7C               	goto	u531
  1598  027B  2A7D               	goto	u530
  1599  027C                     u531:
  1600  027C  2A77               	goto	l20
  1601  027D                     u530:
  1602  027D                     l1087:
  1603                           
  1604                           ;Lab_2/USART.c: 22:     TXREG = data;
  1605  027D  0874               	movf	USART_Tx@data,w
  1606  027E  1283               	bcf	3,5	;RP0=0, select bank0
  1607  027F  1303               	bcf	3,6	;RP1=0, select bank0
  1608  0280  0099               	movwf	25	;volatile
  1609  0281                     l23:
  1610  0281  0008               	return
  1611  0282                     __end_of_USART_Tx:
  1612                           
  1613                           	psect	text8
  1614  0282                     __ptext8:	
  1615 ;; *************** function _USART_Rx *****************
  1616 ;; Defined at:
  1617 ;;		line 25 in file "Lab_2/USART.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;		None
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;		None
  1622 ;; Return value:  Size  Location     Type
  1623 ;;                  1    wreg      unsigned char 
  1624 ;; Registers used:
  1625 ;;		wreg
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1631 ;;      Params:         0       0       0       0       0
  1632 ;;      Locals:         0       0       0       0       0
  1633 ;;      Temps:          0       0       0       0       0
  1634 ;;      Totals:         0       0       0       0       0
  1635 ;;Total ram usage:        0 bytes
  1636 ;; Hardware stack levels used:    1
  1637 ;; Hardware stack levels required when called:    1
  1638 ;; This function calls:
  1639 ;;		Nothing
  1640 ;; This function is called by:
  1641 ;;		_main
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           
  1646                           ;psect for function _USART_Rx
  1647  0282                     _USART_Rx:
  1648  0282                     l1089:	
  1649                           ;incstack = 0
  1650                           ; Regs used in _USART_Rx: [wreg]
  1651                           
  1652                           
  1653                           ;Lab_2/USART.c: 26:     return RCREG;
  1654  0282  1283               	bcf	3,5	;RP0=0, select bank0
  1655  0283  1303               	bcf	3,6	;RP1=0, select bank0
  1656  0284  081A               	movf	26,w	;volatile
  1657  0285                     l26:
  1658  0285  0008               	return
  1659  0286                     __end_of_USART_Rx:
  1660                           
  1661                           	psect	text9
  1662  0261                     __ptext9:	
  1663 ;; *************** function _USART_Init *****************
  1664 ;; Defined at:
  1665 ;;		line 4 in file "Lab_2/USART.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;		None
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;		None
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  1    wreg      void 
  1672 ;; Registers used:
  1673 ;;		wreg, status,2
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1679 ;;      Params:         0       0       0       0       0
  1680 ;;      Locals:         0       0       0       0       0
  1681 ;;      Temps:          0       0       0       0       0
  1682 ;;      Totals:         0       0       0       0       0
  1683 ;;Total ram usage:        0 bytes
  1684 ;; Hardware stack levels used:    1
  1685 ;; Hardware stack levels required when called:    1
  1686 ;; This function calls:
  1687 ;;		Nothing
  1688 ;; This function is called by:
  1689 ;;		_main
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           
  1694                           ;psect for function _USART_Init
  1695  0261                     _USART_Init:
  1696  0261                     l1071:	
  1697                           ;incstack = 0
  1698                           ; Regs used in _USART_Init: [wreg+status,2]
  1699                           
  1700                           
  1701                           ;Lab_2/USART.c: 6:     TXSTAbits.SYNC = 0;
  1702  0261  1683               	bsf	3,5	;RP0=1, select bank1
  1703  0262  1303               	bcf	3,6	;RP1=0, select bank1
  1704  0263  1218               	bcf	24,4	;volatile
  1705                           
  1706                           ;Lab_2/USART.c: 7:     TXSTAbits.BRGH = 1;
  1707  0264  1518               	bsf	24,2	;volatile
  1708                           
  1709                           ;Lab_2/USART.c: 8:     BAUDCTLbits.BRG16 = 1;
  1710  0265  1683               	bsf	3,5	;RP0=1, select bank3
  1711  0266  1703               	bsf	3,6	;RP1=1, select bank3
  1712  0267  1587               	bsf	7,3	;volatile
  1713  0268                     l1073:
  1714                           
  1715                           ;Lab_2/USART.c: 10:     SPBRG = 207;
  1716  0268  30CF               	movlw	207
  1717  0269  1683               	bsf	3,5	;RP0=1, select bank1
  1718  026A  1303               	bcf	3,6	;RP1=0, select bank1
  1719  026B  0099               	movwf	25	;volatile
  1720  026C                     l1075:
  1721                           
  1722                           ;Lab_2/USART.c: 11:     SPBRGH = 0;
  1723  026C  019A               	clrf	26	;volatile
  1724  026D                     l1077:
  1725                           
  1726                           ;Lab_2/USART.c: 13:     RCSTAbits.SPEN = 1;
  1727  026D  1283               	bcf	3,5	;RP0=0, select bank0
  1728  026E  1303               	bcf	3,6	;RP1=0, select bank0
  1729  026F  1798               	bsf	24,7	;volatile
  1730  0270                     l1079:
  1731                           
  1732                           ;Lab_2/USART.c: 14:     RCSTAbits.RX9 = 0;
  1733  0270  1318               	bcf	24,6	;volatile
  1734  0271                     l1081:
  1735                           
  1736                           ;Lab_2/USART.c: 15:     RCSTAbits.CREN = 1;
  1737  0271  1618               	bsf	24,4	;volatile
  1738  0272                     l1083:
  1739                           
  1740                           ;Lab_2/USART.c: 16:     TXSTAbits.TXEN = 1;
  1741  0272  1683               	bsf	3,5	;RP0=1, select bank1
  1742  0273  1303               	bcf	3,6	;RP1=0, select bank1
  1743  0274  1698               	bsf	24,5	;volatile
  1744  0275                     l17:
  1745  0275  0008               	return
  1746  0276                     __end_of_USART_Init:
  1747                           
  1748                           	psect	text10
  1749  01B9                     __ptext10:	
  1750 ;; *************** function _isr *****************
  1751 ;; Defined at:
  1752 ;;		line 56 in file "Lab_5/LAB5.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;		None
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;		None
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  1    wreg      void 
  1759 ;; Registers used:
  1760 ;;		wreg, status,2, status,0
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1766 ;;      Params:         0       0       0       0       0
  1767 ;;      Locals:         1       0       0       0       0
  1768 ;;      Temps:          3       0       0       0       0
  1769 ;;      Totals:         4       0       0       0       0
  1770 ;;Total ram usage:        4 bytes
  1771 ;; Hardware stack levels used:    1
  1772 ;; This function calls:
  1773 ;;		Nothing
  1774 ;; This function is called by:
  1775 ;;		Interrupt level 1
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779                           
  1780                           ;psect for function _isr
  1781  01B9                     _isr:
  1782  01B9                     i1l1151:
  1783                           
  1784                           ;Lab_5/LAB5.c: 57:     if(RBIF == 1){
  1785  01B9  1C0B               	btfss	11,0	;volatile
  1786  01BA  29BC               	goto	u57_21
  1787  01BB  29BD               	goto	u57_20
  1788  01BC                     u57_21:
  1789  01BC  29DE               	goto	i1l112
  1790  01BD                     u57_20:
  1791  01BD                     i1l1153:
  1792                           
  1793                           ;Lab_5/LAB5.c: 58:         if (RB0 == 0){
  1794  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  1795  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  1796  01BF  1806               	btfsc	6,0	;volatile
  1797  01C0  29C2               	goto	u58_21
  1798  01C1  29C3               	goto	u58_20
  1799  01C2                     u58_21:
  1800  01C2  29C8               	goto	i1l107
  1801  01C3                     u58_20:
  1802  01C3                     i1l1155:
  1803                           
  1804                           ;Lab_5/LAB5.c: 59:             PORTD++;
  1805  01C3  3001               	movlw	1
  1806  01C4  00F0               	movwf	??_isr
  1807  01C5  0870               	movf	??_isr,w
  1808  01C6  0788               	addwf	8,f	;volatile
  1809                           
  1810                           ;Lab_5/LAB5.c: 60:         }else if(RB1 == 0){
  1811  01C7  29CE               	goto	i1l1159
  1812  01C8                     i1l107:
  1813  01C8  1886               	btfsc	6,1	;volatile
  1814  01C9  29CB               	goto	u59_21
  1815  01CA  29CC               	goto	u59_20
  1816  01CB                     u59_21:
  1817  01CB  29CE               	goto	i1l1159
  1818  01CC                     u59_20:
  1819  01CC                     i1l1157:
  1820                           
  1821                           ;Lab_5/LAB5.c: 61:             PORTD--;
  1822  01CC  3001               	movlw	1
  1823  01CD  0288               	subwf	8,f	;volatile
  1824  01CE                     i1l1159:
  1825                           
  1826                           ;Lab_5/LAB5.c: 63:         old = (RB0 != 0 && RB1 != 0) ? 1:0;
  1827  01CE  01F3               	clrf	_isr$362
  1828  01CF                     i1l1161:
  1829  01CF  1C06               	btfss	6,0	;volatile
  1830  01D0  29D2               	goto	u60_21
  1831  01D1  29D3               	goto	u60_20
  1832  01D2                     u60_21:
  1833  01D2  29D9               	goto	i1l1167
  1834  01D3                     u60_20:
  1835  01D3                     i1l1163:
  1836  01D3  1C86               	btfss	6,1	;volatile
  1837  01D4  29D6               	goto	u61_21
  1838  01D5  29D7               	goto	u61_20
  1839  01D6                     u61_21:
  1840  01D6  29D9               	goto	i1l1167
  1841  01D7                     u61_20:
  1842  01D7                     i1l1165:
  1843  01D7  01F3               	clrf	_isr$362
  1844  01D8  0AF3               	incf	_isr$362,f
  1845  01D9                     i1l1167:
  1846  01D9  0873               	movf	_isr$362,w
  1847  01DA  00F0               	movwf	??_isr
  1848  01DB  0870               	movf	??_isr,w
  1849  01DC  00F9               	movwf	_old
  1850  01DD                     i1l1169:
  1851                           
  1852                           ;Lab_5/LAB5.c: 64:         RBIF = 0;
  1853  01DD  100B               	bcf	11,0	;volatile
  1854  01DE                     i1l112:
  1855  01DE  0872               	movf	??_isr+2,w
  1856  01DF  008A               	movwf	10
  1857  01E0  0E71               	swapf	??_isr+1,w
  1858  01E1  0083               	movwf	3
  1859  01E2  0EFE               	swapf	btemp,f
  1860  01E3  0E7E               	swapf	btemp,w
  1861  01E4  0009               	retfie
  1862  01E5                     __end_of_isr:
  1863  007E                     btemp	set	126	;btemp
  1864  007E                     wtemp0	set	126
  1865                           
  1866                           	psect	intentry
  1867  0004                     __pintentry:	
  1868                           ;incstack = 0
  1869                           ; Regs used in _isr: [wreg+status,2+status,0]
  1870                           
  1871  0004                     interrupt_function:
  1872  007E                     saved_w	set	btemp
  1873  0004  00FE               	movwf	btemp
  1874  0005  0E03               	swapf	3,w
  1875  0006  00F1               	movwf	??_isr+1
  1876  0007  080A               	movf	10,w
  1877  0008  00F2               	movwf	??_isr+2
  1878  0009  120A  118A  29B9   	ljmp	_isr
  1879                           
  1880                           	psect	config
  1881                           
  1882                           ;Config register CONFIG1 @ 0x2007
  1883                           ;	Oscillator Selection bits
  1884                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1885                           ;	Watchdog Timer Enable bit
  1886                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1887                           ;	Power-up Timer Enable bit
  1888                           ;	PWRTE = OFF, PWRT disabled
  1889                           ;	RE3/MCLR pin function select bit
  1890                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1891                           ;	Code Protection bit
  1892                           ;	CP = OFF, Program memory code protection is disabled
  1893                           ;	Data Code Protection bit
  1894                           ;	CPD = OFF, Data memory code protection is disabled
  1895                           ;	Brown Out Reset Selection bits
  1896                           ;	BOREN = OFF, BOR disabled
  1897                           ;	Internal External Switchover bit
  1898                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1899                           ;	Fail-Safe Clock Monitor Enabled bit
  1900                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1901                           ;	Low Voltage Programming Enable bit
  1902                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1903                           ;	In-Circuit Debugger Mode bit
  1904                           ;	DEBUG = 0x1, unprogrammed default
  1905  2007                     	org	8199
  1906  2007  20D4               	dw	8404
  1907                           
  1908                           ;Config register CONFIG2 @ 0x2008
  1909                           ;	Brown-out Reset Selection bit
  1910                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1911                           ;	Flash Program Memory Self Write Enable bits
  1912                           ;	WRT = OFF, Write protection off
  1913  2008                     	org	8200
  1914  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80     18      26
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _unidades->___awmod
    _decenas->___awmod
    ___awdiv->___awmod

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_centenas
    _main->_decenas
    _unidades->___awmod
    _decenas->___awdiv
    _centenas->___awdiv
    ___awdiv->___awmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3879
                                             15 BANK0      3     3      0
                         _USART_Init
                           _USART_Rx
                           _USART_Tx
                             ___bmul
                           _centenas
                            _decenas
                           _unidades
 ---------------------------------------------------------------------------------
 (1) _unidades                                             6     4      2     941
                                              2 BANK0      6     4      2
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _decenas                                              4     2      2    1712
                                             11 BANK0      4     2      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     752
                                              4 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _centenas                                             4     2      2     960
                                             11 BANK0      4     2      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              2 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     244
                                              4 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _USART_Tx                                             1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Rx                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0      24
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USART_Init
   _USART_Rx
   _USART_Tx
   ___bmul
   _centenas
     ___awdiv
       ___awmod (ARG)
   _decenas
     ___awdiv
       ___awmod (ARG)
     ___awmod
   _unidades
     ___awmod

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      24       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     12      1A       5       32.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      24      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Aug 15 16:41:33 2021

         ___bmul@product 0076                       l20 0277                       l23 0281  
                     l17 0275                       l26 0285             ___awdiv@sign 0028  
                    l130 0234                      l133 020E                      l127 024B  
                    l245 0260                      l372 015D                      l385 01B8  
                    _RB0 0030                      _RB1 0031                      u510 01AA  
                    u511 01A9                      u520 01AF                      u440 0165  
                    u521 01AE                      u505 019E                      u441 0164  
                    u530 027D                      u450 0170                      u531 027C  
                    u451 016F                      u540 0252                      u460 017B  
                    u541 0251                      u461 017A                      u550 025F  
                    u710 012A                      u551 025E                      u711 0129  
                    u480 018D                      u800 00B6                      u705 011C  
                    u481 018C                      u801 00B5                      u730 013B  
                    u490 0197                      u810 00C8                      u731 013A  
                    u491 0196                      u475 017F                      u811 00C7  
                    u725 012B                      u750 014F                      u670 00FC  
                    u751 014E                      u735 0137                      u671 00FB  
                    u495 0193                      u760 0154                      u680 0107  
                    u761 0153                      u745 0143                      u681 0106  
                    u690 0118                      u770 0082                      u691 0117  
                    u771 0081                      u780 0092                      u781 0091  
                    u790 00B0                      u791 00AF                      _old 0079  
                    _isr 01B9                      _pos 0033                      fsr0 0004  
                    indf 0000             ___awmod@sign 0021                     l1111 024D  
                   l1121 025F                     l1113 024E                     l1041 016C  
                   l1033 015E                     l1115 0252                     l1051 0185  
                   l1043 0170                     l1035 0161                     l1117 0256  
                   l1061 01A4                     l1053 0189                     l1045 0175  
                   l1037 0165                     l1071 0261                     l1119 0258  
                   l1055 018D                     l1047 017B                     l1063 01AA  
                   l1039 016A                     l1303 020F                     l1311 020D  
                   l1081 0271                     l1073 0268                     l1065 01AF  
                   l1057 0197                     l1049 017E                     l1305 0233  
                   l1321 0023                     l1083 0272                     l1075 026C  
                   l1067 01B4                     l1059 019D                     l1331 002D  
                   l1323 0026                     l1315 001A                     l1077 026D  
                   l1085 0277                     l1261 0103                     l1253 00F5  
                   l1309 01E5                     l1341 0032                     l1333 002E  
                   l1325 0028                     l1317 001F                     l1079 0270  
                   l1087 027D                     l1271 0118                     l1263 0107  
                   l1255 00F8                     l1351 0037                     l1343 0033  
                   l1335 002F                     l1327 002A                     l1319 0022  
                   l1089 0282                     l1281 013B                     l1273 011B  
                   l1265 010C                     l1257 00FC                     l1361 003F  
                   l1353 0039                     l1345 0034                     l1337 0030  
                   l1329 002B                     l1291 0154                     l1283 0141  
                   l1275 0122                     l1267 0110                     l1259 0101  
                   l1371 008C                     l1363 0050                     l1355 003C  
                   l1347 0035                     l1339 0031                     l1293 0159  
                   l1285 0142                     l1277 0126                     l1269 0112  
                   l1381 00BE                     l1373 0092                     l1365 0061  
                   l1357 003D                     l1349 0036                     l1287 0149  
                   l1279 012A                     l1391 00E9                     l1383 00C2  
                   l1375 00A8                     l1367 007E                     l1359 003E  
                   l1289 014F                     l1297 0235                     l1393 00EE  
                   l1385 00C8                     l1377 00B0                     l1369 0082  
                   l1299 024A                     l1387 00C9                     l1379 00B6  
                   l1395 00F0                     l1389 00D9                     ?_isr 0070  
                   _RBIF 0058                     _main 001A                     btemp 007E  
                   start 000C        ___bmul@multiplier 0077                    ??_isr 0070  
                  ?_main 0070          __end_of___awdiv 015E          __end_of___awmod 01B9  
                  _ANSEL 0188          ___awdiv@divisor 0022                    i1l112 01DE  
                  i1l107 01C8          ___awdiv@counter 0027                    _RCREG 001A  
                  _SPBRG 0099                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    u60_20 01D3  
                  u60_21 01D2                    u61_20 01D7                    u61_21 01D6  
                  u57_20 01BD                    u57_21 01BC                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  u58_20 01C3                    u58_21 01C2                    u59_20 01CC  
                  u59_21 01CB          __end_of_decenas 0235                    _TXREG 0019  
           unidades@dato 0022         __end_of_USART_Rx 0286         __end_of_USART_Tx 0282  
                  _total 0032             USART_Tx@data 0074                    pclath 000A  
                  status 0003                    wtemp0 007E              ?_USART_Init 0070  
        __initialization 000F             __end_of_main 00F5                   ??_main 002F  
       ___awdiv@dividend 0024                   _ANSELH 0189                   i1l1151 01B9  
                 i1l1161 01CF                   i1l1153 01BD                   i1l1163 01D3  
                 i1l1155 01C3                   i1l1165 01D7                   i1l1157 01CC  
                 i1l1167 01D9                   i1l1159 01CE                   i1l1169 01DD  
                 _SPBRGH 009A         __end_of_centenas 024C                   ___bmul 024C  
              ??___awdiv 0026                   _decena 0038                ??___awmod 0078  
              ??_decenas 002D         ___awdiv@quotient 0029          ___awmod@divisor 0074  
        ___awmod@counter 0020                   _unidad 0037                   saved_w 007E  
    __size_of_USART_Init 0015         __end_of_unidades 020F  __end_of__initialization 0016  
    ___bmul@multiplicand 0074           __pcstackCOMMON 0070                ?_USART_Rx 0070  
              ?_USART_Tx 0070           _OPTION_REGbits 0081               __pbssBANK0 0032  
             __pnvCOMMON 0079               __pmaintext 001A                  ?___bmul 0074  
             __pintentry 0004               ??_USART_Rx 0074               ??_USART_Tx 0074  
              ?_centenas 002B             ??_USART_Init 0074               decenas@out 002E  
        __size_of___bmul 0015                  ___awdiv 00F5                  ___awmod 015E  
              ?_unidades 0022                  _decenas 020F                  _isr$362 0073  
                _centena 0039                  __ptext1 01E5                  __ptext2 020F  
                __ptext3 015E                  __ptext4 0235                  __ptext5 00F5  
                __ptext6 024C                  __ptext7 0276                  __ptext8 0282  
                __ptext9 0261                  _ingreso 0034             __size_of_isr 002C  
       ___awmod@dividend 0076               ??_centenas 002D       __end_of_USART_Init 0276  
   end_of_initialization 0016                _RCSTAbits 0018               ??_unidades 0024  
              _TXSTAbits 0098           __end_of___bmul 0261              _BAUDCTLbits 0187  
            unidades@out 0027        __size_of_USART_Rx 0004        __size_of_USART_Tx 000C  
    start_initialization 000F              __end_of_isr 01E5                 ??___bmul 0075  
              ___latbits 0002            __pcstackBANK0 0020        __size_of_centenas 0017  
              __pnvBANK0 0037                 ?___awdiv 0022                 ?___awmod 0074  
               ?_decenas 002B        __size_of_unidades 002A        interrupt_function 0004  
               _IOCBbits 0096                 _PIR1bits 000C                 _USART_Rx 0282  
               _USART_Tx 0276                 _WPUBbits 0095              decenas@dato 002B  
       __size_of___awdiv 0069         __size_of___awmod 005B         __size_of_decenas 0026  
           centenas@dato 002B                 _centenas 0235                 __ptext10 01B9  
               _entrante 0035            __size_of_main 00DB                 _unidades 01E5  
             _INTCONbits 000B                 intlevel1 0000              centenas@out 002E  
             _OSCCONbits 008F            _unidades$1014 0025               _USART_Init 0261  
