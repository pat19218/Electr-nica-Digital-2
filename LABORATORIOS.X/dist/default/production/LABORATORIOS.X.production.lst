

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Jul 25 19:28:34 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	intentry,global,class=CODE,delta=2
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 2.20
    50                           ; Generated 12/02/2020 GMT
    51                           ; 
    52                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F887 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000D                     	;# 
    97  000E                     	;# 
    98  000E                     	;# 
    99  000F                     	;# 
   100  0010                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0013                     	;# 
   104  0014                     	;# 
   105  0015                     	;# 
   106  0015                     	;# 
   107  0016                     	;# 
   108  0017                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  001B                     	;# 
   113  001B                     	;# 
   114  001C                     	;# 
   115  001D                     	;# 
   116  001E                     	;# 
   117  001F                     	;# 
   118  0081                     	;# 
   119  0085                     	;# 
   120  0086                     	;# 
   121  0087                     	;# 
   122  0088                     	;# 
   123  0089                     	;# 
   124  008C                     	;# 
   125  008D                     	;# 
   126  008E                     	;# 
   127  008F                     	;# 
   128  0090                     	;# 
   129  0091                     	;# 
   130  0092                     	;# 
   131  0093                     	;# 
   132  0093                     	;# 
   133  0093                     	;# 
   134  0094                     	;# 
   135  0095                     	;# 
   136  0096                     	;# 
   137  0097                     	;# 
   138  0098                     	;# 
   139  0099                     	;# 
   140  009A                     	;# 
   141  009B                     	;# 
   142  009C                     	;# 
   143  009D                     	;# 
   144  009E                     	;# 
   145  009F                     	;# 
   146  0105                     	;# 
   147  0107                     	;# 
   148  0108                     	;# 
   149  0109                     	;# 
   150  010C                     	;# 
   151  010C                     	;# 
   152  010D                     	;# 
   153  010E                     	;# 
   154  010F                     	;# 
   155  0185                     	;# 
   156  0187                     	;# 
   157  0188                     	;# 
   158  0189                     	;# 
   159  018C                     	;# 
   160  018D                     	;# 
   161  0000                     	;# 
   162  0001                     	;# 
   163  0002                     	;# 
   164  0003                     	;# 
   165  0004                     	;# 
   166  0005                     	;# 
   167  0006                     	;# 
   168  0007                     	;# 
   169  0008                     	;# 
   170  0009                     	;# 
   171  000A                     	;# 
   172  000B                     	;# 
   173  000C                     	;# 
   174  000D                     	;# 
   175  000E                     	;# 
   176  000E                     	;# 
   177  000F                     	;# 
   178  0010                     	;# 
   179  0011                     	;# 
   180  0012                     	;# 
   181  0013                     	;# 
   182  0014                     	;# 
   183  0015                     	;# 
   184  0015                     	;# 
   185  0016                     	;# 
   186  0017                     	;# 
   187  0018                     	;# 
   188  0019                     	;# 
   189  001A                     	;# 
   190  001B                     	;# 
   191  001B                     	;# 
   192  001C                     	;# 
   193  001D                     	;# 
   194  001E                     	;# 
   195  001F                     	;# 
   196  0081                     	;# 
   197  0085                     	;# 
   198  0086                     	;# 
   199  0087                     	;# 
   200  0088                     	;# 
   201  0089                     	;# 
   202  008C                     	;# 
   203  008D                     	;# 
   204  008E                     	;# 
   205  008F                     	;# 
   206  0090                     	;# 
   207  0091                     	;# 
   208  0092                     	;# 
   209  0093                     	;# 
   210  0093                     	;# 
   211  0093                     	;# 
   212  0094                     	;# 
   213  0095                     	;# 
   214  0096                     	;# 
   215  0097                     	;# 
   216  0098                     	;# 
   217  0099                     	;# 
   218  009A                     	;# 
   219  009B                     	;# 
   220  009C                     	;# 
   221  009D                     	;# 
   222  009E                     	;# 
   223  009F                     	;# 
   224  0105                     	;# 
   225  0107                     	;# 
   226  0108                     	;# 
   227  0109                     	;# 
   228  010C                     	;# 
   229  010C                     	;# 
   230  010D                     	;# 
   231  010E                     	;# 
   232  010F                     	;# 
   233  0185                     	;# 
   234  0187                     	;# 
   235  0188                     	;# 
   236  0189                     	;# 
   237  018C                     	;# 
   238  018D                     	;# 
   239  0000                     	;# 
   240  0001                     	;# 
   241  0002                     	;# 
   242  0003                     	;# 
   243  0004                     	;# 
   244  0005                     	;# 
   245  0006                     	;# 
   246  0007                     	;# 
   247  0008                     	;# 
   248  0009                     	;# 
   249  000A                     	;# 
   250  000B                     	;# 
   251  000C                     	;# 
   252  000D                     	;# 
   253  000E                     	;# 
   254  000E                     	;# 
   255  000F                     	;# 
   256  0010                     	;# 
   257  0011                     	;# 
   258  0012                     	;# 
   259  0013                     	;# 
   260  0014                     	;# 
   261  0015                     	;# 
   262  0015                     	;# 
   263  0016                     	;# 
   264  0017                     	;# 
   265  0018                     	;# 
   266  0019                     	;# 
   267  001A                     	;# 
   268  001B                     	;# 
   269  001B                     	;# 
   270  001C                     	;# 
   271  001D                     	;# 
   272  001E                     	;# 
   273  001F                     	;# 
   274  0081                     	;# 
   275  0085                     	;# 
   276  0086                     	;# 
   277  0087                     	;# 
   278  0088                     	;# 
   279  0089                     	;# 
   280  008C                     	;# 
   281  008D                     	;# 
   282  008E                     	;# 
   283  008F                     	;# 
   284  0090                     	;# 
   285  0091                     	;# 
   286  0092                     	;# 
   287  0093                     	;# 
   288  0093                     	;# 
   289  0093                     	;# 
   290  0094                     	;# 
   291  0095                     	;# 
   292  0096                     	;# 
   293  0097                     	;# 
   294  0098                     	;# 
   295  0099                     	;# 
   296  009A                     	;# 
   297  009B                     	;# 
   298  009C                     	;# 
   299  009D                     	;# 
   300  009E                     	;# 
   301  009F                     	;# 
   302  0105                     	;# 
   303  0107                     	;# 
   304  0108                     	;# 
   305  0109                     	;# 
   306  010C                     	;# 
   307  010C                     	;# 
   308  010D                     	;# 
   309  010E                     	;# 
   310  010F                     	;# 
   311  0185                     	;# 
   312  0187                     	;# 
   313  0188                     	;# 
   314  0189                     	;# 
   315  018C                     	;# 
   316  018D                     	;# 
   317  0000                     	;# 
   318  0001                     	;# 
   319  0002                     	;# 
   320  0003                     	;# 
   321  0004                     	;# 
   322  0005                     	;# 
   323  0006                     	;# 
   324  0007                     	;# 
   325  0008                     	;# 
   326  0009                     	;# 
   327  000A                     	;# 
   328  000B                     	;# 
   329  000C                     	;# 
   330  000D                     	;# 
   331  000E                     	;# 
   332  000E                     	;# 
   333  000F                     	;# 
   334  0010                     	;# 
   335  0011                     	;# 
   336  0012                     	;# 
   337  0013                     	;# 
   338  0014                     	;# 
   339  0015                     	;# 
   340  0015                     	;# 
   341  0016                     	;# 
   342  0017                     	;# 
   343  0018                     	;# 
   344  0019                     	;# 
   345  001A                     	;# 
   346  001B                     	;# 
   347  001B                     	;# 
   348  001C                     	;# 
   349  001D                     	;# 
   350  001E                     	;# 
   351  001F                     	;# 
   352  0081                     	;# 
   353  0085                     	;# 
   354  0086                     	;# 
   355  0087                     	;# 
   356  0088                     	;# 
   357  0089                     	;# 
   358  008C                     	;# 
   359  008D                     	;# 
   360  008E                     	;# 
   361  008F                     	;# 
   362  0090                     	;# 
   363  0091                     	;# 
   364  0092                     	;# 
   365  0093                     	;# 
   366  0093                     	;# 
   367  0093                     	;# 
   368  0094                     	;# 
   369  0095                     	;# 
   370  0096                     	;# 
   371  0097                     	;# 
   372  0098                     	;# 
   373  0099                     	;# 
   374  009A                     	;# 
   375  009B                     	;# 
   376  009C                     	;# 
   377  009D                     	;# 
   378  009E                     	;# 
   379  009F                     	;# 
   380  0105                     	;# 
   381  0107                     	;# 
   382  0108                     	;# 
   383  0109                     	;# 
   384  010C                     	;# 
   385  010C                     	;# 
   386  010D                     	;# 
   387  010E                     	;# 
   388  010F                     	;# 
   389  0185                     	;# 
   390  0187                     	;# 
   391  0188                     	;# 
   392  0189                     	;# 
   393  018C                     	;# 
   394  018D                     	;# 
   395  0000                     	;# 
   396  0001                     	;# 
   397  0002                     	;# 
   398  0003                     	;# 
   399  0004                     	;# 
   400  0005                     	;# 
   401  0006                     	;# 
   402  0007                     	;# 
   403  0008                     	;# 
   404  0009                     	;# 
   405  000A                     	;# 
   406  000B                     	;# 
   407  000C                     	;# 
   408  000D                     	;# 
   409  000E                     	;# 
   410  000E                     	;# 
   411  000F                     	;# 
   412  0010                     	;# 
   413  0011                     	;# 
   414  0012                     	;# 
   415  0013                     	;# 
   416  0014                     	;# 
   417  0015                     	;# 
   418  0015                     	;# 
   419  0016                     	;# 
   420  0017                     	;# 
   421  0018                     	;# 
   422  0019                     	;# 
   423  001A                     	;# 
   424  001B                     	;# 
   425  001B                     	;# 
   426  001C                     	;# 
   427  001D                     	;# 
   428  001E                     	;# 
   429  001F                     	;# 
   430  0081                     	;# 
   431  0085                     	;# 
   432  0086                     	;# 
   433  0087                     	;# 
   434  0088                     	;# 
   435  0089                     	;# 
   436  008C                     	;# 
   437  008D                     	;# 
   438  008E                     	;# 
   439  008F                     	;# 
   440  0090                     	;# 
   441  0091                     	;# 
   442  0092                     	;# 
   443  0093                     	;# 
   444  0093                     	;# 
   445  0093                     	;# 
   446  0094                     	;# 
   447  0095                     	;# 
   448  0096                     	;# 
   449  0097                     	;# 
   450  0098                     	;# 
   451  0099                     	;# 
   452  009A                     	;# 
   453  009B                     	;# 
   454  009C                     	;# 
   455  009D                     	;# 
   456  009E                     	;# 
   457  009F                     	;# 
   458  0105                     	;# 
   459  0107                     	;# 
   460  0108                     	;# 
   461  0109                     	;# 
   462  010C                     	;# 
   463  010C                     	;# 
   464  010D                     	;# 
   465  010E                     	;# 
   466  010F                     	;# 
   467  0185                     	;# 
   468  0187                     	;# 
   469  0188                     	;# 
   470  0189                     	;# 
   471  018C                     	;# 
   472  018D                     	;# 
   473                           
   474                           	psect	stringtext
   475  1800                     __pstringtext:
   476  1800                     stringtab:
   477  1800                     __stringtab:
   478                           
   479                           ;	String table - string pointers are 2 bytes each
   480  1800  1BFF               	btfsc	btemp+1,7
   481  1801  280A               	ljmp	stringcode
   482  1802  1383               	bcf	3,7
   483  1803  187F               	btfsc	btemp+1,0
   484  1804  1783               	bsf	3,7
   485  1805  0800               	movf	0,w
   486  1806  0A84               	incf	4,f
   487  1807  1903               	skipnz
   488  1808  0AFF               	incf	btemp+1,f
   489  1809  0008               	return
   490  180A                     stringcode:
   491  180A  087F               	movf	btemp+1,w
   492  180B  397F               	andlw	127
   493  180C  008A               	movwf	10
   494  180D  0804               	movf	4,w
   495  180E  0A84               	incf	4,f
   496  180F  1903               	skipnz
   497  1810  0AFF               	incf	btemp+1,f
   498  1811  0082               	movwf	2
   499  1812                     __stringbase:
   500  1812                     __end_of__stringtab:
   501  1812                     __powers_:
   502  1812  3400               	retlw	0
   503  1813  3400               	retlw	0
   504  1814  3480               	retlw	128
   505  1815  343F               	retlw	63
   506  1816  3400               	retlw	0
   507  1817  3400               	retlw	0
   508  1818  3420               	retlw	32
   509  1819  3441               	retlw	65
   510  181A  3400               	retlw	0
   511  181B  3400               	retlw	0
   512  181C  34C8               	retlw	200
   513  181D  3442               	retlw	66
   514  181E  3400               	retlw	0
   515  181F  3400               	retlw	0
   516  1820  347A               	retlw	122
   517  1821  3444               	retlw	68
   518  1822  3400               	retlw	0
   519  1823  3440               	retlw	64
   520  1824  341C               	retlw	28
   521  1825  3446               	retlw	70
   522  1826  3400               	retlw	0
   523  1827  3450               	retlw	80
   524  1828  34C3               	retlw	195
   525  1829  3447               	retlw	71
   526  182A  3400               	retlw	0
   527  182B  3424               	retlw	36
   528  182C  3474               	retlw	116
   529  182D  3449               	retlw	73
   530  182E  3480               	retlw	128
   531  182F  3496               	retlw	150
   532  1830  3418               	retlw	24
   533  1831  344B               	retlw	75
   534  1832  3420               	retlw	32
   535  1833  34BC               	retlw	188
   536  1834  34BE               	retlw	190
   537  1835  344C               	retlw	76
   538  1836  3428               	retlw	40
   539  1837  346B               	retlw	107
   540  1838  346E               	retlw	110
   541  1839  344E               	retlw	78
   542  183A  34F9               	retlw	249
   543  183B  3402               	retlw	2
   544  183C  3415               	retlw	21
   545  183D  3450               	retlw	80
   546  183E  34EC               	retlw	236
   547  183F  3478               	retlw	120
   548  1840  34AD               	retlw	173
   549  1841  3460               	retlw	96
   550  1842  34CA               	retlw	202
   551  1843  34F2               	retlw	242
   552  1844  3449               	retlw	73
   553  1845  3471               	retlw	113
   554  1846                     __end_of__powers_:
   555  1846                     __npowers_:
   556  1846  3400               	retlw	0
   557  1847  3400               	retlw	0
   558  1848  3480               	retlw	128
   559  1849  343F               	retlw	63
   560  184A  34CD               	retlw	205
   561  184B  34CC               	retlw	204
   562  184C  34CC               	retlw	204
   563  184D  343D               	retlw	61
   564  184E  340A               	retlw	10
   565  184F  34D7               	retlw	215
   566  1850  3423               	retlw	35
   567  1851  343C               	retlw	60
   568  1852  346F               	retlw	111
   569  1853  3412               	retlw	18
   570  1854  3483               	retlw	131
   571  1855  343A               	retlw	58
   572  1856  3417               	retlw	23
   573  1857  34B7               	retlw	183
   574  1858  34D1               	retlw	209
   575  1859  3438               	retlw	56
   576  185A  34AC               	retlw	172
   577  185B  34C5               	retlw	197
   578  185C  3427               	retlw	39
   579  185D  3437               	retlw	55
   580  185E  34BD               	retlw	189
   581  185F  3437               	retlw	55
   582  1860  3486               	retlw	134
   583  1861  3435               	retlw	53
   584  1862  3495               	retlw	149
   585  1863  34BF               	retlw	191
   586  1864  34D6               	retlw	214
   587  1865  3433               	retlw	51
   588  1866  3477               	retlw	119
   589  1867  34CC               	retlw	204
   590  1868  342B               	retlw	43
   591  1869  3432               	retlw	50
   592  186A  345F               	retlw	95
   593  186B  3470               	retlw	112
   594  186C  3489               	retlw	137
   595  186D  3430               	retlw	48
   596  186E  34FF               	retlw	255
   597  186F  34E6               	retlw	230
   598  1870  34DB               	retlw	219
   599  1871  342E               	retlw	46
   600  1872  3408               	retlw	8
   601  1873  34E5               	retlw	229
   602  1874  343C               	retlw	60
   603  1875  341E               	retlw	30
   604  1876  3460               	retlw	96
   605  1877  3442               	retlw	66
   606  1878  34A2               	retlw	162
   607  1879  340D               	retlw	13
   608  187A                     __end_of__npowers_:
   609  187A                     _dpowers:
   610  187A  3401               	retlw	1
   611  187B  3400               	retlw	0
   612  187C  3400               	retlw	0
   613  187D  3400               	retlw	0
   614  187E  340A               	retlw	10
   615  187F  3400               	retlw	0
   616  1880  3400               	retlw	0
   617  1881  3400               	retlw	0
   618  1882  3464               	retlw	100
   619  1883  3400               	retlw	0
   620  1884  3400               	retlw	0
   621  1885  3400               	retlw	0
   622  1886  34E8               	retlw	232
   623  1887  3403               	retlw	3
   624  1888  3400               	retlw	0
   625  1889  3400               	retlw	0
   626  188A  3410               	retlw	16
   627  188B  3427               	retlw	39
   628  188C  3400               	retlw	0
   629  188D  3400               	retlw	0
   630  188E  34A0               	retlw	160
   631  188F  3486               	retlw	134
   632  1890  3401               	retlw	1
   633  1891  3400               	retlw	0
   634  1892  3440               	retlw	64
   635  1893  3442               	retlw	66
   636  1894  340F               	retlw	15
   637  1895  3400               	retlw	0
   638  1896  3480               	retlw	128
   639  1897  3496               	retlw	150
   640  1898  3498               	retlw	152
   641  1899  3400               	retlw	0
   642  189A  3400               	retlw	0
   643  189B  34E1               	retlw	225
   644  189C  34F5               	retlw	245
   645  189D  3405               	retlw	5
   646  189E  3400               	retlw	0
   647  189F  34CA               	retlw	202
   648  18A0  349A               	retlw	154
   649  18A1  343B               	retlw	59
   650  18A2                     __end_of_dpowers:
   651  001A                     _RCREG	set	26
   652  0019                     _TXREG	set	25
   653  0018                     _RCSTAbits	set	24
   654  0007                     _PORTCbits	set	7
   655  000C                     _PIR1bits	set	12
   656  001E                     _ADRESH	set	30
   657  0009                     _PORTE	set	9
   658  0008                     _PORTD	set	8
   659  0007                     _PORTC	set	7
   660  0005                     _PORTA	set	5
   661  001F                     _ADCON0bits	set	31
   662  009A                     _SPBRGH	set	154
   663  0099                     _SPBRG	set	153
   664  0098                     _TXSTAbits	set	152
   665  0087                     _TRISCbits	set	135
   666  009F                     _ADCON1bits	set	159
   667  008F                     _OSCCONbits	set	143
   668  0089                     _TRISE	set	137
   669  0088                     _TRISD	set	136
   670  0087                     _TRISC	set	135
   671  0085                     _TRISA	set	133
   672  0187                     _BAUDCTLbits	set	391
   673  0189                     _ANSELH	set	393
   674  0188                     _ANSEL	set	392
   675  18A2                     STR_5:
   676  18A2  340A               	retlw	10
   677  18A3  340D               	retlw	13
   678  18A4  340A               	retlw	10
   679  18A5  340D               	retlw	13
   680  18A6  342B               	retlw	43	;'+'
   681  18A7  3420               	retlw	32	;' '
   682  18A8  3470               	retlw	112	;'p'
   683  18A9  3461               	retlw	97	;'a'
   684  18AA  3472               	retlw	114	;'r'
   685  18AB  3461               	retlw	97	;'a'
   686  18AC  3420               	retlw	32	;' '
   687  18AD  3461               	retlw	97	;'a'
   688  18AE  3475               	retlw	117	;'u'
   689  18AF  346D               	retlw	109	;'m'
   690  18B0  3465               	retlw	101	;'e'
   691  18B1  346E               	retlw	110	;'n'
   692  18B2  3474               	retlw	116	;'t'
   693  18B3  3461               	retlw	97	;'a'
   694  18B4  3472               	retlw	114	;'r'
   695  18B5  3420               	retlw	32	;' '
   696  18B6  3463               	retlw	99	;'c'
   697  18B7  346F               	retlw	111	;'o'
   698  18B8  346E               	retlw	110	;'n'
   699  18B9  3474               	retlw	116	;'t'
   700  18BA  3461               	retlw	97	;'a'
   701  18BB  3464               	retlw	100	;'d'
   702  18BC  346F               	retlw	111	;'o'
   703  18BD  3472               	retlw	114	;'r'
   704  18BE  340A               	retlw	10
   705  18BF  340D               	retlw	13
   706  18C0  3400               	retlw	0
   707  18C1                     STR_6:
   708  18C1  342D               	retlw	45	;'-'
   709  18C2  3420               	retlw	32	;' '
   710  18C3  3470               	retlw	112	;'p'
   711  18C4  3461               	retlw	97	;'a'
   712  18C5  3472               	retlw	114	;'r'
   713  18C6  3461               	retlw	97	;'a'
   714  18C7  3420               	retlw	32	;' '
   715  18C8  3464               	retlw	100	;'d'
   716  18C9  3469               	retlw	105	;'i'
   717  18CA  3473               	retlw	115	;'s'
   718  18CB  346D               	retlw	109	;'m'
   719  18CC  3469               	retlw	105	;'i'
   720  18CD  346E               	retlw	110	;'n'
   721  18CE  3475               	retlw	117	;'u'
   722  18CF  3469               	retlw	105	;'i'
   723  18D0  3472               	retlw	114	;'r'
   724  18D1  3420               	retlw	32	;' '
   725  18D2  3463               	retlw	99	;'c'
   726  18D3  346F               	retlw	111	;'o'
   727  18D4  346E               	retlw	110	;'n'
   728  18D5  3474               	retlw	116	;'t'
   729  18D6  3461               	retlw	97	;'a'
   730  18D7  3464               	retlw	100	;'d'
   731  18D8  346F               	retlw	111	;'o'
   732  18D9  3472               	retlw	114	;'r'
   733  18DA  340A               	retlw	10
   734  18DB  340D               	retlw	13
   735  18DC  340A               	retlw	10
   736  18DD  340D               	retlw	13
   737  18DE  3400               	retlw	0
   738  18DF                     STR_8:
   739  18DF  340A               	retlw	10
   740  18E0  340D               	retlw	13
   741  18E1  3456               	retlw	86	;'V'
   742  18E2  346F               	retlw	111	;'o'
   743  18E3  346C               	retlw	108	;'l'
   744  18E4  3474               	retlw	116	;'t'
   745  18E5  3461               	retlw	97	;'a'
   746  18E6  346A               	retlw	106	;'j'
   747  18E7  3465               	retlw	101	;'e'
   748  18E8  3420               	retlw	32	;' '
   749  18E9  3470               	retlw	112	;'p'
   750  18EA  346F               	retlw	111	;'o'
   751  18EB  3474               	retlw	116	;'t'
   752  18EC  3432               	retlw	50	;'2'
   753  18ED  343A               	retlw	58	;':'
   754  18EE  3420               	retlw	32	;' '
   755  18EF  3400               	retlw	0
   756  18F0                     STR_4:
   757  18F0  3453               	retlw	83	;'S'
   758  18F1  3431               	retlw	49	;'1'
   759  18F2  343A               	retlw	58	;':'
   760  18F3  3420               	retlw	32	;' '
   761  18F4  3420               	retlw	32	;' '
   762  18F5  3420               	retlw	32	;' '
   763  18F6  3453               	retlw	83	;'S'
   764  18F7  3432               	retlw	50	;'2'
   765  18F8  343A               	retlw	58	;':'
   766  18F9  3420               	retlw	32	;' '
   767  18FA  3420               	retlw	32	;' '
   768  18FB  3420               	retlw	32	;' '
   769  18FC  3453               	retlw	83	;'S'
   770  18FD  3433               	retlw	51	;'3'
   771  18FE  343A               	retlw	58	;':'
   772  18FF  3400               	retlw	0
   773  1900                     STR_7:
   774  1900  3456               	retlw	86	;'V'
   775  1901  346F               	retlw	111	;'o'
   776  1902  346C               	retlw	108	;'l'
   777  1903  3474               	retlw	116	;'t'
   778  1904  3461               	retlw	97	;'a'
   779  1905  346A               	retlw	106	;'j'
   780  1906  3465               	retlw	101	;'e'
   781  1907  3420               	retlw	32	;' '
   782  1908  3470               	retlw	112	;'p'
   783  1909  346F               	retlw	111	;'o'
   784  190A  3474               	retlw	116	;'t'
   785  190B  3431               	retlw	49	;'1'
   786  190C  343A               	retlw	58	;':'
   787  190D  3420               	retlw	32	;' '
   788  190E  3400               	retlw	0
   789  190F                     STR_1:
   790  190F  3425               	retlw	37	;'%'
   791  1910  3433               	retlw	51	;'3'
   792  1911  342E               	retlw	46	;'.'
   793  1912  3432               	retlw	50	;'2'
   794  1913  3466               	retlw	102	;'f'
   795  1914  3476               	retlw	118	;'v'
   796  1915  3400               	retlw	0
   797  190F                     
   798                           	psect	cinit
   799  000F                     start_initialization:	
   800                           ; #config settings
   801                           
   802  000F                     __initialization:
   803                           
   804                           ; Clear objects allocated to COMMON
   805  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   806  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   807                           
   808                           ; Clear objects allocated to BANK1
   809  0011  1383               	bcf	3,7	;select IRP bank0
   810  0012  30CC               	movlw	low __pbssBANK1
   811  0013  0084               	movwf	4
   812  0014  30EF               	movlw	low (__pbssBANK1+35)
   813  0015  160A  158A  220D  120A  118A  	fcall	clear_ram0
   814  001A                     end_of_initialization:	
   815                           ;End of C runtime variable initialization code
   816                           
   817  001A                     __end_of__initialization:
   818  001A  0183               	clrf	3
   819  001B  160A  118A  2D6D   	ljmp	_main	;jump to C main() function
   820                           
   821                           	psect	bssCOMMON
   822  007A                     __pbssCOMMON:
   823  007A                     _data_menor:
   824  007A                     	ds	1
   825  007B                     _data_mayor:
   826  007B                     	ds	1
   827                           
   828                           	psect	bssBANK1
   829  00CC                     __pbssBANK1:
   830  00CC                     _voltaje3:
   831  00CC                     	ds	4
   832  00D0                     _voltaje2:
   833  00D0                     	ds	4
   834  00D4                     _voltaje1:
   835  00D4                     	ds	4
   836  00D8                     _ingreso:
   837  00D8                     	ds	1
   838  00D9                     _comp2:
   839  00D9                     	ds	1
   840  00DA                     _comp1:
   841  00DA                     	ds	1
   842  00DB                     _dato2:
   843  00DB                     	ds	1
   844  00DC                     _dato1:
   845  00DC                     	ds	1
   846  00DD                     _valor3:
   847  00DD                     	ds	6
   848  00E3                     _valor2:
   849  00E3                     	ds	6
   850  00E9                     _valor1:
   851  00E9                     	ds	6
   852                           
   853                           	psect	clrtext
   854  1A0D                     clear_ram0:	
   855                           ;	Called with FSR containing the base address, and
   856                           ;	W with the last address+1
   857                           
   858  1A0D  0064               	clrwdt	;clear the watchdog before getting into this loop
   859  1A0E                     clrloop0:
   860  1A0E  0180               	clrf	0	;clear RAM location pointed to by FSR
   861  1A0F  0A84               	incf	4,f	;increment pointer
   862  1A10  0604               	xorwf	4,w	;XOR with final address
   863  1A11  1903               	btfsc	3,2	;have we reached the end yet?
   864  1A12  3400               	retlw	0	;all done for this memory range, return
   865  1A13  0604               	xorwf	4,w	;XOR again to restore value
   866  1A14  2A0E               	goto	clrloop0	;do the next byte
   867                           
   868                           	psect	cstackBANK1
   869  00A0                     __pcstackBANK1:
   870  00A0                     ?___flsub:
   871  00A0                     ___flsub@a:	
   872                           ; 4 bytes @ 0x0
   873                           
   874                           
   875                           ; 4 bytes @ 0x0
   876  00A0                     	ds	4
   877  00A4                     ___flsub@b:
   878                           
   879                           ; 4 bytes @ 0x4
   880  00A4                     	ds	4
   881  00A8                     ??_sprintf:
   882                           
   883                           ; 1 bytes @ 0x8
   884  00A8                     	ds	5
   885  00AD                     _sprintf$1183:
   886                           
   887                           ; 4 bytes @ 0xD
   888  00AD                     	ds	4
   889  00B1                     sprintf@ap:
   890                           
   891                           ; 1 bytes @ 0x11
   892  00B1                     	ds	1
   893  00B2                     sprintf@val:
   894                           
   895                           ; 4 bytes @ 0x12
   896  00B2                     	ds	4
   897  00B6                     sprintf@flag:
   898                           
   899                           ; 2 bytes @ 0x16
   900  00B6                     	ds	2
   901  00B8                     sprintf@width:
   902                           
   903                           ; 2 bytes @ 0x18
   904  00B8                     	ds	2
   905  00BA                     sprintf@tmpval:
   906                           
   907                           ; 4 bytes @ 0x1A
   908  00BA                     	ds	4
   909  00BE                     sprintf@eexp:
   910                           
   911                           ; 2 bytes @ 0x1E
   912  00BE                     	ds	2
   913  00C0                     sprintf@fval:
   914                           
   915                           ; 4 bytes @ 0x20
   916  00C0                     	ds	4
   917  00C4                     sprintf@sp:
   918                           
   919                           ; 1 bytes @ 0x24
   920  00C4                     	ds	1
   921  00C5                     sprintf@prec:
   922                           
   923                           ; 2 bytes @ 0x25
   924  00C5                     	ds	2
   925  00C7                     sprintf@c:
   926                           
   927                           ; 1 bytes @ 0x27
   928  00C7                     	ds	1
   929  00C8                     ??_main:
   930                           
   931                           ; 1 bytes @ 0x28
   932  00C8                     	ds	4
   933                           
   934                           	psect	cstackCOMMON
   935  0070                     __pcstackCOMMON:
   936  0070                     ?_isdigit:
   937  0070                     ?_LCD_Init8:	
   938                           ; 1 bit 
   939                           
   940  0070                     ?_USART_Init:	
   941                           ; 1 bytes @ 0x0
   942                           
   943  0070                     ?_USART_Rx:	
   944                           ; 1 bytes @ 0x0
   945                           
   946  0070                     ?_LCD_8_comando:	
   947                           ; 1 bytes @ 0x0
   948                           
   949  0070                     ?_LCD_8Data:	
   950                           ; 1 bytes @ 0x0
   951                           
   952  0070                     ?_isr:	
   953                           ; 1 bytes @ 0x0
   954                           
   955  0070                     ??_isr:	
   956                           ; 1 bytes @ 0x0
   957                           
   958  0070                     ?_main:	
   959                           ; 1 bytes @ 0x0
   960                           
   961  0070                     ?_USART_Tx:	
   962                           ; 1 bytes @ 0x0
   963                           
   964                           
   965                           ; 1 bytes @ 0x0
   966  0070                     	ds	2
   967  0072                     ?___fleq:
   968  0072                     ?___flge:	
   969                           ; 1 bit 
   970                           
   971  0072                     ??_USART_Init:	
   972                           ; 1 bit 
   973                           
   974  0072                     ??_USART_Rx:	
   975                           ; 1 bytes @ 0x2
   976                           
   977  0072                     ??_LCD_8_comando:	
   978                           ; 1 bytes @ 0x2
   979                           
   980  0072                     ??_LCD_8Data:	
   981                           ; 1 bytes @ 0x2
   982                           
   983  0072                     ??_isdigit:	
   984                           ; 1 bytes @ 0x2
   985                           
   986  0072                     ??_USART_Tx:	
   987                           ; 1 bytes @ 0x2
   988                           
   989  0072                     ?__Umul8_16:	
   990                           ; 1 bytes @ 0x2
   991                           
   992  0072                     ?___wmul:	
   993                           ; 2 bytes @ 0x2
   994                           
   995  0072                     ?___awmod:	
   996                           ; 2 bytes @ 0x2
   997                           
   998  0072                     ?___lwmod:	
   999                           ; 2 bytes @ 0x2
  1000                           
  1001  0072                     ?__tdiv_to_l_:	
  1002                           ; 2 bytes @ 0x2
  1003                           
  1004  0072                     ?__div_to_l_:	
  1005                           ; 4 bytes @ 0x2
  1006                           
  1007  0072                     ?___lldiv:	
  1008                           ; 4 bytes @ 0x2
  1009                           
  1010  0072                     ?___flneg:	
  1011                           ; 4 bytes @ 0x2
  1012                           
  1013  0072                     ?___llmod:	
  1014                           ; 4 bytes @ 0x2
  1015                           
  1016  0072                     ?___xxtofl:	
  1017                           ; 4 bytes @ 0x2
  1018                           
  1019  0072                     USART_Tx@data:	
  1020                           ; 4 bytes @ 0x2
  1021                           
  1022  0072                     __Umul8_16@multiplicand:	
  1023                           ; 1 bytes @ 0x2
  1024                           
  1025  0072                     _isdigit$994:	
  1026                           ; 1 bytes @ 0x2
  1027                           
  1028  0072                     ___wmul@multiplier:	
  1029                           ; 1 bytes @ 0x2
  1030                           
  1031  0072                     ___awmod@divisor:	
  1032                           ; 2 bytes @ 0x2
  1033                           
  1034  0072                     ___lwmod@divisor:	
  1035                           ; 2 bytes @ 0x2
  1036                           
  1037  0072                     ___lldiv@divisor:	
  1038                           ; 2 bytes @ 0x2
  1039                           
  1040  0072                     __div_to_l_@f1:	
  1041                           ; 4 bytes @ 0x2
  1042                           
  1043  0072                     ___fleq@ff1:	
  1044                           ; 4 bytes @ 0x2
  1045                           
  1046  0072                     ___flge@ff1:	
  1047                           ; 4 bytes @ 0x2
  1048                           
  1049  0072                     ___flneg@f1:	
  1050                           ; 4 bytes @ 0x2
  1051                           
  1052  0072                     __tdiv_to_l_@f1:	
  1053                           ; 4 bytes @ 0x2
  1054                           
  1055  0072                     ___llmod@divisor:	
  1056                           ; 4 bytes @ 0x2
  1057                           
  1058  0072                     ___xxtofl@val:	
  1059                           ; 4 bytes @ 0x2
  1060                           
  1061                           
  1062                           ; 4 bytes @ 0x2
  1063  0072                     	ds	1
  1064  0073                     ?_USART_Cadena:
  1065  0073                     LCD_8_comando@dato:	
  1066                           ; 1 bytes @ 0x3
  1067                           
  1068  0073                     LCD_8Data@data:	
  1069                           ; 1 bytes @ 0x3
  1070                           
  1071  0073                     isdigit@c:	
  1072                           ; 1 bytes @ 0x3
  1073                           
  1074  0073                     USART_Cadena@str:	
  1075                           ; 1 bytes @ 0x3
  1076                           
  1077                           
  1078                           ; 2 bytes @ 0x3
  1079  0073                     	ds	1
  1080  0074                     ??_LCD_Init8:
  1081  0074                     ?_LCD_8XY:	
  1082                           ; 1 bytes @ 0x4
  1083                           
  1084  0074                     ?_LCD_8Cadena:	
  1085                           ; 1 bytes @ 0x4
  1086                           
  1087  0074                     ??__Umul8_16:	
  1088                           ; 1 bytes @ 0x4
  1089                           
  1090  0074                     LCD_8XY@y:	
  1091                           ; 1 bytes @ 0x4
  1092                           
  1093  0074                     LCD_8Cadena@dato:	
  1094                           ; 1 bytes @ 0x4
  1095                           
  1096  0074                     ___wmul@multiplicand:	
  1097                           ; 2 bytes @ 0x4
  1098                           
  1099  0074                     ___awmod@dividend:	
  1100                           ; 2 bytes @ 0x4
  1101                           
  1102  0074                     ___lwmod@dividend:	
  1103                           ; 2 bytes @ 0x4
  1104                           
  1105                           
  1106                           ; 2 bytes @ 0x4
  1107  0074                     	ds	1
  1108  0075                     ??_LCD_8XY:
  1109  0075                     ??_USART_Cadena:	
  1110                           ; 1 bytes @ 0x5
  1111                           
  1112  0075                     LCD_8XY@x:	
  1113                           ; 1 bytes @ 0x5
  1114                           
  1115                           
  1116                           ; 1 bytes @ 0x5
  1117  0075                     	ds	1
  1118  0076                     ??_LCD_8Cadena:
  1119  0076                     ??___wmul:	
  1120                           ; 1 bytes @ 0x6
  1121                           
  1122  0076                     ??___awmod:	
  1123                           ; 1 bytes @ 0x6
  1124                           
  1125  0076                     ??___flneg:	
  1126                           ; 1 bytes @ 0x6
  1127                           
  1128  0076                     ??___lwmod:	
  1129                           ; 1 bytes @ 0x6
  1130                           
  1131  0076                     ??___xxtofl:	
  1132                           ; 1 bytes @ 0x6
  1133                           
  1134  0076                     ___wmul@product:	
  1135                           ; 1 bytes @ 0x6
  1136                           
  1137  0076                     ___lldiv@dividend:	
  1138                           ; 2 bytes @ 0x6
  1139                           
  1140  0076                     __div_to_l_@f2:	
  1141                           ; 4 bytes @ 0x6
  1142                           
  1143  0076                     ___fleq@ff2:	
  1144                           ; 4 bytes @ 0x6
  1145                           
  1146  0076                     ___flge@ff2:	
  1147                           ; 4 bytes @ 0x6
  1148                           
  1149  0076                     __tdiv_to_l_@f2:	
  1150                           ; 4 bytes @ 0x6
  1151                           
  1152  0076                     ___llmod@dividend:	
  1153                           ; 4 bytes @ 0x6
  1154                           
  1155                           
  1156                           ; 4 bytes @ 0x6
  1157  0076                     	ds	1
  1158  0077                     ___awmod@counter:
  1159  0077                     ___lwmod@counter:	
  1160                           ; 1 bytes @ 0x7
  1161                           
  1162                           
  1163                           ; 1 bytes @ 0x7
  1164  0077                     	ds	1
  1165  0078                     ??___lwdiv:
  1166  0078                     ___awmod@sign:	
  1167                           ; 1 bytes @ 0x8
  1168                           
  1169                           
  1170                           ; 1 bytes @ 0x8
  1171  0078                     	ds	1
  1172  0079                     ??___awdiv:
  1173                           
  1174                           ; 1 bytes @ 0x9
  1175  0079                     	ds	1
  1176  007A                     ??___flsub:
  1177                           
  1178                           	psect	cstackBANK0
  1179  0020                     __pcstackBANK0:	
  1180                           ; 1 bytes @ 0xA
  1181                           
  1182  0020                     ??__tdiv_to_l_:
  1183  0020                     ??__div_to_l_:	
  1184                           ; 1 bytes @ 0x0
  1185                           
  1186  0020                     ??___lldiv:	
  1187                           ; 1 bytes @ 0x0
  1188                           
  1189  0020                     ??___fleq:	
  1190                           ; 1 bytes @ 0x0
  1191                           
  1192  0020                     ??___flge:	
  1193                           ; 1 bytes @ 0x0
  1194                           
  1195  0020                     ??___llmod:	
  1196                           ; 1 bytes @ 0x0
  1197                           
  1198  0020                     ?___awdiv:	
  1199                           ; 1 bytes @ 0x0
  1200                           
  1201  0020                     ?___lwdiv:	
  1202                           ; 2 bytes @ 0x0
  1203                           
  1204  0020                     ___xxtofl@sign:	
  1205                           ; 2 bytes @ 0x0
  1206                           
  1207  0020                     ___awdiv@divisor:	
  1208                           ; 1 bytes @ 0x0
  1209                           
  1210  0020                     ___lwdiv@divisor:	
  1211                           ; 2 bytes @ 0x0
  1212                           
  1213  0020                     __Umul8_16@product:	
  1214                           ; 2 bytes @ 0x0
  1215                           
  1216                           
  1217                           ; 2 bytes @ 0x0
  1218  0020                     	ds	1
  1219  0021                     ___llmod@counter:
  1220  0021                     ___xxtofl@exp:	
  1221                           ; 1 bytes @ 0x1
  1222                           
  1223  0021                     ___lldiv@quotient:	
  1224                           ; 1 bytes @ 0x1
  1225                           
  1226  0021                     __div_to_l_@quot:	
  1227                           ; 4 bytes @ 0x1
  1228                           
  1229                           
  1230                           ; 4 bytes @ 0x1
  1231  0021                     	ds	1
  1232  0022                     ___awdiv@dividend:
  1233  0022                     ___lwdiv@dividend:	
  1234                           ; 2 bytes @ 0x2
  1235                           
  1236  0022                     __Umul8_16@word_mpld:	
  1237                           ; 2 bytes @ 0x2
  1238                           
  1239  0022                     ___xxtofl@arg:	
  1240                           ; 2 bytes @ 0x2
  1241                           
  1242                           
  1243                           ; 4 bytes @ 0x2
  1244  0022                     	ds	2
  1245  0024                     ___awdiv@counter:
  1246  0024                     ___lwdiv@counter:	
  1247                           ; 1 bytes @ 0x4
  1248                           
  1249  0024                     __Umul8_16@multiplier:	
  1250                           ; 1 bytes @ 0x4
  1251                           
  1252  0024                     __tdiv_to_l_@quot:	
  1253                           ; 1 bytes @ 0x4
  1254                           
  1255                           
  1256                           ; 4 bytes @ 0x4
  1257  0024                     	ds	1
  1258  0025                     ___lldiv@counter:
  1259  0025                     ___awdiv@sign:	
  1260                           ; 1 bytes @ 0x5
  1261                           
  1262  0025                     __div_to_l_@cntr:	
  1263                           ; 1 bytes @ 0x5
  1264                           
  1265  0025                     ___lwdiv@quotient:	
  1266                           ; 1 bytes @ 0x5
  1267                           
  1268                           
  1269                           ; 2 bytes @ 0x5
  1270  0025                     	ds	1
  1271  0026                     __div_to_l_@exp1:
  1272  0026                     ___awdiv@quotient:	
  1273                           ; 1 bytes @ 0x6
  1274                           
  1275                           
  1276                           ; 2 bytes @ 0x6
  1277  0026                     	ds	2
  1278  0028                     ?___flmul:
  1279  0028                     __tdiv_to_l_@cntr:	
  1280                           ; 4 bytes @ 0x8
  1281                           
  1282  0028                     ___flmul@b:	
  1283                           ; 1 bytes @ 0x8
  1284                           
  1285                           
  1286                           ; 4 bytes @ 0x8
  1287  0028                     	ds	1
  1288  0029                     __tdiv_to_l_@exp1:
  1289                           
  1290                           ; 1 bytes @ 0x9
  1291  0029                     	ds	3
  1292  002C                     ___flmul@a:
  1293                           
  1294                           ; 4 bytes @ 0xC
  1295  002C                     	ds	4
  1296  0030                     ??___flmul:
  1297                           
  1298                           ; 1 bytes @ 0x10
  1299  0030                     	ds	5
  1300  0035                     ___flmul@sign:
  1301                           
  1302                           ; 1 bytes @ 0x15
  1303  0035                     	ds	1
  1304  0036                     ___flmul@aexp:
  1305                           
  1306                           ; 1 bytes @ 0x16
  1307  0036                     	ds	1
  1308  0037                     ___flmul@grs:
  1309                           
  1310                           ; 4 bytes @ 0x17
  1311  0037                     	ds	4
  1312  003B                     ___flmul@bexp:
  1313                           
  1314                           ; 1 bytes @ 0x1B
  1315  003B                     	ds	1
  1316  003C                     ___flmul@prod:
  1317                           
  1318                           ; 4 bytes @ 0x1C
  1319  003C                     	ds	4
  1320  0040                     ___flmul@temp:
  1321                           
  1322                           ; 2 bytes @ 0x20
  1323  0040                     	ds	2
  1324  0042                     ?_fround:
  1325  0042                     ?_scale:	
  1326                           ; 4 bytes @ 0x22
  1327                           
  1328                           
  1329                           ; 4 bytes @ 0x22
  1330  0042                     	ds	4
  1331  0046                     ??_fround:
  1332  0046                     ??_scale:	
  1333                           ; 1 bytes @ 0x26
  1334                           
  1335                           
  1336                           ; 1 bytes @ 0x26
  1337  0046                     	ds	7
  1338  004D                     _fround$1181:
  1339                           
  1340                           ; 4 bytes @ 0x2D
  1341  004D                     	ds	3
  1342  0050                     _scale$1182:
  1343                           
  1344                           ; 4 bytes @ 0x30
  1345  0050                     	ds	1
  1346  0051                     _fround$1180:
  1347                           
  1348                           ; 4 bytes @ 0x31
  1349  0051                     	ds	3
  1350  0054                     scale@scl:
  1351                           
  1352                           ; 1 bytes @ 0x34
  1353  0054                     	ds	1
  1354  0055                     ?___fltol:
  1355  0055                     fround@prec:	
  1356                           ; 4 bytes @ 0x35
  1357                           
  1358  0055                     ___fltol@f1:	
  1359                           ; 1 bytes @ 0x35
  1360                           
  1361                           
  1362                           ; 4 bytes @ 0x35
  1363  0055                     	ds	1
  1364  0056                     ?___fladd:
  1365  0056                     ___fladd@b:	
  1366                           ; 4 bytes @ 0x36
  1367                           
  1368                           
  1369                           ; 4 bytes @ 0x36
  1370  0056                     	ds	3
  1371  0059                     ??___fltol:
  1372                           
  1373                           ; 1 bytes @ 0x39
  1374  0059                     	ds	1
  1375  005A                     ___fladd@a:
  1376                           
  1377                           ; 4 bytes @ 0x3A
  1378  005A                     	ds	4
  1379  005E                     ??___fladd:
  1380  005E                     ___fltol@sign1:	
  1381                           ; 1 bytes @ 0x3E
  1382                           
  1383                           
  1384                           ; 1 bytes @ 0x3E
  1385  005E                     	ds	1
  1386  005F                     ___fltol@exp1:
  1387                           
  1388                           ; 1 bytes @ 0x3F
  1389  005F                     	ds	7
  1390  0066                     ___fladd@signs:
  1391                           
  1392                           ; 1 bytes @ 0x46
  1393  0066                     	ds	1
  1394  0067                     ___fladd@aexp:
  1395                           
  1396                           ; 1 bytes @ 0x47
  1397  0067                     	ds	1
  1398  0068                     ___fladd@bexp:
  1399                           
  1400                           ; 1 bytes @ 0x48
  1401  0068                     	ds	1
  1402  0069                     ___fladd@grs:
  1403                           
  1404                           ; 1 bytes @ 0x49
  1405  0069                     	ds	1
  1406  006A                     ?_sprintf:
  1407  006A                     sprintf@f:	
  1408                           ; 2 bytes @ 0x4A
  1409                           
  1410                           
  1411                           ; 2 bytes @ 0x4A
  1412  006A                     	ds	6
  1413                           
  1414                           	psect	maintext
  1415  156D                     __pmaintext:	
  1416 ;;
  1417 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1418 ;;
  1419 ;; *************** function _main *****************
  1420 ;; Defined at:
  1421 ;;		line 65 in file "Lab_2/Lab_2.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;		None
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;		None
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  1    wreg      void 
  1428 ;; Registers used:
  1429 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1430 ;; Tracked objects:
  1431 ;;		On entry : B00/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1435 ;;      Params:         0       0       0       0       0
  1436 ;;      Locals:         0       0       0       0       0
  1437 ;;      Temps:          0       0       4       0       0
  1438 ;;      Totals:         0       0       4       0       0
  1439 ;;Total ram usage:        4 bytes
  1440 ;; Hardware stack levels required when called:    5
  1441 ;; This function calls:
  1442 ;;		_LCD_8Cadena
  1443 ;;		_LCD_8XY
  1444 ;;		_LCD_Init8
  1445 ;;		_USART_Cadena
  1446 ;;		_USART_Init
  1447 ;;		_USART_Rx
  1448 ;;		___flmul
  1449 ;;		___xxtofl
  1450 ;;		_sprintf
  1451 ;; This function is called by:
  1452 ;;		Startup code after reset
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           
  1457                           ;psect for function _main
  1458  156D                     _main:
  1459  156D                     l4467:	
  1460                           ;incstack = 0
  1461                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1462                           
  1463                           
  1464                           ;Lab_2/Lab_2.c: 66:     LCD_Init8();
  1465  156D  160A  158A  25AA  160A  118A  	fcall	_LCD_Init8
  1466                           
  1467                           ;Lab_2/Lab_2.c: 67:     USART_Init();
  1468  1572  160A  158A  2232  160A  118A  	fcall	_USART_Init
  1469  1577                     l4469:
  1470                           
  1471                           ;Lab_2/Lab_2.c: 68:     ANSEL = 0b01100000;
  1472  1577  3060               	movlw	96
  1473  1578  1683               	bsf	3,5	;RP0=1, select bank3
  1474  1579  1703               	bsf	3,6	;RP1=1, select bank3
  1475  157A  0088               	movwf	8	;volatile
  1476  157B                     l4471:
  1477                           
  1478                           ;Lab_2/Lab_2.c: 69:     ANSELH = 0x00;
  1479  157B  0189               	clrf	9	;volatile
  1480  157C                     l4473:
  1481                           
  1482                           ;Lab_2/Lab_2.c: 71:     TRISA = 0x00;
  1483  157C  1683               	bsf	3,5	;RP0=1, select bank1
  1484  157D  1303               	bcf	3,6	;RP1=0, select bank1
  1485  157E  0185               	clrf	5	;volatile
  1486  157F                     l4475:
  1487                           
  1488                           ;Lab_2/Lab_2.c: 72:     TRISC = 0b10000000;
  1489  157F  3080               	movlw	128
  1490  1580  0087               	movwf	7	;volatile
  1491  1581                     l4477:
  1492                           
  1493                           ;Lab_2/Lab_2.c: 73:     TRISD = 0x00;
  1494  1581  0188               	clrf	8	;volatile
  1495  1582                     l4479:
  1496                           
  1497                           ;Lab_2/Lab_2.c: 74:     TRISE = 0b111;
  1498  1582  3007               	movlw	7
  1499  1583  0089               	movwf	9	;volatile
  1500  1584                     l4481:
  1501                           
  1502                           ;Lab_2/Lab_2.c: 76:     OSCCONbits.IRCF = 0b111;
  1503  1584  3070               	movlw	112
  1504  1585  048F               	iorwf	15,f	;volatile
  1505  1586                     l4483:
  1506                           
  1507                           ;Lab_2/Lab_2.c: 77:     OSCCONbits.SCS = 1;
  1508  1586  140F               	bsf	15,0	;volatile
  1509  1587                     l4485:
  1510                           
  1511                           ;Lab_2/Lab_2.c: 81:     ADCON1bits.ADFM = 0;
  1512  1587  139F               	bcf	31,7	;volatile
  1513  1588                     l4487:
  1514                           
  1515                           ;Lab_2/Lab_2.c: 82:     ADCON1bits.VCFG0 = 0;
  1516  1588  121F               	bcf	31,4	;volatile
  1517  1589                     l4489:
  1518                           
  1519                           ;Lab_2/Lab_2.c: 83:     ADCON1bits.VCFG1 = 0;
  1520  1589  129F               	bcf	31,5	;volatile
  1521  158A                     l4491:
  1522                           
  1523                           ;Lab_2/Lab_2.c: 84:     ADCON0bits.ADCS0 = 0;
  1524  158A  1283               	bcf	3,5	;RP0=0, select bank0
  1525  158B  1303               	bcf	3,6	;RP1=0, select bank0
  1526  158C  131F               	bcf	31,6	;volatile
  1527  158D                     l4493:
  1528                           
  1529                           ;Lab_2/Lab_2.c: 85:     ADCON0bits.ADCS1 = 1;
  1530  158D  179F               	bsf	31,7	;volatile
  1531  158E                     l4495:
  1532                           
  1533                           ;Lab_2/Lab_2.c: 86:     ADCON0bits.CHS = 5;
  1534  158E  081F               	movf	31,w	;volatile
  1535  158F  39C3               	andlw	-61
  1536  1590  3814               	iorlw	20
  1537  1591  009F               	movwf	31	;volatile
  1538  1592                     l4497:
  1539                           
  1540                           ;Lab_2/Lab_2.c: 87:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  1541  1592  3041               	movlw	65
  1542  1593  1683               	bsf	3,5	;RP0=1, select bank1
  1543  1594  1303               	bcf	3,6	;RP1=0, select bank1
  1544  1595  00C8               	movwf	??_main^(0+128)
  1545  1596                     u7227:
  1546  1596  0BC8               	decfsz	??_main^(0+128),f
  1547  1597  2D96               	goto	u7227
  1548  1598  2D99               	nop2
  1549  1599                     l4499:
  1550                           
  1551                           ;Lab_2/Lab_2.c: 88:     ADCON0bits.ADON = 1;
  1552  1599  1283               	bcf	3,5	;RP0=0, select bank0
  1553  159A  1303               	bcf	3,6	;RP1=0, select bank0
  1554  159B  141F               	bsf	31,0	;volatile
  1555  159C                     l4501:
  1556                           
  1557                           ;Lab_2/Lab_2.c: 90:     ADCON0bits.GO = 1;
  1558  159C  149F               	bsf	31,1	;volatile
  1559  159D                     l4503:
  1560                           
  1561                           ;Lab_2/Lab_2.c: 93:     dato1 = 0;
  1562  159D  1683               	bsf	3,5	;RP0=1, select bank1
  1563  159E  1303               	bcf	3,6	;RP1=0, select bank1
  1564  159F  01DC               	clrf	_dato1^(0+128)
  1565  15A0                     l4505:
  1566                           
  1567                           ;Lab_2/Lab_2.c: 94:     dato2 = 0;
  1568  15A0  01DB               	clrf	_dato2^(0+128)
  1569  15A1                     l4507:
  1570                           
  1571                           ;Lab_2/Lab_2.c: 95:     voltaje1 = 0;
  1572  15A1  3000               	movlw	0
  1573  15A2  00D7               	movwf	(_voltaje1+3)^(0+128)
  1574  15A3  3000               	movlw	0
  1575  15A4  00D6               	movwf	(_voltaje1+2)^(0+128)
  1576  15A5  3000               	movlw	0
  1577  15A6  00D5               	movwf	(_voltaje1+1)^(0+128)
  1578  15A7  3000               	movlw	0
  1579  15A8  00D4               	movwf	_voltaje1^(0+128)
  1580  15A9                     l4509:
  1581                           
  1582                           ;Lab_2/Lab_2.c: 96:     voltaje2 = 0;
  1583  15A9  3000               	movlw	0
  1584  15AA  00D3               	movwf	(_voltaje2+3)^(0+128)
  1585  15AB  3000               	movlw	0
  1586  15AC  00D2               	movwf	(_voltaje2+2)^(0+128)
  1587  15AD  3000               	movlw	0
  1588  15AE  00D1               	movwf	(_voltaje2+1)^(0+128)
  1589  15AF  3000               	movlw	0
  1590  15B0  00D0               	movwf	_voltaje2^(0+128)
  1591  15B1                     l4511:
  1592                           
  1593                           ;Lab_2/Lab_2.c: 99:     PORTA = 0x00;
  1594  15B1  1283               	bcf	3,5	;RP0=0, select bank0
  1595  15B2  1303               	bcf	3,6	;RP1=0, select bank0
  1596  15B3  0185               	clrf	5	;volatile
  1597  15B4                     l4513:
  1598                           
  1599                           ;Lab_2/Lab_2.c: 100:     PORTC = 0x00;
  1600  15B4  0187               	clrf	7	;volatile
  1601  15B5                     l4515:
  1602                           
  1603                           ;Lab_2/Lab_2.c: 101:     PORTD = 0x00;
  1604  15B5  0188               	clrf	8	;volatile
  1605  15B6                     l4517:
  1606                           
  1607                           ;Lab_2/Lab_2.c: 102:     PORTE = 0x00;
  1608  15B6  0189               	clrf	9	;volatile
  1609  15B7                     l4519:
  1610                           
  1611                           ;Lab_2/Lab_2.c: 107:         comp1 = dato1;
  1612  15B7  1683               	bsf	3,5	;RP0=1, select bank1
  1613  15B8  1303               	bcf	3,6	;RP1=0, select bank1
  1614  15B9  085C               	movf	_dato1^(0+128),w
  1615  15BA  00C8               	movwf	??_main^(0+128)
  1616  15BB  0848               	movf	??_main^(0+128),w
  1617  15BC  00DA               	movwf	_comp1^(0+128)
  1618  15BD                     l4521:
  1619                           
  1620                           ;Lab_2/Lab_2.c: 108:         comp2 = dato2;
  1621  15BD  085B               	movf	_dato2^(0+128),w
  1622  15BE  00C8               	movwf	??_main^(0+128)
  1623  15BF  0848               	movf	??_main^(0+128),w
  1624  15C0  00D9               	movwf	_comp2^(0+128)
  1625  15C1                     l4523:
  1626                           
  1627                           ;Lab_2/Lab_2.c: 110:         if(ADCON0bits.GO == 0){
  1628  15C1  1283               	bcf	3,5	;RP0=0, select bank0
  1629  15C2  1303               	bcf	3,6	;RP1=0, select bank0
  1630  15C3  189F               	btfsc	31,1	;volatile
  1631  15C4  2DC6               	goto	u7141
  1632  15C5  2DC7               	goto	u7140
  1633  15C6                     u7141:
  1634  15C6  2E06               	goto	l4541
  1635  15C7                     u7140:
  1636  15C7                     l4525:
  1637                           
  1638                           ;Lab_2/Lab_2.c: 112:             if(ADCON0bits.CHS == 6){
  1639  15C7  0C1F               	rrf	31,w	;volatile
  1640  15C8  1683               	bsf	3,5	;RP0=1, select bank1
  1641  15C9  1303               	bcf	3,6	;RP1=0, select bank1
  1642  15CA  00C8               	movwf	??_main^(0+128)
  1643  15CB  0C48               	rrf	??_main^(0+128),w
  1644  15CC  390F               	andlw	15
  1645  15CD  3A06               	xorlw	6
  1646  15CE  1D03               	skipz
  1647  15CF  2DD1               	goto	u7151
  1648  15D0  2DD2               	goto	u7150
  1649  15D1                     u7151:
  1650  15D1  2DE1               	goto	l4531
  1651  15D2                     u7150:
  1652  15D2                     l4527:
  1653                           
  1654                           ;Lab_2/Lab_2.c: 113:                 dato2 = ADRESH;
  1655  15D2  1283               	bcf	3,5	;RP0=0, select bank0
  1656  15D3  1303               	bcf	3,6	;RP1=0, select bank0
  1657  15D4  081E               	movf	30,w	;volatile
  1658  15D5  1683               	bsf	3,5	;RP0=1, select bank1
  1659  15D6  1303               	bcf	3,6	;RP1=0, select bank1
  1660  15D7  00C8               	movwf	??_main^(0+128)
  1661  15D8  0848               	movf	??_main^(0+128),w
  1662  15D9  00DB               	movwf	_dato2^(0+128)
  1663  15DA                     l4529:
  1664                           
  1665                           ;Lab_2/Lab_2.c: 114:                 ADCON0bits.CHS = 5;
  1666  15DA  1283               	bcf	3,5	;RP0=0, select bank0
  1667  15DB  1303               	bcf	3,6	;RP1=0, select bank0
  1668  15DC  081F               	movf	31,w	;volatile
  1669  15DD  39C3               	andlw	-61
  1670  15DE  3814               	iorlw	20
  1671  15DF  009F               	movwf	31	;volatile
  1672                           
  1673                           ;Lab_2/Lab_2.c: 115:             }
  1674  15E0  2DFC               	goto	l4537
  1675  15E1                     l4531:
  1676  15E1  1283               	bcf	3,5	;RP0=0, select bank0
  1677  15E2  1303               	bcf	3,6	;RP1=0, select bank0
  1678  15E3  0C1F               	rrf	31,w	;volatile
  1679  15E4  1683               	bsf	3,5	;RP0=1, select bank1
  1680  15E5  1303               	bcf	3,6	;RP1=0, select bank1
  1681  15E6  00C8               	movwf	??_main^(0+128)
  1682  15E7  0C48               	rrf	??_main^(0+128),w
  1683  15E8  390F               	andlw	15
  1684  15E9  3A05               	xorlw	5
  1685  15EA  1D03               	skipz
  1686  15EB  2DED               	goto	u7161
  1687  15EC  2DEE               	goto	u7160
  1688  15ED                     u7161:
  1689  15ED  2DFC               	goto	l4537
  1690  15EE                     u7160:
  1691  15EE                     l4533:
  1692                           
  1693                           ;Lab_2/Lab_2.c: 117:                 dato1 = ADRESH;
  1694  15EE  1283               	bcf	3,5	;RP0=0, select bank0
  1695  15EF  1303               	bcf	3,6	;RP1=0, select bank0
  1696  15F0  081E               	movf	30,w	;volatile
  1697  15F1  1683               	bsf	3,5	;RP0=1, select bank1
  1698  15F2  1303               	bcf	3,6	;RP1=0, select bank1
  1699  15F3  00C8               	movwf	??_main^(0+128)
  1700  15F4  0848               	movf	??_main^(0+128),w
  1701  15F5  00DC               	movwf	_dato1^(0+128)
  1702  15F6                     l4535:
  1703                           
  1704                           ;Lab_2/Lab_2.c: 118:                 ADCON0bits.CHS = 6;
  1705  15F6  1283               	bcf	3,5	;RP0=0, select bank0
  1706  15F7  1303               	bcf	3,6	;RP1=0, select bank0
  1707  15F8  081F               	movf	31,w	;volatile
  1708  15F9  39C3               	andlw	-61
  1709  15FA  3818               	iorlw	24
  1710  15FB  009F               	movwf	31	;volatile
  1711  15FC                     l4537:
  1712                           
  1713                           ;Lab_2/Lab_2.c: 120:             _delay((unsigned long)((50)*(8000000/4000000.0)));
  1714  15FC  3020               	movlw	32
  1715  15FD  1683               	bsf	3,5	;RP0=1, select bank1
  1716  15FE  1303               	bcf	3,6	;RP1=0, select bank1
  1717  15FF  00C8               	movwf	??_main^(0+128)
  1718  1600                     u7237:
  1719  1600  0BC8               	decfsz	??_main^(0+128),f
  1720  1601  2E00               	goto	u7237
  1721  1602  0000               	nop
  1722  1603                     l4539:
  1723                           
  1724                           ;Lab_2/Lab_2.c: 122:             ADCON0bits.GO = 1;
  1725  1603  1283               	bcf	3,5	;RP0=0, select bank0
  1726  1604  1303               	bcf	3,6	;RP1=0, select bank0
  1727  1605  149F               	bsf	31,1	;volatile
  1728  1606                     l4541:
  1729                           
  1730                           ;Lab_2/Lab_2.c: 124:         voltaje1 = (dato1 * 0.0196);
  1731  1606  303C               	movlw	60
  1732  1607  00AB               	movwf	___flmul@b+3
  1733  1608  30A0               	movlw	160
  1734  1609  00AA               	movwf	___flmul@b+2
  1735  160A  3090               	movlw	144
  1736  160B  00A9               	movwf	___flmul@b+1
  1737  160C  302E               	movlw	46
  1738  160D  00A8               	movwf	___flmul@b
  1739  160E  1683               	bsf	3,5	;RP0=1, select bank1
  1740  160F  1303               	bcf	3,6	;RP1=0, select bank1
  1741  1610  085C               	movf	_dato1^(0+128),w
  1742  1611  00C8               	movwf	??_main^(0+128)
  1743  1612  01C9               	clrf	(??_main^(0+128)+1)
  1744  1613  01CA               	clrf	(??_main^(0+128)+2)
  1745  1614  01CB               	clrf	(??_main^(0+128)+3)
  1746  1615  084B               	movf	(??_main+3)^(0+128),w
  1747  1616  00F5               	movwf	___xxtofl@val+3
  1748  1617  084A               	movf	(??_main+2)^(0+128),w
  1749  1618  00F4               	movwf	___xxtofl@val+2
  1750  1619  0849               	movf	(??_main+1)^(0+128),w
  1751  161A  00F3               	movwf	___xxtofl@val+1
  1752  161B  0848               	movf	??_main^(0+128),w
  1753  161C  00F2               	movwf	___xxtofl@val
  1754  161D  3001               	movlw	1
  1755  161E  160A  158A  2744  160A  118A  	fcall	___xxtofl
  1756  1623  0875               	movf	?___xxtofl+3,w
  1757  1624  1283               	bcf	3,5	;RP0=0, select bank0
  1758  1625  1303               	bcf	3,6	;RP1=0, select bank0
  1759  1626  00AF               	movwf	___flmul@a+3
  1760  1627  0874               	movf	?___xxtofl+2,w
  1761  1628  00AE               	movwf	___flmul@a+2
  1762  1629  0873               	movf	?___xxtofl+1,w
  1763  162A  00AD               	movwf	___flmul@a+1
  1764  162B  0872               	movf	?___xxtofl,w
  1765  162C  00AC               	movwf	___flmul@a
  1766  162D  120A  118A  23B7  160A  118A  	fcall	___flmul
  1767  1632  1283               	bcf	3,5	;RP0=0, select bank0
  1768  1633  1303               	bcf	3,6	;RP1=0, select bank0
  1769  1634  082B               	movf	?___flmul+3,w
  1770  1635  1683               	bsf	3,5	;RP0=1, select bank1
  1771  1636  1303               	bcf	3,6	;RP1=0, select bank1
  1772  1637  00D7               	movwf	(_voltaje1+3)^(0+128)
  1773  1638  1283               	bcf	3,5	;RP0=0, select bank0
  1774  1639  1303               	bcf	3,6	;RP1=0, select bank0
  1775  163A  082A               	movf	?___flmul+2,w
  1776  163B  1683               	bsf	3,5	;RP0=1, select bank1
  1777  163C  1303               	bcf	3,6	;RP1=0, select bank1
  1778  163D  00D6               	movwf	(_voltaje1+2)^(0+128)
  1779  163E  1283               	bcf	3,5	;RP0=0, select bank0
  1780  163F  1303               	bcf	3,6	;RP1=0, select bank0
  1781  1640  0829               	movf	?___flmul+1,w
  1782  1641  1683               	bsf	3,5	;RP0=1, select bank1
  1783  1642  1303               	bcf	3,6	;RP1=0, select bank1
  1784  1643  00D5               	movwf	(_voltaje1+1)^(0+128)
  1785  1644  1283               	bcf	3,5	;RP0=0, select bank0
  1786  1645  1303               	bcf	3,6	;RP1=0, select bank0
  1787  1646  0828               	movf	?___flmul,w
  1788  1647  1683               	bsf	3,5	;RP0=1, select bank1
  1789  1648  1303               	bcf	3,6	;RP1=0, select bank1
  1790  1649  00D4               	movwf	_voltaje1^(0+128)
  1791  164A                     l4543:
  1792                           
  1793                           ;Lab_2/Lab_2.c: 125:         voltaje2 = (dato2 * 0.0196);
  1794  164A  303C               	movlw	60
  1795  164B  1283               	bcf	3,5	;RP0=0, select bank0
  1796  164C  1303               	bcf	3,6	;RP1=0, select bank0
  1797  164D  00AB               	movwf	___flmul@b+3
  1798  164E  30A0               	movlw	160
  1799  164F  00AA               	movwf	___flmul@b+2
  1800  1650  3090               	movlw	144
  1801  1651  00A9               	movwf	___flmul@b+1
  1802  1652  302E               	movlw	46
  1803  1653  00A8               	movwf	___flmul@b
  1804  1654  1683               	bsf	3,5	;RP0=1, select bank1
  1805  1655  1303               	bcf	3,6	;RP1=0, select bank1
  1806  1656  085B               	movf	_dato2^(0+128),w
  1807  1657  00C8               	movwf	??_main^(0+128)
  1808  1658  01C9               	clrf	(??_main^(0+128)+1)
  1809  1659  01CA               	clrf	(??_main^(0+128)+2)
  1810  165A  01CB               	clrf	(??_main^(0+128)+3)
  1811  165B  084B               	movf	(??_main+3)^(0+128),w
  1812  165C  00F5               	movwf	___xxtofl@val+3
  1813  165D  084A               	movf	(??_main+2)^(0+128),w
  1814  165E  00F4               	movwf	___xxtofl@val+2
  1815  165F  0849               	movf	(??_main+1)^(0+128),w
  1816  1660  00F3               	movwf	___xxtofl@val+1
  1817  1661  0848               	movf	??_main^(0+128),w
  1818  1662  00F2               	movwf	___xxtofl@val
  1819  1663  3001               	movlw	1
  1820  1664  160A  158A  2744  160A  118A  	fcall	___xxtofl
  1821  1669  0875               	movf	?___xxtofl+3,w
  1822  166A  1283               	bcf	3,5	;RP0=0, select bank0
  1823  166B  1303               	bcf	3,6	;RP1=0, select bank0
  1824  166C  00AF               	movwf	___flmul@a+3
  1825  166D  0874               	movf	?___xxtofl+2,w
  1826  166E  00AE               	movwf	___flmul@a+2
  1827  166F  0873               	movf	?___xxtofl+1,w
  1828  1670  00AD               	movwf	___flmul@a+1
  1829  1671  0872               	movf	?___xxtofl,w
  1830  1672  00AC               	movwf	___flmul@a
  1831  1673  120A  118A  23B7  160A  118A  	fcall	___flmul
  1832  1678  1283               	bcf	3,5	;RP0=0, select bank0
  1833  1679  1303               	bcf	3,6	;RP1=0, select bank0
  1834  167A  082B               	movf	?___flmul+3,w
  1835  167B  1683               	bsf	3,5	;RP0=1, select bank1
  1836  167C  1303               	bcf	3,6	;RP1=0, select bank1
  1837  167D  00D3               	movwf	(_voltaje2+3)^(0+128)
  1838  167E  1283               	bcf	3,5	;RP0=0, select bank0
  1839  167F  1303               	bcf	3,6	;RP1=0, select bank0
  1840  1680  082A               	movf	?___flmul+2,w
  1841  1681  1683               	bsf	3,5	;RP0=1, select bank1
  1842  1682  1303               	bcf	3,6	;RP1=0, select bank1
  1843  1683  00D2               	movwf	(_voltaje2+2)^(0+128)
  1844  1684  1283               	bcf	3,5	;RP0=0, select bank0
  1845  1685  1303               	bcf	3,6	;RP1=0, select bank0
  1846  1686  0829               	movf	?___flmul+1,w
  1847  1687  1683               	bsf	3,5	;RP0=1, select bank1
  1848  1688  1303               	bcf	3,6	;RP1=0, select bank1
  1849  1689  00D1               	movwf	(_voltaje2+1)^(0+128)
  1850  168A  1283               	bcf	3,5	;RP0=0, select bank0
  1851  168B  1303               	bcf	3,6	;RP1=0, select bank0
  1852  168C  0828               	movf	?___flmul,w
  1853  168D  1683               	bsf	3,5	;RP0=1, select bank1
  1854  168E  1303               	bcf	3,6	;RP1=0, select bank1
  1855  168F  00D0               	movwf	_voltaje2^(0+128)
  1856  1690                     l4545:
  1857                           
  1858                           ;Lab_2/Lab_2.c: 126:         voltaje3 = (PORTA * 0.0196);
  1859  1690  303C               	movlw	60
  1860  1691  1283               	bcf	3,5	;RP0=0, select bank0
  1861  1692  1303               	bcf	3,6	;RP1=0, select bank0
  1862  1693  00AB               	movwf	___flmul@b+3
  1863  1694  30A0               	movlw	160
  1864  1695  00AA               	movwf	___flmul@b+2
  1865  1696  3090               	movlw	144
  1866  1697  00A9               	movwf	___flmul@b+1
  1867  1698  302E               	movlw	46
  1868  1699  00A8               	movwf	___flmul@b
  1869  169A  0805               	movf	5,w	;volatile
  1870  169B  1683               	bsf	3,5	;RP0=1, select bank1
  1871  169C  1303               	bcf	3,6	;RP1=0, select bank1
  1872  169D  00C8               	movwf	??_main^(0+128)
  1873  169E  01C9               	clrf	(??_main^(0+128)+1)
  1874  169F  01CA               	clrf	(??_main^(0+128)+2)
  1875  16A0  01CB               	clrf	(??_main^(0+128)+3)
  1876  16A1  084B               	movf	(??_main+3)^(0+128),w
  1877  16A2  00F5               	movwf	___xxtofl@val+3
  1878  16A3  084A               	movf	(??_main+2)^(0+128),w
  1879  16A4  00F4               	movwf	___xxtofl@val+2
  1880  16A5  0849               	movf	(??_main+1)^(0+128),w
  1881  16A6  00F3               	movwf	___xxtofl@val+1
  1882  16A7  0848               	movf	??_main^(0+128),w
  1883  16A8  00F2               	movwf	___xxtofl@val
  1884  16A9  3001               	movlw	1
  1885  16AA  160A  158A  2744  160A  118A  	fcall	___xxtofl
  1886  16AF  0875               	movf	?___xxtofl+3,w
  1887  16B0  1283               	bcf	3,5	;RP0=0, select bank0
  1888  16B1  1303               	bcf	3,6	;RP1=0, select bank0
  1889  16B2  00AF               	movwf	___flmul@a+3
  1890  16B3  0874               	movf	?___xxtofl+2,w
  1891  16B4  00AE               	movwf	___flmul@a+2
  1892  16B5  0873               	movf	?___xxtofl+1,w
  1893  16B6  00AD               	movwf	___flmul@a+1
  1894  16B7  0872               	movf	?___xxtofl,w
  1895  16B8  00AC               	movwf	___flmul@a
  1896  16B9  120A  118A  23B7  160A  118A  	fcall	___flmul
  1897  16BE  1283               	bcf	3,5	;RP0=0, select bank0
  1898  16BF  1303               	bcf	3,6	;RP1=0, select bank0
  1899  16C0  082B               	movf	?___flmul+3,w
  1900  16C1  1683               	bsf	3,5	;RP0=1, select bank1
  1901  16C2  1303               	bcf	3,6	;RP1=0, select bank1
  1902  16C3  00CF               	movwf	(_voltaje3+3)^(0+128)
  1903  16C4  1283               	bcf	3,5	;RP0=0, select bank0
  1904  16C5  1303               	bcf	3,6	;RP1=0, select bank0
  1905  16C6  082A               	movf	?___flmul+2,w
  1906  16C7  1683               	bsf	3,5	;RP0=1, select bank1
  1907  16C8  1303               	bcf	3,6	;RP1=0, select bank1
  1908  16C9  00CE               	movwf	(_voltaje3+2)^(0+128)
  1909  16CA  1283               	bcf	3,5	;RP0=0, select bank0
  1910  16CB  1303               	bcf	3,6	;RP1=0, select bank0
  1911  16CC  0829               	movf	?___flmul+1,w
  1912  16CD  1683               	bsf	3,5	;RP0=1, select bank1
  1913  16CE  1303               	bcf	3,6	;RP1=0, select bank1
  1914  16CF  00CD               	movwf	(_voltaje3+1)^(0+128)
  1915  16D0  1283               	bcf	3,5	;RP0=0, select bank0
  1916  16D1  1303               	bcf	3,6	;RP1=0, select bank0
  1917  16D2  0828               	movf	?___flmul,w
  1918  16D3  1683               	bsf	3,5	;RP0=1, select bank1
  1919  16D4  1303               	bcf	3,6	;RP1=0, select bank1
  1920  16D5  00CC               	movwf	_voltaje3^(0+128)
  1921  16D6                     l4547:
  1922                           
  1923                           ;Lab_2/Lab_2.c: 128:         sprintf(valor1, "%3.2fv", voltaje1);
  1924  16D6  300F               	movlw	low (STR_1| (0+32768))
  1925  16D7  1283               	bcf	3,5	;RP0=0, select bank0
  1926  16D8  1303               	bcf	3,6	;RP1=0, select bank0
  1927  16D9  00EA               	movwf	sprintf@f
  1928  16DA  3099               	movlw	high (STR_1| (0+32768))
  1929  16DB  00EB               	movwf	sprintf@f+1
  1930  16DC  1683               	bsf	3,5	;RP0=1, select bank1
  1931  16DD  1303               	bcf	3,6	;RP1=0, select bank1
  1932  16DE  0857               	movf	(_voltaje1+3)^(0+128),w
  1933  16DF  1283               	bcf	3,5	;RP0=0, select bank0
  1934  16E0  1303               	bcf	3,6	;RP1=0, select bank0
  1935  16E1  00EF               	movwf	?_sprintf+5
  1936  16E2  1683               	bsf	3,5	;RP0=1, select bank1
  1937  16E3  1303               	bcf	3,6	;RP1=0, select bank1
  1938  16E4  0856               	movf	(_voltaje1+2)^(0+128),w
  1939  16E5  1283               	bcf	3,5	;RP0=0, select bank0
  1940  16E6  1303               	bcf	3,6	;RP1=0, select bank0
  1941  16E7  00EE               	movwf	?_sprintf+4
  1942  16E8  1683               	bsf	3,5	;RP0=1, select bank1
  1943  16E9  1303               	bcf	3,6	;RP1=0, select bank1
  1944  16EA  0855               	movf	(_voltaje1+1)^(0+128),w
  1945  16EB  1283               	bcf	3,5	;RP0=0, select bank0
  1946  16EC  1303               	bcf	3,6	;RP1=0, select bank0
  1947  16ED  00ED               	movwf	?_sprintf+3
  1948  16EE  1683               	bsf	3,5	;RP0=1, select bank1
  1949  16EF  1303               	bcf	3,6	;RP1=0, select bank1
  1950  16F0  0854               	movf	_voltaje1^(0+128),w
  1951  16F1  1283               	bcf	3,5	;RP0=0, select bank0
  1952  16F2  1303               	bcf	3,6	;RP1=0, select bank0
  1953  16F3  00EC               	movwf	?_sprintf+2
  1954  16F4  30E9               	movlw	(low (_valor1| 0))& (0+255)
  1955  16F5  120A  158A  200F  160A  118A  	fcall	_sprintf
  1956  16FA                     l4549:
  1957                           
  1958                           ;Lab_2/Lab_2.c: 129:         sprintf(valor2, "%3.2fv", voltaje2);
  1959  16FA  300F               	movlw	low (STR_1| (0+32768))
  1960  16FB  1283               	bcf	3,5	;RP0=0, select bank0
  1961  16FC  1303               	bcf	3,6	;RP1=0, select bank0
  1962  16FD  00EA               	movwf	sprintf@f
  1963  16FE  3099               	movlw	high (STR_1| (0+32768))
  1964  16FF  00EB               	movwf	sprintf@f+1
  1965  1700  1683               	bsf	3,5	;RP0=1, select bank1
  1966  1701  1303               	bcf	3,6	;RP1=0, select bank1
  1967  1702  0853               	movf	(_voltaje2+3)^(0+128),w
  1968  1703  1283               	bcf	3,5	;RP0=0, select bank0
  1969  1704  1303               	bcf	3,6	;RP1=0, select bank0
  1970  1705  00EF               	movwf	?_sprintf+5
  1971  1706  1683               	bsf	3,5	;RP0=1, select bank1
  1972  1707  1303               	bcf	3,6	;RP1=0, select bank1
  1973  1708  0852               	movf	(_voltaje2+2)^(0+128),w
  1974  1709  1283               	bcf	3,5	;RP0=0, select bank0
  1975  170A  1303               	bcf	3,6	;RP1=0, select bank0
  1976  170B  00EE               	movwf	?_sprintf+4
  1977  170C  1683               	bsf	3,5	;RP0=1, select bank1
  1978  170D  1303               	bcf	3,6	;RP1=0, select bank1
  1979  170E  0851               	movf	(_voltaje2+1)^(0+128),w
  1980  170F  1283               	bcf	3,5	;RP0=0, select bank0
  1981  1710  1303               	bcf	3,6	;RP1=0, select bank0
  1982  1711  00ED               	movwf	?_sprintf+3
  1983  1712  1683               	bsf	3,5	;RP0=1, select bank1
  1984  1713  1303               	bcf	3,6	;RP1=0, select bank1
  1985  1714  0850               	movf	_voltaje2^(0+128),w
  1986  1715  1283               	bcf	3,5	;RP0=0, select bank0
  1987  1716  1303               	bcf	3,6	;RP1=0, select bank0
  1988  1717  00EC               	movwf	?_sprintf+2
  1989  1718  30E3               	movlw	(low (_valor2| 0))& (0+255)
  1990  1719  120A  158A  200F  160A  118A  	fcall	_sprintf
  1991  171E                     l4551:
  1992                           
  1993                           ;Lab_2/Lab_2.c: 130:         sprintf(valor3, "%3.2fv", voltaje3);
  1994  171E  300F               	movlw	low (STR_1| (0+32768))
  1995  171F  1283               	bcf	3,5	;RP0=0, select bank0
  1996  1720  1303               	bcf	3,6	;RP1=0, select bank0
  1997  1721  00EA               	movwf	sprintf@f
  1998  1722  3099               	movlw	high (STR_1| (0+32768))
  1999  1723  00EB               	movwf	sprintf@f+1
  2000  1724  1683               	bsf	3,5	;RP0=1, select bank1
  2001  1725  1303               	bcf	3,6	;RP1=0, select bank1
  2002  1726  084F               	movf	(_voltaje3+3)^(0+128),w
  2003  1727  1283               	bcf	3,5	;RP0=0, select bank0
  2004  1728  1303               	bcf	3,6	;RP1=0, select bank0
  2005  1729  00EF               	movwf	?_sprintf+5
  2006  172A  1683               	bsf	3,5	;RP0=1, select bank1
  2007  172B  1303               	bcf	3,6	;RP1=0, select bank1
  2008  172C  084E               	movf	(_voltaje3+2)^(0+128),w
  2009  172D  1283               	bcf	3,5	;RP0=0, select bank0
  2010  172E  1303               	bcf	3,6	;RP1=0, select bank0
  2011  172F  00EE               	movwf	?_sprintf+4
  2012  1730  1683               	bsf	3,5	;RP0=1, select bank1
  2013  1731  1303               	bcf	3,6	;RP1=0, select bank1
  2014  1732  084D               	movf	(_voltaje3+1)^(0+128),w
  2015  1733  1283               	bcf	3,5	;RP0=0, select bank0
  2016  1734  1303               	bcf	3,6	;RP1=0, select bank0
  2017  1735  00ED               	movwf	?_sprintf+3
  2018  1736  1683               	bsf	3,5	;RP0=1, select bank1
  2019  1737  1303               	bcf	3,6	;RP1=0, select bank1
  2020  1738  084C               	movf	_voltaje3^(0+128),w
  2021  1739  1283               	bcf	3,5	;RP0=0, select bank0
  2022  173A  1303               	bcf	3,6	;RP1=0, select bank0
  2023  173B  00EC               	movwf	?_sprintf+2
  2024  173C  30DD               	movlw	(low (_valor3| 0))& (0+255)
  2025  173D  120A  158A  200F  160A  118A  	fcall	_sprintf
  2026  1742                     l4553:
  2027                           
  2028                           ;Lab_2/Lab_2.c: 133:         LCD_8XY(0,0);
  2029  1742  01F4               	clrf	LCD_8XY@y
  2030  1743  3000               	movlw	0
  2031  1744  160A  158A  2247  160A  118A  	fcall	_LCD_8XY
  2032  1749                     l4555:
  2033                           
  2034                           ;Lab_2/Lab_2.c: 134:         LCD_8Cadena("S1:   S2:   S3:");
  2035  1749  30F0               	movlw	low (STR_4| (0+32768))
  2036  174A  00F4               	movwf	LCD_8Cadena@dato
  2037  174B  3098               	movlw	high (STR_4| (0+32768))
  2038  174C  00F5               	movwf	LCD_8Cadena@dato+1
  2039  174D  160A  158A  22DD  160A  118A  	fcall	_LCD_8Cadena
  2040  1752                     l4557:
  2041                           
  2042                           ;Lab_2/Lab_2.c: 136:         LCD_8XY(1,0);
  2043  1752  01F4               	clrf	LCD_8XY@y
  2044  1753  3001               	movlw	1
  2045  1754  160A  158A  2247  160A  118A  	fcall	_LCD_8XY
  2046  1759                     l4559:
  2047                           
  2048                           ;Lab_2/Lab_2.c: 137:         LCD_8Cadena(valor1);
  2049  1759  30E9               	movlw	(low (_valor1| 0))& (0+255)
  2050  175A  00F4               	movwf	LCD_8Cadena@dato
  2051  175B  3000               	movlw	0
  2052  175C  00F5               	movwf	LCD_8Cadena@dato+1
  2053  175D  160A  158A  22DD  160A  118A  	fcall	_LCD_8Cadena
  2054  1762                     l4561:
  2055                           
  2056                           ;Lab_2/Lab_2.c: 138:         LCD_8XY(1,6);
  2057  1762  3006               	movlw	6
  2058  1763  1683               	bsf	3,5	;RP0=1, select bank1
  2059  1764  1303               	bcf	3,6	;RP1=0, select bank1
  2060  1765  00C8               	movwf	??_main^(0+128)
  2061  1766  0848               	movf	??_main^(0+128),w
  2062  1767  00F4               	movwf	LCD_8XY@y
  2063  1768  3001               	movlw	1
  2064  1769  160A  158A  2247  160A  118A  	fcall	_LCD_8XY
  2065  176E                     l4563:
  2066                           
  2067                           ;Lab_2/Lab_2.c: 139:         LCD_8Cadena(valor2);
  2068  176E  30E3               	movlw	(low (_valor2| 0))& (0+255)
  2069  176F  00F4               	movwf	LCD_8Cadena@dato
  2070  1770  3000               	movlw	0
  2071  1771  00F5               	movwf	LCD_8Cadena@dato+1
  2072  1772  160A  158A  22DD  160A  118A  	fcall	_LCD_8Cadena
  2073  1777                     l4565:
  2074                           
  2075                           ;Lab_2/Lab_2.c: 140:         LCD_8XY(1,12);
  2076  1777  300C               	movlw	12
  2077  1778  1683               	bsf	3,5	;RP0=1, select bank1
  2078  1779  1303               	bcf	3,6	;RP1=0, select bank1
  2079  177A  00C8               	movwf	??_main^(0+128)
  2080  177B  0848               	movf	??_main^(0+128),w
  2081  177C  00F4               	movwf	LCD_8XY@y
  2082  177D  3001               	movlw	1
  2083  177E  160A  158A  2247  160A  118A  	fcall	_LCD_8XY
  2084  1783                     l4567:
  2085                           
  2086                           ;Lab_2/Lab_2.c: 141:         LCD_8Cadena(valor3);
  2087  1783  30DD               	movlw	(low (_valor3| 0))& (0+255)
  2088  1784  00F4               	movwf	LCD_8Cadena@dato
  2089  1785  3000               	movlw	0
  2090  1786  00F5               	movwf	LCD_8Cadena@dato+1
  2091  1787  160A  158A  22DD  160A  118A  	fcall	_LCD_8Cadena
  2092  178C                     l4569:
  2093                           
  2094                           ;Lab_2/Lab_2.c: 143:         if(comp1 != dato1 || comp2 != dato2){
  2095  178C  1683               	bsf	3,5	;RP0=1, select bank1
  2096  178D  1303               	bcf	3,6	;RP1=0, select bank1
  2097  178E  085A               	movf	_comp1^(0+128),w
  2098  178F  065C               	xorwf	_dato1^(0+128),w
  2099  1790  1D03               	skipz
  2100  1791  2F93               	goto	u7171
  2101  1792  2F94               	goto	u7170
  2102  1793                     u7171:
  2103  1793  2F9A               	goto	l4573
  2104  1794                     u7170:
  2105  1794                     l4571:
  2106  1794  0859               	movf	_comp2^(0+128),w
  2107  1795  065B               	xorwf	_dato2^(0+128),w
  2108  1796  1903               	skipnz
  2109  1797  2F99               	goto	u7181
  2110  1798  2F9A               	goto	u7180
  2111  1799                     u7181:
  2112  1799  2FD0               	goto	l4575
  2113  179A                     u7180:
  2114  179A                     l4573:
  2115                           
  2116                           ;Lab_2/Lab_2.c: 144:             USART_Cadena("\n\r\n\r+ para aumentar contador\n\r");
  2117  179A  30A2               	movlw	low (STR_5| (0+32768))
  2118  179B  00F3               	movwf	USART_Cadena@str
  2119  179C  3098               	movlw	high (STR_5| (0+32768))
  2120  179D  00F4               	movwf	USART_Cadena@str+1
  2121  179E  160A  158A  22B7  160A  118A  	fcall	_USART_Cadena
  2122                           
  2123                           ;Lab_2/Lab_2.c: 145:             USART_Cadena("- para disminuir contador\n\r\n\r");
  2124  17A3  30C1               	movlw	low (STR_6| (0+32768))
  2125  17A4  00F3               	movwf	USART_Cadena@str
  2126  17A5  3098               	movlw	high (STR_6| (0+32768))
  2127  17A6  00F4               	movwf	USART_Cadena@str+1
  2128  17A7  160A  158A  22B7  160A  118A  	fcall	_USART_Cadena
  2129                           
  2130                           ;Lab_2/Lab_2.c: 146:             USART_Cadena("Voltaje pot1: ");
  2131  17AC  3000               	movlw	low (STR_7| (0+32768))
  2132  17AD  00F3               	movwf	USART_Cadena@str
  2133  17AE  3099               	movlw	high (STR_7| (0+32768))
  2134  17AF  00F4               	movwf	USART_Cadena@str+1
  2135  17B0  160A  158A  22B7  160A  118A  	fcall	_USART_Cadena
  2136                           
  2137                           ;Lab_2/Lab_2.c: 147:             USART_Cadena(valor1);
  2138  17B5  30E9               	movlw	(low (_valor1| 0))& (0+255)
  2139  17B6  00F3               	movwf	USART_Cadena@str
  2140  17B7  3000               	movlw	0
  2141  17B8  00F4               	movwf	USART_Cadena@str+1
  2142  17B9  160A  158A  22B7  160A  118A  	fcall	_USART_Cadena
  2143                           
  2144                           ;Lab_2/Lab_2.c: 149:             USART_Cadena("\n\rVoltaje pot2: ");
  2145  17BE  30DF               	movlw	low (STR_8| (0+32768))
  2146  17BF  00F3               	movwf	USART_Cadena@str
  2147  17C0  3098               	movlw	high (STR_8| (0+32768))
  2148  17C1  00F4               	movwf	USART_Cadena@str+1
  2149  17C2  160A  158A  22B7  160A  118A  	fcall	_USART_Cadena
  2150                           
  2151                           ;Lab_2/Lab_2.c: 150:             USART_Cadena(valor2);
  2152  17C7  30E3               	movlw	(low (_valor2| 0))& (0+255)
  2153  17C8  00F3               	movwf	USART_Cadena@str
  2154  17C9  3000               	movlw	0
  2155  17CA  00F4               	movwf	USART_Cadena@str+1
  2156  17CB  160A  158A  22B7  160A  118A  	fcall	_USART_Cadena
  2157  17D0                     l4575:
  2158                           
  2159                           ;Lab_2/Lab_2.c: 153:         if (PIR1bits.RCIF == 1){
  2160  17D0  1283               	bcf	3,5	;RP0=0, select bank0
  2161  17D1  1303               	bcf	3,6	;RP1=0, select bank0
  2162  17D2  1E8C               	btfss	12,5	;volatile
  2163  17D3  2FD5               	goto	u7191
  2164  17D4  2FD6               	goto	u7190
  2165  17D5                     u7191:
  2166  17D5  2FE0               	goto	l4579
  2167  17D6                     u7190:
  2168  17D6                     l4577:
  2169                           
  2170                           ;Lab_2/Lab_2.c: 154:             ingreso = USART_Rx();
  2171  17D6  160A  158A  2202  160A  118A  	fcall	_USART_Rx
  2172  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2173  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2174  17DD  00C8               	movwf	??_main^(0+128)
  2175  17DE  0848               	movf	??_main^(0+128),w
  2176  17DF  00D8               	movwf	_ingreso^(0+128)
  2177  17E0                     l4579:
  2178                           
  2179                           ;Lab_2/Lab_2.c: 157:         if(ingreso == '+'){
  2180  17E0  302B               	movlw	43
  2181  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2182  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2183  17E3  0658               	xorwf	_ingreso^(0+128),w
  2184  17E4  1D03               	btfss	3,2
  2185  17E5  2FE7               	goto	u7201
  2186  17E6  2FE8               	goto	u7200
  2187  17E7                     u7201:
  2188  17E7  2FEF               	goto	l4583
  2189  17E8                     u7200:
  2190  17E8                     l4581:
  2191                           
  2192                           ;Lab_2/Lab_2.c: 158:             PORTA++;
  2193  17E8  3001               	movlw	1
  2194  17E9  00C8               	movwf	??_main^(0+128)
  2195  17EA  0848               	movf	??_main^(0+128),w
  2196  17EB  1283               	bcf	3,5	;RP0=0, select bank0
  2197  17EC  1303               	bcf	3,6	;RP1=0, select bank0
  2198  17ED  0785               	addwf	5,f	;volatile
  2199                           
  2200                           ;Lab_2/Lab_2.c: 159:         }else if(ingreso == '-'){
  2201  17EE  2FF9               	goto	l4587
  2202  17EF                     l4583:
  2203  17EF  302D               	movlw	45
  2204  17F0  0658               	xorwf	_ingreso^(0+128),w
  2205  17F1  1D03               	btfss	3,2
  2206  17F2  2FF4               	goto	u7211
  2207  17F3  2FF5               	goto	u7210
  2208  17F4                     u7211:
  2209  17F4  2FF9               	goto	l4587
  2210  17F5                     u7210:
  2211  17F5                     l4585:
  2212                           
  2213                           ;Lab_2/Lab_2.c: 160:             PORTA--;
  2214  17F5  3001               	movlw	1
  2215  17F6  1283               	bcf	3,5	;RP0=0, select bank0
  2216  17F7  1303               	bcf	3,6	;RP1=0, select bank0
  2217  17F8  0285               	subwf	5,f	;volatile
  2218  17F9                     l4587:
  2219                           
  2220                           ;Lab_2/Lab_2.c: 162:         ingreso = 0;
  2221  17F9  1683               	bsf	3,5	;RP0=1, select bank1
  2222  17FA  1303               	bcf	3,6	;RP1=0, select bank1
  2223  17FB  01D8               	clrf	_ingreso^(0+128)
  2224  17FC  2DB7               	goto	l4519
  2225  17FD  120A  118A  280C   	ljmp	start
  2226  1800                     __end_of_main:
  2227                           
  2228                           	psect	text1
  2229  080F                     __ptext1:	
  2230 ;; *************** function _sprintf *****************
  2231 ;; Defined at:
  2232 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2233 ;; Parameters:    Size  Location     Type
  2234 ;;  sp              1    wreg     PTR unsigned char 
  2235 ;;		 -> valor3(6), valor2(6), valor1(6), 
  2236 ;;  f               2   74[BANK0 ] PTR const unsigned char 
  2237 ;;		 -> STR_3(7), STR_2(7), STR_1(7), 
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;  sp              1   36[BANK1 ] PTR unsigned char 
  2240 ;;		 -> valor3(6), valor2(6), valor1(6), 
  2241 ;;  fval            4   32[BANK1 ] PTR unsigned char 
  2242 ;;  tmpval          4   26[BANK1 ] struct .
  2243 ;;  val             4   18[BANK1 ] unsigned long 
  2244 ;;  prec            2   37[BANK1 ] int 
  2245 ;;  eexp            2   30[BANK1 ] int 
  2246 ;;  width           2   24[BANK1 ] int 
  2247 ;;  flag            2   22[BANK1 ] unsigned short 
  2248 ;;  cp              2    0        PTR const unsigned char 
  2249 ;;  len             2    0        unsigned int 
  2250 ;;  c               1   39[BANK1 ] unsigned char 
  2251 ;;  ap              1   17[BANK1 ] PTR void [1]
  2252 ;;		 -> ?_sprintf(2), 
  2253 ;;  d               1    0        unsigned char 
  2254 ;; Return value:  Size  Location     Type
  2255 ;;                  2   74[BANK0 ] int 
  2256 ;; Registers used:
  2257 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2263 ;;      Params:         0       6       0       0       0
  2264 ;;      Locals:         0       0      27       0       0
  2265 ;;      Temps:          0       0       5       0       0
  2266 ;;      Totals:         0       6      32       0       0
  2267 ;;Total ram usage:       38 bytes
  2268 ;; Hardware stack levels used:    1
  2269 ;; Hardware stack levels required when called:    4
  2270 ;; This function calls:
  2271 ;;		___awdiv
  2272 ;;		___fladd
  2273 ;;		___fleq
  2274 ;;		___flge
  2275 ;;		___flmul
  2276 ;;		___flneg
  2277 ;;		___flsub
  2278 ;;		___fltol
  2279 ;;		___lldiv
  2280 ;;		___llmod
  2281 ;;		___wmul
  2282 ;;		___xxtofl
  2283 ;;		__div_to_l_
  2284 ;;		__tdiv_to_l_
  2285 ;;		_fround
  2286 ;;		_isdigit
  2287 ;;		_scale
  2288 ;; This function is called by:
  2289 ;;		_main
  2290 ;; This function uses a non-reentrant model
  2291 ;;
  2292                           
  2293                           
  2294                           ;psect for function _sprintf
  2295  080F                     _sprintf:
  2296                           
  2297                           ;incstack = 0
  2298                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2299                           ;sprintf@sp stored from wreg
  2300  080F  1683               	bsf	3,5	;RP0=1, select bank1
  2301  0810  1303               	bcf	3,6	;RP1=0, select bank1
  2302  0811  00C4               	movwf	sprintf@sp^(0+128)
  2303  0812                     l4199:
  2304                           
  2305                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2306  0812  306C               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2307  0813  00A8               	movwf	??_sprintf^(0+128)
  2308  0814  0828               	movf	??_sprintf^(0+128),w
  2309  0815  00B1               	movwf	sprintf@ap^(0+128)
  2310                           
  2311                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2312  0816  2FCF               	goto	l4455
  2313  0817                     l4201:
  2314                           
  2315                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2316  0817  3025               	movlw	37
  2317  0818  0647               	xorwf	sprintf@c^(0+128),w
  2318  0819  1903               	btfsc	3,2
  2319  081A  281C               	goto	u6671
  2320  081B  281D               	goto	u6670
  2321  081C                     u6671:
  2322  081C  2829               	goto	l4207
  2323  081D                     u6670:
  2324  081D                     l4203:
  2325                           
  2326                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2327  081D  0847               	movf	sprintf@c^(0+128),w
  2328  081E  00A8               	movwf	??_sprintf^(0+128)
  2329  081F  0844               	movf	sprintf@sp^(0+128),w
  2330  0820  0084               	movwf	4
  2331  0821  0828               	movf	??_sprintf^(0+128),w
  2332  0822  1383               	bcf	3,7	;select IRP bank0
  2333  0823  0080               	movwf	0
  2334  0824                     l4205:
  2335  0824  3001               	movlw	1
  2336  0825  00A8               	movwf	??_sprintf^(0+128)
  2337  0826  0828               	movf	??_sprintf^(0+128),w
  2338  0827  07C4               	addwf	sprintf@sp^(0+128),f
  2339                           
  2340                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2341  0828  2FCF               	goto	l4455
  2342  0829                     l4207:
  2343                           
  2344                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2345  0829  01B8               	clrf	sprintf@width^(0+128)
  2346  082A  01B9               	clrf	(sprintf@width+1)^(0+128)
  2347                           
  2348                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2349  082B  01B6               	clrf	sprintf@flag^(0+128)
  2350  082C  01B7               	clrf	(sprintf@flag+1)^(0+128)
  2351  082D                     l4209:
  2352                           
  2353                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2354  082D  1283               	bcf	3,5	;RP0=0, select bank0
  2355  082E  1303               	bcf	3,6	;RP1=0, select bank0
  2356  082F  086B               	movf	sprintf@f+1,w
  2357  0830  00FF               	movwf	btemp+1
  2358  0831  086A               	movf	sprintf@f,w
  2359  0832  0084               	movwf	4
  2360  0833  160A  158A  2000  120A  158A  	fcall	stringtab
  2361  0838  160A  158A  2220  120A  158A  	fcall	_isdigit
  2362  083D  1C03               	btfss	3,0
  2363  083E  2840               	goto	u6681
  2364  083F  2841               	goto	u6680
  2365  0840                     u6681:
  2366  0840  288D               	goto	l4221
  2367  0841                     u6680:
  2368  0841                     l4211:
  2369                           
  2370                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2371  0841  1683               	bsf	3,5	;RP0=1, select bank1
  2372  0842  1303               	bcf	3,6	;RP1=0, select bank1
  2373  0843  01B8               	clrf	sprintf@width^(0+128)
  2374  0844  01B9               	clrf	(sprintf@width+1)^(0+128)
  2375  0845                     l4213:
  2376                           
  2377                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2378  0845  300A               	movlw	10
  2379  0846  00F2               	movwf	___wmul@multiplier
  2380  0847  3000               	movlw	0
  2381  0848  00F3               	movwf	___wmul@multiplier+1
  2382  0849  1683               	bsf	3,5	;RP0=1, select bank1
  2383  084A  1303               	bcf	3,6	;RP1=0, select bank1
  2384  084B  0839               	movf	(sprintf@width+1)^(0+128),w
  2385  084C  00F5               	movwf	___wmul@multiplicand+1
  2386  084D  0838               	movf	sprintf@width^(0+128),w
  2387  084E  00F4               	movwf	___wmul@multiplicand
  2388  084F  160A  158A  2292  120A  158A  	fcall	___wmul
  2389  0854  0873               	movf	?___wmul+1,w
  2390  0855  1683               	bsf	3,5	;RP0=1, select bank1
  2391  0856  1303               	bcf	3,6	;RP1=0, select bank1
  2392  0857  00B9               	movwf	(sprintf@width+1)^(0+128)
  2393  0858  0872               	movf	?___wmul,w
  2394  0859  00B8               	movwf	sprintf@width^(0+128)
  2395  085A                     l4215:
  2396                           
  2397                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2398  085A  1283               	bcf	3,5	;RP0=0, select bank0
  2399  085B  1303               	bcf	3,6	;RP1=0, select bank0
  2400  085C  086B               	movf	sprintf@f+1,w
  2401  085D  00FF               	movwf	btemp+1
  2402  085E  086A               	movf	sprintf@f,w
  2403  085F  0084               	movwf	4
  2404  0860  160A  158A  2000  120A  158A  	fcall	stringtab
  2405  0865  3ED0               	addlw	208
  2406  0866  1683               	bsf	3,5	;RP0=1, select bank1
  2407  0867  1303               	bcf	3,6	;RP1=0, select bank1
  2408  0868  00A8               	movwf	??_sprintf^(0+128)
  2409  0869  30FF               	movlw	255
  2410  086A  1803               	skipnc
  2411  086B  3000               	movlw	0
  2412  086C  00A9               	movwf	(??_sprintf^(0+128)+1)
  2413  086D  0828               	movf	??_sprintf^(0+128),w
  2414  086E  07B8               	addwf	sprintf@width^(0+128),f
  2415  086F  1803               	skipnc
  2416  0870  0AB9               	incf	(sprintf@width+1)^(0+128),f
  2417  0871  0829               	movf	(??_sprintf+1)^(0+128),w
  2418  0872  07B9               	addwf	(sprintf@width+1)^(0+128),f
  2419  0873                     l4217:
  2420  0873  3001               	movlw	1
  2421  0874  1283               	bcf	3,5	;RP0=0, select bank0
  2422  0875  1303               	bcf	3,6	;RP1=0, select bank0
  2423  0876  07EA               	addwf	sprintf@f,f
  2424  0877  1803               	skipnc
  2425  0878  0AEB               	incf	sprintf@f+1,f
  2426  0879  3000               	movlw	0
  2427  087A  07EB               	addwf	sprintf@f+1,f
  2428  087B                     l4219:
  2429                           
  2430                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2431  087B  086B               	movf	sprintf@f+1,w
  2432  087C  00FF               	movwf	btemp+1
  2433  087D  086A               	movf	sprintf@f,w
  2434  087E  0084               	movwf	4
  2435  087F  160A  158A  2000  120A  158A  	fcall	stringtab
  2436  0884  160A  158A  2220  120A  158A  	fcall	_isdigit
  2437  0889  1803               	btfsc	3,0
  2438  088A  288C               	goto	u6691
  2439  088B  288D               	goto	u6690
  2440  088C                     u6691:
  2441  088C  2845               	goto	l4213
  2442  088D                     u6690:
  2443  088D                     l4221:
  2444                           
  2445                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2446  088D  1283               	bcf	3,5	;RP0=0, select bank0
  2447  088E  1303               	bcf	3,6	;RP1=0, select bank0
  2448  088F  086B               	movf	sprintf@f+1,w
  2449  0890  00FF               	movwf	btemp+1
  2450  0891  086A               	movf	sprintf@f,w
  2451  0892  0084               	movwf	4
  2452  0893  160A  158A  2000  120A  158A  	fcall	stringtab
  2453  0898  3A2E               	xorlw	46
  2454  0899  1D03               	skipz
  2455  089A  289C               	goto	u6701
  2456  089B  289D               	goto	u6700
  2457  089C                     u6701:
  2458  089C  28F7               	goto	l4237
  2459  089D                     u6700:
  2460  089D                     l4223:
  2461                           
  2462                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2463  089D  1683               	bsf	3,5	;RP0=1, select bank1
  2464  089E  1303               	bcf	3,6	;RP1=0, select bank1
  2465  089F  1737               	bsf	(sprintf@flag^(0+128)+1),6
  2466  08A0                     l4225:
  2467                           
  2468                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2469  08A0  3001               	movlw	1
  2470  08A1  1283               	bcf	3,5	;RP0=0, select bank0
  2471  08A2  1303               	bcf	3,6	;RP1=0, select bank0
  2472  08A3  07EA               	addwf	sprintf@f,f
  2473  08A4  1803               	skipnc
  2474  08A5  0AEB               	incf	sprintf@f+1,f
  2475  08A6  3000               	movlw	0
  2476  08A7  07EB               	addwf	sprintf@f+1,f
  2477  08A8                     l4227:
  2478                           
  2479                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2480  08A8  1683               	bsf	3,5	;RP0=1, select bank1
  2481  08A9  1303               	bcf	3,6	;RP1=0, select bank1
  2482  08AA  01C5               	clrf	sprintf@prec^(0+128)
  2483  08AB  01C6               	clrf	(sprintf@prec+1)^(0+128)
  2484                           
  2485                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2486  08AC  28E3               	goto	l4235
  2487  08AD                     l4229:
  2488                           
  2489                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2490  08AD  300A               	movlw	10
  2491  08AE  00F2               	movwf	___wmul@multiplier
  2492  08AF  3000               	movlw	0
  2493  08B0  00F3               	movwf	___wmul@multiplier+1
  2494  08B1  1683               	bsf	3,5	;RP0=1, select bank1
  2495  08B2  1303               	bcf	3,6	;RP1=0, select bank1
  2496  08B3  0846               	movf	(sprintf@prec+1)^(0+128),w
  2497  08B4  00F5               	movwf	___wmul@multiplicand+1
  2498  08B5  0845               	movf	sprintf@prec^(0+128),w
  2499  08B6  00F4               	movwf	___wmul@multiplicand
  2500  08B7  160A  158A  2292  120A  158A  	fcall	___wmul
  2501  08BC  0873               	movf	?___wmul+1,w
  2502  08BD  1683               	bsf	3,5	;RP0=1, select bank1
  2503  08BE  1303               	bcf	3,6	;RP1=0, select bank1
  2504  08BF  00C6               	movwf	(sprintf@prec+1)^(0+128)
  2505  08C0  0872               	movf	?___wmul,w
  2506  08C1  00C5               	movwf	sprintf@prec^(0+128)
  2507  08C2                     l4231:
  2508                           
  2509                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2510  08C2  1283               	bcf	3,5	;RP0=0, select bank0
  2511  08C3  1303               	bcf	3,6	;RP1=0, select bank0
  2512  08C4  086B               	movf	sprintf@f+1,w
  2513  08C5  00FF               	movwf	btemp+1
  2514  08C6  086A               	movf	sprintf@f,w
  2515  08C7  0084               	movwf	4
  2516  08C8  160A  158A  2000  120A  158A  	fcall	stringtab
  2517  08CD  3ED0               	addlw	208
  2518  08CE  1683               	bsf	3,5	;RP0=1, select bank1
  2519  08CF  1303               	bcf	3,6	;RP1=0, select bank1
  2520  08D0  00A8               	movwf	??_sprintf^(0+128)
  2521  08D1  30FF               	movlw	255
  2522  08D2  1803               	skipnc
  2523  08D3  3000               	movlw	0
  2524  08D4  00A9               	movwf	(??_sprintf^(0+128)+1)
  2525  08D5  0828               	movf	??_sprintf^(0+128),w
  2526  08D6  07C5               	addwf	sprintf@prec^(0+128),f
  2527  08D7  1803               	skipnc
  2528  08D8  0AC6               	incf	(sprintf@prec+1)^(0+128),f
  2529  08D9  0829               	movf	(??_sprintf+1)^(0+128),w
  2530  08DA  07C6               	addwf	(sprintf@prec+1)^(0+128),f
  2531  08DB                     l4233:
  2532  08DB  3001               	movlw	1
  2533  08DC  1283               	bcf	3,5	;RP0=0, select bank0
  2534  08DD  1303               	bcf	3,6	;RP1=0, select bank0
  2535  08DE  07EA               	addwf	sprintf@f,f
  2536  08DF  1803               	skipnc
  2537  08E0  0AEB               	incf	sprintf@f+1,f
  2538  08E1  3000               	movlw	0
  2539  08E2  07EB               	addwf	sprintf@f+1,f
  2540  08E3                     l4235:
  2541                           
  2542                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2543  08E3  1283               	bcf	3,5	;RP0=0, select bank0
  2544  08E4  086B               	movf	sprintf@f+1,w
  2545  08E5  00FF               	movwf	btemp+1
  2546  08E6  086A               	movf	sprintf@f,w
  2547  08E7  0084               	movwf	4
  2548  08E8  160A  158A  2000  120A  158A  	fcall	stringtab
  2549  08ED  160A  158A  2220  120A  158A  	fcall	_isdigit
  2550  08F2  1803               	btfsc	3,0
  2551  08F3  28F5               	goto	u6711
  2552  08F4  28F6               	goto	u6710
  2553  08F5                     u6711:
  2554  08F5  28AD               	goto	l4229
  2555  08F6                     u6710:
  2556  08F6  28FF               	goto	l4243
  2557  08F7                     l4237:
  2558                           
  2559                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2560  08F7  1683               	bsf	3,5	;RP0=1, select bank1
  2561  08F8  1303               	bcf	3,6	;RP1=0, select bank1
  2562  08F9  01C5               	clrf	sprintf@prec^(0+128)
  2563  08FA  01C6               	clrf	(sprintf@prec+1)^(0+128)
  2564  08FB                     l4239:
  2565                           
  2566                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2567  08FB  1637               	bsf	(sprintf@flag^(0+128)+1),4
  2568  08FC  28FF               	goto	l4243
  2569  08FD                     l327:	
  2570                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2571                           
  2572                           
  2573                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2574  08FD  1537               	bsf	(sprintf@flag^(0+128)+1),2
  2575                           
  2576                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2577  08FE  2933               	goto	l4245
  2578  08FF                     l4243:
  2579  08FF  1283               	bcf	3,5	;RP0=0, select bank0
  2580  0900  1303               	bcf	3,6	;RP1=0, select bank0
  2581  0901  086B               	movf	sprintf@f+1,w
  2582  0902  1683               	bsf	3,5	;RP0=1, select bank1
  2583  0903  1303               	bcf	3,6	;RP1=0, select bank1
  2584  0904  00A9               	movwf	(??_sprintf^(0+128)+1)
  2585  0905  1283               	bcf	3,5	;RP0=0, select bank0
  2586  0906  1303               	bcf	3,6	;RP1=0, select bank0
  2587  0907  086A               	movf	sprintf@f,w
  2588  0908  1683               	bsf	3,5	;RP0=1, select bank1
  2589  0909  1303               	bcf	3,6	;RP1=0, select bank1
  2590  090A  00A8               	movwf	??_sprintf^(0+128)
  2591  090B  1283               	bcf	3,5	;RP0=0, select bank0
  2592  090C  1303               	bcf	3,6	;RP1=0, select bank0
  2593  090D  0AEA               	incf	sprintf@f,f
  2594  090E  1903               	skipnz
  2595  090F  0AEB               	incf	sprintf@f+1,f
  2596  0910  1683               	bsf	3,5	;RP0=1, select bank1
  2597  0911  1303               	bcf	3,6	;RP1=0, select bank1
  2598  0912  0829               	movf	(??_sprintf+1)^(0+128),w
  2599  0913  1283               	bcf	3,5	;RP0=0, select bank0
  2600  0914  1303               	bcf	3,6	;RP1=0, select bank0
  2601  0915  00FF               	movwf	btemp+1
  2602  0916  1683               	bsf	3,5	;RP0=1, select bank1
  2603  0917  1303               	bcf	3,6	;RP1=0, select bank1
  2604  0918  0828               	movf	??_sprintf^(0+128),w
  2605  0919  0084               	movwf	4
  2606  091A  1283               	bcf	3,5	;RP0=0, select bank0
  2607  091B  1303               	bcf	3,6	;RP1=0, select bank0
  2608  091C  160A  158A  2000  120A  158A  	fcall	stringtab
  2609  0921  1683               	bsf	3,5	;RP0=1, select bank1
  2610  0922  1303               	bcf	3,6	;RP1=0, select bank1
  2611  0923  00C7               	movwf	sprintf@c^(0+128)
  2612  0924  00AA               	movwf	(??_sprintf+2)^(0+128)
  2613  0925  01AB               	clrf	((??_sprintf+2)^(0+128)+1)
  2614                           
  2615                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2616                           ; Switch size 1, requested type "simple"
  2617                           ; Number of cases is 1, Range of values is 0 to 0
  2618                           ; switch strategies available:
  2619                           ; Name         Instructions Cycles
  2620                           ; simple_byte            4     3 (average)
  2621                           ; direct_byte           11     8 (fixed)
  2622                           ; jumptable            260     6 (fixed)
  2623                           ;	Chosen strategy is simple_byte
  2624  0926  082B               	movf	(??_sprintf+3)^(0+128),w
  2625  0927  3A00               	xorlw	0	; case 0
  2626  0928  1903               	skipnz
  2627  0929  292B               	goto	l4619
  2628  092A  2FCF               	goto	l4455
  2629  092B                     l4619:
  2630                           
  2631                           ; Switch size 1, requested type "simple"
  2632                           ; Number of cases is 2, Range of values is 0 to 102
  2633                           ; switch strategies available:
  2634                           ; Name         Instructions Cycles
  2635                           ; simple_byte            7     4 (average)
  2636                           ; jumptable            260     6 (fixed)
  2637                           ;	Chosen strategy is simple_byte
  2638  092B  082A               	movf	(??_sprintf+2)^(0+128),w
  2639  092C  3A00               	xorlw	0	; case 0
  2640  092D  1903               	skipnz
  2641  092E  2FFB               	goto	l4457
  2642  092F  3A66               	xorlw	102	; case 102
  2643  0930  1903               	skipnz
  2644  0931  28FD               	goto	l327
  2645  0932  2FCF               	goto	l4455
  2646  0933                     l4245:
  2647                           
  2648                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2649  0933  3000               	movlw	0
  2650  0934  0536               	andwf	sprintf@flag^(0+128),w
  2651  0935  00A8               	movwf	??_sprintf^(0+128)
  2652  0936  3007               	movlw	7
  2653  0937  0537               	andwf	(sprintf@flag+1)^(0+128),w
  2654  0938  00A9               	movwf	(??_sprintf+1)^(0+128)
  2655  0939  0828               	movf	??_sprintf^(0+128),w
  2656  093A  0429               	iorwf	(??_sprintf^(0+128)+1),w
  2657  093B  1903               	btfsc	3,2
  2658  093C  293E               	goto	u6721
  2659  093D  293F               	goto	u6720
  2660  093E                     u6721:
  2661  093E  2F0C               	goto	l4409
  2662  093F                     u6720:
  2663  093F                     l4247:
  2664                           
  2665                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2666  093F  1E37               	btfss	(sprintf@flag+1)^(0+128),4
  2667  0940  2942               	goto	u6731
  2668  0941  2943               	goto	u6730
  2669  0942                     u6731:
  2670  0942  2947               	goto	l4251
  2671  0943                     u6730:
  2672  0943                     l4249:
  2673                           
  2674                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2675  0943  3006               	movlw	6
  2676  0944  00C5               	movwf	sprintf@prec^(0+128)
  2677  0945  3000               	movlw	0
  2678  0946  00C6               	movwf	(sprintf@prec^(0+128)+1)
  2679  0947                     l4251:
  2680                           
  2681                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2682  0947  0831               	movf	sprintf@ap^(0+128),w
  2683  0948  0084               	movwf	4
  2684  0949  1383               	bcf	3,7	;select IRP bank0
  2685  094A  0800               	movf	0,w
  2686  094B  00C0               	movwf	sprintf@fval^(0+128)
  2687  094C  0A84               	incf	4,f
  2688  094D  0800               	movf	0,w
  2689  094E  00C1               	movwf	(sprintf@fval+1)^(0+128)
  2690  094F  0A84               	incf	4,f
  2691  0950  0800               	movf	0,w
  2692  0951  00C2               	movwf	(sprintf@fval+2)^(0+128)
  2693  0952  0A84               	incf	4,f
  2694  0953  0800               	movf	0,w
  2695  0954  00C3               	movwf	(sprintf@fval+3)^(0+128)
  2696  0955                     l4253:
  2697  0955  3004               	movlw	4
  2698  0956  00A8               	movwf	??_sprintf^(0+128)
  2699  0957  0828               	movf	??_sprintf^(0+128),w
  2700  0958  07B1               	addwf	sprintf@ap^(0+128),f
  2701  0959                     l4255:
  2702                           
  2703                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2704  0959  0843               	movf	(sprintf@fval+3)^(0+128),w
  2705  095A  00F5               	movwf	___flge@ff1+3
  2706  095B  0842               	movf	(sprintf@fval+2)^(0+128),w
  2707  095C  00F4               	movwf	___flge@ff1+2
  2708  095D  0841               	movf	(sprintf@fval+1)^(0+128),w
  2709  095E  00F3               	movwf	___flge@ff1+1
  2710  095F  0840               	movf	sprintf@fval^(0+128),w
  2711  0960  00F2               	movwf	___flge@ff1
  2712  0961  3000               	movlw	0
  2713  0962  00F9               	movwf	___flge@ff2+3
  2714  0963  3000               	movlw	0
  2715  0964  00F8               	movwf	___flge@ff2+2
  2716  0965  3000               	movlw	0
  2717  0966  00F7               	movwf	___flge@ff2+1
  2718  0967  3000               	movlw	0
  2719  0968  00F6               	movwf	___flge@ff2
  2720  0969  160A  158A  26A0  120A  158A  	fcall	___flge
  2721  096E  1803               	btfsc	3,0
  2722  096F  2971               	goto	u6741
  2723  0970  2972               	goto	u6740
  2724  0971                     u6741:
  2725  0971  298F               	goto	l4261
  2726  0972                     u6740:
  2727  0972                     l4257:
  2728                           
  2729                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2730  0972  1683               	bsf	3,5	;RP0=1, select bank1
  2731  0973  1303               	bcf	3,6	;RP1=0, select bank1
  2732  0974  0843               	movf	(sprintf@fval+3)^(0+128),w
  2733  0975  00F5               	movwf	___flneg@f1+3
  2734  0976  0842               	movf	(sprintf@fval+2)^(0+128),w
  2735  0977  00F4               	movwf	___flneg@f1+2
  2736  0978  0841               	movf	(sprintf@fval+1)^(0+128),w
  2737  0979  00F3               	movwf	___flneg@f1+1
  2738  097A  0840               	movf	sprintf@fval^(0+128),w
  2739  097B  00F2               	movwf	___flneg@f1
  2740  097C  160A  158A  2215  120A  158A  	fcall	___flneg
  2741  0981  0875               	movf	?___flneg+3,w
  2742  0982  1683               	bsf	3,5	;RP0=1, select bank1
  2743  0983  1303               	bcf	3,6	;RP1=0, select bank1
  2744  0984  00C3               	movwf	(sprintf@fval+3)^(0+128)
  2745  0985  0874               	movf	?___flneg+2,w
  2746  0986  00C2               	movwf	(sprintf@fval+2)^(0+128)
  2747  0987  0873               	movf	?___flneg+1,w
  2748  0988  00C1               	movwf	(sprintf@fval+1)^(0+128)
  2749  0989  0872               	movf	?___flneg,w
  2750  098A  00C0               	movwf	sprintf@fval^(0+128)
  2751  098B                     l4259:
  2752                           
  2753                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2754  098B  3003               	movlw	3
  2755  098C  04B6               	iorwf	sprintf@flag^(0+128),f
  2756  098D  3000               	movlw	0
  2757  098E  04B7               	iorwf	(sprintf@flag+1)^(0+128),f
  2758  098F                     l4261:
  2759                           
  2760                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2761  098F  1683               	bsf	3,5	;RP0=1, select bank1
  2762  0990  1303               	bcf	3,6	;RP1=0, select bank1
  2763  0991  01BE               	clrf	sprintf@eexp^(0+128)
  2764  0992  01BF               	clrf	(sprintf@eexp+1)^(0+128)
  2765  0993                     l4263:
  2766                           
  2767                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2768  0993  0843               	movf	(sprintf@fval+3)^(0+128),w
  2769  0994  00F5               	movwf	___fleq@ff1+3
  2770  0995  0842               	movf	(sprintf@fval+2)^(0+128),w
  2771  0996  00F4               	movwf	___fleq@ff1+2
  2772  0997  0841               	movf	(sprintf@fval+1)^(0+128),w
  2773  0998  00F3               	movwf	___fleq@ff1+1
  2774  0999  0840               	movf	sprintf@fval^(0+128),w
  2775  099A  00F2               	movwf	___fleq@ff1
  2776  099B  3000               	movlw	0
  2777  099C  00F9               	movwf	___fleq@ff2+3
  2778  099D  3000               	movlw	0
  2779  099E  00F8               	movwf	___fleq@ff2+2
  2780  099F  3000               	movlw	0
  2781  09A0  00F7               	movwf	___fleq@ff2+1
  2782  09A1  3000               	movlw	0
  2783  09A2  00F6               	movwf	___fleq@ff2
  2784  09A3  160A  158A  238A  120A  158A  	fcall	___fleq
  2785  09A8  1803               	btfsc	3,0
  2786  09A9  29AB               	goto	u6751
  2787  09AA  29AC               	goto	u6750
  2788  09AB                     u6751:
  2789  09AB  2AAC               	goto	l4289
  2790  09AC                     u6750:
  2791  09AC                     l4265:
  2792                           
  2793                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2794  09AC  1003               	clrc
  2795  09AD  1683               	bsf	3,5	;RP0=1, select bank1
  2796  09AE  1303               	bcf	3,6	;RP1=0, select bank1
  2797  09AF  0D42               	rlf	(sprintf@fval+2)^(0+128),w
  2798  09B0  0D43               	rlf	(sprintf@fval+3)^(0+128),w
  2799  09B1  3E82               	addlw	130
  2800  09B2  00BE               	movwf	sprintf@eexp^(0+128)
  2801  09B3  30FF               	movlw	255
  2802  09B4  1803               	skipnc
  2803  09B5  3000               	movlw	0
  2804  09B6  00BF               	movwf	(sprintf@eexp^(0+128)+1)
  2805  09B7                     l4267:
  2806                           
  2807                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2808  09B7  30FF               	movlw	255
  2809  09B8  07BE               	addwf	sprintf@eexp^(0+128),f
  2810  09B9  1803               	skipnc
  2811  09BA  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  2812  09BB  30FF               	movlw	255
  2813  09BC  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  2814  09BD                     l4269:
  2815                           
  2816                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2817  09BD  3003               	movlw	3
  2818  09BE  00F2               	movwf	___wmul@multiplier
  2819  09BF  3000               	movlw	0
  2820  09C0  00F3               	movwf	___wmul@multiplier+1
  2821  09C1  083F               	movf	(sprintf@eexp+1)^(0+128),w
  2822  09C2  00F5               	movwf	___wmul@multiplicand+1
  2823  09C3  083E               	movf	sprintf@eexp^(0+128),w
  2824  09C4  00F4               	movwf	___wmul@multiplicand
  2825  09C5  160A  158A  2292  120A  158A  	fcall	___wmul
  2826  09CA  0873               	movf	?___wmul+1,w
  2827  09CB  1683               	bsf	3,5	;RP0=1, select bank1
  2828  09CC  1303               	bcf	3,6	;RP1=0, select bank1
  2829  09CD  00BF               	movwf	(sprintf@eexp+1)^(0+128)
  2830  09CE  0872               	movf	?___wmul,w
  2831  09CF  00BE               	movwf	sprintf@eexp^(0+128)
  2832  09D0                     l4271:
  2833                           
  2834                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2835  09D0  300A               	movlw	10
  2836  09D1  1283               	bcf	3,5	;RP0=0, select bank0
  2837  09D2  1303               	bcf	3,6	;RP1=0, select bank0
  2838  09D3  00A0               	movwf	___awdiv@divisor
  2839  09D4  3000               	movlw	0
  2840  09D5  00A1               	movwf	___awdiv@divisor+1
  2841  09D6  1683               	bsf	3,5	;RP0=1, select bank1
  2842  09D7  1303               	bcf	3,6	;RP1=0, select bank1
  2843  09D8  083F               	movf	(sprintf@eexp+1)^(0+128),w
  2844  09D9  1283               	bcf	3,5	;RP0=0, select bank0
  2845  09DA  1303               	bcf	3,6	;RP1=0, select bank0
  2846  09DB  00A3               	movwf	___awdiv@dividend+1
  2847  09DC  1683               	bsf	3,5	;RP0=1, select bank1
  2848  09DD  1303               	bcf	3,6	;RP1=0, select bank1
  2849  09DE  083E               	movf	sprintf@eexp^(0+128),w
  2850  09DF  1283               	bcf	3,5	;RP0=0, select bank0
  2851  09E0  1303               	bcf	3,6	;RP1=0, select bank0
  2852  09E1  00A2               	movwf	___awdiv@dividend
  2853  09E2  160A  158A  2541  120A  158A  	fcall	___awdiv
  2854  09E7  1283               	bcf	3,5	;RP0=0, select bank0
  2855  09E8  1303               	bcf	3,6	;RP1=0, select bank0
  2856  09E9  0821               	movf	?___awdiv+1,w
  2857  09EA  1683               	bsf	3,5	;RP0=1, select bank1
  2858  09EB  1303               	bcf	3,6	;RP1=0, select bank1
  2859  09EC  00BF               	movwf	(sprintf@eexp+1)^(0+128)
  2860  09ED  1283               	bcf	3,5	;RP0=0, select bank0
  2861  09EE  1303               	bcf	3,6	;RP1=0, select bank0
  2862  09EF  0820               	movf	?___awdiv,w
  2863  09F0  1683               	bsf	3,5	;RP0=1, select bank1
  2864  09F1  1303               	bcf	3,6	;RP1=0, select bank1
  2865  09F2  00BE               	movwf	sprintf@eexp^(0+128)
  2866  09F3                     l4273:
  2867                           
  2868                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2869  09F3  1FBF               	btfss	(sprintf@eexp+1)^(0+128),7
  2870  09F4  29F6               	goto	u6761
  2871  09F5  29F7               	goto	u6760
  2872  09F6                     u6761:
  2873  09F6  29FD               	goto	l4277
  2874  09F7                     u6760:
  2875  09F7                     l4275:
  2876                           
  2877                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2878  09F7  30FF               	movlw	255
  2879  09F8  07BE               	addwf	sprintf@eexp^(0+128),f
  2880  09F9  1803               	skipnc
  2881  09FA  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  2882  09FB  30FF               	movlw	255
  2883  09FC  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  2884  09FD                     l4277:
  2885                           
  2886                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2887  09FD  033E               	decf	sprintf@eexp^(0+128),w
  2888  09FE  3AFF               	xorlw	255
  2889  09FF  120A  118A  201E  120A  158A  	fcall	_scale
  2890  0A04  1283               	bcf	3,5	;RP0=0, select bank0
  2891  0A05  1303               	bcf	3,6	;RP1=0, select bank0
  2892  0A06  0845               	movf	?_scale+3,w
  2893  0A07  1683               	bsf	3,5	;RP0=1, select bank1
  2894  0A08  1303               	bcf	3,6	;RP1=0, select bank1
  2895  0A09  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  2896  0A0A  1283               	bcf	3,5	;RP0=0, select bank0
  2897  0A0B  1303               	bcf	3,6	;RP1=0, select bank0
  2898  0A0C  0844               	movf	?_scale+2,w
  2899  0A0D  1683               	bsf	3,5	;RP0=1, select bank1
  2900  0A0E  1303               	bcf	3,6	;RP1=0, select bank1
  2901  0A0F  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  2902  0A10  1283               	bcf	3,5	;RP0=0, select bank0
  2903  0A11  1303               	bcf	3,6	;RP1=0, select bank0
  2904  0A12  0843               	movf	?_scale+1,w
  2905  0A13  1683               	bsf	3,5	;RP0=1, select bank1
  2906  0A14  1303               	bcf	3,6	;RP1=0, select bank1
  2907  0A15  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  2908  0A16  1283               	bcf	3,5	;RP0=0, select bank0
  2909  0A17  1303               	bcf	3,6	;RP1=0, select bank0
  2910  0A18  0842               	movf	?_scale,w
  2911  0A19  1683               	bsf	3,5	;RP0=1, select bank1
  2912  0A1A  1303               	bcf	3,6	;RP1=0, select bank1
  2913  0A1B  00BA               	movwf	sprintf@tmpval^(0+128)
  2914  0A1C                     l4279:
  2915                           
  2916                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2917  0A1C  0843               	movf	(sprintf@fval+3)^(0+128),w
  2918  0A1D  1283               	bcf	3,5	;RP0=0, select bank0
  2919  0A1E  1303               	bcf	3,6	;RP1=0, select bank0
  2920  0A1F  00AB               	movwf	___flmul@b+3
  2921  0A20  1683               	bsf	3,5	;RP0=1, select bank1
  2922  0A21  1303               	bcf	3,6	;RP1=0, select bank1
  2923  0A22  0842               	movf	(sprintf@fval+2)^(0+128),w
  2924  0A23  1283               	bcf	3,5	;RP0=0, select bank0
  2925  0A24  1303               	bcf	3,6	;RP1=0, select bank0
  2926  0A25  00AA               	movwf	___flmul@b+2
  2927  0A26  1683               	bsf	3,5	;RP0=1, select bank1
  2928  0A27  1303               	bcf	3,6	;RP1=0, select bank1
  2929  0A28  0841               	movf	(sprintf@fval+1)^(0+128),w
  2930  0A29  1283               	bcf	3,5	;RP0=0, select bank0
  2931  0A2A  1303               	bcf	3,6	;RP1=0, select bank0
  2932  0A2B  00A9               	movwf	___flmul@b+1
  2933  0A2C  1683               	bsf	3,5	;RP0=1, select bank1
  2934  0A2D  1303               	bcf	3,6	;RP1=0, select bank1
  2935  0A2E  0840               	movf	sprintf@fval^(0+128),w
  2936  0A2F  1283               	bcf	3,5	;RP0=0, select bank0
  2937  0A30  1303               	bcf	3,6	;RP1=0, select bank0
  2938  0A31  00A8               	movwf	___flmul@b
  2939  0A32  1683               	bsf	3,5	;RP0=1, select bank1
  2940  0A33  1303               	bcf	3,6	;RP1=0, select bank1
  2941  0A34  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2942  0A35  1283               	bcf	3,5	;RP0=0, select bank0
  2943  0A36  1303               	bcf	3,6	;RP1=0, select bank0
  2944  0A37  00AF               	movwf	___flmul@a+3
  2945  0A38  1683               	bsf	3,5	;RP0=1, select bank1
  2946  0A39  1303               	bcf	3,6	;RP1=0, select bank1
  2947  0A3A  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2948  0A3B  1283               	bcf	3,5	;RP0=0, select bank0
  2949  0A3C  1303               	bcf	3,6	;RP1=0, select bank0
  2950  0A3D  00AE               	movwf	___flmul@a+2
  2951  0A3E  1683               	bsf	3,5	;RP0=1, select bank1
  2952  0A3F  1303               	bcf	3,6	;RP1=0, select bank1
  2953  0A40  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2954  0A41  1283               	bcf	3,5	;RP0=0, select bank0
  2955  0A42  1303               	bcf	3,6	;RP1=0, select bank0
  2956  0A43  00AD               	movwf	___flmul@a+1
  2957  0A44  1683               	bsf	3,5	;RP0=1, select bank1
  2958  0A45  1303               	bcf	3,6	;RP1=0, select bank1
  2959  0A46  083A               	movf	sprintf@tmpval^(0+128),w
  2960  0A47  1283               	bcf	3,5	;RP0=0, select bank0
  2961  0A48  1303               	bcf	3,6	;RP1=0, select bank0
  2962  0A49  00AC               	movwf	___flmul@a
  2963  0A4A  120A  118A  23B7  120A  158A  	fcall	___flmul
  2964  0A4F  1283               	bcf	3,5	;RP0=0, select bank0
  2965  0A50  1303               	bcf	3,6	;RP1=0, select bank0
  2966  0A51  082B               	movf	?___flmul+3,w
  2967  0A52  1683               	bsf	3,5	;RP0=1, select bank1
  2968  0A53  1303               	bcf	3,6	;RP1=0, select bank1
  2969  0A54  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  2970  0A55  1283               	bcf	3,5	;RP0=0, select bank0
  2971  0A56  1303               	bcf	3,6	;RP1=0, select bank0
  2972  0A57  082A               	movf	?___flmul+2,w
  2973  0A58  1683               	bsf	3,5	;RP0=1, select bank1
  2974  0A59  1303               	bcf	3,6	;RP1=0, select bank1
  2975  0A5A  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  2976  0A5B  1283               	bcf	3,5	;RP0=0, select bank0
  2977  0A5C  1303               	bcf	3,6	;RP1=0, select bank0
  2978  0A5D  0829               	movf	?___flmul+1,w
  2979  0A5E  1683               	bsf	3,5	;RP0=1, select bank1
  2980  0A5F  1303               	bcf	3,6	;RP1=0, select bank1
  2981  0A60  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  2982  0A61  1283               	bcf	3,5	;RP0=0, select bank0
  2983  0A62  1303               	bcf	3,6	;RP1=0, select bank0
  2984  0A63  0828               	movf	?___flmul,w
  2985  0A64  1683               	bsf	3,5	;RP0=1, select bank1
  2986  0A65  1303               	bcf	3,6	;RP1=0, select bank1
  2987  0A66  00BA               	movwf	sprintf@tmpval^(0+128)
  2988  0A67                     l4281:
  2989                           
  2990                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2991  0A67  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2992  0A68  00F5               	movwf	___flge@ff1+3
  2993  0A69  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2994  0A6A  00F4               	movwf	___flge@ff1+2
  2995  0A6B  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2996  0A6C  00F3               	movwf	___flge@ff1+1
  2997  0A6D  083A               	movf	sprintf@tmpval^(0+128),w
  2998  0A6E  00F2               	movwf	___flge@ff1
  2999  0A6F  303F               	movlw	63
  3000  0A70  00F9               	movwf	___flge@ff2+3
  3001  0A71  3080               	movlw	128
  3002  0A72  00F8               	movwf	___flge@ff2+2
  3003  0A73  3000               	movlw	0
  3004  0A74  00F7               	movwf	___flge@ff2+1
  3005  0A75  3000               	movlw	0
  3006  0A76  00F6               	movwf	___flge@ff2
  3007  0A77  160A  158A  26A0  120A  158A  	fcall	___flge
  3008  0A7C  1803               	btfsc	3,0
  3009  0A7D  2A7F               	goto	u6771
  3010  0A7E  2A80               	goto	u6770
  3011  0A7F                     u6771:
  3012  0A7F  2A89               	goto	l4285
  3013  0A80                     u6770:
  3014  0A80                     l4283:
  3015                           
  3016                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  3017  0A80  30FF               	movlw	255
  3018  0A81  1683               	bsf	3,5	;RP0=1, select bank1
  3019  0A82  1303               	bcf	3,6	;RP1=0, select bank1
  3020  0A83  07BE               	addwf	sprintf@eexp^(0+128),f
  3021  0A84  1803               	skipnc
  3022  0A85  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  3023  0A86  30FF               	movlw	255
  3024  0A87  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  3025  0A88  2AAC               	goto	l4289
  3026  0A89                     l4285:
  3027  0A89  1683               	bsf	3,5	;RP0=1, select bank1
  3028  0A8A  1303               	bcf	3,6	;RP1=0, select bank1
  3029  0A8B  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  3030  0A8C  00F5               	movwf	___flge@ff1+3
  3031  0A8D  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  3032  0A8E  00F4               	movwf	___flge@ff1+2
  3033  0A8F  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  3034  0A90  00F3               	movwf	___flge@ff1+1
  3035  0A91  083A               	movf	sprintf@tmpval^(0+128),w
  3036  0A92  00F2               	movwf	___flge@ff1
  3037  0A93  3041               	movlw	65
  3038  0A94  00F9               	movwf	___flge@ff2+3
  3039  0A95  3020               	movlw	32
  3040  0A96  00F8               	movwf	___flge@ff2+2
  3041  0A97  3000               	movlw	0
  3042  0A98  00F7               	movwf	___flge@ff2+1
  3043  0A99  3000               	movlw	0
  3044  0A9A  00F6               	movwf	___flge@ff2
  3045  0A9B  160A  158A  26A0  120A  158A  	fcall	___flge
  3046  0AA0  1C03               	btfss	3,0
  3047  0AA1  2AA3               	goto	u6781
  3048  0AA2  2AA4               	goto	u6780
  3049  0AA3                     u6781:
  3050  0AA3  2AAC               	goto	l4289
  3051  0AA4                     u6780:
  3052  0AA4                     l4287:
  3053                           
  3054                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  3055  0AA4  3001               	movlw	1
  3056  0AA5  1683               	bsf	3,5	;RP0=1, select bank1
  3057  0AA6  1303               	bcf	3,6	;RP1=0, select bank1
  3058  0AA7  07BE               	addwf	sprintf@eexp^(0+128),f
  3059  0AA8  1803               	skipnc
  3060  0AA9  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  3061  0AAA  3000               	movlw	0
  3062  0AAB  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  3063  0AAC                     l4289:
  3064                           
  3065                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  3066  0AAC  1683               	bsf	3,5	;RP0=1, select bank1
  3067  0AAD  1303               	bcf	3,6	;RP1=0, select bank1
  3068  0AAE  0846               	movf	(sprintf@prec+1)^(0+128),w
  3069  0AAF  3A80               	xorlw	128
  3070  0AB0  00FF               	movwf	btemp+1
  3071  0AB1  3080               	movlw	128
  3072  0AB2  027F               	subwf	btemp+1,w
  3073  0AB3  1D03               	skipz
  3074  0AB4  2AB7               	goto	u6795
  3075  0AB5  300D               	movlw	13
  3076  0AB6  0245               	subwf	sprintf@prec^(0+128),w
  3077  0AB7                     u6795:
  3078  0AB7  1803               	skipnc
  3079  0AB8  2ABA               	goto	u6791
  3080  0AB9  2ABB               	goto	u6790
  3081  0ABA                     u6791:
  3082  0ABA  2B02               	goto	l4293
  3083  0ABB                     u6790:
  3084  0ABB                     l4291:
  3085                           
  3086                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  3087  0ABB  1683               	bsf	3,5	;RP0=1, select bank1
  3088  0ABC  1303               	bcf	3,6	;RP1=0, select bank1
  3089  0ABD  0845               	movf	sprintf@prec^(0+128),w
  3090  0ABE  160A  118A  20C0  120A  158A  	fcall	_fround
  3091  0AC3  1283               	bcf	3,5	;RP0=0, select bank0
  3092  0AC4  1303               	bcf	3,6	;RP1=0, select bank0
  3093  0AC5  0845               	movf	?_fround+3,w
  3094  0AC6  00D9               	movwf	___fladd@b+3
  3095  0AC7  0844               	movf	?_fround+2,w
  3096  0AC8  00D8               	movwf	___fladd@b+2
  3097  0AC9  0843               	movf	?_fround+1,w
  3098  0ACA  00D7               	movwf	___fladd@b+1
  3099  0ACB  0842               	movf	?_fround,w
  3100  0ACC  00D6               	movwf	___fladd@b
  3101  0ACD  1683               	bsf	3,5	;RP0=1, select bank1
  3102  0ACE  1303               	bcf	3,6	;RP1=0, select bank1
  3103  0ACF  0843               	movf	(sprintf@fval+3)^(0+128),w
  3104  0AD0  1283               	bcf	3,5	;RP0=0, select bank0
  3105  0AD1  1303               	bcf	3,6	;RP1=0, select bank0
  3106  0AD2  00DD               	movwf	___fladd@a+3
  3107  0AD3  1683               	bsf	3,5	;RP0=1, select bank1
  3108  0AD4  1303               	bcf	3,6	;RP1=0, select bank1
  3109  0AD5  0842               	movf	(sprintf@fval+2)^(0+128),w
  3110  0AD6  1283               	bcf	3,5	;RP0=0, select bank0
  3111  0AD7  1303               	bcf	3,6	;RP1=0, select bank0
  3112  0AD8  00DC               	movwf	___fladd@a+2
  3113  0AD9  1683               	bsf	3,5	;RP0=1, select bank1
  3114  0ADA  1303               	bcf	3,6	;RP1=0, select bank1
  3115  0ADB  0841               	movf	(sprintf@fval+1)^(0+128),w
  3116  0ADC  1283               	bcf	3,5	;RP0=0, select bank0
  3117  0ADD  1303               	bcf	3,6	;RP1=0, select bank0
  3118  0ADE  00DB               	movwf	___fladd@a+1
  3119  0ADF  1683               	bsf	3,5	;RP0=1, select bank1
  3120  0AE0  1303               	bcf	3,6	;RP1=0, select bank1
  3121  0AE1  0840               	movf	sprintf@fval^(0+128),w
  3122  0AE2  1283               	bcf	3,5	;RP0=0, select bank0
  3123  0AE3  1303               	bcf	3,6	;RP1=0, select bank0
  3124  0AE4  00DA               	movwf	___fladd@a
  3125  0AE5  160A  118A  22E5  120A  158A  	fcall	___fladd
  3126  0AEA  1283               	bcf	3,5	;RP0=0, select bank0
  3127  0AEB  1303               	bcf	3,6	;RP1=0, select bank0
  3128  0AEC  0859               	movf	?___fladd+3,w
  3129  0AED  1683               	bsf	3,5	;RP0=1, select bank1
  3130  0AEE  1303               	bcf	3,6	;RP1=0, select bank1
  3131  0AEF  00C3               	movwf	(sprintf@fval+3)^(0+128)
  3132  0AF0  1283               	bcf	3,5	;RP0=0, select bank0
  3133  0AF1  1303               	bcf	3,6	;RP1=0, select bank0
  3134  0AF2  0858               	movf	?___fladd+2,w
  3135  0AF3  1683               	bsf	3,5	;RP0=1, select bank1
  3136  0AF4  1303               	bcf	3,6	;RP1=0, select bank1
  3137  0AF5  00C2               	movwf	(sprintf@fval+2)^(0+128)
  3138  0AF6  1283               	bcf	3,5	;RP0=0, select bank0
  3139  0AF7  1303               	bcf	3,6	;RP1=0, select bank0
  3140  0AF8  0857               	movf	?___fladd+1,w
  3141  0AF9  1683               	bsf	3,5	;RP0=1, select bank1
  3142  0AFA  1303               	bcf	3,6	;RP1=0, select bank1
  3143  0AFB  00C1               	movwf	(sprintf@fval+1)^(0+128)
  3144  0AFC  1283               	bcf	3,5	;RP0=0, select bank0
  3145  0AFD  1303               	bcf	3,6	;RP1=0, select bank0
  3146  0AFE  0856               	movf	?___fladd,w
  3147  0AFF  1683               	bsf	3,5	;RP0=1, select bank1
  3148  0B00  1303               	bcf	3,6	;RP1=0, select bank1
  3149  0B01  00C0               	movwf	sprintf@fval^(0+128)
  3150  0B02                     l4293:
  3151                           
  3152                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  3153  0B02  1683               	bsf	3,5	;RP0=1, select bank1
  3154  0B03  1303               	bcf	3,6	;RP1=0, select bank1
  3155  0B04  083F               	movf	(sprintf@eexp+1)^(0+128),w
  3156  0B05  3A80               	xorlw	128
  3157  0B06  00FF               	movwf	btemp+1
  3158  0B07  3080               	movlw	128
  3159  0B08  027F               	subwf	btemp+1,w
  3160  0B09  1D03               	skipz
  3161  0B0A  2B0D               	goto	u6805
  3162  0B0B  300A               	movlw	10
  3163  0B0C  023E               	subwf	sprintf@eexp^(0+128),w
  3164  0B0D                     u6805:
  3165  0B0D  1803               	skipnc
  3166  0B0E  2B10               	goto	u6801
  3167  0B0F  2B11               	goto	u6800
  3168  0B10                     u6801:
  3169  0B10  2B62               	goto	l4301
  3170  0B11                     u6800:
  3171  0B11                     l4295:
  3172  0B11  1683               	bsf	3,5	;RP0=1, select bank1
  3173  0B12  1303               	bcf	3,6	;RP1=0, select bank1
  3174  0B13  0843               	movf	(sprintf@fval+3)^(0+128),w
  3175  0B14  00F5               	movwf	___fleq@ff1+3
  3176  0B15  0842               	movf	(sprintf@fval+2)^(0+128),w
  3177  0B16  00F4               	movwf	___fleq@ff1+2
  3178  0B17  0841               	movf	(sprintf@fval+1)^(0+128),w
  3179  0B18  00F3               	movwf	___fleq@ff1+1
  3180  0B19  0840               	movf	sprintf@fval^(0+128),w
  3181  0B1A  00F2               	movwf	___fleq@ff1
  3182  0B1B  3000               	movlw	0
  3183  0B1C  00F9               	movwf	___fleq@ff2+3
  3184  0B1D  3000               	movlw	0
  3185  0B1E  00F8               	movwf	___fleq@ff2+2
  3186  0B1F  3000               	movlw	0
  3187  0B20  00F7               	movwf	___fleq@ff2+1
  3188  0B21  3000               	movlw	0
  3189  0B22  00F6               	movwf	___fleq@ff2
  3190  0B23  160A  158A  238A  120A  158A  	fcall	___fleq
  3191  0B28  1803               	btfsc	3,0
  3192  0B29  2B2B               	goto	u6811
  3193  0B2A  2B2C               	goto	u6810
  3194  0B2B                     u6811:
  3195  0B2B  2BD4               	goto	l4315
  3196  0B2C                     u6810:
  3197  0B2C                     l4297:
  3198  0B2C  1683               	bsf	3,5	;RP0=1, select bank1
  3199  0B2D  1303               	bcf	3,6	;RP1=0, select bank1
  3200  0B2E  0843               	movf	(sprintf@fval+3)^(0+128),w
  3201  0B2F  1283               	bcf	3,5	;RP0=0, select bank0
  3202  0B30  1303               	bcf	3,6	;RP1=0, select bank0
  3203  0B31  00D8               	movwf	___fltol@f1+3
  3204  0B32  1683               	bsf	3,5	;RP0=1, select bank1
  3205  0B33  1303               	bcf	3,6	;RP1=0, select bank1
  3206  0B34  0842               	movf	(sprintf@fval+2)^(0+128),w
  3207  0B35  1283               	bcf	3,5	;RP0=0, select bank0
  3208  0B36  1303               	bcf	3,6	;RP1=0, select bank0
  3209  0B37  00D7               	movwf	___fltol@f1+2
  3210  0B38  1683               	bsf	3,5	;RP0=1, select bank1
  3211  0B39  1303               	bcf	3,6	;RP1=0, select bank1
  3212  0B3A  0841               	movf	(sprintf@fval+1)^(0+128),w
  3213  0B3B  1283               	bcf	3,5	;RP0=0, select bank0
  3214  0B3C  1303               	bcf	3,6	;RP1=0, select bank0
  3215  0B3D  00D6               	movwf	___fltol@f1+1
  3216  0B3E  1683               	bsf	3,5	;RP0=1, select bank1
  3217  0B3F  1303               	bcf	3,6	;RP1=0, select bank1
  3218  0B40  0840               	movf	sprintf@fval^(0+128),w
  3219  0B41  1283               	bcf	3,5	;RP0=0, select bank0
  3220  0B42  1303               	bcf	3,6	;RP1=0, select bank0
  3221  0B43  00D5               	movwf	___fltol@f1
  3222  0B44  160A  158A  2624  120A  158A  	fcall	___fltol
  3223  0B49  1283               	bcf	3,5	;RP0=0, select bank0
  3224  0B4A  1303               	bcf	3,6	;RP1=0, select bank0
  3225  0B4B  0858               	movf	?___fltol+3,w
  3226  0B4C  0457               	iorwf	?___fltol+2,w
  3227  0B4D  0456               	iorwf	?___fltol+1,w
  3228  0B4E  0455               	iorwf	?___fltol,w
  3229  0B4F  1D03               	skipz
  3230  0B50  2B52               	goto	u6821
  3231  0B51  2B53               	goto	u6820
  3232  0B52                     u6821:
  3233  0B52  2BD4               	goto	l4315
  3234  0B53                     u6820:
  3235  0B53                     l4299:
  3236  0B53  1683               	bsf	3,5	;RP0=1, select bank1
  3237  0B54  1303               	bcf	3,6	;RP1=0, select bank1
  3238  0B55  083F               	movf	(sprintf@eexp+1)^(0+128),w
  3239  0B56  3A80               	xorlw	128
  3240  0B57  00FF               	movwf	btemp+1
  3241  0B58  3080               	movlw	128
  3242  0B59  027F               	subwf	btemp+1,w
  3243  0B5A  1D03               	skipz
  3244  0B5B  2B5E               	goto	u6835
  3245  0B5C  3002               	movlw	2
  3246  0B5D  023E               	subwf	sprintf@eexp^(0+128),w
  3247  0B5E                     u6835:
  3248  0B5E  1C03               	skipc
  3249  0B5F  2B61               	goto	u6831
  3250  0B60  2B62               	goto	u6830
  3251  0B61                     u6831:
  3252  0B61  2BD4               	goto	l4315
  3253  0B62                     u6830:
  3254  0B62                     l4301:
  3255                           
  3256                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  3257  0B62  1683               	bsf	3,5	;RP0=1, select bank1
  3258  0B63  1303               	bcf	3,6	;RP1=0, select bank1
  3259  0B64  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  3260  0B65  00F5               	movwf	___flge@ff1+3
  3261  0B66  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  3262  0B67  00F4               	movwf	___flge@ff1+2
  3263  0B68  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  3264  0B69  00F3               	movwf	___flge@ff1+1
  3265  0B6A  083A               	movf	sprintf@tmpval^(0+128),w
  3266  0B6B  00F2               	movwf	___flge@ff1
  3267  0B6C  3040               	movlw	64
  3268  0B6D  00F9               	movwf	___flge@ff2+3
  3269  0B6E  3089               	movlw	137
  3270  0B6F  00F8               	movwf	___flge@ff2+2
  3271  0B70  3070               	movlw	112
  3272  0B71  00F7               	movwf	___flge@ff2+1
  3273  0B72  305F               	movlw	95
  3274  0B73  00F6               	movwf	___flge@ff2
  3275  0B74  160A  158A  26A0  120A  158A  	fcall	___flge
  3276  0B79  1803               	btfsc	3,0
  3277  0B7A  2B7C               	goto	u6841
  3278  0B7B  2B7D               	goto	u6840
  3279  0B7C                     u6841:
  3280  0B7C  2B86               	goto	l4305
  3281  0B7D                     u6840:
  3282  0B7D                     l4303:
  3283                           
  3284                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  3285  0B7D  30F7               	movlw	247
  3286  0B7E  1683               	bsf	3,5	;RP0=1, select bank1
  3287  0B7F  1303               	bcf	3,6	;RP1=0, select bank1
  3288  0B80  07BE               	addwf	sprintf@eexp^(0+128),f
  3289  0B81  1803               	skipnc
  3290  0B82  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  3291  0B83  30FF               	movlw	255
  3292  0B84  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  3293                           
  3294                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  3295  0B85  2B8E               	goto	l4307
  3296  0B86                     l4305:
  3297                           
  3298                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  3299  0B86  30F8               	movlw	248
  3300  0B87  1683               	bsf	3,5	;RP0=1, select bank1
  3301  0B88  1303               	bcf	3,6	;RP1=0, select bank1
  3302  0B89  07BE               	addwf	sprintf@eexp^(0+128),f
  3303  0B8A  1803               	skipnc
  3304  0B8B  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  3305  0B8C  30FF               	movlw	255
  3306  0B8D  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  3307  0B8E                     l4307:
  3308                           
  3309                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  3310  0B8E  083E               	movf	sprintf@eexp^(0+128),w
  3311  0B8F  120A  118A  201E  120A  158A  	fcall	_scale
  3312  0B94  1283               	bcf	3,5	;RP0=0, select bank0
  3313  0B95  1303               	bcf	3,6	;RP1=0, select bank0
  3314  0B96  0845               	movf	?_scale+3,w
  3315  0B97  1683               	bsf	3,5	;RP0=1, select bank1
  3316  0B98  1303               	bcf	3,6	;RP1=0, select bank1
  3317  0B99  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  3318  0B9A  1283               	bcf	3,5	;RP0=0, select bank0
  3319  0B9B  1303               	bcf	3,6	;RP1=0, select bank0
  3320  0B9C  0844               	movf	?_scale+2,w
  3321  0B9D  1683               	bsf	3,5	;RP0=1, select bank1
  3322  0B9E  1303               	bcf	3,6	;RP1=0, select bank1
  3323  0B9F  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  3324  0BA0  1283               	bcf	3,5	;RP0=0, select bank0
  3325  0BA1  1303               	bcf	3,6	;RP1=0, select bank0
  3326  0BA2  0843               	movf	?_scale+1,w
  3327  0BA3  1683               	bsf	3,5	;RP0=1, select bank1
  3328  0BA4  1303               	bcf	3,6	;RP1=0, select bank1
  3329  0BA5  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  3330  0BA6  1283               	bcf	3,5	;RP0=0, select bank0
  3331  0BA7  1303               	bcf	3,6	;RP1=0, select bank0
  3332  0BA8  0842               	movf	?_scale,w
  3333  0BA9  1683               	bsf	3,5	;RP0=1, select bank1
  3334  0BAA  1303               	bcf	3,6	;RP1=0, select bank1
  3335  0BAB  00BA               	movwf	sprintf@tmpval^(0+128)
  3336  0BAC                     l4309:
  3337  0BAC  0843               	movf	(sprintf@fval+3)^(0+128),w
  3338  0BAD  00F5               	movwf	__div_to_l_@f1+3
  3339  0BAE  0842               	movf	(sprintf@fval+2)^(0+128),w
  3340  0BAF  00F4               	movwf	__div_to_l_@f1+2
  3341  0BB0  0841               	movf	(sprintf@fval+1)^(0+128),w
  3342  0BB1  00F3               	movwf	__div_to_l_@f1+1
  3343  0BB2  0840               	movf	sprintf@fval^(0+128),w
  3344  0BB3  00F2               	movwf	__div_to_l_@f1
  3345  0BB4  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  3346  0BB5  00F9               	movwf	__div_to_l_@f2+3
  3347  0BB6  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  3348  0BB7  00F8               	movwf	__div_to_l_@f2+2
  3349  0BB8  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  3350  0BB9  00F7               	movwf	__div_to_l_@f2+1
  3351  0BBA  083A               	movf	sprintf@tmpval^(0+128),w
  3352  0BBB  00F6               	movwf	__div_to_l_@f2
  3353  0BBC  120A  118A  2718  120A  158A  	fcall	__div_to_l_
  3354  0BC1  0875               	movf	?__div_to_l_+3,w
  3355  0BC2  1683               	bsf	3,5	;RP0=1, select bank1
  3356  0BC3  1303               	bcf	3,6	;RP1=0, select bank1
  3357  0BC4  00B5               	movwf	(sprintf@val+3)^(0+128)
  3358  0BC5  0874               	movf	?__div_to_l_+2,w
  3359  0BC6  00B4               	movwf	(sprintf@val+2)^(0+128)
  3360  0BC7  0873               	movf	?__div_to_l_+1,w
  3361  0BC8  00B3               	movwf	(sprintf@val+1)^(0+128)
  3362  0BC9  0872               	movf	?__div_to_l_,w
  3363  0BCA  00B2               	movwf	sprintf@val^(0+128)
  3364  0BCB                     l4313:
  3365                           
  3366                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  3367  0BCB  3000               	movlw	0
  3368  0BCC  00C3               	movwf	(sprintf@fval+3)^(0+128)
  3369  0BCD  3000               	movlw	0
  3370  0BCE  00C2               	movwf	(sprintf@fval+2)^(0+128)
  3371  0BCF  3000               	movlw	0
  3372  0BD0  00C1               	movwf	(sprintf@fval+1)^(0+128)
  3373  0BD1  3000               	movlw	0
  3374  0BD2  00C0               	movwf	sprintf@fval^(0+128)
  3375                           
  3376                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  3377  0BD3  2C3A               	goto	l4321
  3378  0BD4                     l4315:
  3379                           
  3380                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  3381  0BD4  1683               	bsf	3,5	;RP0=1, select bank1
  3382  0BD5  1303               	bcf	3,6	;RP1=0, select bank1
  3383  0BD6  0843               	movf	(sprintf@fval+3)^(0+128),w
  3384  0BD7  1283               	bcf	3,5	;RP0=0, select bank0
  3385  0BD8  1303               	bcf	3,6	;RP1=0, select bank0
  3386  0BD9  00D8               	movwf	___fltol@f1+3
  3387  0BDA  1683               	bsf	3,5	;RP0=1, select bank1
  3388  0BDB  1303               	bcf	3,6	;RP1=0, select bank1
  3389  0BDC  0842               	movf	(sprintf@fval+2)^(0+128),w
  3390  0BDD  1283               	bcf	3,5	;RP0=0, select bank0
  3391  0BDE  1303               	bcf	3,6	;RP1=0, select bank0
  3392  0BDF  00D7               	movwf	___fltol@f1+2
  3393  0BE0  1683               	bsf	3,5	;RP0=1, select bank1
  3394  0BE1  1303               	bcf	3,6	;RP1=0, select bank1
  3395  0BE2  0841               	movf	(sprintf@fval+1)^(0+128),w
  3396  0BE3  1283               	bcf	3,5	;RP0=0, select bank0
  3397  0BE4  1303               	bcf	3,6	;RP1=0, select bank0
  3398  0BE5  00D6               	movwf	___fltol@f1+1
  3399  0BE6  1683               	bsf	3,5	;RP0=1, select bank1
  3400  0BE7  1303               	bcf	3,6	;RP1=0, select bank1
  3401  0BE8  0840               	movf	sprintf@fval^(0+128),w
  3402  0BE9  1283               	bcf	3,5	;RP0=0, select bank0
  3403  0BEA  1303               	bcf	3,6	;RP1=0, select bank0
  3404  0BEB  00D5               	movwf	___fltol@f1
  3405  0BEC  160A  158A  2624  120A  158A  	fcall	___fltol
  3406  0BF1  1283               	bcf	3,5	;RP0=0, select bank0
  3407  0BF2  1303               	bcf	3,6	;RP1=0, select bank0
  3408  0BF3  0858               	movf	?___fltol+3,w
  3409  0BF4  1683               	bsf	3,5	;RP0=1, select bank1
  3410  0BF5  1303               	bcf	3,6	;RP1=0, select bank1
  3411  0BF6  00B5               	movwf	(sprintf@val+3)^(0+128)
  3412  0BF7  1283               	bcf	3,5	;RP0=0, select bank0
  3413  0BF8  1303               	bcf	3,6	;RP1=0, select bank0
  3414  0BF9  0857               	movf	?___fltol+2,w
  3415  0BFA  1683               	bsf	3,5	;RP0=1, select bank1
  3416  0BFB  1303               	bcf	3,6	;RP1=0, select bank1
  3417  0BFC  00B4               	movwf	(sprintf@val+2)^(0+128)
  3418  0BFD  1283               	bcf	3,5	;RP0=0, select bank0
  3419  0BFE  1303               	bcf	3,6	;RP1=0, select bank0
  3420  0BFF  0856               	movf	?___fltol+1,w
  3421  0C00  1683               	bsf	3,5	;RP0=1, select bank1
  3422  0C01  1303               	bcf	3,6	;RP1=0, select bank1
  3423  0C02  00B3               	movwf	(sprintf@val+1)^(0+128)
  3424  0C03  1283               	bcf	3,5	;RP0=0, select bank0
  3425  0C04  1303               	bcf	3,6	;RP1=0, select bank0
  3426  0C05  0855               	movf	?___fltol,w
  3427  0C06  1683               	bsf	3,5	;RP0=1, select bank1
  3428  0C07  1303               	bcf	3,6	;RP1=0, select bank1
  3429  0C08  00B2               	movwf	sprintf@val^(0+128)
  3430  0C09                     l4317:
  3431                           
  3432                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  3433  0C09  0835               	movf	(sprintf@val+3)^(0+128),w
  3434  0C0A  00F5               	movwf	___xxtofl@val+3
  3435  0C0B  0834               	movf	(sprintf@val+2)^(0+128),w
  3436  0C0C  00F4               	movwf	___xxtofl@val+2
  3437  0C0D  0833               	movf	(sprintf@val+1)^(0+128),w
  3438  0C0E  00F3               	movwf	___xxtofl@val+1
  3439  0C0F  0832               	movf	sprintf@val^(0+128),w
  3440  0C10  00F2               	movwf	___xxtofl@val
  3441  0C11  3000               	movlw	0
  3442  0C12  160A  158A  2744  120A  158A  	fcall	___xxtofl
  3443  0C17  0875               	movf	?___xxtofl+3,w
  3444  0C18  1683               	bsf	3,5	;RP0=1, select bank1
  3445  0C19  1303               	bcf	3,6	;RP1=0, select bank1
  3446  0C1A  00A3               	movwf	(___flsub@a+3)^(0+128)
  3447  0C1B  0874               	movf	?___xxtofl+2,w
  3448  0C1C  00A2               	movwf	(___flsub@a+2)^(0+128)
  3449  0C1D  0873               	movf	?___xxtofl+1,w
  3450  0C1E  00A1               	movwf	(___flsub@a+1)^(0+128)
  3451  0C1F  0872               	movf	?___xxtofl,w
  3452  0C20  00A0               	movwf	___flsub@a^(0+128)
  3453  0C21  0843               	movf	(sprintf@fval+3)^(0+128),w
  3454  0C22  00A7               	movwf	(___flsub@b+3)^(0+128)
  3455  0C23  0842               	movf	(sprintf@fval+2)^(0+128),w
  3456  0C24  00A6               	movwf	(___flsub@b+2)^(0+128)
  3457  0C25  0841               	movf	(sprintf@fval+1)^(0+128),w
  3458  0C26  00A5               	movwf	(___flsub@b+1)^(0+128)
  3459  0C27  0840               	movf	sprintf@fval^(0+128),w
  3460  0C28  00A4               	movwf	___flsub@b^(0+128)
  3461  0C29  160A  158A  23DA  120A  158A  	fcall	___flsub
  3462  0C2E  1683               	bsf	3,5	;RP0=1, select bank1
  3463  0C2F  1303               	bcf	3,6	;RP1=0, select bank1
  3464  0C30  0823               	movf	(?___flsub+3)^(0+128),w
  3465  0C31  00C3               	movwf	(sprintf@fval+3)^(0+128)
  3466  0C32  0822               	movf	(?___flsub+2)^(0+128),w
  3467  0C33  00C2               	movwf	(sprintf@fval+2)^(0+128)
  3468  0C34  0821               	movf	(?___flsub+1)^(0+128),w
  3469  0C35  00C1               	movwf	(sprintf@fval+1)^(0+128)
  3470  0C36  0820               	movf	?___flsub^(0+128),w
  3471  0C37  00C0               	movwf	sprintf@fval^(0+128)
  3472  0C38                     l4319:
  3473                           
  3474                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  3475  0C38  01BE               	clrf	sprintf@eexp^(0+128)
  3476  0C39  01BF               	clrf	(sprintf@eexp+1)^(0+128)
  3477  0C3A                     l4321:
  3478                           
  3479                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3480  0C3A  01C7               	clrf	sprintf@c^(0+128)
  3481  0C3B  0AC7               	incf	sprintf@c^(0+128),f
  3482  0C3C                     l4327:
  3483                           
  3484                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  3485  0C3C  0847               	movf	sprintf@c^(0+128),w
  3486  0C3D  00A8               	movwf	??_sprintf^(0+128)
  3487  0C3E  3001               	movlw	1
  3488  0C3F                     u6855:
  3489  0C3F  1003               	clrc
  3490  0C40  0DA8               	rlf	??_sprintf^(0+128),f
  3491  0C41  3EFF               	addlw	-1
  3492  0C42  1D03               	skipz
  3493  0C43  2C3F               	goto	u6855
  3494  0C44  1003               	clrc
  3495  0C45  0D28               	rlf	??_sprintf^(0+128),w
  3496  0C46  3E7A               	addlw	low (_dpowers| (0+32768))
  3497  0C47  0084               	movwf	4
  3498  0C48  3098               	movlw	high (_dpowers| (0+32768))
  3499  0C49  1803               	skipnc
  3500  0C4A  3E01               	addlw	1
  3501  0C4B  1283               	bcf	3,5	;RP0=0, select bank0
  3502  0C4C  1303               	bcf	3,6	;RP1=0, select bank0
  3503  0C4D  00FF               	movwf	btemp+1
  3504  0C4E  160A  158A  2000  120A  158A  	fcall	stringtab
  3505  0C53  1683               	bsf	3,5	;RP0=1, select bank1
  3506  0C54  1303               	bcf	3,6	;RP1=0, select bank1
  3507  0C55  00A9               	movwf	(??_sprintf+1)^(0+128)
  3508  0C56  1283               	bcf	3,5	;RP0=0, select bank0
  3509  0C57  1303               	bcf	3,6	;RP1=0, select bank0
  3510  0C58  160A  158A  2000  120A  158A  	fcall	stringtab
  3511  0C5D  1683               	bsf	3,5	;RP0=1, select bank1
  3512  0C5E  1303               	bcf	3,6	;RP1=0, select bank1
  3513  0C5F  00AA               	movwf	((??_sprintf+1)^(0+128)+1)
  3514  0C60  1283               	bcf	3,5	;RP0=0, select bank0
  3515  0C61  1303               	bcf	3,6	;RP1=0, select bank0
  3516  0C62  160A  158A  2000  120A  158A  	fcall	stringtab
  3517  0C67  1683               	bsf	3,5	;RP0=1, select bank1
  3518  0C68  1303               	bcf	3,6	;RP1=0, select bank1
  3519  0C69  00AB               	movwf	((??_sprintf+1)^(0+128)+2)
  3520  0C6A  1283               	bcf	3,5	;RP0=0, select bank0
  3521  0C6B  1303               	bcf	3,6	;RP1=0, select bank0
  3522  0C6C  160A  158A  2000  120A  158A  	fcall	stringtab
  3523  0C71  1683               	bsf	3,5	;RP0=1, select bank1
  3524  0C72  1303               	bcf	3,6	;RP1=0, select bank1
  3525  0C73  00AC               	movwf	((??_sprintf+1)^(0+128)+3)
  3526  0C74  082C               	movf	(??_sprintf+4)^(0+128),w
  3527  0C75  0235               	subwf	(sprintf@val+3)^(0+128),w
  3528  0C76  1D03               	skipz
  3529  0C77  2C82               	goto	u6865
  3530  0C78  082B               	movf	(??_sprintf+3)^(0+128),w
  3531  0C79  0234               	subwf	(sprintf@val+2)^(0+128),w
  3532  0C7A  1D03               	skipz
  3533  0C7B  2C82               	goto	u6865
  3534  0C7C  082A               	movf	(??_sprintf+2)^(0+128),w
  3535  0C7D  0233               	subwf	(sprintf@val+1)^(0+128),w
  3536  0C7E  1D03               	skipz
  3537  0C7F  2C82               	goto	u6865
  3538  0C80  0829               	movf	(??_sprintf+1)^(0+128),w
  3539  0C81  0232               	subwf	sprintf@val^(0+128),w
  3540  0C82                     u6865:
  3541  0C82  1803               	skipnc
  3542  0C83  2C85               	goto	u6861
  3543  0C84  2C86               	goto	u6860
  3544  0C85                     u6861:
  3545  0C85  2C87               	goto	l4331
  3546  0C86                     u6860:
  3547  0C86  2C91               	goto	l4333
  3548  0C87                     l4331:
  3549  0C87  3001               	movlw	1
  3550  0C88  00A8               	movwf	??_sprintf^(0+128)
  3551  0C89  0828               	movf	??_sprintf^(0+128),w
  3552  0C8A  07C7               	addwf	sprintf@c^(0+128),f
  3553  0C8B  300A               	movlw	10
  3554  0C8C  0647               	xorwf	sprintf@c^(0+128),w
  3555  0C8D  1D03               	btfss	3,2
  3556  0C8E  2C90               	goto	u6871
  3557  0C8F  2C91               	goto	u6870
  3558  0C90                     u6871:
  3559  0C90  2C3C               	goto	l4327
  3560  0C91                     u6870:
  3561  0C91                     l4333:
  3562                           
  3563                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  3564  0C91  0847               	movf	sprintf@c^(0+128),w
  3565  0C92  0745               	addwf	sprintf@prec^(0+128),w
  3566  0C93  00A8               	movwf	??_sprintf^(0+128)
  3567  0C94  0846               	movf	(sprintf@prec+1)^(0+128),w
  3568  0C95  1803               	skipnc
  3569  0C96  0A46               	incf	(sprintf@prec+1)^(0+128),w
  3570  0C97  00A9               	movwf	(??_sprintf^(0+128)+1)
  3571  0C98  083E               	movf	sprintf@eexp^(0+128),w
  3572  0C99  0728               	addwf	??_sprintf^(0+128),w
  3573  0C9A  00AA               	movwf	(??_sprintf+2)^(0+128)
  3574  0C9B  083F               	movf	(sprintf@eexp+1)^(0+128),w
  3575  0C9C  1803               	skipnc
  3576  0C9D  0A3F               	incf	(sprintf@eexp+1)^(0+128),w
  3577  0C9E  0729               	addwf	(??_sprintf+1)^(0+128),w
  3578  0C9F  00AB               	movwf	(??_sprintf+3)^(0+128)
  3579  0CA0  082A               	movf	(??_sprintf+2)^(0+128),w
  3580  0CA1  02B8               	subwf	sprintf@width^(0+128),f
  3581  0CA2  082B               	movf	(??_sprintf+3)^(0+128),w
  3582  0CA3  1C03               	skipc
  3583  0CA4  03B9               	decf	(sprintf@width+1)^(0+128),f
  3584  0CA5  02B9               	subwf	(sprintf@width+1)^(0+128),f
  3585                           
  3586                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  3587  0CA6  0845               	movf	sprintf@prec^(0+128),w
  3588  0CA7  0446               	iorwf	(sprintf@prec+1)^(0+128),w
  3589  0CA8  1903               	btfsc	3,2
  3590  0CA9  2CAB               	goto	u6881
  3591  0CAA  2CAC               	goto	u6880
  3592  0CAB                     u6881:
  3593  0CAB  2CB2               	goto	l4337
  3594  0CAC                     u6880:
  3595  0CAC                     l4335:
  3596                           
  3597                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  3598  0CAC  30FF               	movlw	255
  3599  0CAD  07B8               	addwf	sprintf@width^(0+128),f
  3600  0CAE  1803               	skipnc
  3601  0CAF  0AB9               	incf	(sprintf@width+1)^(0+128),f
  3602  0CB0  30FF               	movlw	255
  3603  0CB1  07B9               	addwf	(sprintf@width+1)^(0+128),f
  3604  0CB2                     l4337:
  3605                           
  3606                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  3607  0CB2  3003               	movlw	3
  3608  0CB3  0536               	andwf	sprintf@flag^(0+128),w
  3609  0CB4  00A8               	movwf	??_sprintf^(0+128)
  3610  0CB5  3000               	movlw	0
  3611  0CB6  0537               	andwf	(sprintf@flag+1)^(0+128),w
  3612  0CB7  00A9               	movwf	(??_sprintf+1)^(0+128)
  3613  0CB8  0828               	movf	??_sprintf^(0+128),w
  3614  0CB9  0429               	iorwf	(??_sprintf^(0+128)+1),w
  3615  0CBA  1903               	btfsc	3,2
  3616  0CBB  2CBD               	goto	u6891
  3617  0CBC  2CBE               	goto	u6890
  3618  0CBD                     u6891:
  3619  0CBD  2CD3               	goto	l4347
  3620  0CBE                     u6890:
  3621  0CBE                     l4339:
  3622                           
  3623                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  3624  0CBE  30FF               	movlw	255
  3625  0CBF  07B8               	addwf	sprintf@width^(0+128),f
  3626  0CC0  1803               	skipnc
  3627  0CC1  0AB9               	incf	(sprintf@width+1)^(0+128),f
  3628  0CC2  30FF               	movlw	255
  3629  0CC3  07B9               	addwf	(sprintf@width+1)^(0+128),f
  3630  0CC4  2CD3               	goto	l4347
  3631  0CC5                     l4341:
  3632                           
  3633                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  3634  0CC5  3020               	movlw	32
  3635  0CC6  1683               	bsf	3,5	;RP0=1, select bank1
  3636  0CC7  1303               	bcf	3,6	;RP1=0, select bank1
  3637  0CC8  00A8               	movwf	??_sprintf^(0+128)
  3638  0CC9  0844               	movf	sprintf@sp^(0+128),w
  3639  0CCA  0084               	movwf	4
  3640  0CCB  0828               	movf	??_sprintf^(0+128),w
  3641  0CCC  1383               	bcf	3,7	;select IRP bank0
  3642  0CCD  0080               	movwf	0
  3643  0CCE                     l4343:
  3644  0CCE  3001               	movlw	1
  3645  0CCF  00A8               	movwf	??_sprintf^(0+128)
  3646  0CD0  0828               	movf	??_sprintf^(0+128),w
  3647  0CD1  07C4               	addwf	sprintf@sp^(0+128),f
  3648  0CD2  2CBE               	goto	l4339
  3649  0CD3                     l4347:
  3650                           
  3651                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  3652  0CD3  0839               	movf	(sprintf@width+1)^(0+128),w
  3653  0CD4  3A80               	xorlw	128
  3654  0CD5  00FF               	movwf	btemp+1
  3655  0CD6  3080               	movlw	128
  3656  0CD7  027F               	subwf	btemp+1,w
  3657  0CD8  1D03               	skipz
  3658  0CD9  2CDC               	goto	u6905
  3659  0CDA  3001               	movlw	1
  3660  0CDB  0238               	subwf	sprintf@width^(0+128),w
  3661  0CDC                     u6905:
  3662  0CDC  1803               	skipnc
  3663  0CDD  2CDF               	goto	u6901
  3664  0CDE  2CE0               	goto	u6900
  3665  0CDF                     u6901:
  3666  0CDF  2CC5               	goto	l4341
  3667  0CE0                     u6900:
  3668  0CE0                     l4349:
  3669                           
  3670                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  3671  0CE0  3003               	movlw	3
  3672  0CE1  1683               	bsf	3,5	;RP0=1, select bank1
  3673  0CE2  1303               	bcf	3,6	;RP1=0, select bank1
  3674  0CE3  0536               	andwf	sprintf@flag^(0+128),w
  3675  0CE4  00A8               	movwf	??_sprintf^(0+128)
  3676  0CE5  3000               	movlw	0
  3677  0CE6  0537               	andwf	(sprintf@flag+1)^(0+128),w
  3678  0CE7  00A9               	movwf	(??_sprintf+1)^(0+128)
  3679  0CE8  0828               	movf	??_sprintf^(0+128),w
  3680  0CE9  0429               	iorwf	(??_sprintf^(0+128)+1),w
  3681  0CEA  1903               	btfsc	3,2
  3682  0CEB  2CED               	goto	u6911
  3683  0CEC  2CEE               	goto	u6910
  3684  0CED                     u6911:
  3685  0CED  2D65               	goto	l4363
  3686  0CEE                     u6910:
  3687  0CEE                     l4351:
  3688                           
  3689                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3690  0CEE  302D               	movlw	45
  3691  0CEF  00A8               	movwf	??_sprintf^(0+128)
  3692  0CF0  0844               	movf	sprintf@sp^(0+128),w
  3693  0CF1  0084               	movwf	4
  3694  0CF2  0828               	movf	??_sprintf^(0+128),w
  3695  0CF3  1383               	bcf	3,7	;select IRP bank0
  3696  0CF4  0080               	movwf	0
  3697  0CF5                     l4353:
  3698  0CF5  3001               	movlw	1
  3699  0CF6  00A8               	movwf	??_sprintf^(0+128)
  3700  0CF7  0828               	movf	??_sprintf^(0+128),w
  3701  0CF8  07C4               	addwf	sprintf@sp^(0+128),f
  3702  0CF9  2D65               	goto	l4363
  3703  0CFA                     l4355:
  3704                           
  3705                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3706  0CFA  0847               	movf	sprintf@c^(0+128),w
  3707  0CFB  00A8               	movwf	??_sprintf^(0+128)
  3708  0CFC  3001               	movlw	1
  3709  0CFD                     u6925:
  3710  0CFD  1003               	clrc
  3711  0CFE  0DA8               	rlf	??_sprintf^(0+128),f
  3712  0CFF  3EFF               	addlw	-1
  3713  0D00  1D03               	skipz
  3714  0D01  2CFD               	goto	u6925
  3715  0D02  1003               	clrc
  3716  0D03  0D28               	rlf	??_sprintf^(0+128),w
  3717  0D04  3E7A               	addlw	low (_dpowers| (0+32768))
  3718  0D05  0084               	movwf	4
  3719  0D06  3098               	movlw	high (_dpowers| (0+32768))
  3720  0D07  1803               	skipnc
  3721  0D08  3E01               	addlw	1
  3722  0D09  1283               	bcf	3,5	;RP0=0, select bank0
  3723  0D0A  1303               	bcf	3,6	;RP1=0, select bank0
  3724  0D0B  00FF               	movwf	btemp+1
  3725  0D0C  160A  158A  2000  120A  158A  	fcall	stringtab
  3726  0D11  00F2               	movwf	___lldiv@divisor
  3727  0D12  160A  158A  2000  120A  158A  	fcall	stringtab
  3728  0D17  00F3               	movwf	___lldiv@divisor+1
  3729  0D18  160A  158A  2000  120A  158A  	fcall	stringtab
  3730  0D1D  00F4               	movwf	___lldiv@divisor+2
  3731  0D1E  160A  158A  2000  120A  158A  	fcall	stringtab
  3732  0D23  00F5               	movwf	___lldiv@divisor+3
  3733  0D24  1683               	bsf	3,5	;RP0=1, select bank1
  3734  0D25  1303               	bcf	3,6	;RP1=0, select bank1
  3735  0D26  0835               	movf	(sprintf@val+3)^(0+128),w
  3736  0D27  00F9               	movwf	___lldiv@dividend+3
  3737  0D28  0834               	movf	(sprintf@val+2)^(0+128),w
  3738  0D29  00F8               	movwf	___lldiv@dividend+2
  3739  0D2A  0833               	movf	(sprintf@val+1)^(0+128),w
  3740  0D2B  00F7               	movwf	___lldiv@dividend+1
  3741  0D2C  0832               	movf	sprintf@val^(0+128),w
  3742  0D2D  00F6               	movwf	___lldiv@dividend
  3743  0D2E  160A  158A  24D9  120A  158A  	fcall	___lldiv
  3744  0D33  0875               	movf	?___lldiv+3,w
  3745  0D34  1683               	bsf	3,5	;RP0=1, select bank1
  3746  0D35  1303               	bcf	3,6	;RP1=0, select bank1
  3747  0D36  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  3748  0D37  0874               	movf	?___lldiv+2,w
  3749  0D38  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  3750  0D39  0873               	movf	?___lldiv+1,w
  3751  0D3A  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  3752  0D3B  0872               	movf	?___lldiv,w
  3753  0D3C  00BA               	movwf	sprintf@tmpval^(0+128)
  3754  0D3D                     l4357:
  3755                           
  3756                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3757  0D3D  3000               	movlw	0
  3758  0D3E  00F5               	movwf	___llmod@divisor+3
  3759  0D3F  3000               	movlw	0
  3760  0D40  00F4               	movwf	___llmod@divisor+2
  3761  0D41  3000               	movlw	0
  3762  0D42  00F3               	movwf	___llmod@divisor+1
  3763  0D43  300A               	movlw	10
  3764  0D44  00F2               	movwf	___llmod@divisor
  3765  0D45  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  3766  0D46  00F9               	movwf	___llmod@dividend+3
  3767  0D47  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  3768  0D48  00F8               	movwf	___llmod@dividend+2
  3769  0D49  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  3770  0D4A  00F7               	movwf	___llmod@dividend+1
  3771  0D4B  083A               	movf	sprintf@tmpval^(0+128),w
  3772  0D4C  00F6               	movwf	___llmod@dividend
  3773  0D4D  160A  158A  242A  120A  158A  	fcall	___llmod
  3774  0D52  0875               	movf	?___llmod+3,w
  3775  0D53  1683               	bsf	3,5	;RP0=1, select bank1
  3776  0D54  1303               	bcf	3,6	;RP1=0, select bank1
  3777  0D55  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  3778  0D56  0874               	movf	?___llmod+2,w
  3779  0D57  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  3780  0D58  0873               	movf	?___llmod+1,w
  3781  0D59  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  3782  0D5A  0872               	movf	?___llmod,w
  3783  0D5B  00BA               	movwf	sprintf@tmpval^(0+128)
  3784  0D5C                     l4359:
  3785                           
  3786                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3787  0D5C  083A               	movf	sprintf@tmpval^(0+128),w
  3788  0D5D  3E30               	addlw	48
  3789  0D5E  00A8               	movwf	??_sprintf^(0+128)
  3790  0D5F  0844               	movf	sprintf@sp^(0+128),w
  3791  0D60  0084               	movwf	4
  3792  0D61  0828               	movf	??_sprintf^(0+128),w
  3793  0D62  1383               	bcf	3,7	;select IRP bank0
  3794  0D63  0080               	movwf	0
  3795  0D64  2CF5               	goto	l4353
  3796  0D65                     l4363:
  3797                           
  3798                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3799  0D65  3001               	movlw	1
  3800  0D66  02C7               	subwf	sprintf@c^(0+128),f
  3801  0D67  0A47               	incf	sprintf@c^(0+128),w
  3802  0D68  1D03               	btfss	3,2
  3803  0D69  2D6B               	goto	u6931
  3804  0D6A  2D6C               	goto	u6930
  3805  0D6B                     u6931:
  3806  0D6B  2CFA               	goto	l4355
  3807  0D6C                     u6930:
  3808  0D6C  2D80               	goto	l4371
  3809  0D6D                     l4365:
  3810                           
  3811                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3812  0D6D  3030               	movlw	48
  3813  0D6E  1683               	bsf	3,5	;RP0=1, select bank1
  3814  0D6F  1303               	bcf	3,6	;RP1=0, select bank1
  3815  0D70  00A8               	movwf	??_sprintf^(0+128)
  3816  0D71  0844               	movf	sprintf@sp^(0+128),w
  3817  0D72  0084               	movwf	4
  3818  0D73  0828               	movf	??_sprintf^(0+128),w
  3819  0D74  1383               	bcf	3,7	;select IRP bank0
  3820  0D75  0080               	movwf	0
  3821  0D76                     l4367:
  3822  0D76  3001               	movlw	1
  3823  0D77  00A8               	movwf	??_sprintf^(0+128)
  3824  0D78  0828               	movf	??_sprintf^(0+128),w
  3825  0D79  07C4               	addwf	sprintf@sp^(0+128),f
  3826  0D7A                     l4369:
  3827                           
  3828                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3829  0D7A  30FF               	movlw	255
  3830  0D7B  07BE               	addwf	sprintf@eexp^(0+128),f
  3831  0D7C  1803               	skipnc
  3832  0D7D  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  3833  0D7E  30FF               	movlw	255
  3834  0D7F  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  3835  0D80                     l4371:
  3836                           
  3837                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3838  0D80  083F               	movf	(sprintf@eexp+1)^(0+128),w
  3839  0D81  3A80               	xorlw	128
  3840  0D82  00FF               	movwf	btemp+1
  3841  0D83  3080               	movlw	128
  3842  0D84  027F               	subwf	btemp+1,w
  3843  0D85  1D03               	skipz
  3844  0D86  2D89               	goto	u6945
  3845  0D87  3001               	movlw	1
  3846  0D88  023E               	subwf	sprintf@eexp^(0+128),w
  3847  0D89                     u6945:
  3848  0D89  1803               	skipnc
  3849  0D8A  2D8C               	goto	u6941
  3850  0D8B  2D8D               	goto	u6940
  3851  0D8C                     u6941:
  3852  0D8C  2D6D               	goto	l4365
  3853  0D8D                     u6940:
  3854  0D8D                     l4373:
  3855                           
  3856                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3857  0D8D  1683               	bsf	3,5	;RP0=1, select bank1
  3858  0D8E  1303               	bcf	3,6	;RP1=0, select bank1
  3859  0D8F  0846               	movf	(sprintf@prec+1)^(0+128),w
  3860  0D90  3A80               	xorlw	128
  3861  0D91  00FF               	movwf	btemp+1
  3862  0D92  3080               	movlw	128
  3863  0D93  027F               	subwf	btemp+1,w
  3864  0D94  1D03               	skipz
  3865  0D95  2D98               	goto	u6955
  3866  0D96  3009               	movlw	9
  3867  0D97  0245               	subwf	sprintf@prec^(0+128),w
  3868  0D98                     u6955:
  3869  0D98  1C03               	skipc
  3870  0D99  2D9B               	goto	u6951
  3871  0D9A  2D9C               	goto	u6950
  3872  0D9B                     u6951:
  3873  0D9B  2DA3               	goto	l4377
  3874  0D9C                     u6950:
  3875  0D9C                     l4375:
  3876                           
  3877                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3878  0D9C  3008               	movlw	8
  3879  0D9D  1683               	bsf	3,5	;RP0=1, select bank1
  3880  0D9E  1303               	bcf	3,6	;RP1=0, select bank1
  3881  0D9F  00A8               	movwf	??_sprintf^(0+128)
  3882  0DA0  0828               	movf	??_sprintf^(0+128),w
  3883  0DA1  00C7               	movwf	sprintf@c^(0+128)
  3884  0DA2  2DA9               	goto	l365
  3885  0DA3                     l4377:
  3886                           
  3887                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3888  0DA3  1683               	bsf	3,5	;RP0=1, select bank1
  3889  0DA4  1303               	bcf	3,6	;RP1=0, select bank1
  3890  0DA5  0845               	movf	sprintf@prec^(0+128),w
  3891  0DA6  00A8               	movwf	??_sprintf^(0+128)
  3892  0DA7  0828               	movf	??_sprintf^(0+128),w
  3893  0DA8  00C7               	movwf	sprintf@c^(0+128)
  3894  0DA9                     l365:
  3895                           
  3896                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3897  0DA9  0847               	movf	sprintf@c^(0+128),w
  3898  0DAA  00A8               	movwf	??_sprintf^(0+128)
  3899  0DAB  01A9               	clrf	(??_sprintf^(0+128)+1)
  3900  0DAC  0828               	movf	??_sprintf^(0+128),w
  3901  0DAD  02C5               	subwf	sprintf@prec^(0+128),f
  3902  0DAE  0829               	movf	(??_sprintf+1)^(0+128),w
  3903  0DAF  1C03               	skipc
  3904  0DB0  03C6               	decf	(sprintf@prec+1)^(0+128),f
  3905  0DB1  02C6               	subwf	(sprintf@prec+1)^(0+128),f
  3906  0DB2                     l4379:
  3907                           
  3908                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3909  0DB2  0847               	movf	sprintf@c^(0+128),w
  3910  0DB3  1903               	btfsc	3,2
  3911  0DB4  2DB6               	goto	u6961
  3912  0DB5  2DB7               	goto	u6960
  3913  0DB6                     u6961:
  3914  0DB6  2DC2               	goto	l4385
  3915  0DB7                     u6960:
  3916  0DB7                     l4381:
  3917                           
  3918                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3919  0DB7  302E               	movlw	46
  3920  0DB8  00A8               	movwf	??_sprintf^(0+128)
  3921  0DB9  0844               	movf	sprintf@sp^(0+128),w
  3922  0DBA  0084               	movwf	4
  3923  0DBB  0828               	movf	??_sprintf^(0+128),w
  3924  0DBC  1383               	bcf	3,7	;select IRP bank0
  3925  0DBD  0080               	movwf	0
  3926  0DBE                     l4383:
  3927  0DBE  3001               	movlw	1
  3928  0DBF  00A8               	movwf	??_sprintf^(0+128)
  3929  0DC0  0828               	movf	??_sprintf^(0+128),w
  3930  0DC1  07C4               	addwf	sprintf@sp^(0+128),f
  3931  0DC2                     l4385:
  3932                           
  3933                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3934  0DC2  0847               	movf	sprintf@c^(0+128),w
  3935  0DC3  120A  118A  201E  120A  158A  	fcall	_scale
  3936  0DC8  1283               	bcf	3,5	;RP0=0, select bank0
  3937  0DC9  1303               	bcf	3,6	;RP1=0, select bank0
  3938  0DCA  0845               	movf	?_scale+3,w
  3939  0DCB  1683               	bsf	3,5	;RP0=1, select bank1
  3940  0DCC  1303               	bcf	3,6	;RP1=0, select bank1
  3941  0DCD  00B0               	movwf	(_sprintf$1183+3)^(0+128)
  3942  0DCE  1283               	bcf	3,5	;RP0=0, select bank0
  3943  0DCF  1303               	bcf	3,6	;RP1=0, select bank0
  3944  0DD0  0844               	movf	?_scale+2,w
  3945  0DD1  1683               	bsf	3,5	;RP0=1, select bank1
  3946  0DD2  1303               	bcf	3,6	;RP1=0, select bank1
  3947  0DD3  00AF               	movwf	(_sprintf$1183+2)^(0+128)
  3948  0DD4  1283               	bcf	3,5	;RP0=0, select bank0
  3949  0DD5  1303               	bcf	3,6	;RP1=0, select bank0
  3950  0DD6  0843               	movf	?_scale+1,w
  3951  0DD7  1683               	bsf	3,5	;RP0=1, select bank1
  3952  0DD8  1303               	bcf	3,6	;RP1=0, select bank1
  3953  0DD9  00AE               	movwf	(_sprintf$1183+1)^(0+128)
  3954  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  3955  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  3956  0DDC  0842               	movf	?_scale,w
  3957  0DDD  1683               	bsf	3,5	;RP0=1, select bank1
  3958  0DDE  1303               	bcf	3,6	;RP1=0, select bank1
  3959  0DDF  00AD               	movwf	_sprintf$1183^(0+128)
  3960  0DE0                     l4387:
  3961                           
  3962                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3963  0DE0  0830               	movf	(_sprintf$1183+3)^(0+128),w
  3964  0DE1  1283               	bcf	3,5	;RP0=0, select bank0
  3965  0DE2  1303               	bcf	3,6	;RP1=0, select bank0
  3966  0DE3  00AF               	movwf	___flmul@a+3
  3967  0DE4  1683               	bsf	3,5	;RP0=1, select bank1
  3968  0DE5  1303               	bcf	3,6	;RP1=0, select bank1
  3969  0DE6  082F               	movf	(_sprintf$1183+2)^(0+128),w
  3970  0DE7  1283               	bcf	3,5	;RP0=0, select bank0
  3971  0DE8  1303               	bcf	3,6	;RP1=0, select bank0
  3972  0DE9  00AE               	movwf	___flmul@a+2
  3973  0DEA  1683               	bsf	3,5	;RP0=1, select bank1
  3974  0DEB  1303               	bcf	3,6	;RP1=0, select bank1
  3975  0DEC  082E               	movf	(_sprintf$1183+1)^(0+128),w
  3976  0DED  1283               	bcf	3,5	;RP0=0, select bank0
  3977  0DEE  1303               	bcf	3,6	;RP1=0, select bank0
  3978  0DEF  00AD               	movwf	___flmul@a+1
  3979  0DF0  1683               	bsf	3,5	;RP0=1, select bank1
  3980  0DF1  1303               	bcf	3,6	;RP1=0, select bank1
  3981  0DF2  082D               	movf	_sprintf$1183^(0+128),w
  3982  0DF3  1283               	bcf	3,5	;RP0=0, select bank0
  3983  0DF4  1303               	bcf	3,6	;RP1=0, select bank0
  3984  0DF5  00AC               	movwf	___flmul@a
  3985  0DF6  1683               	bsf	3,5	;RP0=1, select bank1
  3986  0DF7  1303               	bcf	3,6	;RP1=0, select bank1
  3987  0DF8  0843               	movf	(sprintf@fval+3)^(0+128),w
  3988  0DF9  1283               	bcf	3,5	;RP0=0, select bank0
  3989  0DFA  1303               	bcf	3,6	;RP1=0, select bank0
  3990  0DFB  00AB               	movwf	___flmul@b+3
  3991  0DFC  1683               	bsf	3,5	;RP0=1, select bank1
  3992  0DFD  1303               	bcf	3,6	;RP1=0, select bank1
  3993  0DFE  0842               	movf	(sprintf@fval+2)^(0+128),w
  3994  0DFF  1283               	bcf	3,5	;RP0=0, select bank0
  3995  0E00  1303               	bcf	3,6	;RP1=0, select bank0
  3996  0E01  00AA               	movwf	___flmul@b+2
  3997  0E02  1683               	bsf	3,5	;RP0=1, select bank1
  3998  0E03  1303               	bcf	3,6	;RP1=0, select bank1
  3999  0E04  0841               	movf	(sprintf@fval+1)^(0+128),w
  4000  0E05  1283               	bcf	3,5	;RP0=0, select bank0
  4001  0E06  1303               	bcf	3,6	;RP1=0, select bank0
  4002  0E07  00A9               	movwf	___flmul@b+1
  4003  0E08  1683               	bsf	3,5	;RP0=1, select bank1
  4004  0E09  1303               	bcf	3,6	;RP1=0, select bank1
  4005  0E0A  0840               	movf	sprintf@fval^(0+128),w
  4006  0E0B  1283               	bcf	3,5	;RP0=0, select bank0
  4007  0E0C  1303               	bcf	3,6	;RP1=0, select bank0
  4008  0E0D  00A8               	movwf	___flmul@b
  4009  0E0E  120A  118A  23B7  120A  158A  	fcall	___flmul
  4010  0E13  1283               	bcf	3,5	;RP0=0, select bank0
  4011  0E14  1303               	bcf	3,6	;RP1=0, select bank0
  4012  0E15  082B               	movf	?___flmul+3,w
  4013  0E16  00D8               	movwf	___fltol@f1+3
  4014  0E17  082A               	movf	?___flmul+2,w
  4015  0E18  00D7               	movwf	___fltol@f1+2
  4016  0E19  0829               	movf	?___flmul+1,w
  4017  0E1A  00D6               	movwf	___fltol@f1+1
  4018  0E1B  0828               	movf	?___flmul,w
  4019  0E1C  00D5               	movwf	___fltol@f1
  4020  0E1D  160A  158A  2624  120A  158A  	fcall	___fltol
  4021  0E22  1283               	bcf	3,5	;RP0=0, select bank0
  4022  0E23  1303               	bcf	3,6	;RP1=0, select bank0
  4023  0E24  0858               	movf	?___fltol+3,w
  4024  0E25  1683               	bsf	3,5	;RP0=1, select bank1
  4025  0E26  1303               	bcf	3,6	;RP1=0, select bank1
  4026  0E27  00B5               	movwf	(sprintf@val+3)^(0+128)
  4027  0E28  1283               	bcf	3,5	;RP0=0, select bank0
  4028  0E29  1303               	bcf	3,6	;RP1=0, select bank0
  4029  0E2A  0857               	movf	?___fltol+2,w
  4030  0E2B  1683               	bsf	3,5	;RP0=1, select bank1
  4031  0E2C  1303               	bcf	3,6	;RP1=0, select bank1
  4032  0E2D  00B4               	movwf	(sprintf@val+2)^(0+128)
  4033  0E2E  1283               	bcf	3,5	;RP0=0, select bank0
  4034  0E2F  1303               	bcf	3,6	;RP1=0, select bank0
  4035  0E30  0856               	movf	?___fltol+1,w
  4036  0E31  1683               	bsf	3,5	;RP0=1, select bank1
  4037  0E32  1303               	bcf	3,6	;RP1=0, select bank1
  4038  0E33  00B3               	movwf	(sprintf@val+1)^(0+128)
  4039  0E34  1283               	bcf	3,5	;RP0=0, select bank0
  4040  0E35  1303               	bcf	3,6	;RP1=0, select bank0
  4041  0E36  0855               	movf	?___fltol,w
  4042  0E37  1683               	bsf	3,5	;RP0=1, select bank1
  4043  0E38  1303               	bcf	3,6	;RP1=0, select bank1
  4044  0E39  00B2               	movwf	sprintf@val^(0+128)
  4045                           
  4046                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  4047  0E3A  2EEC               	goto	l4399
  4048  0E3B                     l4389:
  4049                           
  4050                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  4051  0E3B  0847               	movf	sprintf@c^(0+128),w
  4052  0E3C  00A8               	movwf	??_sprintf^(0+128)
  4053  0E3D  3001               	movlw	1
  4054  0E3E                     u6975:
  4055  0E3E  1003               	clrc
  4056  0E3F  0DA8               	rlf	??_sprintf^(0+128),f
  4057  0E40  3EFF               	addlw	-1
  4058  0E41  1D03               	skipz
  4059  0E42  2E3E               	goto	u6975
  4060  0E43  1003               	clrc
  4061  0E44  0D28               	rlf	??_sprintf^(0+128),w
  4062  0E45  3E7A               	addlw	low (_dpowers| (0+32768))
  4063  0E46  0084               	movwf	4
  4064  0E47  3098               	movlw	high (_dpowers| (0+32768))
  4065  0E48  1803               	skipnc
  4066  0E49  3E01               	addlw	1
  4067  0E4A  1283               	bcf	3,5	;RP0=0, select bank0
  4068  0E4B  1303               	bcf	3,6	;RP1=0, select bank0
  4069  0E4C  00FF               	movwf	btemp+1
  4070  0E4D  160A  158A  2000  120A  158A  	fcall	stringtab
  4071  0E52  00F2               	movwf	___lldiv@divisor
  4072  0E53  160A  158A  2000  120A  158A  	fcall	stringtab
  4073  0E58  00F3               	movwf	___lldiv@divisor+1
  4074  0E59  160A  158A  2000  120A  158A  	fcall	stringtab
  4075  0E5E  00F4               	movwf	___lldiv@divisor+2
  4076  0E5F  160A  158A  2000  120A  158A  	fcall	stringtab
  4077  0E64  00F5               	movwf	___lldiv@divisor+3
  4078  0E65  1683               	bsf	3,5	;RP0=1, select bank1
  4079  0E66  1303               	bcf	3,6	;RP1=0, select bank1
  4080  0E67  0835               	movf	(sprintf@val+3)^(0+128),w
  4081  0E68  00F9               	movwf	___lldiv@dividend+3
  4082  0E69  0834               	movf	(sprintf@val+2)^(0+128),w
  4083  0E6A  00F8               	movwf	___lldiv@dividend+2
  4084  0E6B  0833               	movf	(sprintf@val+1)^(0+128),w
  4085  0E6C  00F7               	movwf	___lldiv@dividend+1
  4086  0E6D  0832               	movf	sprintf@val^(0+128),w
  4087  0E6E  00F6               	movwf	___lldiv@dividend
  4088  0E6F  160A  158A  24D9  120A  158A  	fcall	___lldiv
  4089  0E74  0875               	movf	?___lldiv+3,w
  4090  0E75  1683               	bsf	3,5	;RP0=1, select bank1
  4091  0E76  1303               	bcf	3,6	;RP1=0, select bank1
  4092  0E77  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  4093  0E78  0874               	movf	?___lldiv+2,w
  4094  0E79  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  4095  0E7A  0873               	movf	?___lldiv+1,w
  4096  0E7B  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  4097  0E7C  0872               	movf	?___lldiv,w
  4098  0E7D  00BA               	movwf	sprintf@tmpval^(0+128)
  4099  0E7E                     l4391:
  4100                           
  4101                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  4102  0E7E  3000               	movlw	0
  4103  0E7F  00F5               	movwf	___llmod@divisor+3
  4104  0E80  3000               	movlw	0
  4105  0E81  00F4               	movwf	___llmod@divisor+2
  4106  0E82  3000               	movlw	0
  4107  0E83  00F3               	movwf	___llmod@divisor+1
  4108  0E84  300A               	movlw	10
  4109  0E85  00F2               	movwf	___llmod@divisor
  4110  0E86  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  4111  0E87  00F9               	movwf	___llmod@dividend+3
  4112  0E88  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  4113  0E89  00F8               	movwf	___llmod@dividend+2
  4114  0E8A  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  4115  0E8B  00F7               	movwf	___llmod@dividend+1
  4116  0E8C  083A               	movf	sprintf@tmpval^(0+128),w
  4117  0E8D  00F6               	movwf	___llmod@dividend
  4118  0E8E  160A  158A  242A  120A  158A  	fcall	___llmod
  4119  0E93  0875               	movf	?___llmod+3,w
  4120  0E94  1683               	bsf	3,5	;RP0=1, select bank1
  4121  0E95  1303               	bcf	3,6	;RP1=0, select bank1
  4122  0E96  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  4123  0E97  0874               	movf	?___llmod+2,w
  4124  0E98  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  4125  0E99  0873               	movf	?___llmod+1,w
  4126  0E9A  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  4127  0E9B  0872               	movf	?___llmod,w
  4128  0E9C  00BA               	movwf	sprintf@tmpval^(0+128)
  4129  0E9D                     l4393:
  4130                           
  4131                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  4132  0E9D  083A               	movf	sprintf@tmpval^(0+128),w
  4133  0E9E  3E30               	addlw	48
  4134  0E9F  00A8               	movwf	??_sprintf^(0+128)
  4135  0EA0  0844               	movf	sprintf@sp^(0+128),w
  4136  0EA1  0084               	movwf	4
  4137  0EA2  0828               	movf	??_sprintf^(0+128),w
  4138  0EA3  1383               	bcf	3,7	;select IRP bank0
  4139  0EA4  0080               	movwf	0
  4140  0EA5                     l4395:
  4141  0EA5  3001               	movlw	1
  4142  0EA6  00A8               	movwf	??_sprintf^(0+128)
  4143  0EA7  0828               	movf	??_sprintf^(0+128),w
  4144  0EA8  07C4               	addwf	sprintf@sp^(0+128),f
  4145  0EA9                     l4397:
  4146                           
  4147                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  4148  0EA9  0847               	movf	sprintf@c^(0+128),w
  4149  0EAA  00A8               	movwf	??_sprintf^(0+128)
  4150  0EAB  3001               	movlw	1
  4151  0EAC                     u6985:
  4152  0EAC  1003               	clrc
  4153  0EAD  0DA8               	rlf	??_sprintf^(0+128),f
  4154  0EAE  3EFF               	addlw	-1
  4155  0EAF  1D03               	skipz
  4156  0EB0  2EAC               	goto	u6985
  4157  0EB1  1003               	clrc
  4158  0EB2  0D28               	rlf	??_sprintf^(0+128),w
  4159  0EB3  3E7A               	addlw	low (_dpowers| (0+32768))
  4160  0EB4  0084               	movwf	4
  4161  0EB5  3098               	movlw	high (_dpowers| (0+32768))
  4162  0EB6  1803               	skipnc
  4163  0EB7  3E01               	addlw	1
  4164  0EB8  1283               	bcf	3,5	;RP0=0, select bank0
  4165  0EB9  1303               	bcf	3,6	;RP1=0, select bank0
  4166  0EBA  00FF               	movwf	btemp+1
  4167  0EBB  160A  158A  2000  120A  158A  	fcall	stringtab
  4168  0EC0  00F2               	movwf	___llmod@divisor
  4169  0EC1  160A  158A  2000  120A  158A  	fcall	stringtab
  4170  0EC6  00F3               	movwf	___llmod@divisor+1
  4171  0EC7  160A  158A  2000  120A  158A  	fcall	stringtab
  4172  0ECC  00F4               	movwf	___llmod@divisor+2
  4173  0ECD  160A  158A  2000  120A  158A  	fcall	stringtab
  4174  0ED2  00F5               	movwf	___llmod@divisor+3
  4175  0ED3  1683               	bsf	3,5	;RP0=1, select bank1
  4176  0ED4  1303               	bcf	3,6	;RP1=0, select bank1
  4177  0ED5  0835               	movf	(sprintf@val+3)^(0+128),w
  4178  0ED6  00F9               	movwf	___llmod@dividend+3
  4179  0ED7  0834               	movf	(sprintf@val+2)^(0+128),w
  4180  0ED8  00F8               	movwf	___llmod@dividend+2
  4181  0ED9  0833               	movf	(sprintf@val+1)^(0+128),w
  4182  0EDA  00F7               	movwf	___llmod@dividend+1
  4183  0EDB  0832               	movf	sprintf@val^(0+128),w
  4184  0EDC  00F6               	movwf	___llmod@dividend
  4185  0EDD  160A  158A  242A  120A  158A  	fcall	___llmod
  4186  0EE2  0875               	movf	?___llmod+3,w
  4187  0EE3  1683               	bsf	3,5	;RP0=1, select bank1
  4188  0EE4  1303               	bcf	3,6	;RP1=0, select bank1
  4189  0EE5  00B5               	movwf	(sprintf@val+3)^(0+128)
  4190  0EE6  0874               	movf	?___llmod+2,w
  4191  0EE7  00B4               	movwf	(sprintf@val+2)^(0+128)
  4192  0EE8  0873               	movf	?___llmod+1,w
  4193  0EE9  00B3               	movwf	(sprintf@val+1)^(0+128)
  4194  0EEA  0872               	movf	?___llmod,w
  4195  0EEB  00B2               	movwf	sprintf@val^(0+128)
  4196  0EEC                     l4399:
  4197                           
  4198                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  4199  0EEC  3001               	movlw	1
  4200  0EED  02C7               	subwf	sprintf@c^(0+128),f
  4201  0EEE  0A47               	incf	sprintf@c^(0+128),w
  4202  0EEF  1D03               	btfss	3,2
  4203  0EF0  2EF2               	goto	u6991
  4204  0EF1  2EF3               	goto	u6990
  4205  0EF2                     u6991:
  4206  0EF2  2E3B               	goto	l4389
  4207  0EF3                     u6990:
  4208  0EF3  2F05               	goto	l4407
  4209  0EF4                     l4401:
  4210                           
  4211                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  4212  0EF4  3030               	movlw	48
  4213  0EF5  00A8               	movwf	??_sprintf^(0+128)
  4214  0EF6  0844               	movf	sprintf@sp^(0+128),w
  4215  0EF7  0084               	movwf	4
  4216  0EF8  0828               	movf	??_sprintf^(0+128),w
  4217  0EF9  1383               	bcf	3,7	;select IRP bank0
  4218  0EFA  0080               	movwf	0
  4219  0EFB                     l4403:
  4220  0EFB  3001               	movlw	1
  4221  0EFC  00A8               	movwf	??_sprintf^(0+128)
  4222  0EFD  0828               	movf	??_sprintf^(0+128),w
  4223  0EFE  07C4               	addwf	sprintf@sp^(0+128),f
  4224  0EFF                     l4405:
  4225                           
  4226                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  4227  0EFF  30FF               	movlw	255
  4228  0F00  07C5               	addwf	sprintf@prec^(0+128),f
  4229  0F01  1803               	skipnc
  4230  0F02  0AC6               	incf	(sprintf@prec+1)^(0+128),f
  4231  0F03  30FF               	movlw	255
  4232  0F04  07C6               	addwf	(sprintf@prec+1)^(0+128),f
  4233  0F05                     l4407:
  4234                           
  4235                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  4236  0F05  0845               	movf	sprintf@prec^(0+128),w
  4237  0F06  0446               	iorwf	(sprintf@prec+1)^(0+128),w
  4238  0F07  1D03               	btfss	3,2
  4239  0F08  2F0A               	goto	u7001
  4240  0F09  2F0B               	goto	u7000
  4241  0F0A                     u7001:
  4242  0F0A  2EF4               	goto	l4401
  4243  0F0B                     u7000:
  4244  0F0B  2FCF               	goto	l4455
  4245  0F0C                     l4409:
  4246                           
  4247                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  4248  0F0C  0845               	movf	sprintf@prec^(0+128),w
  4249  0F0D  0446               	iorwf	(sprintf@prec+1)^(0+128),w
  4250  0F0E  1D03               	btfss	3,2
  4251  0F0F  2F11               	goto	u7011
  4252  0F10  2F12               	goto	u7010
  4253  0F11                     u7011:
  4254  0F11  2F20               	goto	l373
  4255  0F12                     u7010:
  4256  0F12                     l4411:
  4257  0F12  0835               	movf	(sprintf@val+3)^(0+128),w
  4258  0F13  0434               	iorwf	(sprintf@val+2)^(0+128),w
  4259  0F14  0433               	iorwf	(sprintf@val+1)^(0+128),w
  4260  0F15  0432               	iorwf	sprintf@val^(0+128),w
  4261  0F16  1D03               	skipz
  4262  0F17  2F19               	goto	u7021
  4263  0F18  2F1A               	goto	u7020
  4264  0F19                     u7021:
  4265  0F19  2F20               	goto	l373
  4266  0F1A                     u7020:
  4267  0F1A                     l4413:
  4268                           
  4269                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  4270  0F1A  3001               	movlw	1
  4271  0F1B  07C5               	addwf	sprintf@prec^(0+128),f
  4272  0F1C  1803               	skipnc
  4273  0F1D  0AC6               	incf	(sprintf@prec+1)^(0+128),f
  4274  0F1E  3000               	movlw	0
  4275  0F1F  07C6               	addwf	(sprintf@prec+1)^(0+128),f
  4276  0F20                     l373:
  4277                           
  4278                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  4279  0F20  0846               	movf	(sprintf@prec+1)^(0+128),w
  4280  0F21  3A80               	xorlw	128
  4281  0F22  3C80               	sublw	128
  4282  0F23  1D03               	skipz
  4283  0F24  2F27               	goto	u7035
  4284  0F25  0845               	movf	sprintf@prec^(0+128),w
  4285  0F26  0247               	subwf	sprintf@c^(0+128),w
  4286  0F27                     u7035:
  4287  0F27  1803               	skipnc
  4288  0F28  2F2A               	goto	u7031
  4289  0F29  2F2B               	goto	u7030
  4290  0F2A                     u7031:
  4291  0F2A  2F32               	goto	l4417
  4292  0F2B                     u7030:
  4293  0F2B                     l4415:
  4294                           
  4295                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  4296  0F2B  1683               	bsf	3,5	;RP0=1, select bank1
  4297  0F2C  1303               	bcf	3,6	;RP1=0, select bank1
  4298  0F2D  0845               	movf	sprintf@prec^(0+128),w
  4299  0F2E  00A8               	movwf	??_sprintf^(0+128)
  4300  0F2F  0828               	movf	??_sprintf^(0+128),w
  4301  0F30  00C7               	movwf	sprintf@c^(0+128)
  4302  0F31  2F4A               	goto	l4421
  4303  0F32                     l4417:
  4304  0F32  1683               	bsf	3,5	;RP0=1, select bank1
  4305  0F33  1303               	bcf	3,6	;RP1=0, select bank1
  4306  0F34  0846               	movf	(sprintf@prec+1)^(0+128),w
  4307  0F35  3A80               	xorlw	128
  4308  0F36  00A8               	movwf	??_sprintf^(0+128)
  4309  0F37  3080               	movlw	128
  4310  0F38  0228               	subwf	??_sprintf^(0+128),w
  4311  0F39  1D03               	skipz
  4312  0F3A  2F3D               	goto	u7045
  4313  0F3B  0847               	movf	sprintf@c^(0+128),w
  4314  0F3C  0245               	subwf	sprintf@prec^(0+128),w
  4315  0F3D                     u7045:
  4316  0F3D  1803               	skipnc
  4317  0F3E  2F40               	goto	u7041
  4318  0F3F  2F41               	goto	u7040
  4319  0F40                     u7041:
  4320  0F40  2F4A               	goto	l4421
  4321  0F41                     u7040:
  4322  0F41                     l4419:
  4323                           
  4324                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  4325  0F41  1683               	bsf	3,5	;RP0=1, select bank1
  4326  0F42  1303               	bcf	3,6	;RP1=0, select bank1
  4327  0F43  0847               	movf	sprintf@c^(0+128),w
  4328  0F44  00A8               	movwf	??_sprintf^(0+128)
  4329  0F45  01A9               	clrf	(??_sprintf^(0+128)+1)
  4330  0F46  0828               	movf	??_sprintf^(0+128),w
  4331  0F47  00C5               	movwf	sprintf@prec^(0+128)
  4332  0F48  0829               	movf	(??_sprintf+1)^(0+128),w
  4333  0F49  00C6               	movwf	(sprintf@prec+1)^(0+128)
  4334  0F4A                     l4421:
  4335                           
  4336                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  4337  0F4A  1683               	bsf	3,5	;RP0=1, select bank1
  4338  0F4B  1303               	bcf	3,6	;RP1=0, select bank1
  4339  0F4C  0838               	movf	sprintf@width^(0+128),w
  4340  0F4D  0439               	iorwf	(sprintf@width+1)^(0+128),w
  4341  0F4E  1903               	btfsc	3,2
  4342  0F4F  2F51               	goto	u7051
  4343  0F50  2F52               	goto	u7050
  4344  0F51                     u7051:
  4345  0F51  2F64               	goto	l4427
  4346  0F52                     u7050:
  4347  0F52                     l4423:
  4348  0F52  3003               	movlw	3
  4349  0F53  0536               	andwf	sprintf@flag^(0+128),w
  4350  0F54  00A8               	movwf	??_sprintf^(0+128)
  4351  0F55  3000               	movlw	0
  4352  0F56  0537               	andwf	(sprintf@flag+1)^(0+128),w
  4353  0F57  00A9               	movwf	(??_sprintf+1)^(0+128)
  4354  0F58  0828               	movf	??_sprintf^(0+128),w
  4355  0F59  0429               	iorwf	(??_sprintf^(0+128)+1),w
  4356  0F5A  1903               	btfsc	3,2
  4357  0F5B  2F5D               	goto	u7061
  4358  0F5C  2F5E               	goto	u7060
  4359  0F5D                     u7061:
  4360  0F5D  2F64               	goto	l4427
  4361  0F5E                     u7060:
  4362  0F5E                     l4425:
  4363                           
  4364                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
  4365  0F5E  30FF               	movlw	255
  4366  0F5F  07B8               	addwf	sprintf@width^(0+128),f
  4367  0F60  1803               	skipnc
  4368  0F61  0AB9               	incf	(sprintf@width+1)^(0+128),f
  4369  0F62  30FF               	movlw	255
  4370  0F63  07B9               	addwf	(sprintf@width+1)^(0+128),f
  4371  0F64                     l4427:
  4372                           
  4373                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
  4374  0F64  1F37               	btfss	(sprintf@flag+1)^(0+128),6
  4375  0F65  2F67               	goto	u7071
  4376  0F66  2F68               	goto	u7070
  4377  0F67                     u7071:
  4378  0F67  2F83               	goto	l4435
  4379  0F68                     u7070:
  4380  0F68                     l4429:
  4381                           
  4382                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
  4383  0F68  0846               	movf	(sprintf@prec+1)^(0+128),w
  4384  0F69  3A80               	xorlw	128
  4385  0F6A  00A8               	movwf	??_sprintf^(0+128)
  4386  0F6B  0839               	movf	(sprintf@width+1)^(0+128),w
  4387  0F6C  3A80               	xorlw	128
  4388  0F6D  0228               	subwf	??_sprintf^(0+128),w
  4389  0F6E  1D03               	skipz
  4390  0F6F  2F72               	goto	u7085
  4391  0F70  0838               	movf	sprintf@width^(0+128),w
  4392  0F71  0245               	subwf	sprintf@prec^(0+128),w
  4393  0F72                     u7085:
  4394  0F72  1803               	skipnc
  4395  0F73  2F75               	goto	u7081
  4396  0F74  2F76               	goto	u7080
  4397  0F75                     u7081:
  4398  0F75  2F7F               	goto	l4433
  4399  0F76                     u7080:
  4400  0F76                     l4431:
  4401                           
  4402                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
  4403  0F76  1683               	bsf	3,5	;RP0=1, select bank1
  4404  0F77  1303               	bcf	3,6	;RP1=0, select bank1
  4405  0F78  0845               	movf	sprintf@prec^(0+128),w
  4406  0F79  02B8               	subwf	sprintf@width^(0+128),f
  4407  0F7A  0846               	movf	(sprintf@prec+1)^(0+128),w
  4408  0F7B  1C03               	skipc
  4409  0F7C  03B9               	decf	(sprintf@width+1)^(0+128),f
  4410  0F7D  02B9               	subwf	(sprintf@width+1)^(0+128),f
  4411  0F7E  2F83               	goto	l4435
  4412  0F7F                     l4433:
  4413                           
  4414                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
  4415  0F7F  1683               	bsf	3,5	;RP0=1, select bank1
  4416  0F80  1303               	bcf	3,6	;RP1=0, select bank1
  4417  0F81  01B8               	clrf	sprintf@width^(0+128)
  4418  0F82  01B9               	clrf	(sprintf@width+1)^(0+128)
  4419  0F83                     l4435:
  4420                           
  4421                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  4422  0F83  0839               	movf	(sprintf@width+1)^(0+128),w
  4423  0F84  3A80               	xorlw	128
  4424  0F85  3C80               	sublw	128
  4425  0F86  1D03               	skipz
  4426  0F87  2F8A               	goto	u7095
  4427  0F88  0838               	movf	sprintf@width^(0+128),w
  4428  0F89  0247               	subwf	sprintf@c^(0+128),w
  4429  0F8A                     u7095:
  4430  0F8A  1803               	skipnc
  4431  0F8B  2F8D               	goto	u7091
  4432  0F8C  2F8E               	goto	u7090
  4433  0F8D                     u7091:
  4434  0F8D  2F9A               	goto	l4439
  4435  0F8E                     u7090:
  4436  0F8E                     l4437:
  4437                           
  4438                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  4439  0F8E  1683               	bsf	3,5	;RP0=1, select bank1
  4440  0F8F  1303               	bcf	3,6	;RP1=0, select bank1
  4441  0F90  0847               	movf	sprintf@c^(0+128),w
  4442  0F91  00A8               	movwf	??_sprintf^(0+128)
  4443  0F92  01A9               	clrf	(??_sprintf^(0+128)+1)
  4444  0F93  0828               	movf	??_sprintf^(0+128),w
  4445  0F94  02B8               	subwf	sprintf@width^(0+128),f
  4446  0F95  0829               	movf	(??_sprintf+1)^(0+128),w
  4447  0F96  1C03               	skipc
  4448  0F97  03B9               	decf	(sprintf@width+1)^(0+128),f
  4449  0F98  02B9               	subwf	(sprintf@width+1)^(0+128),f
  4450  0F99  2F9E               	goto	l4441
  4451  0F9A                     l4439:
  4452                           
  4453                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  4454  0F9A  1683               	bsf	3,5	;RP0=1, select bank1
  4455  0F9B  1303               	bcf	3,6	;RP1=0, select bank1
  4456  0F9C  01B8               	clrf	sprintf@width^(0+128)
  4457  0F9D  01B9               	clrf	(sprintf@width+1)^(0+128)
  4458  0F9E                     l4441:
  4459                           
  4460                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
  4461  0F9E  0838               	movf	sprintf@width^(0+128),w
  4462  0F9F  0439               	iorwf	(sprintf@width+1)^(0+128),w
  4463  0FA0  1903               	btfsc	3,2
  4464  0FA1  2FA3               	goto	u7101
  4465  0FA2  2FA4               	goto	u7100
  4466  0FA3                     u7101:
  4467  0FA3  2FBB               	goto	l4449
  4468  0FA4                     u7100:
  4469  0FA4                     l4443:
  4470                           
  4471                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  4472  0FA4  3020               	movlw	32
  4473  0FA5  00A8               	movwf	??_sprintf^(0+128)
  4474  0FA6  0844               	movf	sprintf@sp^(0+128),w
  4475  0FA7  0084               	movwf	4
  4476  0FA8  0828               	movf	??_sprintf^(0+128),w
  4477  0FA9  1383               	bcf	3,7	;select IRP bank0
  4478  0FAA  0080               	movwf	0
  4479  0FAB                     l4445:
  4480  0FAB  3001               	movlw	1
  4481  0FAC  00A8               	movwf	??_sprintf^(0+128)
  4482  0FAD  0828               	movf	??_sprintf^(0+128),w
  4483  0FAE  07C4               	addwf	sprintf@sp^(0+128),f
  4484  0FAF                     l4447:
  4485  0FAF  30FF               	movlw	255
  4486  0FB0  07B8               	addwf	sprintf@width^(0+128),f
  4487  0FB1  1803               	skipnc
  4488  0FB2  0AB9               	incf	(sprintf@width+1)^(0+128),f
  4489  0FB3  30FF               	movlw	255
  4490  0FB4  07B9               	addwf	(sprintf@width+1)^(0+128),f
  4491  0FB5  0838               	movf	sprintf@width^(0+128),w
  4492  0FB6  0439               	iorwf	(sprintf@width+1)^(0+128),w
  4493  0FB7  1D03               	btfss	3,2
  4494  0FB8  2FBA               	goto	u7111
  4495  0FB9  2FBB               	goto	u7110
  4496  0FBA                     u7111:
  4497  0FBA  2FA4               	goto	l4443
  4498  0FBB                     u7110:
  4499  0FBB                     l4449:
  4500                           
  4501                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  4502  0FBB  3003               	movlw	3
  4503  0FBC  0536               	andwf	sprintf@flag^(0+128),w
  4504  0FBD  00A8               	movwf	??_sprintf^(0+128)
  4505  0FBE  3000               	movlw	0
  4506  0FBF  0537               	andwf	(sprintf@flag+1)^(0+128),w
  4507  0FC0  00A9               	movwf	(??_sprintf+1)^(0+128)
  4508  0FC1  0828               	movf	??_sprintf^(0+128),w
  4509  0FC2  0429               	iorwf	(??_sprintf^(0+128)+1),w
  4510  0FC3  1903               	btfsc	3,2
  4511  0FC4  2FC6               	goto	u7121
  4512  0FC5  2FC7               	goto	u7120
  4513  0FC6                     u7121:
  4514  0FC6  2FCF               	goto	l4455
  4515  0FC7                     u7120:
  4516  0FC7                     l4451:
  4517                           
  4518                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  4519  0FC7  302D               	movlw	45
  4520  0FC8  00A8               	movwf	??_sprintf^(0+128)
  4521  0FC9  0844               	movf	sprintf@sp^(0+128),w
  4522  0FCA  0084               	movwf	4
  4523  0FCB  0828               	movf	??_sprintf^(0+128),w
  4524  0FCC  1383               	bcf	3,7	;select IRP bank0
  4525  0FCD  0080               	movwf	0
  4526  0FCE  2824               	goto	l4205
  4527  0FCF                     l4455:
  4528                           
  4529                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4530  0FCF  1283               	bcf	3,5	;RP0=0, select bank0
  4531  0FD0  1303               	bcf	3,6	;RP1=0, select bank0
  4532  0FD1  086B               	movf	sprintf@f+1,w
  4533  0FD2  1683               	bsf	3,5	;RP0=1, select bank1
  4534  0FD3  1303               	bcf	3,6	;RP1=0, select bank1
  4535  0FD4  00A9               	movwf	(??_sprintf^(0+128)+1)
  4536  0FD5  1283               	bcf	3,5	;RP0=0, select bank0
  4537  0FD6  1303               	bcf	3,6	;RP1=0, select bank0
  4538  0FD7  086A               	movf	sprintf@f,w
  4539  0FD8  1683               	bsf	3,5	;RP0=1, select bank1
  4540  0FD9  1303               	bcf	3,6	;RP1=0, select bank1
  4541  0FDA  00A8               	movwf	??_sprintf^(0+128)
  4542  0FDB  1283               	bcf	3,5	;RP0=0, select bank0
  4543  0FDC  1303               	bcf	3,6	;RP1=0, select bank0
  4544  0FDD  0AEA               	incf	sprintf@f,f
  4545  0FDE  1903               	skipnz
  4546  0FDF  0AEB               	incf	sprintf@f+1,f
  4547  0FE0  1683               	bsf	3,5	;RP0=1, select bank1
  4548  0FE1  1303               	bcf	3,6	;RP1=0, select bank1
  4549  0FE2  0829               	movf	(??_sprintf+1)^(0+128),w
  4550  0FE3  1283               	bcf	3,5	;RP0=0, select bank0
  4551  0FE4  1303               	bcf	3,6	;RP1=0, select bank0
  4552  0FE5  00FF               	movwf	btemp+1
  4553  0FE6  1683               	bsf	3,5	;RP0=1, select bank1
  4554  0FE7  1303               	bcf	3,6	;RP1=0, select bank1
  4555  0FE8  0828               	movf	??_sprintf^(0+128),w
  4556  0FE9  0084               	movwf	4
  4557  0FEA  1283               	bcf	3,5	;RP0=0, select bank0
  4558  0FEB  1303               	bcf	3,6	;RP1=0, select bank0
  4559  0FEC  160A  158A  2000  120A  158A  	fcall	stringtab
  4560  0FF1  1683               	bsf	3,5	;RP0=1, select bank1
  4561  0FF2  1303               	bcf	3,6	;RP1=0, select bank1
  4562  0FF3  00AA               	movwf	(??_sprintf+2)^(0+128)
  4563  0FF4  082A               	movf	(??_sprintf+2)^(0+128),w
  4564  0FF5  00C7               	movwf	sprintf@c^(0+128)
  4565  0FF6  0847               	movf	sprintf@c^(0+128),w
  4566  0FF7  1D03               	btfss	3,2
  4567  0FF8  2FFA               	goto	u7131
  4568  0FF9  2FFB               	goto	u7130
  4569  0FFA                     u7131:
  4570  0FFA  2817               	goto	l4201
  4571  0FFB                     u7130:
  4572  0FFB                     l4457:
  4573                           
  4574                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  4575  0FFB  0844               	movf	sprintf@sp^(0+128),w
  4576  0FFC  0084               	movwf	4
  4577  0FFD  1383               	bcf	3,7	;select IRP bank0
  4578  0FFE  0180               	clrf	0
  4579  0FFF                     l388:
  4580  0FFF  0008               	return
  4581  1000                     __end_of_sprintf:
  4582                           
  4583                           	psect	text2
  4584  001E                     __ptext2:	
  4585 ;; *************** function _scale *****************
  4586 ;; Defined at:
  4587 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4588 ;; Parameters:    Size  Location     Type
  4589 ;;  scl             1    wreg     char 
  4590 ;; Auto vars:     Size  Location     Type
  4591 ;;  scl             1   52[BANK0 ] char 
  4592 ;; Return value:  Size  Location     Type
  4593 ;;                  4   34[BANK0 ] char 
  4594 ;; Registers used:
  4595 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4596 ;; Tracked objects:
  4597 ;;		On entry : 0/0
  4598 ;;		On exit  : 0/0
  4599 ;;		Unchanged: 0/0
  4600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4601 ;;      Params:         0       4       0       0       0
  4602 ;;      Locals:         0       5       0       0       0
  4603 ;;      Temps:          0      10       0       0       0
  4604 ;;      Totals:         0      19       0       0       0
  4605 ;;Total ram usage:       19 bytes
  4606 ;; Hardware stack levels used:    1
  4607 ;; Hardware stack levels required when called:    3
  4608 ;; This function calls:
  4609 ;;		___awdiv
  4610 ;;		___awmod
  4611 ;;		___flmul
  4612 ;; This function is called by:
  4613 ;;		_sprintf
  4614 ;; This function uses a non-reentrant model
  4615 ;;
  4616                           
  4617                           
  4618                           ;psect for function _scale
  4619  001E                     _scale:
  4620                           
  4621                           ;incstack = 0
  4622                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4623                           ;scale@scl stored from wreg
  4624  001E  1283               	bcf	3,5	;RP0=0, select bank0
  4625  001F  1303               	bcf	3,6	;RP1=0, select bank0
  4626  0020  00D4               	movwf	scale@scl
  4627  0021                     l4063:
  4628                           
  4629                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  4630  0021  1FD4               	btfss	scale@scl,7
  4631  0022  2824               	goto	u6241
  4632  0023  2825               	goto	u6240
  4633  0024                     u6241:
  4634  0024  29EF               	goto	l4085
  4635  0025                     u6240:
  4636  0025                     l4065:
  4637                           
  4638                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  4639  0025  09D4               	comf	scale@scl,f
  4640  0026  0AD4               	incf	scale@scl,f
  4641  0027                     l4067:
  4642                           
  4643                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  4644  0027  0854               	movf	scale@scl,w
  4645  0028  3A80               	xorlw	128
  4646  0029  3E12               	addlw	-238
  4647  002A  1C03               	skipc
  4648  002B  282D               	goto	u6251
  4649  002C  282E               	goto	u6250
  4650  002D                     u6251:
  4651  002D  2926               	goto	l4075
  4652  002E                     u6250:
  4653  002E                     l4069:
  4654                           
  4655                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4656  002E  300A               	movlw	10
  4657  002F  00A0               	movwf	___awdiv@divisor
  4658  0030  3000               	movlw	0
  4659  0031  00A1               	movwf	___awdiv@divisor+1
  4660  0032  0854               	movf	scale@scl,w
  4661  0033  00F4               	movwf	___awmod@dividend
  4662  0034  01F5               	clrf	___awmod@dividend+1
  4663  0035  1BF4               	btfsc	___awmod@dividend,7
  4664  0036  03F5               	decf	___awmod@dividend+1,f
  4665  0037  3064               	movlw	100
  4666  0038  00F2               	movwf	___awmod@divisor
  4667  0039  3000               	movlw	0
  4668  003A  00F3               	movwf	___awmod@divisor+1
  4669  003B  160A  158A  2480  120A  118A  	fcall	___awmod
  4670  0040  0873               	movf	?___awmod+1,w
  4671  0041  1283               	bcf	3,5	;RP0=0, select bank0
  4672  0042  1303               	bcf	3,6	;RP1=0, select bank0
  4673  0043  00A3               	movwf	___awdiv@dividend+1
  4674  0044  0872               	movf	?___awmod,w
  4675  0045  00A2               	movwf	___awdiv@dividend
  4676  0046  160A  158A  2541  120A  118A  	fcall	___awdiv
  4677  004B  1283               	bcf	3,5	;RP0=0, select bank0
  4678  004C  1303               	bcf	3,6	;RP1=0, select bank0
  4679  004D  0820               	movf	?___awdiv,w
  4680  004E  00C6               	movwf	??_scale
  4681  004F  3001               	movlw	1
  4682  0050                     u6265:
  4683  0050  1003               	clrc
  4684  0051  0DC6               	rlf	??_scale,f
  4685  0052  3EFF               	addlw	-1
  4686  0053  1D03               	skipz
  4687  0054  2850               	goto	u6265
  4688  0055  1003               	clrc
  4689  0056  0D46               	rlf	??_scale,w
  4690  0057  3E24               	addlw	36
  4691  0058  3E46               	addlw	low (__npowers_| (0+32768))
  4692  0059  0084               	movwf	4
  4693  005A  3098               	movlw	high (__npowers_| (0+32768))
  4694  005B  1803               	skipnc
  4695  005C  3E01               	addlw	1
  4696  005D  00FF               	movwf	btemp+1
  4697  005E  160A  158A  2000  120A  118A  	fcall	stringtab
  4698  0063  00C7               	movwf	??_scale+1
  4699  0064  160A  158A  2000  120A  118A  	fcall	stringtab
  4700  0069  00C8               	movwf	??_scale+2
  4701  006A  160A  158A  2000  120A  118A  	fcall	stringtab
  4702  006F  00C9               	movwf	??_scale+3
  4703  0070  160A  158A  2000  120A  118A  	fcall	stringtab
  4704  0075  00CA               	movwf	??_scale+4
  4705  0076  084A               	movf	??_scale+4,w
  4706  0077  00AB               	movwf	___flmul@b+3
  4707  0078  0849               	movf	??_scale+3,w
  4708  0079  00AA               	movwf	___flmul@b+2
  4709  007A  0848               	movf	??_scale+2,w
  4710  007B  00A9               	movwf	___flmul@b+1
  4711  007C  0847               	movf	??_scale+1,w
  4712  007D  00A8               	movwf	___flmul@b
  4713  007E  3064               	movlw	100
  4714  007F  00A0               	movwf	___awdiv@divisor
  4715  0080  3000               	movlw	0
  4716  0081  00A1               	movwf	___awdiv@divisor+1
  4717  0082  0854               	movf	scale@scl,w
  4718  0083  00A2               	movwf	___awdiv@dividend
  4719  0084  01A3               	clrf	___awdiv@dividend+1
  4720  0085  1BA2               	btfsc	___awdiv@dividend,7
  4721  0086  03A3               	decf	___awdiv@dividend+1,f
  4722  0087  160A  158A  2541  120A  118A  	fcall	___awdiv
  4723  008C  1283               	bcf	3,5	;RP0=0, select bank0
  4724  008D  1303               	bcf	3,6	;RP1=0, select bank0
  4725  008E  0820               	movf	?___awdiv,w
  4726  008F  00CB               	movwf	??_scale+5
  4727  0090  3001               	movlw	1
  4728  0091                     u6275:
  4729  0091  1003               	clrc
  4730  0092  0DCB               	rlf	??_scale+5,f
  4731  0093  3EFF               	addlw	-1
  4732  0094  1D03               	skipz
  4733  0095  2891               	goto	u6275
  4734  0096  1003               	clrc
  4735  0097  0D4B               	rlf	??_scale+5,w
  4736  0098  3E48               	addlw	72
  4737  0099  3E46               	addlw	low (__npowers_| (0+32768))
  4738  009A  0084               	movwf	4
  4739  009B  3098               	movlw	high (__npowers_| (0+32768))
  4740  009C  1803               	skipnc
  4741  009D  3E01               	addlw	1
  4742  009E  00FF               	movwf	btemp+1
  4743  009F  160A  158A  2000  120A  118A  	fcall	stringtab
  4744  00A4  00CC               	movwf	??_scale+6
  4745  00A5  160A  158A  2000  120A  118A  	fcall	stringtab
  4746  00AA  00CD               	movwf	??_scale+7
  4747  00AB  160A  158A  2000  120A  118A  	fcall	stringtab
  4748  00B0  00CE               	movwf	??_scale+8
  4749  00B1  160A  158A  2000  120A  118A  	fcall	stringtab
  4750  00B6  00CF               	movwf	??_scale+9
  4751  00B7  084F               	movf	??_scale+9,w
  4752  00B8  00AF               	movwf	___flmul@a+3
  4753  00B9  084E               	movf	??_scale+8,w
  4754  00BA  00AE               	movwf	___flmul@a+2
  4755  00BB  084D               	movf	??_scale+7,w
  4756  00BC  00AD               	movwf	___flmul@a+1
  4757  00BD  084C               	movf	??_scale+6,w
  4758  00BE  00AC               	movwf	___flmul@a
  4759  00BF  120A  118A  23B7  120A  118A  	fcall	___flmul
  4760  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  4761  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  4762  00C6  082B               	movf	?___flmul+3,w
  4763  00C7  00D3               	movwf	_scale$1182+3
  4764  00C8  082A               	movf	?___flmul+2,w
  4765  00C9  00D2               	movwf	_scale$1182+2
  4766  00CA  0829               	movf	?___flmul+1,w
  4767  00CB  00D1               	movwf	_scale$1182+1
  4768  00CC  0828               	movf	?___flmul,w
  4769  00CD  00D0               	movwf	_scale$1182
  4770                           
  4771                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4772  00CE  300A               	movlw	10
  4773  00CF  00F2               	movwf	___awmod@divisor
  4774  00D0  3000               	movlw	0
  4775  00D1  00F3               	movwf	___awmod@divisor+1
  4776  00D2  0854               	movf	scale@scl,w
  4777  00D3  00F4               	movwf	___awmod@dividend
  4778  00D4  01F5               	clrf	___awmod@dividend+1
  4779  00D5  1BF4               	btfsc	___awmod@dividend,7
  4780  00D6  03F5               	decf	___awmod@dividend+1,f
  4781  00D7  160A  158A  2480  120A  118A  	fcall	___awmod
  4782  00DC  0872               	movf	?___awmod,w
  4783  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  4784  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  4785  00DF  00C6               	movwf	??_scale
  4786  00E0  3001               	movlw	1
  4787  00E1                     u6285:
  4788  00E1  1003               	clrc
  4789  00E2  0DC6               	rlf	??_scale,f
  4790  00E3  3EFF               	addlw	-1
  4791  00E4  1D03               	skipz
  4792  00E5  28E1               	goto	u6285
  4793  00E6  1003               	clrc
  4794  00E7  0D46               	rlf	??_scale,w
  4795  00E8  3E46               	addlw	low (__npowers_| (0+32768))
  4796  00E9  0084               	movwf	4
  4797  00EA  3098               	movlw	high (__npowers_| (0+32768))
  4798  00EB  1803               	skipnc
  4799  00EC  3E01               	addlw	1
  4800  00ED  00FF               	movwf	btemp+1
  4801  00EE  160A  158A  2000  120A  118A  	fcall	stringtab
  4802  00F3  00C7               	movwf	??_scale+1
  4803  00F4  160A  158A  2000  120A  118A  	fcall	stringtab
  4804  00F9  00C8               	movwf	??_scale+2
  4805  00FA  160A  158A  2000  120A  118A  	fcall	stringtab
  4806  00FF  00C9               	movwf	??_scale+3
  4807  0100  160A  158A  2000  120A  118A  	fcall	stringtab
  4808  0105  00CA               	movwf	??_scale+4
  4809  0106  084A               	movf	??_scale+4,w
  4810  0107  00AB               	movwf	___flmul@b+3
  4811  0108  0849               	movf	??_scale+3,w
  4812  0109  00AA               	movwf	___flmul@b+2
  4813  010A  0848               	movf	??_scale+2,w
  4814  010B  00A9               	movwf	___flmul@b+1
  4815  010C  0847               	movf	??_scale+1,w
  4816  010D  00A8               	movwf	___flmul@b
  4817  010E  0853               	movf	_scale$1182+3,w
  4818  010F  00AF               	movwf	___flmul@a+3
  4819  0110  0852               	movf	_scale$1182+2,w
  4820  0111  00AE               	movwf	___flmul@a+2
  4821  0112  0851               	movf	_scale$1182+1,w
  4822  0113  00AD               	movwf	___flmul@a+1
  4823  0114  0850               	movf	_scale$1182,w
  4824  0115  00AC               	movwf	___flmul@a
  4825  0116  120A  118A  23B7  120A  118A  	fcall	___flmul
  4826  011B  1283               	bcf	3,5	;RP0=0, select bank0
  4827  011C  1303               	bcf	3,6	;RP1=0, select bank0
  4828  011D  082B               	movf	?___flmul+3,w
  4829  011E  00C5               	movwf	?_scale+3
  4830  011F  082A               	movf	?___flmul+2,w
  4831  0120  00C4               	movwf	?_scale+2
  4832  0121  0829               	movf	?___flmul+1,w
  4833  0122  00C3               	movwf	?_scale+1
  4834  0123  0828               	movf	?___flmul,w
  4835  0124  00C2               	movwf	?_scale
  4836  0125  2BB6               	goto	l305
  4837  0126                     l4075:
  4838  0126  0854               	movf	scale@scl,w
  4839  0127  3A80               	xorlw	128
  4840  0128  3E75               	addlw	-139
  4841  0129  1C03               	skipc
  4842  012A  292C               	goto	u6291
  4843  012B  292D               	goto	u6290
  4844  012C                     u6291:
  4845  012C  29BE               	goto	l4081
  4846  012D                     u6290:
  4847  012D                     l4077:
  4848                           
  4849                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4850  012D  300A               	movlw	10
  4851  012E  00F2               	movwf	___awmod@divisor
  4852  012F  3000               	movlw	0
  4853  0130  00F3               	movwf	___awmod@divisor+1
  4854  0131  0854               	movf	scale@scl,w
  4855  0132  00F4               	movwf	___awmod@dividend
  4856  0133  01F5               	clrf	___awmod@dividend+1
  4857  0134  1BF4               	btfsc	___awmod@dividend,7
  4858  0135  03F5               	decf	___awmod@dividend+1,f
  4859  0136  160A  158A  2480  120A  118A  	fcall	___awmod
  4860  013B  0872               	movf	?___awmod,w
  4861  013C  1283               	bcf	3,5	;RP0=0, select bank0
  4862  013D  1303               	bcf	3,6	;RP1=0, select bank0
  4863  013E  00C6               	movwf	??_scale
  4864  013F  3001               	movlw	1
  4865  0140                     u6305:
  4866  0140  1003               	clrc
  4867  0141  0DC6               	rlf	??_scale,f
  4868  0142  3EFF               	addlw	-1
  4869  0143  1D03               	skipz
  4870  0144  2940               	goto	u6305
  4871  0145  1003               	clrc
  4872  0146  0D46               	rlf	??_scale,w
  4873  0147  3E46               	addlw	low (__npowers_| (0+32768))
  4874  0148  0084               	movwf	4
  4875  0149  3098               	movlw	high (__npowers_| (0+32768))
  4876  014A  1803               	skipnc
  4877  014B  3E01               	addlw	1
  4878  014C  00FF               	movwf	btemp+1
  4879  014D  160A  158A  2000  120A  118A  	fcall	stringtab
  4880  0152  00C7               	movwf	??_scale+1
  4881  0153  160A  158A  2000  120A  118A  	fcall	stringtab
  4882  0158  00C8               	movwf	??_scale+2
  4883  0159  160A  158A  2000  120A  118A  	fcall	stringtab
  4884  015E  00C9               	movwf	??_scale+3
  4885  015F  160A  158A  2000  120A  118A  	fcall	stringtab
  4886  0164  00CA               	movwf	??_scale+4
  4887  0165  084A               	movf	??_scale+4,w
  4888  0166  00AB               	movwf	___flmul@b+3
  4889  0167  0849               	movf	??_scale+3,w
  4890  0168  00AA               	movwf	___flmul@b+2
  4891  0169  0848               	movf	??_scale+2,w
  4892  016A  00A9               	movwf	___flmul@b+1
  4893  016B  0847               	movf	??_scale+1,w
  4894  016C  00A8               	movwf	___flmul@b
  4895  016D  300A               	movlw	10
  4896  016E  00A0               	movwf	___awdiv@divisor
  4897  016F  3000               	movlw	0
  4898  0170  00A1               	movwf	___awdiv@divisor+1
  4899  0171  0854               	movf	scale@scl,w
  4900  0172  00A2               	movwf	___awdiv@dividend
  4901  0173  01A3               	clrf	___awdiv@dividend+1
  4902  0174  1BA2               	btfsc	___awdiv@dividend,7
  4903  0175  03A3               	decf	___awdiv@dividend+1,f
  4904  0176  160A  158A  2541  120A  118A  	fcall	___awdiv
  4905  017B  1283               	bcf	3,5	;RP0=0, select bank0
  4906  017C  1303               	bcf	3,6	;RP1=0, select bank0
  4907  017D  0820               	movf	?___awdiv,w
  4908  017E  00CB               	movwf	??_scale+5
  4909  017F  3001               	movlw	1
  4910  0180                     u6315:
  4911  0180  1003               	clrc
  4912  0181  0DCB               	rlf	??_scale+5,f
  4913  0182  3EFF               	addlw	-1
  4914  0183  1D03               	skipz
  4915  0184  2980               	goto	u6315
  4916  0185  1003               	clrc
  4917  0186  0D4B               	rlf	??_scale+5,w
  4918  0187  3E24               	addlw	36
  4919  0188  3E46               	addlw	low (__npowers_| (0+32768))
  4920  0189  0084               	movwf	4
  4921  018A  3098               	movlw	high (__npowers_| (0+32768))
  4922  018B  1803               	skipnc
  4923  018C  3E01               	addlw	1
  4924  018D  00FF               	movwf	btemp+1
  4925  018E  160A  158A  2000  120A  118A  	fcall	stringtab
  4926  0193  00CC               	movwf	??_scale+6
  4927  0194  160A  158A  2000  120A  118A  	fcall	stringtab
  4928  0199  00CD               	movwf	??_scale+7
  4929  019A  160A  158A  2000  120A  118A  	fcall	stringtab
  4930  019F  00CE               	movwf	??_scale+8
  4931  01A0  160A  158A  2000  120A  118A  	fcall	stringtab
  4932  01A5  00CF               	movwf	??_scale+9
  4933  01A6  084F               	movf	??_scale+9,w
  4934  01A7  00AF               	movwf	___flmul@a+3
  4935  01A8  084E               	movf	??_scale+8,w
  4936  01A9  00AE               	movwf	___flmul@a+2
  4937  01AA  084D               	movf	??_scale+7,w
  4938  01AB  00AD               	movwf	___flmul@a+1
  4939  01AC  084C               	movf	??_scale+6,w
  4940  01AD  00AC               	movwf	___flmul@a
  4941  01AE  120A  118A  23B7  120A  118A  	fcall	___flmul
  4942  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  4943  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  4944  01B5  082B               	movf	?___flmul+3,w
  4945  01B6  00C5               	movwf	?_scale+3
  4946  01B7  082A               	movf	?___flmul+2,w
  4947  01B8  00C4               	movwf	?_scale+2
  4948  01B9  0829               	movf	?___flmul+1,w
  4949  01BA  00C3               	movwf	?_scale+1
  4950  01BB  0828               	movf	?___flmul,w
  4951  01BC  00C2               	movwf	?_scale
  4952  01BD  2BB6               	goto	l305
  4953  01BE                     l4081:
  4954                           
  4955                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4956  01BE  0854               	movf	scale@scl,w
  4957  01BF  00C6               	movwf	??_scale
  4958  01C0  3001               	movlw	1
  4959  01C1                     u6325:
  4960  01C1  1003               	clrc
  4961  01C2  0DC6               	rlf	??_scale,f
  4962  01C3  3EFF               	addlw	-1
  4963  01C4  1D03               	skipz
  4964  01C5  29C1               	goto	u6325
  4965  01C6  1003               	clrc
  4966  01C7  0D46               	rlf	??_scale,w
  4967  01C8  3E46               	addlw	low (__npowers_| (0+32768))
  4968  01C9  0084               	movwf	4
  4969  01CA  3098               	movlw	high (__npowers_| (0+32768))
  4970  01CB  1803               	skipnc
  4971  01CC  3E01               	addlw	1
  4972  01CD  00FF               	movwf	btemp+1
  4973  01CE  160A  158A  2000  120A  118A  	fcall	stringtab
  4974  01D3  00C7               	movwf	??_scale+1
  4975  01D4  160A  158A  2000  120A  118A  	fcall	stringtab
  4976  01D9  00C8               	movwf	??_scale+2
  4977  01DA  160A  158A  2000  120A  118A  	fcall	stringtab
  4978  01DF  00C9               	movwf	??_scale+3
  4979  01E0  160A  158A  2000  120A  118A  	fcall	stringtab
  4980  01E5  00CA               	movwf	??_scale+4
  4981  01E6  084A               	movf	??_scale+4,w
  4982  01E7  00C5               	movwf	?_scale+3
  4983  01E8  0849               	movf	??_scale+3,w
  4984  01E9  00C4               	movwf	?_scale+2
  4985  01EA  0848               	movf	??_scale+2,w
  4986  01EB  00C3               	movwf	?_scale+1
  4987  01EC  0847               	movf	??_scale+1,w
  4988  01ED  00C2               	movwf	?_scale
  4989  01EE  2BB6               	goto	l305
  4990  01EF                     l4085:
  4991                           
  4992                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4993  01EF  0854               	movf	scale@scl,w
  4994  01F0  3A80               	xorlw	128
  4995  01F1  3E12               	addlw	-238
  4996  01F2  1C03               	skipc
  4997  01F3  29F5               	goto	u6331
  4998  01F4  29F6               	goto	u6330
  4999  01F5                     u6331:
  5000  01F5  2AEE               	goto	l4093
  5001  01F6                     u6330:
  5002  01F6                     l4087:
  5003                           
  5004                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  5005  01F6  300A               	movlw	10
  5006  01F7  00A0               	movwf	___awdiv@divisor
  5007  01F8  3000               	movlw	0
  5008  01F9  00A1               	movwf	___awdiv@divisor+1
  5009  01FA  0854               	movf	scale@scl,w
  5010  01FB  00F4               	movwf	___awmod@dividend
  5011  01FC  01F5               	clrf	___awmod@dividend+1
  5012  01FD  1BF4               	btfsc	___awmod@dividend,7
  5013  01FE  03F5               	decf	___awmod@dividend+1,f
  5014  01FF  3064               	movlw	100
  5015  0200  00F2               	movwf	___awmod@divisor
  5016  0201  3000               	movlw	0
  5017  0202  00F3               	movwf	___awmod@divisor+1
  5018  0203  160A  158A  2480  120A  118A  	fcall	___awmod
  5019  0208  0873               	movf	?___awmod+1,w
  5020  0209  1283               	bcf	3,5	;RP0=0, select bank0
  5021  020A  1303               	bcf	3,6	;RP1=0, select bank0
  5022  020B  00A3               	movwf	___awdiv@dividend+1
  5023  020C  0872               	movf	?___awmod,w
  5024  020D  00A2               	movwf	___awdiv@dividend
  5025  020E  160A  158A  2541  120A  118A  	fcall	___awdiv
  5026  0213  1283               	bcf	3,5	;RP0=0, select bank0
  5027  0214  1303               	bcf	3,6	;RP1=0, select bank0
  5028  0215  0820               	movf	?___awdiv,w
  5029  0216  00C6               	movwf	??_scale
  5030  0217  3001               	movlw	1
  5031  0218                     u6345:
  5032  0218  1003               	clrc
  5033  0219  0DC6               	rlf	??_scale,f
  5034  021A  3EFF               	addlw	-1
  5035  021B  1D03               	skipz
  5036  021C  2A18               	goto	u6345
  5037  021D  1003               	clrc
  5038  021E  0D46               	rlf	??_scale,w
  5039  021F  3E24               	addlw	36
  5040  0220  3E12               	addlw	low (__powers_| (0+32768))
  5041  0221  0084               	movwf	4
  5042  0222  3098               	movlw	high (__powers_| (0+32768))
  5043  0223  1803               	skipnc
  5044  0224  3E01               	addlw	1
  5045  0225  00FF               	movwf	btemp+1
  5046  0226  160A  158A  2000  120A  118A  	fcall	stringtab
  5047  022B  00C7               	movwf	??_scale+1
  5048  022C  160A  158A  2000  120A  118A  	fcall	stringtab
  5049  0231  00C8               	movwf	??_scale+2
  5050  0232  160A  158A  2000  120A  118A  	fcall	stringtab
  5051  0237  00C9               	movwf	??_scale+3
  5052  0238  160A  158A  2000  120A  118A  	fcall	stringtab
  5053  023D  00CA               	movwf	??_scale+4
  5054  023E  084A               	movf	??_scale+4,w
  5055  023F  00AB               	movwf	___flmul@b+3
  5056  0240  0849               	movf	??_scale+3,w
  5057  0241  00AA               	movwf	___flmul@b+2
  5058  0242  0848               	movf	??_scale+2,w
  5059  0243  00A9               	movwf	___flmul@b+1
  5060  0244  0847               	movf	??_scale+1,w
  5061  0245  00A8               	movwf	___flmul@b
  5062  0246  3064               	movlw	100
  5063  0247  00A0               	movwf	___awdiv@divisor
  5064  0248  3000               	movlw	0
  5065  0249  00A1               	movwf	___awdiv@divisor+1
  5066  024A  0854               	movf	scale@scl,w
  5067  024B  00A2               	movwf	___awdiv@dividend
  5068  024C  01A3               	clrf	___awdiv@dividend+1
  5069  024D  1BA2               	btfsc	___awdiv@dividend,7
  5070  024E  03A3               	decf	___awdiv@dividend+1,f
  5071  024F  160A  158A  2541  120A  118A  	fcall	___awdiv
  5072  0254  1283               	bcf	3,5	;RP0=0, select bank0
  5073  0255  1303               	bcf	3,6	;RP1=0, select bank0
  5074  0256  0820               	movf	?___awdiv,w
  5075  0257  00CB               	movwf	??_scale+5
  5076  0258  3001               	movlw	1
  5077  0259                     u6355:
  5078  0259  1003               	clrc
  5079  025A  0DCB               	rlf	??_scale+5,f
  5080  025B  3EFF               	addlw	-1
  5081  025C  1D03               	skipz
  5082  025D  2A59               	goto	u6355
  5083  025E  1003               	clrc
  5084  025F  0D4B               	rlf	??_scale+5,w
  5085  0260  3E48               	addlw	72
  5086  0261  3E12               	addlw	low (__powers_| (0+32768))
  5087  0262  0084               	movwf	4
  5088  0263  3098               	movlw	high (__powers_| (0+32768))
  5089  0264  1803               	skipnc
  5090  0265  3E01               	addlw	1
  5091  0266  00FF               	movwf	btemp+1
  5092  0267  160A  158A  2000  120A  118A  	fcall	stringtab
  5093  026C  00CC               	movwf	??_scale+6
  5094  026D  160A  158A  2000  120A  118A  	fcall	stringtab
  5095  0272  00CD               	movwf	??_scale+7
  5096  0273  160A  158A  2000  120A  118A  	fcall	stringtab
  5097  0278  00CE               	movwf	??_scale+8
  5098  0279  160A  158A  2000  120A  118A  	fcall	stringtab
  5099  027E  00CF               	movwf	??_scale+9
  5100  027F  084F               	movf	??_scale+9,w
  5101  0280  00AF               	movwf	___flmul@a+3
  5102  0281  084E               	movf	??_scale+8,w
  5103  0282  00AE               	movwf	___flmul@a+2
  5104  0283  084D               	movf	??_scale+7,w
  5105  0284  00AD               	movwf	___flmul@a+1
  5106  0285  084C               	movf	??_scale+6,w
  5107  0286  00AC               	movwf	___flmul@a
  5108  0287  120A  118A  23B7  120A  118A  	fcall	___flmul
  5109  028C  1283               	bcf	3,5	;RP0=0, select bank0
  5110  028D  1303               	bcf	3,6	;RP1=0, select bank0
  5111  028E  082B               	movf	?___flmul+3,w
  5112  028F  00D3               	movwf	_scale$1182+3
  5113  0290  082A               	movf	?___flmul+2,w
  5114  0291  00D2               	movwf	_scale$1182+2
  5115  0292  0829               	movf	?___flmul+1,w
  5116  0293  00D1               	movwf	_scale$1182+1
  5117  0294  0828               	movf	?___flmul,w
  5118  0295  00D0               	movwf	_scale$1182
  5119                           
  5120                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  5121  0296  300A               	movlw	10
  5122  0297  00F2               	movwf	___awmod@divisor
  5123  0298  3000               	movlw	0
  5124  0299  00F3               	movwf	___awmod@divisor+1
  5125  029A  0854               	movf	scale@scl,w
  5126  029B  00F4               	movwf	___awmod@dividend
  5127  029C  01F5               	clrf	___awmod@dividend+1
  5128  029D  1BF4               	btfsc	___awmod@dividend,7
  5129  029E  03F5               	decf	___awmod@dividend+1,f
  5130  029F  160A  158A  2480  120A  118A  	fcall	___awmod
  5131  02A4  0872               	movf	?___awmod,w
  5132  02A5  1283               	bcf	3,5	;RP0=0, select bank0
  5133  02A6  1303               	bcf	3,6	;RP1=0, select bank0
  5134  02A7  00C6               	movwf	??_scale
  5135  02A8  3001               	movlw	1
  5136  02A9                     u6365:
  5137  02A9  1003               	clrc
  5138  02AA  0DC6               	rlf	??_scale,f
  5139  02AB  3EFF               	addlw	-1
  5140  02AC  1D03               	skipz
  5141  02AD  2AA9               	goto	u6365
  5142  02AE  1003               	clrc
  5143  02AF  0D46               	rlf	??_scale,w
  5144  02B0  3E12               	addlw	low (__powers_| (0+32768))
  5145  02B1  0084               	movwf	4
  5146  02B2  3098               	movlw	high (__powers_| (0+32768))
  5147  02B3  1803               	skipnc
  5148  02B4  3E01               	addlw	1
  5149  02B5  00FF               	movwf	btemp+1
  5150  02B6  160A  158A  2000  120A  118A  	fcall	stringtab
  5151  02BB  00C7               	movwf	??_scale+1
  5152  02BC  160A  158A  2000  120A  118A  	fcall	stringtab
  5153  02C1  00C8               	movwf	??_scale+2
  5154  02C2  160A  158A  2000  120A  118A  	fcall	stringtab
  5155  02C7  00C9               	movwf	??_scale+3
  5156  02C8  160A  158A  2000  120A  118A  	fcall	stringtab
  5157  02CD  00CA               	movwf	??_scale+4
  5158  02CE  084A               	movf	??_scale+4,w
  5159  02CF  00AB               	movwf	___flmul@b+3
  5160  02D0  0849               	movf	??_scale+3,w
  5161  02D1  00AA               	movwf	___flmul@b+2
  5162  02D2  0848               	movf	??_scale+2,w
  5163  02D3  00A9               	movwf	___flmul@b+1
  5164  02D4  0847               	movf	??_scale+1,w
  5165  02D5  00A8               	movwf	___flmul@b
  5166  02D6  0853               	movf	_scale$1182+3,w
  5167  02D7  00AF               	movwf	___flmul@a+3
  5168  02D8  0852               	movf	_scale$1182+2,w
  5169  02D9  00AE               	movwf	___flmul@a+2
  5170  02DA  0851               	movf	_scale$1182+1,w
  5171  02DB  00AD               	movwf	___flmul@a+1
  5172  02DC  0850               	movf	_scale$1182,w
  5173  02DD  00AC               	movwf	___flmul@a
  5174  02DE  120A  118A  23B7  120A  118A  	fcall	___flmul
  5175  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  5176  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  5177  02E5  082B               	movf	?___flmul+3,w
  5178  02E6  00C5               	movwf	?_scale+3
  5179  02E7  082A               	movf	?___flmul+2,w
  5180  02E8  00C4               	movwf	?_scale+2
  5181  02E9  0829               	movf	?___flmul+1,w
  5182  02EA  00C3               	movwf	?_scale+1
  5183  02EB  0828               	movf	?___flmul,w
  5184  02EC  00C2               	movwf	?_scale
  5185  02ED  2BB6               	goto	l305
  5186  02EE                     l4093:
  5187  02EE  0854               	movf	scale@scl,w
  5188  02EF  3A80               	xorlw	128
  5189  02F0  3E75               	addlw	-139
  5190  02F1  1C03               	skipc
  5191  02F2  2AF4               	goto	u6371
  5192  02F3  2AF5               	goto	u6370
  5193  02F4                     u6371:
  5194  02F4  2B86               	goto	l4099
  5195  02F5                     u6370:
  5196  02F5                     l4095:
  5197                           
  5198                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  5199  02F5  300A               	movlw	10
  5200  02F6  00F2               	movwf	___awmod@divisor
  5201  02F7  3000               	movlw	0
  5202  02F8  00F3               	movwf	___awmod@divisor+1
  5203  02F9  0854               	movf	scale@scl,w
  5204  02FA  00F4               	movwf	___awmod@dividend
  5205  02FB  01F5               	clrf	___awmod@dividend+1
  5206  02FC  1BF4               	btfsc	___awmod@dividend,7
  5207  02FD  03F5               	decf	___awmod@dividend+1,f
  5208  02FE  160A  158A  2480  120A  118A  	fcall	___awmod
  5209  0303  0872               	movf	?___awmod,w
  5210  0304  1283               	bcf	3,5	;RP0=0, select bank0
  5211  0305  1303               	bcf	3,6	;RP1=0, select bank0
  5212  0306  00C6               	movwf	??_scale
  5213  0307  3001               	movlw	1
  5214  0308                     u6385:
  5215  0308  1003               	clrc
  5216  0309  0DC6               	rlf	??_scale,f
  5217  030A  3EFF               	addlw	-1
  5218  030B  1D03               	skipz
  5219  030C  2B08               	goto	u6385
  5220  030D  1003               	clrc
  5221  030E  0D46               	rlf	??_scale,w
  5222  030F  3E12               	addlw	low (__powers_| (0+32768))
  5223  0310  0084               	movwf	4
  5224  0311  3098               	movlw	high (__powers_| (0+32768))
  5225  0312  1803               	skipnc
  5226  0313  3E01               	addlw	1
  5227  0314  00FF               	movwf	btemp+1
  5228  0315  160A  158A  2000  120A  118A  	fcall	stringtab
  5229  031A  00C7               	movwf	??_scale+1
  5230  031B  160A  158A  2000  120A  118A  	fcall	stringtab
  5231  0320  00C8               	movwf	??_scale+2
  5232  0321  160A  158A  2000  120A  118A  	fcall	stringtab
  5233  0326  00C9               	movwf	??_scale+3
  5234  0327  160A  158A  2000  120A  118A  	fcall	stringtab
  5235  032C  00CA               	movwf	??_scale+4
  5236  032D  084A               	movf	??_scale+4,w
  5237  032E  00AB               	movwf	___flmul@b+3
  5238  032F  0849               	movf	??_scale+3,w
  5239  0330  00AA               	movwf	___flmul@b+2
  5240  0331  0848               	movf	??_scale+2,w
  5241  0332  00A9               	movwf	___flmul@b+1
  5242  0333  0847               	movf	??_scale+1,w
  5243  0334  00A8               	movwf	___flmul@b
  5244  0335  300A               	movlw	10
  5245  0336  00A0               	movwf	___awdiv@divisor
  5246  0337  3000               	movlw	0
  5247  0338  00A1               	movwf	___awdiv@divisor+1
  5248  0339  0854               	movf	scale@scl,w
  5249  033A  00A2               	movwf	___awdiv@dividend
  5250  033B  01A3               	clrf	___awdiv@dividend+1
  5251  033C  1BA2               	btfsc	___awdiv@dividend,7
  5252  033D  03A3               	decf	___awdiv@dividend+1,f
  5253  033E  160A  158A  2541  120A  118A  	fcall	___awdiv
  5254  0343  1283               	bcf	3,5	;RP0=0, select bank0
  5255  0344  1303               	bcf	3,6	;RP1=0, select bank0
  5256  0345  0820               	movf	?___awdiv,w
  5257  0346  00CB               	movwf	??_scale+5
  5258  0347  3001               	movlw	1
  5259  0348                     u6395:
  5260  0348  1003               	clrc
  5261  0349  0DCB               	rlf	??_scale+5,f
  5262  034A  3EFF               	addlw	-1
  5263  034B  1D03               	skipz
  5264  034C  2B48               	goto	u6395
  5265  034D  1003               	clrc
  5266  034E  0D4B               	rlf	??_scale+5,w
  5267  034F  3E24               	addlw	36
  5268  0350  3E12               	addlw	low (__powers_| (0+32768))
  5269  0351  0084               	movwf	4
  5270  0352  3098               	movlw	high (__powers_| (0+32768))
  5271  0353  1803               	skipnc
  5272  0354  3E01               	addlw	1
  5273  0355  00FF               	movwf	btemp+1
  5274  0356  160A  158A  2000  120A  118A  	fcall	stringtab
  5275  035B  00CC               	movwf	??_scale+6
  5276  035C  160A  158A  2000  120A  118A  	fcall	stringtab
  5277  0361  00CD               	movwf	??_scale+7
  5278  0362  160A  158A  2000  120A  118A  	fcall	stringtab
  5279  0367  00CE               	movwf	??_scale+8
  5280  0368  160A  158A  2000  120A  118A  	fcall	stringtab
  5281  036D  00CF               	movwf	??_scale+9
  5282  036E  084F               	movf	??_scale+9,w
  5283  036F  00AF               	movwf	___flmul@a+3
  5284  0370  084E               	movf	??_scale+8,w
  5285  0371  00AE               	movwf	___flmul@a+2
  5286  0372  084D               	movf	??_scale+7,w
  5287  0373  00AD               	movwf	___flmul@a+1
  5288  0374  084C               	movf	??_scale+6,w
  5289  0375  00AC               	movwf	___flmul@a
  5290  0376  120A  118A  23B7  120A  118A  	fcall	___flmul
  5291  037B  1283               	bcf	3,5	;RP0=0, select bank0
  5292  037C  1303               	bcf	3,6	;RP1=0, select bank0
  5293  037D  082B               	movf	?___flmul+3,w
  5294  037E  00C5               	movwf	?_scale+3
  5295  037F  082A               	movf	?___flmul+2,w
  5296  0380  00C4               	movwf	?_scale+2
  5297  0381  0829               	movf	?___flmul+1,w
  5298  0382  00C3               	movwf	?_scale+1
  5299  0383  0828               	movf	?___flmul,w
  5300  0384  00C2               	movwf	?_scale
  5301  0385  2BB6               	goto	l305
  5302  0386                     l4099:
  5303                           
  5304                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  5305  0386  0854               	movf	scale@scl,w
  5306  0387  00C6               	movwf	??_scale
  5307  0388  3001               	movlw	1
  5308  0389                     u6405:
  5309  0389  1003               	clrc
  5310  038A  0DC6               	rlf	??_scale,f
  5311  038B  3EFF               	addlw	-1
  5312  038C  1D03               	skipz
  5313  038D  2B89               	goto	u6405
  5314  038E  1003               	clrc
  5315  038F  0D46               	rlf	??_scale,w
  5316  0390  3E12               	addlw	low (__powers_| (0+32768))
  5317  0391  0084               	movwf	4
  5318  0392  3098               	movlw	high (__powers_| (0+32768))
  5319  0393  1803               	skipnc
  5320  0394  3E01               	addlw	1
  5321  0395  00FF               	movwf	btemp+1
  5322  0396  160A  158A  2000  120A  118A  	fcall	stringtab
  5323  039B  00C7               	movwf	??_scale+1
  5324  039C  160A  158A  2000  120A  118A  	fcall	stringtab
  5325  03A1  00C8               	movwf	??_scale+2
  5326  03A2  160A  158A  2000  120A  118A  	fcall	stringtab
  5327  03A7  00C9               	movwf	??_scale+3
  5328  03A8  160A  158A  2000  120A  118A  	fcall	stringtab
  5329  03AD  00CA               	movwf	??_scale+4
  5330  03AE  084A               	movf	??_scale+4,w
  5331  03AF  00C5               	movwf	?_scale+3
  5332  03B0  0849               	movf	??_scale+3,w
  5333  03B1  00C4               	movwf	?_scale+2
  5334  03B2  0848               	movf	??_scale+2,w
  5335  03B3  00C3               	movwf	?_scale+1
  5336  03B4  0847               	movf	??_scale+1,w
  5337  03B5  00C2               	movwf	?_scale
  5338  03B6                     l305:
  5339  03B6  0008               	return
  5340  03B7                     __end_of_scale:
  5341                           
  5342                           	psect	text3
  5343  1C80                     __ptext3:	
  5344 ;; *************** function ___awmod *****************
  5345 ;; Defined at:
  5346 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  5347 ;; Parameters:    Size  Location     Type
  5348 ;;  divisor         2    2[COMMON] int 
  5349 ;;  dividend        2    4[COMMON] int 
  5350 ;; Auto vars:     Size  Location     Type
  5351 ;;  sign            1    8[COMMON] unsigned char 
  5352 ;;  counter         1    7[COMMON] unsigned char 
  5353 ;; Return value:  Size  Location     Type
  5354 ;;                  2    2[COMMON] int 
  5355 ;; Registers used:
  5356 ;;		wreg, status,2, status,0
  5357 ;; Tracked objects:
  5358 ;;		On entry : 0/0
  5359 ;;		On exit  : 0/0
  5360 ;;		Unchanged: 0/0
  5361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5362 ;;      Params:         4       0       0       0       0
  5363 ;;      Locals:         2       0       0       0       0
  5364 ;;      Temps:          1       0       0       0       0
  5365 ;;      Totals:         7       0       0       0       0
  5366 ;;Total ram usage:        7 bytes
  5367 ;; Hardware stack levels used:    1
  5368 ;; Hardware stack levels required when called:    1
  5369 ;; This function calls:
  5370 ;;		Nothing
  5371 ;; This function is called by:
  5372 ;;		_scale
  5373 ;; This function uses a non-reentrant model
  5374 ;;
  5375                           
  5376                           
  5377                           ;psect for function ___awmod
  5378  1C80                     ___awmod:
  5379  1C80                     l2541:	
  5380                           ;incstack = 0
  5381                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5382                           
  5383  1C80  01F8               	clrf	___awmod@sign
  5384  1C81                     l2543:
  5385  1C81  1FF5               	btfss	___awmod@dividend+1,7
  5386  1C82  2C84               	goto	u3001
  5387  1C83  2C85               	goto	u3000
  5388  1C84                     u3001:
  5389  1C84  2C8C               	goto	l2549
  5390  1C85                     u3000:
  5391  1C85                     l2545:
  5392  1C85  09F4               	comf	___awmod@dividend,f
  5393  1C86  09F5               	comf	___awmod@dividend+1,f
  5394  1C87  0AF4               	incf	___awmod@dividend,f
  5395  1C88  1903               	skipnz
  5396  1C89  0AF5               	incf	___awmod@dividend+1,f
  5397  1C8A                     l2547:
  5398  1C8A  01F8               	clrf	___awmod@sign
  5399  1C8B  0AF8               	incf	___awmod@sign,f
  5400  1C8C                     l2549:
  5401  1C8C  1FF3               	btfss	___awmod@divisor+1,7
  5402  1C8D  2C8F               	goto	u3011
  5403  1C8E  2C90               	goto	u3010
  5404  1C8F                     u3011:
  5405  1C8F  2C95               	goto	l2553
  5406  1C90                     u3010:
  5407  1C90                     l2551:
  5408  1C90  09F2               	comf	___awmod@divisor,f
  5409  1C91  09F3               	comf	___awmod@divisor+1,f
  5410  1C92  0AF2               	incf	___awmod@divisor,f
  5411  1C93  1903               	skipnz
  5412  1C94  0AF3               	incf	___awmod@divisor+1,f
  5413  1C95                     l2553:
  5414  1C95  0872               	movf	___awmod@divisor,w
  5415  1C96  0473               	iorwf	___awmod@divisor+1,w
  5416  1C97  1903               	btfsc	3,2
  5417  1C98  2C9A               	goto	u3021
  5418  1C99  2C9B               	goto	u3020
  5419  1C9A                     u3021:
  5420  1C9A  2CCA               	goto	l2571
  5421  1C9B                     u3020:
  5422  1C9B                     l2555:
  5423  1C9B  01F7               	clrf	___awmod@counter
  5424  1C9C  0AF7               	incf	___awmod@counter,f
  5425  1C9D  2CA9               	goto	l2561
  5426  1C9E                     l2557:
  5427  1C9E  3001               	movlw	1
  5428  1C9F                     u3035:
  5429  1C9F  1003               	clrc
  5430  1CA0  0DF2               	rlf	___awmod@divisor,f
  5431  1CA1  0DF3               	rlf	___awmod@divisor+1,f
  5432  1CA2  3EFF               	addlw	-1
  5433  1CA3  1D03               	skipz
  5434  1CA4  2C9F               	goto	u3035
  5435  1CA5                     l2559:
  5436  1CA5  3001               	movlw	1
  5437  1CA6  00F6               	movwf	??___awmod
  5438  1CA7  0876               	movf	??___awmod,w
  5439  1CA8  07F7               	addwf	___awmod@counter,f
  5440  1CA9                     l2561:
  5441  1CA9  1FF3               	btfss	___awmod@divisor+1,7
  5442  1CAA  2CAC               	goto	u3041
  5443  1CAB  2CAD               	goto	u3040
  5444  1CAC                     u3041:
  5445  1CAC  2C9E               	goto	l2557
  5446  1CAD                     u3040:
  5447  1CAD                     l2563:
  5448  1CAD  0873               	movf	___awmod@divisor+1,w
  5449  1CAE  0275               	subwf	___awmod@dividend+1,w
  5450  1CAF  1D03               	skipz
  5451  1CB0  2CB3               	goto	u3055
  5452  1CB1  0872               	movf	___awmod@divisor,w
  5453  1CB2  0274               	subwf	___awmod@dividend,w
  5454  1CB3                     u3055:
  5455  1CB3  1C03               	skipc
  5456  1CB4  2CB6               	goto	u3051
  5457  1CB5  2CB7               	goto	u3050
  5458  1CB6                     u3051:
  5459  1CB6  2CBD               	goto	l2567
  5460  1CB7                     u3050:
  5461  1CB7                     l2565:
  5462  1CB7  0872               	movf	___awmod@divisor,w
  5463  1CB8  02F4               	subwf	___awmod@dividend,f
  5464  1CB9  0873               	movf	___awmod@divisor+1,w
  5465  1CBA  1C03               	skipc
  5466  1CBB  03F5               	decf	___awmod@dividend+1,f
  5467  1CBC  02F5               	subwf	___awmod@dividend+1,f
  5468  1CBD                     l2567:
  5469  1CBD  3001               	movlw	1
  5470  1CBE                     u3065:
  5471  1CBE  1003               	clrc
  5472  1CBF  0CF3               	rrf	___awmod@divisor+1,f
  5473  1CC0  0CF2               	rrf	___awmod@divisor,f
  5474  1CC1  3EFF               	addlw	-1
  5475  1CC2  1D03               	skipz
  5476  1CC3  2CBE               	goto	u3065
  5477  1CC4                     l2569:
  5478  1CC4  3001               	movlw	1
  5479  1CC5  02F7               	subwf	___awmod@counter,f
  5480  1CC6  1D03               	btfss	3,2
  5481  1CC7  2CC9               	goto	u3071
  5482  1CC8  2CCA               	goto	u3070
  5483  1CC9                     u3071:
  5484  1CC9  2CAD               	goto	l2563
  5485  1CCA                     u3070:
  5486  1CCA                     l2571:
  5487  1CCA  0878               	movf	___awmod@sign,w
  5488  1CCB  1903               	btfsc	3,2
  5489  1CCC  2CCE               	goto	u3081
  5490  1CCD  2CCF               	goto	u3080
  5491  1CCE                     u3081:
  5492  1CCE  2CD4               	goto	l2575
  5493  1CCF                     u3080:
  5494  1CCF                     l2573:
  5495  1CCF  09F4               	comf	___awmod@dividend,f
  5496  1CD0  09F5               	comf	___awmod@dividend+1,f
  5497  1CD1  0AF4               	incf	___awmod@dividend,f
  5498  1CD2  1903               	skipnz
  5499  1CD3  0AF5               	incf	___awmod@dividend+1,f
  5500  1CD4                     l2575:
  5501  1CD4  0875               	movf	___awmod@dividend+1,w
  5502  1CD5  00F3               	movwf	?___awmod+1
  5503  1CD6  0874               	movf	___awmod@dividend,w
  5504  1CD7  00F2               	movwf	?___awmod
  5505  1CD8                     l558:
  5506  1CD8  0008               	return
  5507  1CD9                     __end_of___awmod:
  5508                           
  5509                           	psect	text4
  5510  1D41                     __ptext4:	
  5511 ;; *************** function ___awdiv *****************
  5512 ;; Defined at:
  5513 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  5514 ;; Parameters:    Size  Location     Type
  5515 ;;  divisor         2    0[BANK0 ] int 
  5516 ;;  dividend        2    2[BANK0 ] int 
  5517 ;; Auto vars:     Size  Location     Type
  5518 ;;  quotient        2    6[BANK0 ] int 
  5519 ;;  sign            1    5[BANK0 ] unsigned char 
  5520 ;;  counter         1    4[BANK0 ] unsigned char 
  5521 ;; Return value:  Size  Location     Type
  5522 ;;                  2    0[BANK0 ] int 
  5523 ;; Registers used:
  5524 ;;		wreg, status,2, status,0
  5525 ;; Tracked objects:
  5526 ;;		On entry : 0/0
  5527 ;;		On exit  : 0/0
  5528 ;;		Unchanged: 0/0
  5529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5530 ;;      Params:         0       4       0       0       0
  5531 ;;      Locals:         0       4       0       0       0
  5532 ;;      Temps:          1       0       0       0       0
  5533 ;;      Totals:         1       8       0       0       0
  5534 ;;Total ram usage:        9 bytes
  5535 ;; Hardware stack levels used:    1
  5536 ;; Hardware stack levels required when called:    1
  5537 ;; This function calls:
  5538 ;;		Nothing
  5539 ;; This function is called by:
  5540 ;;		_scale
  5541 ;;		_sprintf
  5542 ;;		_hex_menor
  5543 ;; This function uses a non-reentrant model
  5544 ;;
  5545                           
  5546                           
  5547                           ;psect for function ___awdiv
  5548  1D41                     ___awdiv:
  5549  1D41                     l2497:	
  5550                           ;incstack = 0
  5551                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5552                           
  5553  1D41  1283               	bcf	3,5	;RP0=0, select bank0
  5554  1D42  1303               	bcf	3,6	;RP1=0, select bank0
  5555  1D43  01A5               	clrf	___awdiv@sign
  5556  1D44                     l2499:
  5557  1D44  1FA1               	btfss	___awdiv@divisor+1,7
  5558  1D45  2D47               	goto	u2901
  5559  1D46  2D48               	goto	u2900
  5560  1D47                     u2901:
  5561  1D47  2D4F               	goto	l2505
  5562  1D48                     u2900:
  5563  1D48                     l2501:
  5564  1D48  09A0               	comf	___awdiv@divisor,f
  5565  1D49  09A1               	comf	___awdiv@divisor+1,f
  5566  1D4A  0AA0               	incf	___awdiv@divisor,f
  5567  1D4B  1903               	skipnz
  5568  1D4C  0AA1               	incf	___awdiv@divisor+1,f
  5569  1D4D                     l2503:
  5570  1D4D  01A5               	clrf	___awdiv@sign
  5571  1D4E  0AA5               	incf	___awdiv@sign,f
  5572  1D4F                     l2505:
  5573  1D4F  1FA3               	btfss	___awdiv@dividend+1,7
  5574  1D50  2D52               	goto	u2911
  5575  1D51  2D53               	goto	u2910
  5576  1D52                     u2911:
  5577  1D52  2D5C               	goto	l2511
  5578  1D53                     u2910:
  5579  1D53                     l2507:
  5580  1D53  09A2               	comf	___awdiv@dividend,f
  5581  1D54  09A3               	comf	___awdiv@dividend+1,f
  5582  1D55  0AA2               	incf	___awdiv@dividend,f
  5583  1D56  1903               	skipnz
  5584  1D57  0AA3               	incf	___awdiv@dividend+1,f
  5585  1D58                     l2509:
  5586  1D58  3001               	movlw	1
  5587  1D59  00F9               	movwf	??___awdiv
  5588  1D5A  0879               	movf	??___awdiv,w
  5589  1D5B  06A5               	xorwf	___awdiv@sign,f
  5590  1D5C                     l2511:
  5591  1D5C  01A6               	clrf	___awdiv@quotient
  5592  1D5D  01A7               	clrf	___awdiv@quotient+1
  5593  1D5E                     l2513:
  5594  1D5E  0820               	movf	___awdiv@divisor,w
  5595  1D5F  0421               	iorwf	___awdiv@divisor+1,w
  5596  1D60  1903               	btfsc	3,2
  5597  1D61  2D63               	goto	u2921
  5598  1D62  2D64               	goto	u2920
  5599  1D63                     u2921:
  5600  1D63  2D9B               	goto	l2533
  5601  1D64                     u2920:
  5602  1D64                     l2515:
  5603  1D64  01A4               	clrf	___awdiv@counter
  5604  1D65  0AA4               	incf	___awdiv@counter,f
  5605  1D66  2D72               	goto	l2521
  5606  1D67                     l2517:
  5607  1D67  3001               	movlw	1
  5608  1D68                     u2935:
  5609  1D68  1003               	clrc
  5610  1D69  0DA0               	rlf	___awdiv@divisor,f
  5611  1D6A  0DA1               	rlf	___awdiv@divisor+1,f
  5612  1D6B  3EFF               	addlw	-1
  5613  1D6C  1D03               	skipz
  5614  1D6D  2D68               	goto	u2935
  5615  1D6E                     l2519:
  5616  1D6E  3001               	movlw	1
  5617  1D6F  00F9               	movwf	??___awdiv
  5618  1D70  0879               	movf	??___awdiv,w
  5619  1D71  07A4               	addwf	___awdiv@counter,f
  5620  1D72                     l2521:
  5621  1D72  1FA1               	btfss	___awdiv@divisor+1,7
  5622  1D73  2D75               	goto	u2941
  5623  1D74  2D76               	goto	u2940
  5624  1D75                     u2941:
  5625  1D75  2D67               	goto	l2517
  5626  1D76                     u2940:
  5627  1D76                     l2523:
  5628  1D76  3001               	movlw	1
  5629  1D77                     u2955:
  5630  1D77  1003               	clrc
  5631  1D78  0DA6               	rlf	___awdiv@quotient,f
  5632  1D79  0DA7               	rlf	___awdiv@quotient+1,f
  5633  1D7A  3EFF               	addlw	-1
  5634  1D7B  1D03               	skipz
  5635  1D7C  2D77               	goto	u2955
  5636  1D7D  0821               	movf	___awdiv@divisor+1,w
  5637  1D7E  0223               	subwf	___awdiv@dividend+1,w
  5638  1D7F  1D03               	skipz
  5639  1D80  2D83               	goto	u2965
  5640  1D81  0820               	movf	___awdiv@divisor,w
  5641  1D82  0222               	subwf	___awdiv@dividend,w
  5642  1D83                     u2965:
  5643  1D83  1C03               	skipc
  5644  1D84  2D86               	goto	u2961
  5645  1D85  2D87               	goto	u2960
  5646  1D86                     u2961:
  5647  1D86  2D8E               	goto	l2529
  5648  1D87                     u2960:
  5649  1D87                     l2525:
  5650  1D87  0820               	movf	___awdiv@divisor,w
  5651  1D88  02A2               	subwf	___awdiv@dividend,f
  5652  1D89  0821               	movf	___awdiv@divisor+1,w
  5653  1D8A  1C03               	skipc
  5654  1D8B  03A3               	decf	___awdiv@dividend+1,f
  5655  1D8C  02A3               	subwf	___awdiv@dividend+1,f
  5656  1D8D                     l2527:
  5657  1D8D  1426               	bsf	___awdiv@quotient,0
  5658  1D8E                     l2529:
  5659  1D8E  3001               	movlw	1
  5660  1D8F                     u2975:
  5661  1D8F  1003               	clrc
  5662  1D90  0CA1               	rrf	___awdiv@divisor+1,f
  5663  1D91  0CA0               	rrf	___awdiv@divisor,f
  5664  1D92  3EFF               	addlw	-1
  5665  1D93  1D03               	skipz
  5666  1D94  2D8F               	goto	u2975
  5667  1D95                     l2531:
  5668  1D95  3001               	movlw	1
  5669  1D96  02A4               	subwf	___awdiv@counter,f
  5670  1D97  1D03               	btfss	3,2
  5671  1D98  2D9A               	goto	u2981
  5672  1D99  2D9B               	goto	u2980
  5673  1D9A                     u2981:
  5674  1D9A  2D76               	goto	l2523
  5675  1D9B                     u2980:
  5676  1D9B                     l2533:
  5677  1D9B  0825               	movf	___awdiv@sign,w
  5678  1D9C  1903               	btfsc	3,2
  5679  1D9D  2D9F               	goto	u2991
  5680  1D9E  2DA0               	goto	u2990
  5681  1D9F                     u2991:
  5682  1D9F  2DA5               	goto	l2537
  5683  1DA0                     u2990:
  5684  1DA0                     l2535:
  5685  1DA0  09A6               	comf	___awdiv@quotient,f
  5686  1DA1  09A7               	comf	___awdiv@quotient+1,f
  5687  1DA2  0AA6               	incf	___awdiv@quotient,f
  5688  1DA3  1903               	skipnz
  5689  1DA4  0AA7               	incf	___awdiv@quotient+1,f
  5690  1DA5                     l2537:
  5691  1DA5  0827               	movf	___awdiv@quotient+1,w
  5692  1DA6  00A1               	movwf	?___awdiv+1
  5693  1DA7  0826               	movf	___awdiv@quotient,w
  5694  1DA8  00A0               	movwf	?___awdiv
  5695  1DA9                     l545:
  5696  1DA9  0008               	return
  5697  1DAA                     __end_of___awdiv:
  5698                           
  5699                           	psect	text5
  5700  1A20                     __ptext5:	
  5701 ;; *************** function _isdigit *****************
  5702 ;; Defined at:
  5703 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  5704 ;; Parameters:    Size  Location     Type
  5705 ;;  c               1    wreg     unsigned char 
  5706 ;; Auto vars:     Size  Location     Type
  5707 ;;  c               1    3[COMMON] unsigned char 
  5708 ;; Return value:  Size  Location     Type
  5709 ;;		None               void
  5710 ;; Registers used:
  5711 ;;		wreg, status,2, status,0
  5712 ;; Tracked objects:
  5713 ;;		On entry : 0/0
  5714 ;;		On exit  : 0/0
  5715 ;;		Unchanged: 0/0
  5716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5717 ;;      Params:         0       0       0       0       0
  5718 ;;      Locals:         2       0       0       0       0
  5719 ;;      Temps:          0       0       0       0       0
  5720 ;;      Totals:         2       0       0       0       0
  5721 ;;Total ram usage:        2 bytes
  5722 ;; Hardware stack levels used:    1
  5723 ;; Hardware stack levels required when called:    1
  5724 ;; This function calls:
  5725 ;;		Nothing
  5726 ;; This function is called by:
  5727 ;;		_sprintf
  5728 ;; This function uses a non-reentrant model
  5729 ;;
  5730                           
  5731                           
  5732                           ;psect for function _isdigit
  5733  1A20                     _isdigit:
  5734                           
  5735                           ;incstack = 0
  5736                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5737                           ;isdigit@c stored from wreg
  5738  1A20  00F3               	movwf	isdigit@c
  5739  1A21                     l3047:
  5740  1A21  01F2               	clrf	_isdigit$994
  5741  1A22                     l3049:
  5742  1A22  303A               	movlw	58
  5743  1A23  0273               	subwf	isdigit@c,w
  5744  1A24  1803               	skipnc
  5745  1A25  2A27               	goto	u4311
  5746  1A26  2A28               	goto	u4310
  5747  1A27                     u4311:
  5748  1A27  2A30               	goto	l3055
  5749  1A28                     u4310:
  5750  1A28                     l3051:
  5751  1A28  3030               	movlw	48
  5752  1A29  0273               	subwf	isdigit@c,w
  5753  1A2A  1C03               	skipc
  5754  1A2B  2A2D               	goto	u4321
  5755  1A2C  2A2E               	goto	u4320
  5756  1A2D                     u4321:
  5757  1A2D  2A30               	goto	l3055
  5758  1A2E                     u4320:
  5759  1A2E                     l3053:
  5760  1A2E  01F2               	clrf	_isdigit$994
  5761  1A2F  0AF2               	incf	_isdigit$994,f
  5762  1A30                     l3055:
  5763  1A30  0C72               	rrf	_isdigit$994,w
  5764  1A31                     l879:
  5765  1A31  0008               	return
  5766  1A32                     __end_of_isdigit:
  5767                           
  5768                           	psect	text6
  5769  10C0                     __ptext6:	
  5770 ;; *************** function _fround *****************
  5771 ;; Defined at:
  5772 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  5773 ;; Parameters:    Size  Location     Type
  5774 ;;  prec            1    wreg     unsigned char 
  5775 ;; Auto vars:     Size  Location     Type
  5776 ;;  prec            1   53[BANK0 ] unsigned char 
  5777 ;; Return value:  Size  Location     Type
  5778 ;;                  4   34[BANK0 ] unsigned char 
  5779 ;; Registers used:
  5780 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5781 ;; Tracked objects:
  5782 ;;		On entry : 0/0
  5783 ;;		On exit  : 0/0
  5784 ;;		Unchanged: 0/0
  5785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5786 ;;      Params:         0       4       0       0       0
  5787 ;;      Locals:         0       9       0       0       0
  5788 ;;      Temps:          0       7       0       0       0
  5789 ;;      Totals:         0      20       0       0       0
  5790 ;;Total ram usage:       20 bytes
  5791 ;; Hardware stack levels used:    1
  5792 ;; Hardware stack levels required when called:    3
  5793 ;; This function calls:
  5794 ;;		___flmul
  5795 ;;		___lwdiv
  5796 ;;		___lwmod
  5797 ;; This function is called by:
  5798 ;;		_sprintf
  5799 ;; This function uses a non-reentrant model
  5800 ;;
  5801                           
  5802                           
  5803                           ;psect for function _fround
  5804  10C0                     _fround:
  5805                           
  5806                           ;incstack = 0
  5807                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5808                           ;fround@prec stored from wreg
  5809  10C0  1283               	bcf	3,5	;RP0=0, select bank0
  5810  10C1  1303               	bcf	3,6	;RP1=0, select bank0
  5811  10C2  00D5               	movwf	fround@prec
  5812  10C3                     l4045:
  5813                           
  5814                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  5815  10C3  306E               	movlw	110
  5816  10C4  0255               	subwf	fround@prec,w
  5817  10C5  1C03               	skipc
  5818  10C6  28C8               	goto	u6161
  5819  10C7  28C9               	goto	u6160
  5820  10C8                     u6161:
  5821  10C8  29E4               	goto	l4053
  5822  10C9                     u6160:
  5823  10C9                     l4047:
  5824                           
  5825                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5826  10C9  303F               	movlw	63
  5827  10CA  00AB               	movwf	___flmul@b+3
  5828  10CB  3000               	movlw	0
  5829  10CC  00AA               	movwf	___flmul@b+2
  5830  10CD  3000               	movlw	0
  5831  10CE  00A9               	movwf	___flmul@b+1
  5832  10CF  3000               	movlw	0
  5833  10D0  00A8               	movwf	___flmul@b
  5834  10D1  3064               	movlw	100
  5835  10D2  00A0               	movwf	___lwdiv@divisor
  5836  10D3  3000               	movlw	0
  5837  10D4  00A1               	movwf	___lwdiv@divisor+1
  5838  10D5  0855               	movf	fround@prec,w
  5839  10D6  00C6               	movwf	??_fround
  5840  10D7  01C7               	clrf	??_fround+1
  5841  10D8  0846               	movf	??_fround,w
  5842  10D9  00A2               	movwf	___lwdiv@dividend
  5843  10DA  0847               	movf	??_fround+1,w
  5844  10DB  00A3               	movwf	___lwdiv@dividend+1
  5845  10DC  160A  158A  2344  160A  118A  	fcall	___lwdiv
  5846  10E1  1283               	bcf	3,5	;RP0=0, select bank0
  5847  10E2  1303               	bcf	3,6	;RP1=0, select bank0
  5848  10E3  0820               	movf	?___lwdiv,w
  5849  10E4  00C8               	movwf	??_fround+2
  5850  10E5  3001               	movlw	1
  5851  10E6                     u6175:
  5852  10E6  1003               	clrc
  5853  10E7  0DC8               	rlf	??_fround+2,f
  5854  10E8  3EFF               	addlw	-1
  5855  10E9  1D03               	skipz
  5856  10EA  28E6               	goto	u6175
  5857  10EB  1003               	clrc
  5858  10EC  0D48               	rlf	??_fround+2,w
  5859  10ED  3E8E               	addlw	low ((__npowers_| (0+32768)+72))
  5860  10EE  0084               	movwf	4
  5861  10EF  3098               	movlw	high ((__npowers_| (0+32768)+72))
  5862  10F0  1803               	skipnc
  5863  10F1  3E01               	addlw	1
  5864  10F2  00FF               	movwf	btemp+1
  5865  10F3  160A  158A  2000  160A  118A  	fcall	stringtab
  5866  10F8  00C9               	movwf	??_fround+3
  5867  10F9  160A  158A  2000  160A  118A  	fcall	stringtab
  5868  10FE  00CA               	movwf	??_fround+4
  5869  10FF  160A  158A  2000  160A  118A  	fcall	stringtab
  5870  1104  00CB               	movwf	??_fround+5
  5871  1105  160A  158A  2000  160A  118A  	fcall	stringtab
  5872  110A  00CC               	movwf	??_fround+6
  5873  110B  084C               	movf	??_fround+6,w
  5874  110C  00AF               	movwf	___flmul@a+3
  5875  110D  084B               	movf	??_fround+5,w
  5876  110E  00AE               	movwf	___flmul@a+2
  5877  110F  084A               	movf	??_fround+4,w
  5878  1110  00AD               	movwf	___flmul@a+1
  5879  1111  0849               	movf	??_fround+3,w
  5880  1112  00AC               	movwf	___flmul@a
  5881  1113  120A  118A  23B7  160A  118A  	fcall	___flmul
  5882  1118  1283               	bcf	3,5	;RP0=0, select bank0
  5883  1119  1303               	bcf	3,6	;RP1=0, select bank0
  5884  111A  082B               	movf	?___flmul+3,w
  5885  111B  00D4               	movwf	_fround$1180+3
  5886  111C  082A               	movf	?___flmul+2,w
  5887  111D  00D3               	movwf	_fround$1180+2
  5888  111E  0829               	movf	?___flmul+1,w
  5889  111F  00D2               	movwf	_fround$1180+1
  5890  1120  0828               	movf	?___flmul,w
  5891  1121  00D1               	movwf	_fround$1180
  5892                           
  5893                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5894  1122  300A               	movlw	10
  5895  1123  00A0               	movwf	___lwdiv@divisor
  5896  1124  3000               	movlw	0
  5897  1125  00A1               	movwf	___lwdiv@divisor+1
  5898  1126  0855               	movf	fround@prec,w
  5899  1127  00C6               	movwf	??_fround
  5900  1128  01C7               	clrf	??_fround+1
  5901  1129  0846               	movf	??_fround,w
  5902  112A  00F4               	movwf	___lwmod@dividend
  5903  112B  0847               	movf	??_fround+1,w
  5904  112C  00F5               	movwf	___lwmod@dividend+1
  5905  112D  3064               	movlw	100
  5906  112E  00F2               	movwf	___lwmod@divisor
  5907  112F  3000               	movlw	0
  5908  1130  00F3               	movwf	___lwmod@divisor+1
  5909  1131  160A  158A  230A  160A  118A  	fcall	___lwmod
  5910  1136  0873               	movf	?___lwmod+1,w
  5911  1137  1283               	bcf	3,5	;RP0=0, select bank0
  5912  1138  1303               	bcf	3,6	;RP1=0, select bank0
  5913  1139  00A3               	movwf	___lwdiv@dividend+1
  5914  113A  0872               	movf	?___lwmod,w
  5915  113B  00A2               	movwf	___lwdiv@dividend
  5916  113C  160A  158A  2344  160A  118A  	fcall	___lwdiv
  5917  1141  1283               	bcf	3,5	;RP0=0, select bank0
  5918  1142  1303               	bcf	3,6	;RP1=0, select bank0
  5919  1143  0820               	movf	?___lwdiv,w
  5920  1144  00C8               	movwf	??_fround+2
  5921  1145  3001               	movlw	1
  5922  1146                     u6185:
  5923  1146  1003               	clrc
  5924  1147  0DC8               	rlf	??_fround+2,f
  5925  1148  3EFF               	addlw	-1
  5926  1149  1D03               	skipz
  5927  114A  2946               	goto	u6185
  5928  114B  1003               	clrc
  5929  114C  0D48               	rlf	??_fround+2,w
  5930  114D  3E6A               	addlw	low ((__npowers_| (0+32768)+36))
  5931  114E  0084               	movwf	4
  5932  114F  3098               	movlw	high ((__npowers_| (0+32768)+36))
  5933  1150  1803               	skipnc
  5934  1151  3E01               	addlw	1
  5935  1152  00FF               	movwf	btemp+1
  5936  1153  160A  158A  2000  160A  118A  	fcall	stringtab
  5937  1158  00C9               	movwf	??_fround+3
  5938  1159  160A  158A  2000  160A  118A  	fcall	stringtab
  5939  115E  00CA               	movwf	??_fround+4
  5940  115F  160A  158A  2000  160A  118A  	fcall	stringtab
  5941  1164  00CB               	movwf	??_fround+5
  5942  1165  160A  158A  2000  160A  118A  	fcall	stringtab
  5943  116A  00CC               	movwf	??_fround+6
  5944  116B  084C               	movf	??_fround+6,w
  5945  116C  00AB               	movwf	___flmul@b+3
  5946  116D  084B               	movf	??_fround+5,w
  5947  116E  00AA               	movwf	___flmul@b+2
  5948  116F  084A               	movf	??_fround+4,w
  5949  1170  00A9               	movwf	___flmul@b+1
  5950  1171  0849               	movf	??_fround+3,w
  5951  1172  00A8               	movwf	___flmul@b
  5952  1173  0854               	movf	_fround$1180+3,w
  5953  1174  00AF               	movwf	___flmul@a+3
  5954  1175  0853               	movf	_fround$1180+2,w
  5955  1176  00AE               	movwf	___flmul@a+2
  5956  1177  0852               	movf	_fround$1180+1,w
  5957  1178  00AD               	movwf	___flmul@a+1
  5958  1179  0851               	movf	_fround$1180,w
  5959  117A  00AC               	movwf	___flmul@a
  5960  117B  120A  118A  23B7  160A  118A  	fcall	___flmul
  5961  1180  1283               	bcf	3,5	;RP0=0, select bank0
  5962  1181  1303               	bcf	3,6	;RP1=0, select bank0
  5963  1182  082B               	movf	?___flmul+3,w
  5964  1183  00D0               	movwf	_fround$1181+3
  5965  1184  082A               	movf	?___flmul+2,w
  5966  1185  00CF               	movwf	_fround$1181+2
  5967  1186  0829               	movf	?___flmul+1,w
  5968  1187  00CE               	movwf	_fround$1181+1
  5969  1188  0828               	movf	?___flmul,w
  5970  1189  00CD               	movwf	_fround$1181
  5971                           
  5972                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5973  118A  300A               	movlw	10
  5974  118B  00F2               	movwf	___lwmod@divisor
  5975  118C  3000               	movlw	0
  5976  118D  00F3               	movwf	___lwmod@divisor+1
  5977  118E  0855               	movf	fround@prec,w
  5978  118F  00C6               	movwf	??_fround
  5979  1190  01C7               	clrf	??_fround+1
  5980  1191  0846               	movf	??_fround,w
  5981  1192  00F4               	movwf	___lwmod@dividend
  5982  1193  0847               	movf	??_fround+1,w
  5983  1194  00F5               	movwf	___lwmod@dividend+1
  5984  1195  160A  158A  230A  160A  118A  	fcall	___lwmod
  5985  119A  0872               	movf	?___lwmod,w
  5986  119B  1283               	bcf	3,5	;RP0=0, select bank0
  5987  119C  1303               	bcf	3,6	;RP1=0, select bank0
  5988  119D  00C8               	movwf	??_fround+2
  5989  119E  3001               	movlw	1
  5990  119F                     u6195:
  5991  119F  1003               	clrc
  5992  11A0  0DC8               	rlf	??_fround+2,f
  5993  11A1  3EFF               	addlw	-1
  5994  11A2  1D03               	skipz
  5995  11A3  299F               	goto	u6195
  5996  11A4  1003               	clrc
  5997  11A5  0D48               	rlf	??_fround+2,w
  5998  11A6  3E46               	addlw	low (__npowers_| (0+32768))
  5999  11A7  0084               	movwf	4
  6000  11A8  3098               	movlw	high (__npowers_| (0+32768))
  6001  11A9  1803               	skipnc
  6002  11AA  3E01               	addlw	1
  6003  11AB  00FF               	movwf	btemp+1
  6004  11AC  160A  158A  2000  160A  118A  	fcall	stringtab
  6005  11B1  00C9               	movwf	??_fround+3
  6006  11B2  160A  158A  2000  160A  118A  	fcall	stringtab
  6007  11B7  00CA               	movwf	??_fround+4
  6008  11B8  160A  158A  2000  160A  118A  	fcall	stringtab
  6009  11BD  00CB               	movwf	??_fround+5
  6010  11BE  160A  158A  2000  160A  118A  	fcall	stringtab
  6011  11C3  00CC               	movwf	??_fround+6
  6012  11C4  084C               	movf	??_fround+6,w
  6013  11C5  00AB               	movwf	___flmul@b+3
  6014  11C6  084B               	movf	??_fround+5,w
  6015  11C7  00AA               	movwf	___flmul@b+2
  6016  11C8  084A               	movf	??_fround+4,w
  6017  11C9  00A9               	movwf	___flmul@b+1
  6018  11CA  0849               	movf	??_fround+3,w
  6019  11CB  00A8               	movwf	___flmul@b
  6020  11CC  0850               	movf	_fround$1181+3,w
  6021  11CD  00AF               	movwf	___flmul@a+3
  6022  11CE  084F               	movf	_fround$1181+2,w
  6023  11CF  00AE               	movwf	___flmul@a+2
  6024  11D0  084E               	movf	_fround$1181+1,w
  6025  11D1  00AD               	movwf	___flmul@a+1
  6026  11D2  084D               	movf	_fround$1181,w
  6027  11D3  00AC               	movwf	___flmul@a
  6028  11D4  120A  118A  23B7  160A  118A  	fcall	___flmul
  6029  11D9  1283               	bcf	3,5	;RP0=0, select bank0
  6030  11DA  1303               	bcf	3,6	;RP1=0, select bank0
  6031  11DB  082B               	movf	?___flmul+3,w
  6032  11DC  00C5               	movwf	?_fround+3
  6033  11DD  082A               	movf	?___flmul+2,w
  6034  11DE  00C4               	movwf	?_fround+2
  6035  11DF  0829               	movf	?___flmul+1,w
  6036  11E0  00C3               	movwf	?_fround+1
  6037  11E1  0828               	movf	?___flmul,w
  6038  11E2  00C2               	movwf	?_fround
  6039  11E3  2AE4               	goto	l298
  6040  11E4                     l4053:
  6041  11E4  300B               	movlw	11
  6042  11E5  0255               	subwf	fround@prec,w
  6043  11E6  1C03               	skipc
  6044  11E7  29E9               	goto	u6201
  6045  11E8  29EA               	goto	u6200
  6046  11E9                     u6201:
  6047  11E9  2A9D               	goto	l4059
  6048  11EA                     u6200:
  6049  11EA                     l4055:
  6050                           
  6051                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  6052  11EA  303F               	movlw	63
  6053  11EB  00AB               	movwf	___flmul@b+3
  6054  11EC  3000               	movlw	0
  6055  11ED  00AA               	movwf	___flmul@b+2
  6056  11EE  3000               	movlw	0
  6057  11EF  00A9               	movwf	___flmul@b+1
  6058  11F0  3000               	movlw	0
  6059  11F1  00A8               	movwf	___flmul@b
  6060  11F2  300A               	movlw	10
  6061  11F3  00A0               	movwf	___lwdiv@divisor
  6062  11F4  3000               	movlw	0
  6063  11F5  00A1               	movwf	___lwdiv@divisor+1
  6064  11F6  0855               	movf	fround@prec,w
  6065  11F7  00C6               	movwf	??_fround
  6066  11F8  01C7               	clrf	??_fround+1
  6067  11F9  0846               	movf	??_fround,w
  6068  11FA  00A2               	movwf	___lwdiv@dividend
  6069  11FB  0847               	movf	??_fround+1,w
  6070  11FC  00A3               	movwf	___lwdiv@dividend+1
  6071  11FD  160A  158A  2344  160A  118A  	fcall	___lwdiv
  6072  1202  1283               	bcf	3,5	;RP0=0, select bank0
  6073  1203  1303               	bcf	3,6	;RP1=0, select bank0
  6074  1204  0820               	movf	?___lwdiv,w
  6075  1205  00C8               	movwf	??_fround+2
  6076  1206  3001               	movlw	1
  6077  1207                     u6215:
  6078  1207  1003               	clrc
  6079  1208  0DC8               	rlf	??_fround+2,f
  6080  1209  3EFF               	addlw	-1
  6081  120A  1D03               	skipz
  6082  120B  2A07               	goto	u6215
  6083  120C  1003               	clrc
  6084  120D  0D48               	rlf	??_fround+2,w
  6085  120E  3E6A               	addlw	low ((__npowers_| (0+32768)+36))
  6086  120F  0084               	movwf	4
  6087  1210  3098               	movlw	high ((__npowers_| (0+32768)+36))
  6088  1211  1803               	skipnc
  6089  1212  3E01               	addlw	1
  6090  1213  00FF               	movwf	btemp+1
  6091  1214  160A  158A  2000  160A  118A  	fcall	stringtab
  6092  1219  00C9               	movwf	??_fround+3
  6093  121A  160A  158A  2000  160A  118A  	fcall	stringtab
  6094  121F  00CA               	movwf	??_fround+4
  6095  1220  160A  158A  2000  160A  118A  	fcall	stringtab
  6096  1225  00CB               	movwf	??_fround+5
  6097  1226  160A  158A  2000  160A  118A  	fcall	stringtab
  6098  122B  00CC               	movwf	??_fround+6
  6099  122C  084C               	movf	??_fround+6,w
  6100  122D  00AF               	movwf	___flmul@a+3
  6101  122E  084B               	movf	??_fround+5,w
  6102  122F  00AE               	movwf	___flmul@a+2
  6103  1230  084A               	movf	??_fround+4,w
  6104  1231  00AD               	movwf	___flmul@a+1
  6105  1232  0849               	movf	??_fround+3,w
  6106  1233  00AC               	movwf	___flmul@a
  6107  1234  120A  118A  23B7  160A  118A  	fcall	___flmul
  6108  1239  1283               	bcf	3,5	;RP0=0, select bank0
  6109  123A  1303               	bcf	3,6	;RP1=0, select bank0
  6110  123B  082B               	movf	?___flmul+3,w
  6111  123C  00D4               	movwf	_fround$1180+3
  6112  123D  082A               	movf	?___flmul+2,w
  6113  123E  00D3               	movwf	_fround$1180+2
  6114  123F  0829               	movf	?___flmul+1,w
  6115  1240  00D2               	movwf	_fround$1180+1
  6116  1241  0828               	movf	?___flmul,w
  6117  1242  00D1               	movwf	_fround$1180
  6118                           
  6119                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  6120  1243  300A               	movlw	10
  6121  1244  00F2               	movwf	___lwmod@divisor
  6122  1245  3000               	movlw	0
  6123  1246  00F3               	movwf	___lwmod@divisor+1
  6124  1247  0855               	movf	fround@prec,w
  6125  1248  00C6               	movwf	??_fround
  6126  1249  01C7               	clrf	??_fround+1
  6127  124A  0846               	movf	??_fround,w
  6128  124B  00F4               	movwf	___lwmod@dividend
  6129  124C  0847               	movf	??_fround+1,w
  6130  124D  00F5               	movwf	___lwmod@dividend+1
  6131  124E  160A  158A  230A  160A  118A  	fcall	___lwmod
  6132  1253  0872               	movf	?___lwmod,w
  6133  1254  1283               	bcf	3,5	;RP0=0, select bank0
  6134  1255  1303               	bcf	3,6	;RP1=0, select bank0
  6135  1256  00C8               	movwf	??_fround+2
  6136  1257  3001               	movlw	1
  6137  1258                     u6225:
  6138  1258  1003               	clrc
  6139  1259  0DC8               	rlf	??_fround+2,f
  6140  125A  3EFF               	addlw	-1
  6141  125B  1D03               	skipz
  6142  125C  2A58               	goto	u6225
  6143  125D  1003               	clrc
  6144  125E  0D48               	rlf	??_fround+2,w
  6145  125F  3E46               	addlw	low (__npowers_| (0+32768))
  6146  1260  0084               	movwf	4
  6147  1261  3098               	movlw	high (__npowers_| (0+32768))
  6148  1262  1803               	skipnc
  6149  1263  3E01               	addlw	1
  6150  1264  00FF               	movwf	btemp+1
  6151  1265  160A  158A  2000  160A  118A  	fcall	stringtab
  6152  126A  00C9               	movwf	??_fround+3
  6153  126B  160A  158A  2000  160A  118A  	fcall	stringtab
  6154  1270  00CA               	movwf	??_fround+4
  6155  1271  160A  158A  2000  160A  118A  	fcall	stringtab
  6156  1276  00CB               	movwf	??_fround+5
  6157  1277  160A  158A  2000  160A  118A  	fcall	stringtab
  6158  127C  00CC               	movwf	??_fround+6
  6159  127D  084C               	movf	??_fround+6,w
  6160  127E  00AB               	movwf	___flmul@b+3
  6161  127F  084B               	movf	??_fround+5,w
  6162  1280  00AA               	movwf	___flmul@b+2
  6163  1281  084A               	movf	??_fround+4,w
  6164  1282  00A9               	movwf	___flmul@b+1
  6165  1283  0849               	movf	??_fround+3,w
  6166  1284  00A8               	movwf	___flmul@b
  6167  1285  0854               	movf	_fround$1180+3,w
  6168  1286  00AF               	movwf	___flmul@a+3
  6169  1287  0853               	movf	_fround$1180+2,w
  6170  1288  00AE               	movwf	___flmul@a+2
  6171  1289  0852               	movf	_fround$1180+1,w
  6172  128A  00AD               	movwf	___flmul@a+1
  6173  128B  0851               	movf	_fround$1180,w
  6174  128C  00AC               	movwf	___flmul@a
  6175  128D  120A  118A  23B7  160A  118A  	fcall	___flmul
  6176  1292  1283               	bcf	3,5	;RP0=0, select bank0
  6177  1293  1303               	bcf	3,6	;RP1=0, select bank0
  6178  1294  082B               	movf	?___flmul+3,w
  6179  1295  00C5               	movwf	?_fround+3
  6180  1296  082A               	movf	?___flmul+2,w
  6181  1297  00C4               	movwf	?_fround+2
  6182  1298  0829               	movf	?___flmul+1,w
  6183  1299  00C3               	movwf	?_fround+1
  6184  129A  0828               	movf	?___flmul,w
  6185  129B  00C2               	movwf	?_fround
  6186  129C  2AE4               	goto	l298
  6187  129D                     l4059:
  6188                           
  6189                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  6190  129D  303F               	movlw	63
  6191  129E  00AB               	movwf	___flmul@b+3
  6192  129F  3000               	movlw	0
  6193  12A0  00AA               	movwf	___flmul@b+2
  6194  12A1  3000               	movlw	0
  6195  12A2  00A9               	movwf	___flmul@b+1
  6196  12A3  3000               	movlw	0
  6197  12A4  00A8               	movwf	___flmul@b
  6198  12A5  0855               	movf	fround@prec,w
  6199  12A6  00C6               	movwf	??_fround
  6200  12A7  3001               	movlw	1
  6201  12A8                     u6235:
  6202  12A8  1003               	clrc
  6203  12A9  0DC6               	rlf	??_fround,f
  6204  12AA  3EFF               	addlw	-1
  6205  12AB  1D03               	skipz
  6206  12AC  2AA8               	goto	u6235
  6207  12AD  1003               	clrc
  6208  12AE  0D46               	rlf	??_fround,w
  6209  12AF  3E46               	addlw	low (__npowers_| (0+32768))
  6210  12B0  0084               	movwf	4
  6211  12B1  3098               	movlw	high (__npowers_| (0+32768))
  6212  12B2  1803               	skipnc
  6213  12B3  3E01               	addlw	1
  6214  12B4  00FF               	movwf	btemp+1
  6215  12B5  160A  158A  2000  160A  118A  	fcall	stringtab
  6216  12BA  00C7               	movwf	??_fround+1
  6217  12BB  160A  158A  2000  160A  118A  	fcall	stringtab
  6218  12C0  00C8               	movwf	??_fround+2
  6219  12C1  160A  158A  2000  160A  118A  	fcall	stringtab
  6220  12C6  00C9               	movwf	??_fround+3
  6221  12C7  160A  158A  2000  160A  118A  	fcall	stringtab
  6222  12CC  00CA               	movwf	??_fround+4
  6223  12CD  084A               	movf	??_fround+4,w
  6224  12CE  00AF               	movwf	___flmul@a+3
  6225  12CF  0849               	movf	??_fround+3,w
  6226  12D0  00AE               	movwf	___flmul@a+2
  6227  12D1  0848               	movf	??_fround+2,w
  6228  12D2  00AD               	movwf	___flmul@a+1
  6229  12D3  0847               	movf	??_fround+1,w
  6230  12D4  00AC               	movwf	___flmul@a
  6231  12D5  120A  118A  23B7  160A  118A  	fcall	___flmul
  6232  12DA  1283               	bcf	3,5	;RP0=0, select bank0
  6233  12DB  1303               	bcf	3,6	;RP1=0, select bank0
  6234  12DC  082B               	movf	?___flmul+3,w
  6235  12DD  00C5               	movwf	?_fround+3
  6236  12DE  082A               	movf	?___flmul+2,w
  6237  12DF  00C4               	movwf	?_fround+2
  6238  12E0  0829               	movf	?___flmul+1,w
  6239  12E1  00C3               	movwf	?_fround+1
  6240  12E2  0828               	movf	?___flmul,w
  6241  12E3  00C2               	movwf	?_fround
  6242  12E4                     l298:
  6243  12E4  0008               	return
  6244  12E5                     __end_of_fround:
  6245                           
  6246                           	psect	text7
  6247  1B0A                     __ptext7:	
  6248 ;; *************** function ___lwmod *****************
  6249 ;; Defined at:
  6250 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  6251 ;; Parameters:    Size  Location     Type
  6252 ;;  divisor         2    2[COMMON] unsigned int 
  6253 ;;  dividend        2    4[COMMON] unsigned int 
  6254 ;; Auto vars:     Size  Location     Type
  6255 ;;  counter         1    7[COMMON] unsigned char 
  6256 ;; Return value:  Size  Location     Type
  6257 ;;                  2    2[COMMON] unsigned int 
  6258 ;; Registers used:
  6259 ;;		wreg, status,2, status,0
  6260 ;; Tracked objects:
  6261 ;;		On entry : 0/0
  6262 ;;		On exit  : 0/0
  6263 ;;		Unchanged: 0/0
  6264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6265 ;;      Params:         4       0       0       0       0
  6266 ;;      Locals:         1       0       0       0       0
  6267 ;;      Temps:          1       0       0       0       0
  6268 ;;      Totals:         6       0       0       0       0
  6269 ;;Total ram usage:        6 bytes
  6270 ;; Hardware stack levels used:    1
  6271 ;; Hardware stack levels required when called:    1
  6272 ;; This function calls:
  6273 ;;		Nothing
  6274 ;; This function is called by:
  6275 ;;		_fround
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           
  6279                           
  6280                           ;psect for function ___lwmod
  6281  1B0A                     ___lwmod:
  6282  1B0A                     l2605:	
  6283                           ;incstack = 0
  6284                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6285                           
  6286  1B0A  0872               	movf	___lwmod@divisor,w
  6287  1B0B  0473               	iorwf	___lwmod@divisor+1,w
  6288  1B0C  1903               	btfsc	3,2
  6289  1B0D  2B0F               	goto	u3161
  6290  1B0E  2B10               	goto	u3160
  6291  1B0F                     u3161:
  6292  1B0F  2B3F               	goto	l2623
  6293  1B10                     u3160:
  6294  1B10                     l2607:
  6295  1B10  01F7               	clrf	___lwmod@counter
  6296  1B11  0AF7               	incf	___lwmod@counter,f
  6297  1B12  2B1E               	goto	l2613
  6298  1B13                     l2609:
  6299  1B13  3001               	movlw	1
  6300  1B14                     u3175:
  6301  1B14  1003               	clrc
  6302  1B15  0DF2               	rlf	___lwmod@divisor,f
  6303  1B16  0DF3               	rlf	___lwmod@divisor+1,f
  6304  1B17  3EFF               	addlw	-1
  6305  1B18  1D03               	skipz
  6306  1B19  2B14               	goto	u3175
  6307  1B1A                     l2611:
  6308  1B1A  3001               	movlw	1
  6309  1B1B  00F6               	movwf	??___lwmod
  6310  1B1C  0876               	movf	??___lwmod,w
  6311  1B1D  07F7               	addwf	___lwmod@counter,f
  6312  1B1E                     l2613:
  6313  1B1E  1FF3               	btfss	___lwmod@divisor+1,7
  6314  1B1F  2B21               	goto	u3181
  6315  1B20  2B22               	goto	u3180
  6316  1B21                     u3181:
  6317  1B21  2B13               	goto	l2609
  6318  1B22                     u3180:
  6319  1B22                     l2615:
  6320  1B22  0873               	movf	___lwmod@divisor+1,w
  6321  1B23  0275               	subwf	___lwmod@dividend+1,w
  6322  1B24  1D03               	skipz
  6323  1B25  2B28               	goto	u3195
  6324  1B26  0872               	movf	___lwmod@divisor,w
  6325  1B27  0274               	subwf	___lwmod@dividend,w
  6326  1B28                     u3195:
  6327  1B28  1C03               	skipc
  6328  1B29  2B2B               	goto	u3191
  6329  1B2A  2B2C               	goto	u3190
  6330  1B2B                     u3191:
  6331  1B2B  2B32               	goto	l2619
  6332  1B2C                     u3190:
  6333  1B2C                     l2617:
  6334  1B2C  0872               	movf	___lwmod@divisor,w
  6335  1B2D  02F4               	subwf	___lwmod@dividend,f
  6336  1B2E  0873               	movf	___lwmod@divisor+1,w
  6337  1B2F  1C03               	skipc
  6338  1B30  03F5               	decf	___lwmod@dividend+1,f
  6339  1B31  02F5               	subwf	___lwmod@dividend+1,f
  6340  1B32                     l2619:
  6341  1B32  3001               	movlw	1
  6342  1B33                     u3205:
  6343  1B33  1003               	clrc
  6344  1B34  0CF3               	rrf	___lwmod@divisor+1,f
  6345  1B35  0CF2               	rrf	___lwmod@divisor,f
  6346  1B36  3EFF               	addlw	-1
  6347  1B37  1D03               	skipz
  6348  1B38  2B33               	goto	u3205
  6349  1B39                     l2621:
  6350  1B39  3001               	movlw	1
  6351  1B3A  02F7               	subwf	___lwmod@counter,f
  6352  1B3B  1D03               	btfss	3,2
  6353  1B3C  2B3E               	goto	u3211
  6354  1B3D  2B3F               	goto	u3210
  6355  1B3E                     u3211:
  6356  1B3E  2B22               	goto	l2615
  6357  1B3F                     u3210:
  6358  1B3F                     l2623:
  6359  1B3F  0875               	movf	___lwmod@dividend+1,w
  6360  1B40  00F3               	movwf	?___lwmod+1
  6361  1B41  0874               	movf	___lwmod@dividend,w
  6362  1B42  00F2               	movwf	?___lwmod
  6363  1B43                     l708:
  6364  1B43  0008               	return
  6365  1B44                     __end_of___lwmod:
  6366                           
  6367                           	psect	text8
  6368  1B44                     __ptext8:	
  6369 ;; *************** function ___lwdiv *****************
  6370 ;; Defined at:
  6371 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  6372 ;; Parameters:    Size  Location     Type
  6373 ;;  divisor         2    0[BANK0 ] unsigned int 
  6374 ;;  dividend        2    2[BANK0 ] unsigned int 
  6375 ;; Auto vars:     Size  Location     Type
  6376 ;;  quotient        2    5[BANK0 ] unsigned int 
  6377 ;;  counter         1    4[BANK0 ] unsigned char 
  6378 ;; Return value:  Size  Location     Type
  6379 ;;                  2    0[BANK0 ] unsigned int 
  6380 ;; Registers used:
  6381 ;;		wreg, status,2, status,0
  6382 ;; Tracked objects:
  6383 ;;		On entry : 0/0
  6384 ;;		On exit  : 0/0
  6385 ;;		Unchanged: 0/0
  6386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6387 ;;      Params:         0       4       0       0       0
  6388 ;;      Locals:         0       3       0       0       0
  6389 ;;      Temps:          1       0       0       0       0
  6390 ;;      Totals:         1       7       0       0       0
  6391 ;;Total ram usage:        8 bytes
  6392 ;; Hardware stack levels used:    1
  6393 ;; Hardware stack levels required when called:    1
  6394 ;; This function calls:
  6395 ;;		Nothing
  6396 ;; This function is called by:
  6397 ;;		_fround
  6398 ;; This function uses a non-reentrant model
  6399 ;;
  6400                           
  6401                           
  6402                           ;psect for function ___lwdiv
  6403  1B44                     ___lwdiv:
  6404  1B44                     l3879:	
  6405                           ;incstack = 0
  6406                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6407                           
  6408  1B44  1283               	bcf	3,5	;RP0=0, select bank0
  6409  1B45  1303               	bcf	3,6	;RP1=0, select bank0
  6410  1B46  01A5               	clrf	___lwdiv@quotient
  6411  1B47  01A6               	clrf	___lwdiv@quotient+1
  6412  1B48                     l3881:
  6413  1B48  0820               	movf	___lwdiv@divisor,w
  6414  1B49  0421               	iorwf	___lwdiv@divisor+1,w
  6415  1B4A  1903               	btfsc	3,2
  6416  1B4B  2B4D               	goto	u5721
  6417  1B4C  2B4E               	goto	u5720
  6418  1B4D                     u5721:
  6419  1B4D  2B85               	goto	l3901
  6420  1B4E                     u5720:
  6421  1B4E                     l3883:
  6422  1B4E  01A4               	clrf	___lwdiv@counter
  6423  1B4F  0AA4               	incf	___lwdiv@counter,f
  6424  1B50  2B5C               	goto	l3889
  6425  1B51                     l3885:
  6426  1B51  3001               	movlw	1
  6427  1B52                     u5735:
  6428  1B52  1003               	clrc
  6429  1B53  0DA0               	rlf	___lwdiv@divisor,f
  6430  1B54  0DA1               	rlf	___lwdiv@divisor+1,f
  6431  1B55  3EFF               	addlw	-1
  6432  1B56  1D03               	skipz
  6433  1B57  2B52               	goto	u5735
  6434  1B58                     l3887:
  6435  1B58  3001               	movlw	1
  6436  1B59  00F8               	movwf	??___lwdiv
  6437  1B5A  0878               	movf	??___lwdiv,w
  6438  1B5B  07A4               	addwf	___lwdiv@counter,f
  6439  1B5C                     l3889:
  6440  1B5C  1FA1               	btfss	___lwdiv@divisor+1,7
  6441  1B5D  2B5F               	goto	u5741
  6442  1B5E  2B60               	goto	u5740
  6443  1B5F                     u5741:
  6444  1B5F  2B51               	goto	l3885
  6445  1B60                     u5740:
  6446  1B60                     l3891:
  6447  1B60  3001               	movlw	1
  6448  1B61                     u5755:
  6449  1B61  1003               	clrc
  6450  1B62  0DA5               	rlf	___lwdiv@quotient,f
  6451  1B63  0DA6               	rlf	___lwdiv@quotient+1,f
  6452  1B64  3EFF               	addlw	-1
  6453  1B65  1D03               	skipz
  6454  1B66  2B61               	goto	u5755
  6455  1B67  0821               	movf	___lwdiv@divisor+1,w
  6456  1B68  0223               	subwf	___lwdiv@dividend+1,w
  6457  1B69  1D03               	skipz
  6458  1B6A  2B6D               	goto	u5765
  6459  1B6B  0820               	movf	___lwdiv@divisor,w
  6460  1B6C  0222               	subwf	___lwdiv@dividend,w
  6461  1B6D                     u5765:
  6462  1B6D  1C03               	skipc
  6463  1B6E  2B70               	goto	u5761
  6464  1B6F  2B71               	goto	u5760
  6465  1B70                     u5761:
  6466  1B70  2B78               	goto	l3897
  6467  1B71                     u5760:
  6468  1B71                     l3893:
  6469  1B71  0820               	movf	___lwdiv@divisor,w
  6470  1B72  02A2               	subwf	___lwdiv@dividend,f
  6471  1B73  0821               	movf	___lwdiv@divisor+1,w
  6472  1B74  1C03               	skipc
  6473  1B75  03A3               	decf	___lwdiv@dividend+1,f
  6474  1B76  02A3               	subwf	___lwdiv@dividend+1,f
  6475  1B77                     l3895:
  6476  1B77  1425               	bsf	___lwdiv@quotient,0
  6477  1B78                     l3897:
  6478  1B78  3001               	movlw	1
  6479  1B79                     u5775:
  6480  1B79  1003               	clrc
  6481  1B7A  0CA1               	rrf	___lwdiv@divisor+1,f
  6482  1B7B  0CA0               	rrf	___lwdiv@divisor,f
  6483  1B7C  3EFF               	addlw	-1
  6484  1B7D  1D03               	skipz
  6485  1B7E  2B79               	goto	u5775
  6486  1B7F                     l3899:
  6487  1B7F  3001               	movlw	1
  6488  1B80  02A4               	subwf	___lwdiv@counter,f
  6489  1B81  1D03               	btfss	3,2
  6490  1B82  2B84               	goto	u5781
  6491  1B83  2B85               	goto	u5780
  6492  1B84                     u5781:
  6493  1B84  2B60               	goto	l3891
  6494  1B85                     u5780:
  6495  1B85                     l3901:
  6496  1B85  0826               	movf	___lwdiv@quotient+1,w
  6497  1B86  00A1               	movwf	?___lwdiv+1
  6498  1B87  0825               	movf	___lwdiv@quotient,w
  6499  1B88  00A0               	movwf	?___lwdiv
  6500  1B89                     l698:
  6501  1B89  0008               	return
  6502  1B8A                     __end_of___lwdiv:
  6503                           
  6504                           	psect	text9
  6505  03B7                     __ptext9:	
  6506 ;; *************** function ___flmul *****************
  6507 ;; Defined at:
  6508 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  6509 ;; Parameters:    Size  Location     Type
  6510 ;;  b               4    8[BANK0 ] unsigned int 
  6511 ;;  a               4   12[BANK0 ] unsigned int 
  6512 ;; Auto vars:     Size  Location     Type
  6513 ;;  prod            4   28[BANK0 ] struct .
  6514 ;;  grs             4   23[BANK0 ] unsigned long 
  6515 ;;  temp            2   32[BANK0 ] struct .
  6516 ;;  bexp            1   27[BANK0 ] unsigned char 
  6517 ;;  aexp            1   22[BANK0 ] unsigned char 
  6518 ;;  sign            1   21[BANK0 ] unsigned char 
  6519 ;; Return value:  Size  Location     Type
  6520 ;;                  4    8[BANK0 ] unsigned char 
  6521 ;; Registers used:
  6522 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6523 ;; Tracked objects:
  6524 ;;		On entry : 0/0
  6525 ;;		On exit  : 0/0
  6526 ;;		Unchanged: 0/0
  6527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6528 ;;      Params:         0       8       0       0       0
  6529 ;;      Locals:         0      13       0       0       0
  6530 ;;      Temps:          0       5       0       0       0
  6531 ;;      Totals:         0      26       0       0       0
  6532 ;;Total ram usage:       26 bytes
  6533 ;; Hardware stack levels used:    1
  6534 ;; Hardware stack levels required when called:    2
  6535 ;; This function calls:
  6536 ;;		__Umul8_16
  6537 ;; This function is called by:
  6538 ;;		_main
  6539 ;;		_fround
  6540 ;;		_scale
  6541 ;;		_sprintf
  6542 ;; This function uses a non-reentrant model
  6543 ;;
  6544                           
  6545                           
  6546                           ;psect for function ___flmul
  6547  03B7                     ___flmul:
  6548  03B7                     l3905:	
  6549                           ;incstack = 0
  6550                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6551                           
  6552  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  6553  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  6554  03B9  082B               	movf	___flmul@b+3,w
  6555  03BA  3980               	andlw	128
  6556  03BB  00B0               	movwf	??___flmul
  6557  03BC  0830               	movf	??___flmul,w
  6558  03BD  00B5               	movwf	___flmul@sign
  6559  03BE                     l3907:
  6560  03BE  082B               	movf	___flmul@b+3,w
  6561  03BF  00B0               	movwf	??___flmul
  6562  03C0  0730               	addwf	??___flmul,w
  6563  03C1  00B1               	movwf	??___flmul+1
  6564  03C2  0831               	movf	??___flmul+1,w
  6565  03C3  00BB               	movwf	___flmul@bexp
  6566  03C4                     l3909:
  6567  03C4  1FAA               	btfss	___flmul@b+2,7
  6568  03C5  2BC7               	goto	u5791
  6569  03C6  2BC8               	goto	u5790
  6570  03C7                     u5791:
  6571  03C7  2BC9               	goto	l3913
  6572  03C8                     u5790:
  6573  03C8                     l3911:
  6574  03C8  143B               	bsf	___flmul@bexp,0
  6575  03C9                     l3913:
  6576  03C9  083B               	movf	___flmul@bexp,w
  6577  03CA  1903               	btfsc	3,2
  6578  03CB  2BCD               	goto	u5801
  6579  03CC  2BCE               	goto	u5800
  6580  03CD                     u5801:
  6581  03CD  2BDD               	goto	l3921
  6582  03CE                     u5800:
  6583  03CE                     l3915:
  6584  03CE  0A3B               	incf	___flmul@bexp,w
  6585  03CF  1D03               	btfss	3,2
  6586  03D0  2BD2               	goto	u5811
  6587  03D1  2BD3               	goto	u5810
  6588  03D2                     u5811:
  6589  03D2  2BDB               	goto	l3919
  6590  03D3                     u5810:
  6591  03D3                     l3917:
  6592  03D3  3000               	movlw	0
  6593  03D4  00AB               	movwf	___flmul@b+3
  6594  03D5  3000               	movlw	0
  6595  03D6  00AA               	movwf	___flmul@b+2
  6596  03D7  3000               	movlw	0
  6597  03D8  00A9               	movwf	___flmul@b+1
  6598  03D9  3000               	movlw	0
  6599  03DA  00A8               	movwf	___flmul@b
  6600  03DB                     l3919:
  6601  03DB  17AA               	bsf	___flmul@b+2,7
  6602  03DC  2BE5               	goto	l3923
  6603  03DD                     l3921:
  6604  03DD  3000               	movlw	0
  6605  03DE  00AB               	movwf	___flmul@b+3
  6606  03DF  3000               	movlw	0
  6607  03E0  00AA               	movwf	___flmul@b+2
  6608  03E1  3000               	movlw	0
  6609  03E2  00A9               	movwf	___flmul@b+1
  6610  03E3  3000               	movlw	0
  6611  03E4  00A8               	movwf	___flmul@b
  6612  03E5                     l3923:
  6613  03E5  082F               	movf	___flmul@a+3,w
  6614  03E6  3980               	andlw	128
  6615  03E7  00B0               	movwf	??___flmul
  6616  03E8  0830               	movf	??___flmul,w
  6617  03E9  06B5               	xorwf	___flmul@sign,f
  6618  03EA                     l3925:
  6619  03EA  082F               	movf	___flmul@a+3,w
  6620  03EB  00B0               	movwf	??___flmul
  6621  03EC  0730               	addwf	??___flmul,w
  6622  03ED  00B1               	movwf	??___flmul+1
  6623  03EE  0831               	movf	??___flmul+1,w
  6624  03EF  00B6               	movwf	___flmul@aexp
  6625  03F0                     l3927:
  6626  03F0  1FAE               	btfss	___flmul@a+2,7
  6627  03F1  2BF3               	goto	u5821
  6628  03F2  2BF4               	goto	u5820
  6629  03F3                     u5821:
  6630  03F3  2BF5               	goto	l3931
  6631  03F4                     u5820:
  6632  03F4                     l3929:
  6633  03F4  1436               	bsf	___flmul@aexp,0
  6634  03F5                     l3931:
  6635  03F5  0836               	movf	___flmul@aexp,w
  6636  03F6  1903               	btfsc	3,2
  6637  03F7  2BF9               	goto	u5831
  6638  03F8  2BFA               	goto	u5830
  6639  03F9                     u5831:
  6640  03F9  2C09               	goto	l3939
  6641  03FA                     u5830:
  6642  03FA                     l3933:
  6643  03FA  0A36               	incf	___flmul@aexp,w
  6644  03FB  1D03               	btfss	3,2
  6645  03FC  2BFE               	goto	u5841
  6646  03FD  2BFF               	goto	u5840
  6647  03FE                     u5841:
  6648  03FE  2C07               	goto	l3937
  6649  03FF                     u5840:
  6650  03FF                     l3935:
  6651  03FF  3000               	movlw	0
  6652  0400  00AF               	movwf	___flmul@a+3
  6653  0401  3000               	movlw	0
  6654  0402  00AE               	movwf	___flmul@a+2
  6655  0403  3000               	movlw	0
  6656  0404  00AD               	movwf	___flmul@a+1
  6657  0405  3000               	movlw	0
  6658  0406  00AC               	movwf	___flmul@a
  6659  0407                     l3937:
  6660  0407  17AE               	bsf	___flmul@a+2,7
  6661  0408  2C11               	goto	l3941
  6662  0409                     l3939:
  6663  0409  3000               	movlw	0
  6664  040A  00AF               	movwf	___flmul@a+3
  6665  040B  3000               	movlw	0
  6666  040C  00AE               	movwf	___flmul@a+2
  6667  040D  3000               	movlw	0
  6668  040E  00AD               	movwf	___flmul@a+1
  6669  040F  3000               	movlw	0
  6670  0410  00AC               	movwf	___flmul@a
  6671  0411                     l3941:
  6672  0411  0836               	movf	___flmul@aexp,w
  6673  0412  1903               	btfsc	3,2
  6674  0413  2C15               	goto	u5851
  6675  0414  2C16               	goto	u5850
  6676  0415                     u5851:
  6677  0415  2C1B               	goto	l3945
  6678  0416                     u5850:
  6679  0416                     l3943:
  6680  0416  083B               	movf	___flmul@bexp,w
  6681  0417  1D03               	btfss	3,2
  6682  0418  2C1A               	goto	u5861
  6683  0419  2C1B               	goto	u5860
  6684  041A                     u5861:
  6685  041A  2C24               	goto	l3949
  6686  041B                     u5860:
  6687  041B                     l3945:
  6688  041B  3000               	movlw	0
  6689  041C  00AB               	movwf	?___flmul+3
  6690  041D  3000               	movlw	0
  6691  041E  00AA               	movwf	?___flmul+2
  6692  041F  3000               	movlw	0
  6693  0420  00A9               	movwf	?___flmul+1
  6694  0421  3000               	movlw	0
  6695  0422  00A8               	movwf	?___flmul
  6696  0423  2F17               	goto	l815
  6697  0424                     l3949:
  6698  0424  0828               	movf	___flmul@b,w
  6699  0425  00B0               	movwf	??___flmul
  6700  0426  0830               	movf	??___flmul,w
  6701  0427  00F2               	movwf	__Umul8_16@multiplicand
  6702  0428  082E               	movf	___flmul@a+2,w
  6703  0429  120A  118A  27D6  120A  118A  	fcall	__Umul8_16
  6704  042E  0873               	movf	?__Umul8_16+1,w
  6705  042F  1283               	bcf	3,5	;RP0=0, select bank0
  6706  0430  1303               	bcf	3,6	;RP1=0, select bank0
  6707  0431  00C1               	movwf	___flmul@temp+1
  6708  0432  0872               	movf	?__Umul8_16,w
  6709  0433  00C0               	movwf	___flmul@temp
  6710  0434                     l3951:
  6711  0434  0840               	movf	___flmul@temp,w
  6712  0435  00B0               	movwf	??___flmul
  6713  0436  01B1               	clrf	??___flmul+1
  6714  0437  01B2               	clrf	??___flmul+2
  6715  0438  01B3               	clrf	??___flmul+3
  6716  0439  0833               	movf	??___flmul+3,w
  6717  043A  00BA               	movwf	___flmul@grs+3
  6718  043B  0832               	movf	??___flmul+2,w
  6719  043C  00B9               	movwf	___flmul@grs+2
  6720  043D  0831               	movf	??___flmul+1,w
  6721  043E  00B8               	movwf	___flmul@grs+1
  6722  043F  0830               	movf	??___flmul,w
  6723  0440  00B7               	movwf	___flmul@grs
  6724  0441                     l3953:
  6725  0441  0841               	movf	___flmul@temp+1,w
  6726  0442  00B0               	movwf	??___flmul
  6727  0443  01B1               	clrf	??___flmul+1
  6728  0444  01B2               	clrf	??___flmul+2
  6729  0445  01B3               	clrf	??___flmul+3
  6730  0446  0833               	movf	??___flmul+3,w
  6731  0447  00BF               	movwf	___flmul@prod+3
  6732  0448  0832               	movf	??___flmul+2,w
  6733  0449  00BE               	movwf	___flmul@prod+2
  6734  044A  0831               	movf	??___flmul+1,w
  6735  044B  00BD               	movwf	___flmul@prod+1
  6736  044C  0830               	movf	??___flmul,w
  6737  044D  00BC               	movwf	___flmul@prod
  6738  044E  0829               	movf	___flmul@b+1,w
  6739  044F  00B0               	movwf	??___flmul
  6740  0450  0830               	movf	??___flmul,w
  6741  0451  00F2               	movwf	__Umul8_16@multiplicand
  6742  0452  082D               	movf	___flmul@a+1,w
  6743  0453  120A  118A  27D6  120A  118A  	fcall	__Umul8_16
  6744  0458  0873               	movf	?__Umul8_16+1,w
  6745  0459  1283               	bcf	3,5	;RP0=0, select bank0
  6746  045A  1303               	bcf	3,6	;RP1=0, select bank0
  6747  045B  00C1               	movwf	___flmul@temp+1
  6748  045C  0872               	movf	?__Umul8_16,w
  6749  045D  00C0               	movwf	___flmul@temp
  6750  045E                     l3955:
  6751  045E  0840               	movf	___flmul@temp,w
  6752  045F  00B0               	movwf	??___flmul
  6753  0460  01B1               	clrf	??___flmul+1
  6754  0461  01B2               	clrf	??___flmul+2
  6755  0462  01B3               	clrf	??___flmul+3
  6756  0463  0830               	movf	??___flmul,w
  6757  0464  07B7               	addwf	___flmul@grs,f
  6758  0465  0831               	movf	??___flmul+1,w
  6759  0466  1103               	clrz
  6760  0467  1803               	skipnc
  6761  0468  3E01               	addlw	1
  6762  0469  1903               	skipnz
  6763  046A  2C6C               	goto	u5871
  6764  046B  07B8               	addwf	___flmul@grs+1,f
  6765  046C                     u5871:
  6766  046C  0832               	movf	??___flmul+2,w
  6767  046D  1103               	clrz
  6768  046E  1803               	skipnc
  6769  046F  3E01               	addlw	1
  6770  0470  1903               	skipnz
  6771  0471  2C73               	goto	u5872
  6772  0472  07B9               	addwf	___flmul@grs+2,f
  6773  0473                     u5872:
  6774  0473  0833               	movf	??___flmul+3,w
  6775  0474  1103               	clrz
  6776  0475  1803               	skipnc
  6777  0476  3E01               	addlw	1
  6778  0477  1903               	skipnz
  6779  0478  2C7A               	goto	u5873
  6780  0479  07BA               	addwf	___flmul@grs+3,f
  6781  047A                     u5873:
  6782  047A                     l3957:
  6783  047A  0841               	movf	___flmul@temp+1,w
  6784  047B  00B0               	movwf	??___flmul
  6785  047C  01B1               	clrf	??___flmul+1
  6786  047D  01B2               	clrf	??___flmul+2
  6787  047E  01B3               	clrf	??___flmul+3
  6788  047F  0830               	movf	??___flmul,w
  6789  0480  07BC               	addwf	___flmul@prod,f
  6790  0481  0831               	movf	??___flmul+1,w
  6791  0482  1103               	clrz
  6792  0483  1803               	skipnc
  6793  0484  3E01               	addlw	1
  6794  0485  1903               	skipnz
  6795  0486  2C88               	goto	u5881
  6796  0487  07BD               	addwf	___flmul@prod+1,f
  6797  0488                     u5881:
  6798  0488  0832               	movf	??___flmul+2,w
  6799  0489  1103               	clrz
  6800  048A  1803               	skipnc
  6801  048B  3E01               	addlw	1
  6802  048C  1903               	skipnz
  6803  048D  2C8F               	goto	u5882
  6804  048E  07BE               	addwf	___flmul@prod+2,f
  6805  048F                     u5882:
  6806  048F  0833               	movf	??___flmul+3,w
  6807  0490  1103               	clrz
  6808  0491  1803               	skipnc
  6809  0492  3E01               	addlw	1
  6810  0493  1903               	skipnz
  6811  0494  2C96               	goto	u5883
  6812  0495  07BF               	addwf	___flmul@prod+3,f
  6813  0496                     u5883:
  6814  0496  082A               	movf	___flmul@b+2,w
  6815  0497  00B0               	movwf	??___flmul
  6816  0498  0830               	movf	??___flmul,w
  6817  0499  00F2               	movwf	__Umul8_16@multiplicand
  6818  049A  082C               	movf	___flmul@a,w
  6819  049B  120A  118A  27D6  120A  118A  	fcall	__Umul8_16
  6820  04A0  0873               	movf	?__Umul8_16+1,w
  6821  04A1  1283               	bcf	3,5	;RP0=0, select bank0
  6822  04A2  1303               	bcf	3,6	;RP1=0, select bank0
  6823  04A3  00C1               	movwf	___flmul@temp+1
  6824  04A4  0872               	movf	?__Umul8_16,w
  6825  04A5  00C0               	movwf	___flmul@temp
  6826  04A6                     l3959:
  6827  04A6  0840               	movf	___flmul@temp,w
  6828  04A7  00B0               	movwf	??___flmul
  6829  04A8  01B1               	clrf	??___flmul+1
  6830  04A9  01B2               	clrf	??___flmul+2
  6831  04AA  01B3               	clrf	??___flmul+3
  6832  04AB  0830               	movf	??___flmul,w
  6833  04AC  07B7               	addwf	___flmul@grs,f
  6834  04AD  0831               	movf	??___flmul+1,w
  6835  04AE  1103               	clrz
  6836  04AF  1803               	skipnc
  6837  04B0  3E01               	addlw	1
  6838  04B1  1903               	skipnz
  6839  04B2  2CB4               	goto	u5891
  6840  04B3  07B8               	addwf	___flmul@grs+1,f
  6841  04B4                     u5891:
  6842  04B4  0832               	movf	??___flmul+2,w
  6843  04B5  1103               	clrz
  6844  04B6  1803               	skipnc
  6845  04B7  3E01               	addlw	1
  6846  04B8  1903               	skipnz
  6847  04B9  2CBB               	goto	u5892
  6848  04BA  07B9               	addwf	___flmul@grs+2,f
  6849  04BB                     u5892:
  6850  04BB  0833               	movf	??___flmul+3,w
  6851  04BC  1103               	clrz
  6852  04BD  1803               	skipnc
  6853  04BE  3E01               	addlw	1
  6854  04BF  1903               	skipnz
  6855  04C0  2CC2               	goto	u5893
  6856  04C1  07BA               	addwf	___flmul@grs+3,f
  6857  04C2                     u5893:
  6858  04C2                     l3961:
  6859  04C2  0841               	movf	___flmul@temp+1,w
  6860  04C3  00B0               	movwf	??___flmul
  6861  04C4  01B1               	clrf	??___flmul+1
  6862  04C5  01B2               	clrf	??___flmul+2
  6863  04C6  01B3               	clrf	??___flmul+3
  6864  04C7  0830               	movf	??___flmul,w
  6865  04C8  07BC               	addwf	___flmul@prod,f
  6866  04C9  0831               	movf	??___flmul+1,w
  6867  04CA  1103               	clrz
  6868  04CB  1803               	skipnc
  6869  04CC  3E01               	addlw	1
  6870  04CD  1903               	skipnz
  6871  04CE  2CD0               	goto	u5901
  6872  04CF  07BD               	addwf	___flmul@prod+1,f
  6873  04D0                     u5901:
  6874  04D0  0832               	movf	??___flmul+2,w
  6875  04D1  1103               	clrz
  6876  04D2  1803               	skipnc
  6877  04D3  3E01               	addlw	1
  6878  04D4  1903               	skipnz
  6879  04D5  2CD7               	goto	u5902
  6880  04D6  07BE               	addwf	___flmul@prod+2,f
  6881  04D7                     u5902:
  6882  04D7  0833               	movf	??___flmul+3,w
  6883  04D8  1103               	clrz
  6884  04D9  1803               	skipnc
  6885  04DA  3E01               	addlw	1
  6886  04DB  1903               	skipnz
  6887  04DC  2CDE               	goto	u5903
  6888  04DD  07BF               	addwf	___flmul@prod+3,f
  6889  04DE                     u5903:
  6890  04DE                     l3963:
  6891  04DE  3008               	movlw	8
  6892  04DF  00B0               	movwf	??___flmul
  6893  04E0                     u5915:
  6894  04E0  1003               	clrc
  6895  04E1  0DB7               	rlf	___flmul@grs,f
  6896  04E2  0DB8               	rlf	___flmul@grs+1,f
  6897  04E3  0DB9               	rlf	___flmul@grs+2,f
  6898  04E4  0DBA               	rlf	___flmul@grs+3,f
  6899  04E5  0BB0               	decfsz	??___flmul,f
  6900  04E6  2CE0               	goto	u5915
  6901  04E7                     l3965:
  6902  04E7  0829               	movf	___flmul@b+1,w
  6903  04E8  00B0               	movwf	??___flmul
  6904  04E9  0830               	movf	??___flmul,w
  6905  04EA  00F2               	movwf	__Umul8_16@multiplicand
  6906  04EB  082C               	movf	___flmul@a,w
  6907  04EC  120A  118A  27D6  120A  118A  	fcall	__Umul8_16
  6908  04F1  0873               	movf	?__Umul8_16+1,w
  6909  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  6910  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  6911  04F4  00C1               	movwf	___flmul@temp+1
  6912  04F5  0872               	movf	?__Umul8_16,w
  6913  04F6  00C0               	movwf	___flmul@temp
  6914  04F7                     l3967:
  6915  04F7  0840               	movf	___flmul@temp,w
  6916  04F8  00B0               	movwf	??___flmul
  6917  04F9  0841               	movf	___flmul@temp+1,w
  6918  04FA  00B1               	movwf	??___flmul+1
  6919  04FB  01B2               	clrf	??___flmul+2
  6920  04FC  01B3               	clrf	??___flmul+3
  6921  04FD  0830               	movf	??___flmul,w
  6922  04FE  07B7               	addwf	___flmul@grs,f
  6923  04FF  0831               	movf	??___flmul+1,w
  6924  0500  1103               	clrz
  6925  0501  1803               	skipnc
  6926  0502  3E01               	addlw	1
  6927  0503  1903               	skipnz
  6928  0504  2D06               	goto	u5921
  6929  0505  07B8               	addwf	___flmul@grs+1,f
  6930  0506                     u5921:
  6931  0506  0832               	movf	??___flmul+2,w
  6932  0507  1103               	clrz
  6933  0508  1803               	skipnc
  6934  0509  3E01               	addlw	1
  6935  050A  1903               	skipnz
  6936  050B  2D0D               	goto	u5922
  6937  050C  07B9               	addwf	___flmul@grs+2,f
  6938  050D                     u5922:
  6939  050D  0833               	movf	??___flmul+3,w
  6940  050E  1103               	clrz
  6941  050F  1803               	skipnc
  6942  0510  3E01               	addlw	1
  6943  0511  1903               	skipnz
  6944  0512  2D14               	goto	u5923
  6945  0513  07BA               	addwf	___flmul@grs+3,f
  6946  0514                     u5923:
  6947  0514                     l3969:
  6948  0514  0828               	movf	___flmul@b,w
  6949  0515  00B0               	movwf	??___flmul
  6950  0516  0830               	movf	??___flmul,w
  6951  0517  00F2               	movwf	__Umul8_16@multiplicand
  6952  0518  082D               	movf	___flmul@a+1,w
  6953  0519  120A  118A  27D6  120A  118A  	fcall	__Umul8_16
  6954  051E  0873               	movf	?__Umul8_16+1,w
  6955  051F  1283               	bcf	3,5	;RP0=0, select bank0
  6956  0520  1303               	bcf	3,6	;RP1=0, select bank0
  6957  0521  00C1               	movwf	___flmul@temp+1
  6958  0522  0872               	movf	?__Umul8_16,w
  6959  0523  00C0               	movwf	___flmul@temp
  6960  0524                     l3971:
  6961  0524  0840               	movf	___flmul@temp,w
  6962  0525  00B0               	movwf	??___flmul
  6963  0526  0841               	movf	___flmul@temp+1,w
  6964  0527  00B1               	movwf	??___flmul+1
  6965  0528  01B2               	clrf	??___flmul+2
  6966  0529  01B3               	clrf	??___flmul+3
  6967  052A  0830               	movf	??___flmul,w
  6968  052B  07B7               	addwf	___flmul@grs,f
  6969  052C  0831               	movf	??___flmul+1,w
  6970  052D  1103               	clrz
  6971  052E  1803               	skipnc
  6972  052F  3E01               	addlw	1
  6973  0530  1903               	skipnz
  6974  0531  2D33               	goto	u5931
  6975  0532  07B8               	addwf	___flmul@grs+1,f
  6976  0533                     u5931:
  6977  0533  0832               	movf	??___flmul+2,w
  6978  0534  1103               	clrz
  6979  0535  1803               	skipnc
  6980  0536  3E01               	addlw	1
  6981  0537  1903               	skipnz
  6982  0538  2D3A               	goto	u5932
  6983  0539  07B9               	addwf	___flmul@grs+2,f
  6984  053A                     u5932:
  6985  053A  0833               	movf	??___flmul+3,w
  6986  053B  1103               	clrz
  6987  053C  1803               	skipnc
  6988  053D  3E01               	addlw	1
  6989  053E  1903               	skipnz
  6990  053F  2D41               	goto	u5933
  6991  0540  07BA               	addwf	___flmul@grs+3,f
  6992  0541                     u5933:
  6993  0541                     l3973:
  6994  0541  3008               	movlw	8
  6995  0542  00B0               	movwf	??___flmul
  6996  0543                     u5945:
  6997  0543  1003               	clrc
  6998  0544  0DB7               	rlf	___flmul@grs,f
  6999  0545  0DB8               	rlf	___flmul@grs+1,f
  7000  0546  0DB9               	rlf	___flmul@grs+2,f
  7001  0547  0DBA               	rlf	___flmul@grs+3,f
  7002  0548  0BB0               	decfsz	??___flmul,f
  7003  0549  2D43               	goto	u5945
  7004  054A  0828               	movf	___flmul@b,w
  7005  054B  00B0               	movwf	??___flmul
  7006  054C  0830               	movf	??___flmul,w
  7007  054D  00F2               	movwf	__Umul8_16@multiplicand
  7008  054E  082C               	movf	___flmul@a,w
  7009  054F  120A  118A  27D6  120A  118A  	fcall	__Umul8_16
  7010  0554  0873               	movf	?__Umul8_16+1,w
  7011  0555  1283               	bcf	3,5	;RP0=0, select bank0
  7012  0556  1303               	bcf	3,6	;RP1=0, select bank0
  7013  0557  00C1               	movwf	___flmul@temp+1
  7014  0558  0872               	movf	?__Umul8_16,w
  7015  0559  00C0               	movwf	___flmul@temp
  7016  055A                     l3975:
  7017  055A  0840               	movf	___flmul@temp,w
  7018  055B  00B0               	movwf	??___flmul
  7019  055C  0841               	movf	___flmul@temp+1,w
  7020  055D  00B1               	movwf	??___flmul+1
  7021  055E  01B2               	clrf	??___flmul+2
  7022  055F  01B3               	clrf	??___flmul+3
  7023  0560  0830               	movf	??___flmul,w
  7024  0561  07B7               	addwf	___flmul@grs,f
  7025  0562  0831               	movf	??___flmul+1,w
  7026  0563  1103               	clrz
  7027  0564  1803               	skipnc
  7028  0565  3E01               	addlw	1
  7029  0566  1903               	skipnz
  7030  0567  2D69               	goto	u5951
  7031  0568  07B8               	addwf	___flmul@grs+1,f
  7032  0569                     u5951:
  7033  0569  0832               	movf	??___flmul+2,w
  7034  056A  1103               	clrz
  7035  056B  1803               	skipnc
  7036  056C  3E01               	addlw	1
  7037  056D  1903               	skipnz
  7038  056E  2D70               	goto	u5952
  7039  056F  07B9               	addwf	___flmul@grs+2,f
  7040  0570                     u5952:
  7041  0570  0833               	movf	??___flmul+3,w
  7042  0571  1103               	clrz
  7043  0572  1803               	skipnc
  7044  0573  3E01               	addlw	1
  7045  0574  1903               	skipnz
  7046  0575  2D77               	goto	u5953
  7047  0576  07BA               	addwf	___flmul@grs+3,f
  7048  0577                     u5953:
  7049  0577                     l3977:
  7050  0577  0829               	movf	___flmul@b+1,w
  7051  0578  00B0               	movwf	??___flmul
  7052  0579  0830               	movf	??___flmul,w
  7053  057A  00F2               	movwf	__Umul8_16@multiplicand
  7054  057B  082E               	movf	___flmul@a+2,w
  7055  057C  120A  118A  27D6  120A  118A  	fcall	__Umul8_16
  7056  0581  0873               	movf	?__Umul8_16+1,w
  7057  0582  1283               	bcf	3,5	;RP0=0, select bank0
  7058  0583  1303               	bcf	3,6	;RP1=0, select bank0
  7059  0584  00C1               	movwf	___flmul@temp+1
  7060  0585  0872               	movf	?__Umul8_16,w
  7061  0586  00C0               	movwf	___flmul@temp
  7062  0587  0840               	movf	___flmul@temp,w
  7063  0588  00B0               	movwf	??___flmul
  7064  0589  0841               	movf	___flmul@temp+1,w
  7065  058A  00B1               	movwf	??___flmul+1
  7066  058B  01B2               	clrf	??___flmul+2
  7067  058C  01B3               	clrf	??___flmul+3
  7068  058D  0830               	movf	??___flmul,w
  7069  058E  07BC               	addwf	___flmul@prod,f
  7070  058F  0831               	movf	??___flmul+1,w
  7071  0590  1103               	clrz
  7072  0591  1803               	skipnc
  7073  0592  3E01               	addlw	1
  7074  0593  1903               	skipnz
  7075  0594  2D96               	goto	u5961
  7076  0595  07BD               	addwf	___flmul@prod+1,f
  7077  0596                     u5961:
  7078  0596  0832               	movf	??___flmul+2,w
  7079  0597  1103               	clrz
  7080  0598  1803               	skipnc
  7081  0599  3E01               	addlw	1
  7082  059A  1903               	skipnz
  7083  059B  2D9D               	goto	u5962
  7084  059C  07BE               	addwf	___flmul@prod+2,f
  7085  059D                     u5962:
  7086  059D  0833               	movf	??___flmul+3,w
  7087  059E  1103               	clrz
  7088  059F  1803               	skipnc
  7089  05A0  3E01               	addlw	1
  7090  05A1  1903               	skipnz
  7091  05A2  2DA4               	goto	u5963
  7092  05A3  07BF               	addwf	___flmul@prod+3,f
  7093  05A4                     u5963:
  7094  05A4                     l3979:
  7095  05A4  082A               	movf	___flmul@b+2,w
  7096  05A5  00B0               	movwf	??___flmul
  7097  05A6  0830               	movf	??___flmul,w
  7098  05A7  00F2               	movwf	__Umul8_16@multiplicand
  7099  05A8  082D               	movf	___flmul@a+1,w
  7100  05A9  120A  118A  27D6  120A  118A  	fcall	__Umul8_16
  7101  05AE  0873               	movf	?__Umul8_16+1,w
  7102  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  7103  05B0  1303               	bcf	3,6	;RP1=0, select bank0
  7104  05B1  00C1               	movwf	___flmul@temp+1
  7105  05B2  0872               	movf	?__Umul8_16,w
  7106  05B3  00C0               	movwf	___flmul@temp
  7107  05B4                     l3981:
  7108  05B4  0840               	movf	___flmul@temp,w
  7109  05B5  00B0               	movwf	??___flmul
  7110  05B6  0841               	movf	___flmul@temp+1,w
  7111  05B7  00B1               	movwf	??___flmul+1
  7112  05B8  01B2               	clrf	??___flmul+2
  7113  05B9  01B3               	clrf	??___flmul+3
  7114  05BA  0830               	movf	??___flmul,w
  7115  05BB  07BC               	addwf	___flmul@prod,f
  7116  05BC  0831               	movf	??___flmul+1,w
  7117  05BD  1103               	clrz
  7118  05BE  1803               	skipnc
  7119  05BF  3E01               	addlw	1
  7120  05C0  1903               	skipnz
  7121  05C1  2DC3               	goto	u5971
  7122  05C2  07BD               	addwf	___flmul@prod+1,f
  7123  05C3                     u5971:
  7124  05C3  0832               	movf	??___flmul+2,w
  7125  05C4  1103               	clrz
  7126  05C5  1803               	skipnc
  7127  05C6  3E01               	addlw	1
  7128  05C7  1903               	skipnz
  7129  05C8  2DCA               	goto	u5972
  7130  05C9  07BE               	addwf	___flmul@prod+2,f
  7131  05CA                     u5972:
  7132  05CA  0833               	movf	??___flmul+3,w
  7133  05CB  1103               	clrz
  7134  05CC  1803               	skipnc
  7135  05CD  3E01               	addlw	1
  7136  05CE  1903               	skipnz
  7137  05CF  2DD1               	goto	u5973
  7138  05D0  07BF               	addwf	___flmul@prod+3,f
  7139  05D1                     u5973:
  7140  05D1  082A               	movf	___flmul@b+2,w
  7141  05D2  00B0               	movwf	??___flmul
  7142  05D3  0830               	movf	??___flmul,w
  7143  05D4  00F2               	movwf	__Umul8_16@multiplicand
  7144  05D5  082E               	movf	___flmul@a+2,w
  7145  05D6  120A  118A  27D6  120A  118A  	fcall	__Umul8_16
  7146  05DB  0873               	movf	?__Umul8_16+1,w
  7147  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  7148  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  7149  05DE  00C1               	movwf	___flmul@temp+1
  7150  05DF  0872               	movf	?__Umul8_16,w
  7151  05E0  00C0               	movwf	___flmul@temp
  7152  05E1                     l3983:
  7153  05E1  0840               	movf	___flmul@temp,w
  7154  05E2  00B0               	movwf	??___flmul
  7155  05E3  0841               	movf	___flmul@temp+1,w
  7156  05E4  00B1               	movwf	??___flmul+1
  7157  05E5  01B2               	clrf	??___flmul+2
  7158  05E6  01B3               	clrf	??___flmul+3
  7159  05E7  3008               	movlw	8
  7160  05E8                     u5985:
  7161  05E8  1003               	clrc
  7162  05E9  0DB0               	rlf	??___flmul,f
  7163  05EA  0DB1               	rlf	??___flmul+1,f
  7164  05EB  0DB2               	rlf	??___flmul+2,f
  7165  05EC  0DB3               	rlf	??___flmul+3,f
  7166  05ED                     u5980:
  7167  05ED  3EFF               	addlw	-1
  7168  05EE  1D03               	skipz
  7169  05EF  2DE8               	goto	u5985
  7170  05F0  0830               	movf	??___flmul,w
  7171  05F1  07BC               	addwf	___flmul@prod,f
  7172  05F2  0831               	movf	??___flmul+1,w
  7173  05F3  1103               	clrz
  7174  05F4  1803               	skipnc
  7175  05F5  3E01               	addlw	1
  7176  05F6  1903               	skipnz
  7177  05F7  2DF9               	goto	u5991
  7178  05F8  07BD               	addwf	___flmul@prod+1,f
  7179  05F9                     u5991:
  7180  05F9  0832               	movf	??___flmul+2,w
  7181  05FA  1103               	clrz
  7182  05FB  1803               	skipnc
  7183  05FC  3E01               	addlw	1
  7184  05FD  1903               	skipnz
  7185  05FE  2E00               	goto	u5992
  7186  05FF  07BE               	addwf	___flmul@prod+2,f
  7187  0600                     u5992:
  7188  0600  0833               	movf	??___flmul+3,w
  7189  0601  1103               	clrz
  7190  0602  1803               	skipnc
  7191  0603  3E01               	addlw	1
  7192  0604  1903               	skipnz
  7193  0605  2E07               	goto	u5993
  7194  0606  07BF               	addwf	___flmul@prod+3,f
  7195  0607                     u5993:
  7196  0607                     l3985:
  7197  0607  0837               	movf	___flmul@grs,w
  7198  0608  00B0               	movwf	??___flmul
  7199  0609  0838               	movf	___flmul@grs+1,w
  7200  060A  00B1               	movwf	??___flmul+1
  7201  060B  0839               	movf	___flmul@grs+2,w
  7202  060C  00B2               	movwf	??___flmul+2
  7203  060D  083A               	movf	___flmul@grs+3,w
  7204  060E  00B3               	movwf	??___flmul+3
  7205  060F  3018               	movlw	24
  7206  0610                     u6005:
  7207  0610  1003               	clrc
  7208  0611  0CB3               	rrf	??___flmul+3,f
  7209  0612  0CB2               	rrf	??___flmul+2,f
  7210  0613  0CB1               	rrf	??___flmul+1,f
  7211  0614  0CB0               	rrf	??___flmul,f
  7212  0615                     u6000:
  7213  0615  3EFF               	addlw	-1
  7214  0616  1D03               	skipz
  7215  0617  2E10               	goto	u6005
  7216  0618  0830               	movf	??___flmul,w
  7217  0619  07BC               	addwf	___flmul@prod,f
  7218  061A  0831               	movf	??___flmul+1,w
  7219  061B  1103               	clrz
  7220  061C  1803               	skipnc
  7221  061D  3E01               	addlw	1
  7222  061E  1903               	skipnz
  7223  061F  2E21               	goto	u6011
  7224  0620  07BD               	addwf	___flmul@prod+1,f
  7225  0621                     u6011:
  7226  0621  0832               	movf	??___flmul+2,w
  7227  0622  1103               	clrz
  7228  0623  1803               	skipnc
  7229  0624  3E01               	addlw	1
  7230  0625  1903               	skipnz
  7231  0626  2E28               	goto	u6012
  7232  0627  07BE               	addwf	___flmul@prod+2,f
  7233  0628                     u6012:
  7234  0628  0833               	movf	??___flmul+3,w
  7235  0629  1103               	clrz
  7236  062A  1803               	skipnc
  7237  062B  3E01               	addlw	1
  7238  062C  1903               	skipnz
  7239  062D  2E2F               	goto	u6013
  7240  062E  07BF               	addwf	___flmul@prod+3,f
  7241  062F                     u6013:
  7242  062F                     l3987:
  7243  062F  3008               	movlw	8
  7244  0630  00B0               	movwf	??___flmul
  7245  0631                     u6025:
  7246  0631  1003               	clrc
  7247  0632  0DB7               	rlf	___flmul@grs,f
  7248  0633  0DB8               	rlf	___flmul@grs+1,f
  7249  0634  0DB9               	rlf	___flmul@grs+2,f
  7250  0635  0DBA               	rlf	___flmul@grs+3,f
  7251  0636  0BB0               	decfsz	??___flmul,f
  7252  0637  2E31               	goto	u6025
  7253  0638                     l3989:
  7254  0638  083B               	movf	___flmul@bexp,w
  7255  0639  0736               	addwf	___flmul@aexp,w
  7256  063A  00B0               	movwf	??___flmul
  7257  063B  01B1               	clrf	??___flmul+1
  7258  063C  0DB1               	rlf	??___flmul+1,f
  7259  063D  0830               	movf	??___flmul,w
  7260  063E  3E82               	addlw	130
  7261  063F  00C0               	movwf	___flmul@temp
  7262  0640  0831               	movf	??___flmul+1,w
  7263  0641  1803               	skipnc
  7264  0642  3E01               	addlw	1
  7265  0643  3EFF               	addlw	255
  7266  0644  00C1               	movwf	___flmul@temp+1
  7267  0645  2E63               	goto	l4001
  7268  0646                     l3991:
  7269  0646  3001               	movlw	1
  7270  0647  00B0               	movwf	??___flmul
  7271  0648                     u6035:
  7272  0648  1003               	clrc
  7273  0649  0DBC               	rlf	___flmul@prod,f
  7274  064A  0DBD               	rlf	___flmul@prod+1,f
  7275  064B  0DBE               	rlf	___flmul@prod+2,f
  7276  064C  0DBF               	rlf	___flmul@prod+3,f
  7277  064D  0BB0               	decfsz	??___flmul,f
  7278  064E  2E48               	goto	u6035
  7279  064F                     l3993:
  7280  064F  1FBA               	btfss	___flmul@grs+3,7
  7281  0650  2E52               	goto	u6041
  7282  0651  2E53               	goto	u6040
  7283  0652                     u6041:
  7284  0652  2E54               	goto	l3997
  7285  0653                     u6040:
  7286  0653                     l3995:
  7287  0653  143C               	bsf	___flmul@prod,0
  7288  0654                     l3997:
  7289  0654  3001               	movlw	1
  7290  0655  00B0               	movwf	??___flmul
  7291  0656                     u6055:
  7292  0656  1003               	clrc
  7293  0657  0DB7               	rlf	___flmul@grs,f
  7294  0658  0DB8               	rlf	___flmul@grs+1,f
  7295  0659  0DB9               	rlf	___flmul@grs+2,f
  7296  065A  0DBA               	rlf	___flmul@grs+3,f
  7297  065B  0BB0               	decfsz	??___flmul,f
  7298  065C  2E56               	goto	u6055
  7299  065D                     l3999:
  7300  065D  30FF               	movlw	255
  7301  065E  07C0               	addwf	___flmul@temp,f
  7302  065F  1803               	skipnc
  7303  0660  0AC1               	incf	___flmul@temp+1,f
  7304  0661  30FF               	movlw	255
  7305  0662  07C1               	addwf	___flmul@temp+1,f
  7306  0663                     l4001:
  7307  0663  1FBE               	btfss	___flmul@prod+2,7
  7308  0664  2E66               	goto	u6061
  7309  0665  2E67               	goto	u6060
  7310  0666                     u6061:
  7311  0666  2E46               	goto	l3991
  7312  0667                     u6060:
  7313  0667                     l4003:
  7314  0667  01B6               	clrf	___flmul@aexp
  7315  0668                     l4005:
  7316  0668  1FBA               	btfss	___flmul@grs+3,7
  7317  0669  2E6B               	goto	u6071
  7318  066A  2E6C               	goto	u6070
  7319  066B                     u6071:
  7320  066B  2E88               	goto	l4013
  7321  066C                     u6070:
  7322  066C                     l4007:
  7323  066C  30FF               	movlw	255
  7324  066D  0537               	andwf	___flmul@grs,w
  7325  066E  00B0               	movwf	??___flmul
  7326  066F  30FF               	movlw	255
  7327  0670  0538               	andwf	___flmul@grs+1,w
  7328  0671  00B1               	movwf	??___flmul+1
  7329  0672  30FF               	movlw	255
  7330  0673  0539               	andwf	___flmul@grs+2,w
  7331  0674  00B2               	movwf	??___flmul+2
  7332  0675  307F               	movlw	127
  7333  0676  053A               	andwf	___flmul@grs+3,w
  7334  0677  00B3               	movwf	??___flmul+3
  7335  0678  0833               	movf	??___flmul+3,w
  7336  0679  0432               	iorwf	??___flmul+2,w
  7337  067A  0431               	iorwf	??___flmul+1,w
  7338  067B  0430               	iorwf	??___flmul,w
  7339  067C  1903               	skipnz
  7340  067D  2E7F               	goto	u6081
  7341  067E  2E80               	goto	u6080
  7342  067F                     u6081:
  7343  067F  2E83               	goto	l821
  7344  0680                     u6080:
  7345  0680                     l4009:
  7346  0680  01B6               	clrf	___flmul@aexp
  7347  0681  0AB6               	incf	___flmul@aexp,f
  7348  0682  2E88               	goto	l4013
  7349  0683                     l821:
  7350  0683  1C3C               	btfss	___flmul@prod,0
  7351  0684  2E86               	goto	u6091
  7352  0685  2E87               	goto	u6090
  7353  0686                     u6091:
  7354  0686  2E88               	goto	l4013
  7355  0687                     u6090:
  7356  0687  2E80               	goto	l4009
  7357  0688                     l4013:
  7358  0688  0836               	movf	___flmul@aexp,w
  7359  0689  1903               	btfsc	3,2
  7360  068A  2E8C               	goto	u6101
  7361  068B  2E8D               	goto	u6100
  7362  068C                     u6101:
  7363  068C  2EBE               	goto	l4023
  7364  068D                     u6100:
  7365  068D                     l4015:
  7366  068D  3001               	movlw	1
  7367  068E  07BC               	addwf	___flmul@prod,f
  7368  068F  3000               	movlw	0
  7369  0690  1803               	skipnc
  7370  0691  3001               	movlw	1
  7371  0692  07BD               	addwf	___flmul@prod+1,f
  7372  0693  3000               	movlw	0
  7373  0694  1803               	skipnc
  7374  0695  3001               	movlw	1
  7375  0696  07BE               	addwf	___flmul@prod+2,f
  7376  0697  3000               	movlw	0
  7377  0698  1803               	skipnc
  7378  0699  3001               	movlw	1
  7379  069A  07BF               	addwf	___flmul@prod+3,f
  7380  069B                     l4017:
  7381  069B  1C3F               	btfss	___flmul@prod+3,0
  7382  069C  2E9E               	goto	u6111
  7383  069D  2E9F               	goto	u6110
  7384  069E                     u6111:
  7385  069E  2EBE               	goto	l4023
  7386  069F                     u6110:
  7387  069F                     l4019:
  7388  069F  083C               	movf	___flmul@prod,w
  7389  06A0  00B0               	movwf	??___flmul
  7390  06A1  083D               	movf	___flmul@prod+1,w
  7391  06A2  00B1               	movwf	??___flmul+1
  7392  06A3  083E               	movf	___flmul@prod+2,w
  7393  06A4  00B2               	movwf	??___flmul+2
  7394  06A5  083F               	movf	___flmul@prod+3,w
  7395  06A6  00B3               	movwf	??___flmul+3
  7396  06A7  3001               	movlw	1
  7397  06A8  00B4               	movwf	??___flmul+4
  7398  06A9                     u6125:
  7399  06A9  0D33               	rlf	??___flmul+3,w
  7400  06AA  0CB3               	rrf	??___flmul+3,f
  7401  06AB  0CB2               	rrf	??___flmul+2,f
  7402  06AC  0CB1               	rrf	??___flmul+1,f
  7403  06AD  0CB0               	rrf	??___flmul,f
  7404  06AE                     u6120:
  7405  06AE  0BB4               	decfsz	??___flmul+4,f
  7406  06AF  2EA9               	goto	u6125
  7407  06B0  0833               	movf	??___flmul+3,w
  7408  06B1  00BF               	movwf	___flmul@prod+3
  7409  06B2  0832               	movf	??___flmul+2,w
  7410  06B3  00BE               	movwf	___flmul@prod+2
  7411  06B4  0831               	movf	??___flmul+1,w
  7412  06B5  00BD               	movwf	___flmul@prod+1
  7413  06B6  0830               	movf	??___flmul,w
  7414  06B7  00BC               	movwf	___flmul@prod
  7415  06B8                     l4021:
  7416  06B8  3001               	movlw	1
  7417  06B9  07C0               	addwf	___flmul@temp,f
  7418  06BA  1803               	skipnc
  7419  06BB  0AC1               	incf	___flmul@temp+1,f
  7420  06BC  3000               	movlw	0
  7421  06BD  07C1               	addwf	___flmul@temp+1,f
  7422  06BE                     l4023:
  7423  06BE  0841               	movf	___flmul@temp+1,w
  7424  06BF  3A80               	xorlw	128
  7425  06C0  00FF               	movwf	btemp+1
  7426  06C1  3080               	movlw	128
  7427  06C2  027F               	subwf	btemp+1,w
  7428  06C3  1D03               	skipz
  7429  06C4  2EC7               	goto	u6135
  7430  06C5  30FF               	movlw	255
  7431  06C6  0240               	subwf	___flmul@temp,w
  7432  06C7                     u6135:
  7433  06C7  1C03               	skipc
  7434  06C8  2ECA               	goto	u6131
  7435  06C9  2ECB               	goto	u6130
  7436  06CA                     u6131:
  7437  06CA  2ED6               	goto	l4027
  7438  06CB                     u6130:
  7439  06CB                     l4025:
  7440  06CB  307F               	movlw	127
  7441  06CC  1283               	bcf	3,5	;RP0=0, select bank0
  7442  06CD  1303               	bcf	3,6	;RP1=0, select bank0
  7443  06CE  00BF               	movwf	___flmul@prod+3
  7444  06CF  3080               	movlw	128
  7445  06D0  00BE               	movwf	___flmul@prod+2
  7446  06D1  3000               	movlw	0
  7447  06D2  00BD               	movwf	___flmul@prod+1
  7448  06D3  3000               	movlw	0
  7449  06D4  00BC               	movwf	___flmul@prod
  7450  06D5  2F0B               	goto	l827
  7451  06D6                     l4027:
  7452  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  7453  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  7454  06D8  0841               	movf	___flmul@temp+1,w
  7455  06D9  3A80               	xorlw	128
  7456  06DA  00FF               	movwf	btemp+1
  7457  06DB  3080               	movlw	128
  7458  06DC  027F               	subwf	btemp+1,w
  7459  06DD  1D03               	skipz
  7460  06DE  2EE1               	goto	u6145
  7461  06DF  3001               	movlw	1
  7462  06E0  0240               	subwf	___flmul@temp,w
  7463  06E1                     u6145:
  7464  06E1  1803               	skipnc
  7465  06E2  2EE4               	goto	u6141
  7466  06E3  2EE5               	goto	u6140
  7467  06E4                     u6141:
  7468  06E4  2EF1               	goto	l4033
  7469  06E5                     u6140:
  7470  06E5                     l4029:
  7471  06E5  3000               	movlw	0
  7472  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  7473  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  7474  06E8  00BF               	movwf	___flmul@prod+3
  7475  06E9  3000               	movlw	0
  7476  06EA  00BE               	movwf	___flmul@prod+2
  7477  06EB  3000               	movlw	0
  7478  06EC  00BD               	movwf	___flmul@prod+1
  7479  06ED  3000               	movlw	0
  7480  06EE  00BC               	movwf	___flmul@prod
  7481  06EF                     l4031:
  7482  06EF  01B5               	clrf	___flmul@sign
  7483  06F0  2F0B               	goto	l827
  7484  06F1                     l4033:
  7485  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  7486  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  7487  06F3  0840               	movf	___flmul@temp,w
  7488  06F4  00B0               	movwf	??___flmul
  7489  06F5  0830               	movf	??___flmul,w
  7490  06F6  00BB               	movwf	___flmul@bexp
  7491  06F7  30FF               	movlw	255
  7492  06F8  05BC               	andwf	___flmul@prod,f
  7493  06F9  30FF               	movlw	255
  7494  06FA  05BD               	andwf	___flmul@prod+1,f
  7495  06FB  307F               	movlw	127
  7496  06FC  05BE               	andwf	___flmul@prod+2,f
  7497  06FD  3000               	movlw	0
  7498  06FE  05BF               	andwf	___flmul@prod+3,f
  7499  06FF                     l4035:
  7500  06FF  1C3B               	btfss	___flmul@bexp,0
  7501  0700  2F02               	goto	u6151
  7502  0701  2F03               	goto	u6150
  7503  0702                     u6151:
  7504  0702  2F04               	goto	l4039
  7505  0703                     u6150:
  7506  0703                     l4037:
  7507  0703  17BE               	bsf	___flmul@prod+2,7
  7508  0704                     l4039:
  7509  0704  083B               	movf	___flmul@bexp,w
  7510  0705  00B0               	movwf	??___flmul
  7511  0706  1003               	clrc
  7512  0707  0C30               	rrf	??___flmul,w
  7513  0708  00B1               	movwf	??___flmul+1
  7514  0709  0831               	movf	??___flmul+1,w
  7515  070A  00BF               	movwf	___flmul@prod+3
  7516  070B                     l827:
  7517  070B  0835               	movf	___flmul@sign,w
  7518  070C  00B0               	movwf	??___flmul
  7519  070D  0830               	movf	??___flmul,w
  7520  070E  04BF               	iorwf	___flmul@prod+3,f
  7521  070F                     l4041:
  7522  070F  083F               	movf	___flmul@prod+3,w
  7523  0710  00AB               	movwf	?___flmul+3
  7524  0711  083E               	movf	___flmul@prod+2,w
  7525  0712  00AA               	movwf	?___flmul+2
  7526  0713  083D               	movf	___flmul@prod+1,w
  7527  0714  00A9               	movwf	?___flmul+1
  7528  0715  083C               	movf	___flmul@prod,w
  7529  0716  00A8               	movwf	?___flmul
  7530  0717                     l815:
  7531  0717  0008               	return
  7532  0718                     __end_of___flmul:
  7533                           
  7534                           	psect	text10
  7535  07D6                     __ptext10:	
  7536 ;; *************** function __Umul8_16 *****************
  7537 ;; Defined at:
  7538 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  7539 ;; Parameters:    Size  Location     Type
  7540 ;;  multiplier      1    wreg     unsigned char 
  7541 ;;  multiplicand    1    2[COMMON] unsigned char 
  7542 ;; Auto vars:     Size  Location     Type
  7543 ;;  multiplier      1    4[BANK0 ] unsigned char 
  7544 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  7545 ;;  product         2    0[BANK0 ] unsigned int 
  7546 ;; Return value:  Size  Location     Type
  7547 ;;                  2    2[COMMON] unsigned int 
  7548 ;; Registers used:
  7549 ;;		wreg, status,2, status,0
  7550 ;; Tracked objects:
  7551 ;;		On entry : 0/0
  7552 ;;		On exit  : 0/0
  7553 ;;		Unchanged: 0/0
  7554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7555 ;;      Params:         2       0       0       0       0
  7556 ;;      Locals:         0       5       0       0       0
  7557 ;;      Temps:          2       0       0       0       0
  7558 ;;      Totals:         4       5       0       0       0
  7559 ;;Total ram usage:        9 bytes
  7560 ;; Hardware stack levels used:    1
  7561 ;; Hardware stack levels required when called:    1
  7562 ;; This function calls:
  7563 ;;		Nothing
  7564 ;; This function is called by:
  7565 ;;		___flmul
  7566 ;; This function uses a non-reentrant model
  7567 ;;
  7568                           
  7569                           
  7570                           ;psect for function __Umul8_16
  7571  07D6                     __Umul8_16:
  7572                           
  7573                           ;incstack = 0
  7574                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7575                           ;__Umul8_16@multiplier stored from wreg
  7576  07D6  1283               	bcf	3,5	;RP0=0, select bank0
  7577  07D7  1303               	bcf	3,6	;RP1=0, select bank0
  7578  07D8  00A4               	movwf	__Umul8_16@multiplier
  7579  07D9                     l3865:
  7580  07D9  01A0               	clrf	__Umul8_16@product
  7581  07DA  01A1               	clrf	__Umul8_16@product+1
  7582  07DB                     l3867:
  7583  07DB  0872               	movf	__Umul8_16@multiplicand,w
  7584  07DC  00F4               	movwf	??__Umul8_16
  7585  07DD  01F5               	clrf	??__Umul8_16+1
  7586  07DE  0874               	movf	??__Umul8_16,w
  7587  07DF  00A2               	movwf	__Umul8_16@word_mpld
  7588  07E0  0875               	movf	??__Umul8_16+1,w
  7589  07E1  00A3               	movwf	__Umul8_16@word_mpld+1
  7590  07E2                     l3869:
  7591  07E2  1C24               	btfss	__Umul8_16@multiplier,0
  7592  07E3  2FE5               	goto	u5691
  7593  07E4  2FE6               	goto	u5690
  7594  07E5                     u5691:
  7595  07E5  2FEC               	goto	l834
  7596  07E6                     u5690:
  7597  07E6                     l3871:
  7598  07E6  0822               	movf	__Umul8_16@word_mpld,w
  7599  07E7  07A0               	addwf	__Umul8_16@product,f
  7600  07E8  1803               	skipnc
  7601  07E9  0AA1               	incf	__Umul8_16@product+1,f
  7602  07EA  0823               	movf	__Umul8_16@word_mpld+1,w
  7603  07EB  07A1               	addwf	__Umul8_16@product+1,f
  7604  07EC                     l834:
  7605  07EC  3001               	movlw	1
  7606  07ED                     u5705:
  7607  07ED  1003               	clrc
  7608  07EE  0DA2               	rlf	__Umul8_16@word_mpld,f
  7609  07EF  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  7610  07F0  3EFF               	addlw	-1
  7611  07F1  1D03               	skipz
  7612  07F2  2FED               	goto	u5705
  7613  07F3  1003               	clrc
  7614  07F4  0CA4               	rrf	__Umul8_16@multiplier,f
  7615  07F5                     l3873:
  7616  07F5  0824               	movf	__Umul8_16@multiplier,w
  7617  07F6  1D03               	btfss	3,2
  7618  07F7  2FF9               	goto	u5711
  7619  07F8  2FFA               	goto	u5710
  7620  07F9                     u5711:
  7621  07F9  2FE2               	goto	l3869
  7622  07FA                     u5710:
  7623  07FA                     l3875:
  7624  07FA  0821               	movf	__Umul8_16@product+1,w
  7625  07FB  00F3               	movwf	?__Umul8_16+1
  7626  07FC  0820               	movf	__Umul8_16@product,w
  7627  07FD  00F2               	movwf	?__Umul8_16
  7628  07FE                     l836:
  7629  07FE  0008               	return
  7630  07FF                     __end_of__Umul8_16:
  7631                           
  7632                           	psect	text11
  7633  1003                     __ptext11:	
  7634 ;; *************** function __tdiv_to_l_ *****************
  7635 ;; Defined at:
  7636 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  7637 ;; Parameters:    Size  Location     Type
  7638 ;;  f1              4    2[COMMON] float 
  7639 ;;  f2              4    6[COMMON] float 
  7640 ;; Auto vars:     Size  Location     Type
  7641 ;;  quot            4    4[BANK0 ] unsigned long 
  7642 ;;  exp1            1    9[BANK0 ] unsigned char 
  7643 ;;  cntr            1    8[BANK0 ] unsigned char 
  7644 ;; Return value:  Size  Location     Type
  7645 ;;                  4    2[COMMON] unsigned long 
  7646 ;; Registers used:
  7647 ;;		wreg, status,2, status,0
  7648 ;; Tracked objects:
  7649 ;;		On entry : 0/0
  7650 ;;		On exit  : 0/0
  7651 ;;		Unchanged: 0/0
  7652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7653 ;;      Params:         8       0       0       0       0
  7654 ;;      Locals:         0       6       0       0       0
  7655 ;;      Temps:          0       4       0       0       0
  7656 ;;      Totals:         8      10       0       0       0
  7657 ;;Total ram usage:       18 bytes
  7658 ;; Hardware stack levels used:    1
  7659 ;; Hardware stack levels required when called:    1
  7660 ;; This function calls:
  7661 ;;		Nothing
  7662 ;; This function is called by:
  7663 ;;		_sprintf
  7664 ;; This function uses a non-reentrant model
  7665 ;;
  7666                           
  7667                           
  7668                           ;psect for function __tdiv_to_l_
  7669  1003                     __tdiv_to_l_:
  7670  1003                     l3059:	
  7671                           ;incstack = 0
  7672                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  7673                           
  7674  1003  0872               	movf	__tdiv_to_l_@f1,w
  7675  1004  1283               	bcf	3,5	;RP0=0, select bank0
  7676  1005  1303               	bcf	3,6	;RP1=0, select bank0
  7677  1006  00A0               	movwf	??__tdiv_to_l_
  7678  1007  0873               	movf	__tdiv_to_l_@f1+1,w
  7679  1008  00A1               	movwf	??__tdiv_to_l_+1
  7680  1009  0874               	movf	__tdiv_to_l_@f1+2,w
  7681  100A  00A2               	movwf	??__tdiv_to_l_+2
  7682  100B  1003               	clrc
  7683  100C  0D21               	rlf	??__tdiv_to_l_+1,w
  7684  100D  0D22               	rlf	??__tdiv_to_l_+2,w
  7685  100E  00A3               	movwf	??__tdiv_to_l_+3
  7686  100F  0823               	movf	??__tdiv_to_l_+3,w
  7687  1010  00A9               	movwf	__tdiv_to_l_@exp1
  7688  1011  0829               	movf	__tdiv_to_l_@exp1,w
  7689  1012  1D03               	btfss	3,2
  7690  1013  2815               	goto	u4331
  7691  1014  2816               	goto	u4330
  7692  1015                     u4331:
  7693  1015  281F               	goto	l3065
  7694  1016                     u4330:
  7695  1016                     l3061:
  7696  1016  3000               	movlw	0
  7697  1017  00F5               	movwf	?__tdiv_to_l_+3
  7698  1018  3000               	movlw	0
  7699  1019  00F4               	movwf	?__tdiv_to_l_+2
  7700  101A  3000               	movlw	0
  7701  101B  00F3               	movwf	?__tdiv_to_l_+1
  7702  101C  3000               	movlw	0
  7703  101D  00F2               	movwf	?__tdiv_to_l_
  7704  101E  28BF               	goto	l609
  7705  101F                     l3065:
  7706  101F  0876               	movf	__tdiv_to_l_@f2,w
  7707  1020  00A0               	movwf	??__tdiv_to_l_
  7708  1021  0877               	movf	__tdiv_to_l_@f2+1,w
  7709  1022  00A1               	movwf	??__tdiv_to_l_+1
  7710  1023  0878               	movf	__tdiv_to_l_@f2+2,w
  7711  1024  00A2               	movwf	??__tdiv_to_l_+2
  7712  1025  1003               	clrc
  7713  1026  0D21               	rlf	??__tdiv_to_l_+1,w
  7714  1027  0D22               	rlf	??__tdiv_to_l_+2,w
  7715  1028  00A3               	movwf	??__tdiv_to_l_+3
  7716  1029  0823               	movf	??__tdiv_to_l_+3,w
  7717  102A  00A8               	movwf	__tdiv_to_l_@cntr
  7718  102B  0828               	movf	__tdiv_to_l_@cntr,w
  7719  102C  1D03               	btfss	3,2
  7720  102D  282F               	goto	u4341
  7721  102E  2830               	goto	u4340
  7722  102F                     u4341:
  7723  102F  2831               	goto	l610
  7724  1030                     u4340:
  7725  1030  2816               	goto	l3061
  7726  1031                     l610:
  7727  1031  17F3               	bsf	__tdiv_to_l_@f1+1,7
  7728  1032                     l3071:
  7729  1032  30FF               	movlw	255
  7730  1033  05F2               	andwf	__tdiv_to_l_@f1,f
  7731  1034  30FF               	movlw	255
  7732  1035  05F3               	andwf	__tdiv_to_l_@f1+1,f
  7733  1036  3000               	movlw	0
  7734  1037  05F4               	andwf	__tdiv_to_l_@f1+2,f
  7735  1038                     l3073:
  7736  1038  17F7               	bsf	__tdiv_to_l_@f2+1,7
  7737  1039  30FF               	movlw	255
  7738  103A  05F6               	andwf	__tdiv_to_l_@f2,f
  7739  103B  30FF               	movlw	255
  7740  103C  05F7               	andwf	__tdiv_to_l_@f2+1,f
  7741  103D  3000               	movlw	0
  7742  103E  05F8               	andwf	__tdiv_to_l_@f2+2,f
  7743  103F  3000               	movlw	0
  7744  1040  00A7               	movwf	__tdiv_to_l_@quot+3
  7745  1041  3000               	movlw	0
  7746  1042  00A6               	movwf	__tdiv_to_l_@quot+2
  7747  1043  3000               	movlw	0
  7748  1044  00A5               	movwf	__tdiv_to_l_@quot+1
  7749  1045  3000               	movlw	0
  7750  1046  00A4               	movwf	__tdiv_to_l_@quot
  7751  1047                     l3075:
  7752  1047  307F               	movlw	127
  7753  1048  02A9               	subwf	__tdiv_to_l_@exp1,f
  7754  1049                     l3077:
  7755  1049  3098               	movlw	152
  7756  104A  0728               	addwf	__tdiv_to_l_@cntr,w
  7757  104B  00A0               	movwf	??__tdiv_to_l_
  7758  104C  0820               	movf	??__tdiv_to_l_,w
  7759  104D  02A9               	subwf	__tdiv_to_l_@exp1,f
  7760  104E  3018               	movlw	24
  7761  104F  00A0               	movwf	??__tdiv_to_l_
  7762  1050  0820               	movf	??__tdiv_to_l_,w
  7763  1051  00A8               	movwf	__tdiv_to_l_@cntr
  7764  1052                     l3079:
  7765  1052  3001               	movlw	1
  7766  1053  00A0               	movwf	??__tdiv_to_l_
  7767  1054                     u4355:
  7768  1054  1003               	clrc
  7769  1055  0DA4               	rlf	__tdiv_to_l_@quot,f
  7770  1056  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  7771  1057  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  7772  1058  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  7773  1059  0BA0               	decfsz	??__tdiv_to_l_,f
  7774  105A  2854               	goto	u4355
  7775  105B                     l3081:
  7776  105B  0878               	movf	__tdiv_to_l_@f2+2,w
  7777  105C  0274               	subwf	__tdiv_to_l_@f1+2,w
  7778  105D  1D03               	skipz
  7779  105E  2865               	goto	u4365
  7780  105F  0877               	movf	__tdiv_to_l_@f2+1,w
  7781  1060  0273               	subwf	__tdiv_to_l_@f1+1,w
  7782  1061  1D03               	skipz
  7783  1062  2865               	goto	u4365
  7784  1063  0876               	movf	__tdiv_to_l_@f2,w
  7785  1064  0272               	subwf	__tdiv_to_l_@f1,w
  7786  1065                     u4365:
  7787  1065  1C03               	skipc
  7788  1066  2868               	goto	u4361
  7789  1067  2869               	goto	u4360
  7790  1068                     u4361:
  7791  1068  2874               	goto	l3087
  7792  1069                     u4360:
  7793  1069                     l3083:
  7794  1069  0876               	movf	__tdiv_to_l_@f2,w
  7795  106A  02F2               	subwf	__tdiv_to_l_@f1,f
  7796  106B  0877               	movf	__tdiv_to_l_@f2+1,w
  7797  106C  1C03               	skipc
  7798  106D  0F77               	incfsz	__tdiv_to_l_@f2+1,w
  7799  106E  02F3               	subwf	__tdiv_to_l_@f1+1,f
  7800  106F  0878               	movf	__tdiv_to_l_@f2+2,w
  7801  1070  1C03               	skipc
  7802  1071  0A78               	incf	__tdiv_to_l_@f2+2,w
  7803  1072  02F4               	subwf	__tdiv_to_l_@f1+2,f
  7804  1073                     l3085:
  7805  1073  1424               	bsf	__tdiv_to_l_@quot,0
  7806  1074                     l3087:
  7807  1074  3001               	movlw	1
  7808  1075                     u4375:
  7809  1075  1003               	clrc
  7810  1076  0DF2               	rlf	__tdiv_to_l_@f1,f
  7811  1077  0DF3               	rlf	__tdiv_to_l_@f1+1,f
  7812  1078  0DF4               	rlf	__tdiv_to_l_@f1+2,f
  7813  1079  3EFF               	addlw	-1
  7814  107A  1D03               	skipz
  7815  107B  2875               	goto	u4375
  7816  107C                     l3089:
  7817  107C  3001               	movlw	1
  7818  107D  02A8               	subwf	__tdiv_to_l_@cntr,f
  7819  107E  1D03               	btfss	3,2
  7820  107F  2881               	goto	u4381
  7821  1080  2882               	goto	u4380
  7822  1081                     u4381:
  7823  1081  2852               	goto	l3079
  7824  1082                     u4380:
  7825  1082                     l613:
  7826  1082  1FA9               	btfss	__tdiv_to_l_@exp1,7
  7827  1083  2885               	goto	u4391
  7828  1084  2886               	goto	u4390
  7829  1085                     u4391:
  7830  1085  28A0               	goto	l3099
  7831  1086                     u4390:
  7832  1086                     l3091:
  7833  1086  0829               	movf	__tdiv_to_l_@exp1,w
  7834  1087  3A80               	xorlw	128
  7835  1088  3E97               	addlw	151
  7836  1089  1803               	skipnc
  7837  108A  288C               	goto	u4401
  7838  108B  288D               	goto	u4400
  7839  108C                     u4401:
  7840  108C  288E               	goto	l3097
  7841  108D                     u4400:
  7842  108D  2816               	goto	l3061
  7843  108E                     l3097:
  7844  108E  3001               	movlw	1
  7845  108F                     u4415:
  7846  108F  1003               	clrc
  7847  1090  0CA7               	rrf	__tdiv_to_l_@quot+3,f
  7848  1091  0CA6               	rrf	__tdiv_to_l_@quot+2,f
  7849  1092  0CA5               	rrf	__tdiv_to_l_@quot+1,f
  7850  1093  0CA4               	rrf	__tdiv_to_l_@quot,f
  7851  1094  3EFF               	addlw	-1
  7852  1095  1D03               	skipz
  7853  1096  288F               	goto	u4415
  7854  1097  3001               	movlw	1
  7855  1098  00A0               	movwf	??__tdiv_to_l_
  7856  1099  0820               	movf	??__tdiv_to_l_,w
  7857  109A  07A9               	addwf	__tdiv_to_l_@exp1,f
  7858  109B  1D03               	btfss	3,2
  7859  109C  289E               	goto	u4421
  7860  109D  289F               	goto	u4420
  7861  109E                     u4421:
  7862  109E  288E               	goto	l3097
  7863  109F                     u4420:
  7864  109F  28B7               	goto	l3107
  7865  10A0                     l3099:
  7866  10A0  3018               	movlw	24
  7867  10A1  0229               	subwf	__tdiv_to_l_@exp1,w
  7868  10A2  1C03               	skipc
  7869  10A3  28A5               	goto	u4431
  7870  10A4  28A6               	goto	u4430
  7871  10A5                     u4431:
  7872  10A5  28B2               	goto	l620
  7873  10A6                     u4430:
  7874  10A6  2816               	goto	l3061
  7875  10A7                     l3105:
  7876  10A7  3001               	movlw	1
  7877  10A8  00A0               	movwf	??__tdiv_to_l_
  7878  10A9                     u4445:
  7879  10A9  1003               	clrc
  7880  10AA  0DA4               	rlf	__tdiv_to_l_@quot,f
  7881  10AB  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  7882  10AC  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  7883  10AD  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  7884  10AE  0BA0               	decfsz	??__tdiv_to_l_,f
  7885  10AF  28A9               	goto	u4445
  7886  10B0  3001               	movlw	1
  7887  10B1  02A9               	subwf	__tdiv_to_l_@exp1,f
  7888  10B2                     l620:
  7889  10B2  0829               	movf	__tdiv_to_l_@exp1,w
  7890  10B3  1D03               	btfss	3,2
  7891  10B4  28B6               	goto	u4451
  7892  10B5  28B7               	goto	u4450
  7893  10B6                     u4451:
  7894  10B6  28A7               	goto	l3105
  7895  10B7                     u4450:
  7896  10B7                     l3107:
  7897  10B7  0827               	movf	__tdiv_to_l_@quot+3,w
  7898  10B8  00F5               	movwf	?__tdiv_to_l_+3
  7899  10B9  0826               	movf	__tdiv_to_l_@quot+2,w
  7900  10BA  00F4               	movwf	?__tdiv_to_l_+2
  7901  10BB  0825               	movf	__tdiv_to_l_@quot+1,w
  7902  10BC  00F3               	movwf	?__tdiv_to_l_+1
  7903  10BD  0824               	movf	__tdiv_to_l_@quot,w
  7904  10BE  00F2               	movwf	?__tdiv_to_l_
  7905  10BF                     l609:
  7906  10BF  0008               	return
  7907  10C0                     __end_of__tdiv_to_l_:
  7908                           
  7909                           	psect	text12
  7910  0718                     __ptext12:	
  7911 ;; *************** function __div_to_l_ *****************
  7912 ;; Defined at:
  7913 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  7914 ;; Parameters:    Size  Location     Type
  7915 ;;  f1              4    2[COMMON] unsigned long 
  7916 ;;  f2              4    6[COMMON] unsigned long 
  7917 ;; Auto vars:     Size  Location     Type
  7918 ;;  quot            4    1[BANK0 ] unsigned long 
  7919 ;;  exp1            1    6[BANK0 ] unsigned char 
  7920 ;;  cntr            1    5[BANK0 ] unsigned char 
  7921 ;; Return value:  Size  Location     Type
  7922 ;;                  4    2[COMMON] unsigned long 
  7923 ;; Registers used:
  7924 ;;		wreg, status,2, status,0
  7925 ;; Tracked objects:
  7926 ;;		On entry : 0/0
  7927 ;;		On exit  : 0/0
  7928 ;;		Unchanged: 0/0
  7929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7930 ;;      Params:         8       0       0       0       0
  7931 ;;      Locals:         0       6       0       0       0
  7932 ;;      Temps:          0       1       0       0       0
  7933 ;;      Totals:         8       7       0       0       0
  7934 ;;Total ram usage:       15 bytes
  7935 ;; Hardware stack levels used:    1
  7936 ;; Hardware stack levels required when called:    1
  7937 ;; This function calls:
  7938 ;;		Nothing
  7939 ;; This function is called by:
  7940 ;;		_sprintf
  7941 ;; This function uses a non-reentrant model
  7942 ;;
  7943                           
  7944                           
  7945                           ;psect for function __div_to_l_
  7946  0718                     __div_to_l_:
  7947  0718                     l4103:	
  7948                           ;incstack = 0
  7949                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  7950                           
  7951  0718  1003               	clrc
  7952  0719  0D74               	rlf	__div_to_l_@f1+2,w
  7953  071A  0D75               	rlf	__div_to_l_@f1+3,w
  7954  071B  1283               	bcf	3,5	;RP0=0, select bank0
  7955  071C  1303               	bcf	3,6	;RP1=0, select bank0
  7956  071D  00A0               	movwf	??__div_to_l_
  7957  071E  0820               	movf	??__div_to_l_,w
  7958  071F  00A6               	movwf	__div_to_l_@exp1
  7959  0720  0826               	movf	__div_to_l_@exp1,w
  7960  0721  1D03               	btfss	3,2
  7961  0722  2F24               	goto	u6411
  7962  0723  2F25               	goto	u6410
  7963  0724                     u6411:
  7964  0724  2F2E               	goto	l4109
  7965  0725                     u6410:
  7966  0725                     l4105:
  7967  0725  3000               	movlw	0
  7968  0726  00F5               	movwf	?__div_to_l_+3
  7969  0727  3000               	movlw	0
  7970  0728  00F4               	movwf	?__div_to_l_+2
  7971  0729  3000               	movlw	0
  7972  072A  00F3               	movwf	?__div_to_l_+1
  7973  072B  3000               	movlw	0
  7974  072C  00F2               	movwf	?__div_to_l_
  7975  072D  2FD5               	goto	l562
  7976  072E                     l4109:
  7977  072E  1003               	clrc
  7978  072F  0D78               	rlf	__div_to_l_@f2+2,w
  7979  0730  0D79               	rlf	__div_to_l_@f2+3,w
  7980  0731  00A0               	movwf	??__div_to_l_
  7981  0732  0820               	movf	??__div_to_l_,w
  7982  0733  00A5               	movwf	__div_to_l_@cntr
  7983  0734  0825               	movf	__div_to_l_@cntr,w
  7984  0735  1D03               	btfss	3,2
  7985  0736  2F38               	goto	u6421
  7986  0737  2F39               	goto	u6420
  7987  0738                     u6421:
  7988  0738  2F3A               	goto	l563
  7989  0739                     u6420:
  7990  0739  2F25               	goto	l4105
  7991  073A                     l563:
  7992  073A  17F4               	bsf	__div_to_l_@f1+2,7
  7993  073B                     l4115:
  7994  073B  30FF               	movlw	255
  7995  073C  05F2               	andwf	__div_to_l_@f1,f
  7996  073D  30FF               	movlw	255
  7997  073E  05F3               	andwf	__div_to_l_@f1+1,f
  7998  073F  30FF               	movlw	255
  7999  0740  05F4               	andwf	__div_to_l_@f1+2,f
  8000  0741  3000               	movlw	0
  8001  0742  05F5               	andwf	__div_to_l_@f1+3,f
  8002  0743                     l4117:
  8003  0743  17F8               	bsf	__div_to_l_@f2+2,7
  8004  0744  30FF               	movlw	255
  8005  0745  05F6               	andwf	__div_to_l_@f2,f
  8006  0746  30FF               	movlw	255
  8007  0747  05F7               	andwf	__div_to_l_@f2+1,f
  8008  0748  30FF               	movlw	255
  8009  0749  05F8               	andwf	__div_to_l_@f2+2,f
  8010  074A  3000               	movlw	0
  8011  074B  05F9               	andwf	__div_to_l_@f2+3,f
  8012  074C  3000               	movlw	0
  8013  074D  00A4               	movwf	__div_to_l_@quot+3
  8014  074E  3000               	movlw	0
  8015  074F  00A3               	movwf	__div_to_l_@quot+2
  8016  0750  3000               	movlw	0
  8017  0751  00A2               	movwf	__div_to_l_@quot+1
  8018  0752  3000               	movlw	0
  8019  0753  00A1               	movwf	__div_to_l_@quot
  8020  0754                     l4119:
  8021  0754  307F               	movlw	127
  8022  0755  02A6               	subwf	__div_to_l_@exp1,f
  8023  0756                     l4121:
  8024  0756  30A0               	movlw	160
  8025  0757  0725               	addwf	__div_to_l_@cntr,w
  8026  0758  00A0               	movwf	??__div_to_l_
  8027  0759  0820               	movf	??__div_to_l_,w
  8028  075A  02A6               	subwf	__div_to_l_@exp1,f
  8029  075B  3020               	movlw	32
  8030  075C  00A0               	movwf	??__div_to_l_
  8031  075D  0820               	movf	??__div_to_l_,w
  8032  075E  00A5               	movwf	__div_to_l_@cntr
  8033  075F                     l4123:
  8034  075F  3001               	movlw	1
  8035  0760  00A0               	movwf	??__div_to_l_
  8036  0761                     u6435:
  8037  0761  1003               	clrc
  8038  0762  0DA1               	rlf	__div_to_l_@quot,f
  8039  0763  0DA2               	rlf	__div_to_l_@quot+1,f
  8040  0764  0DA3               	rlf	__div_to_l_@quot+2,f
  8041  0765  0DA4               	rlf	__div_to_l_@quot+3,f
  8042  0766  0BA0               	decfsz	??__div_to_l_,f
  8043  0767  2F61               	goto	u6435
  8044  0768                     l4125:
  8045  0768  0879               	movf	__div_to_l_@f2+3,w
  8046  0769  0275               	subwf	__div_to_l_@f1+3,w
  8047  076A  1D03               	skipz
  8048  076B  2F76               	goto	u6445
  8049  076C  0878               	movf	__div_to_l_@f2+2,w
  8050  076D  0274               	subwf	__div_to_l_@f1+2,w
  8051  076E  1D03               	skipz
  8052  076F  2F76               	goto	u6445
  8053  0770  0877               	movf	__div_to_l_@f2+1,w
  8054  0771  0273               	subwf	__div_to_l_@f1+1,w
  8055  0772  1D03               	skipz
  8056  0773  2F76               	goto	u6445
  8057  0774  0876               	movf	__div_to_l_@f2,w
  8058  0775  0272               	subwf	__div_to_l_@f1,w
  8059  0776                     u6445:
  8060  0776  1C03               	skipc
  8061  0777  2F79               	goto	u6441
  8062  0778  2F7A               	goto	u6440
  8063  0779                     u6441:
  8064  0779  2F89               	goto	l4131
  8065  077A                     u6440:
  8066  077A                     l4127:
  8067  077A  0876               	movf	__div_to_l_@f2,w
  8068  077B  02F2               	subwf	__div_to_l_@f1,f
  8069  077C  0877               	movf	__div_to_l_@f2+1,w
  8070  077D  1C03               	skipc
  8071  077E  0F77               	incfsz	__div_to_l_@f2+1,w
  8072  077F  02F3               	subwf	__div_to_l_@f1+1,f
  8073  0780  0878               	movf	__div_to_l_@f2+2,w
  8074  0781  1C03               	skipc
  8075  0782  0F78               	incfsz	__div_to_l_@f2+2,w
  8076  0783  02F4               	subwf	__div_to_l_@f1+2,f
  8077  0784  0879               	movf	__div_to_l_@f2+3,w
  8078  0785  1C03               	skipc
  8079  0786  0F79               	incfsz	__div_to_l_@f2+3,w
  8080  0787  02F5               	subwf	__div_to_l_@f1+3,f
  8081  0788                     l4129:
  8082  0788  1421               	bsf	__div_to_l_@quot,0
  8083  0789                     l4131:
  8084  0789  3001               	movlw	1
  8085  078A  00A0               	movwf	??__div_to_l_
  8086  078B                     u6455:
  8087  078B  1003               	clrc
  8088  078C  0DF2               	rlf	__div_to_l_@f1,f
  8089  078D  0DF3               	rlf	__div_to_l_@f1+1,f
  8090  078E  0DF4               	rlf	__div_to_l_@f1+2,f
  8091  078F  0DF5               	rlf	__div_to_l_@f1+3,f
  8092  0790  0BA0               	decfsz	??__div_to_l_,f
  8093  0791  2F8B               	goto	u6455
  8094  0792                     l4133:
  8095  0792  3001               	movlw	1
  8096  0793  02A5               	subwf	__div_to_l_@cntr,f
  8097  0794  1D03               	btfss	3,2
  8098  0795  2F97               	goto	u6461
  8099  0796  2F98               	goto	u6460
  8100  0797                     u6461:
  8101  0797  2F5F               	goto	l4123
  8102  0798                     u6460:
  8103  0798                     l566:
  8104  0798  1FA6               	btfss	__div_to_l_@exp1,7
  8105  0799  2F9B               	goto	u6471
  8106  079A  2F9C               	goto	u6470
  8107  079B                     u6471:
  8108  079B  2FB6               	goto	l4143
  8109  079C                     u6470:
  8110  079C                     l4135:
  8111  079C  0826               	movf	__div_to_l_@exp1,w
  8112  079D  3A80               	xorlw	128
  8113  079E  3E9F               	addlw	159
  8114  079F  1803               	skipnc
  8115  07A0  2FA2               	goto	u6481
  8116  07A1  2FA3               	goto	u6480
  8117  07A2                     u6481:
  8118  07A2  2FA4               	goto	l4141
  8119  07A3                     u6480:
  8120  07A3  2F25               	goto	l4105
  8121  07A4                     l4141:
  8122  07A4  3001               	movlw	1
  8123  07A5                     u6495:
  8124  07A5  1003               	clrc
  8125  07A6  0CA4               	rrf	__div_to_l_@quot+3,f
  8126  07A7  0CA3               	rrf	__div_to_l_@quot+2,f
  8127  07A8  0CA2               	rrf	__div_to_l_@quot+1,f
  8128  07A9  0CA1               	rrf	__div_to_l_@quot,f
  8129  07AA  3EFF               	addlw	-1
  8130  07AB  1D03               	skipz
  8131  07AC  2FA5               	goto	u6495
  8132  07AD  3001               	movlw	1
  8133  07AE  00A0               	movwf	??__div_to_l_
  8134  07AF  0820               	movf	??__div_to_l_,w
  8135  07B0  07A6               	addwf	__div_to_l_@exp1,f
  8136  07B1  1D03               	btfss	3,2
  8137  07B2  2FB4               	goto	u6501
  8138  07B3  2FB5               	goto	u6500
  8139  07B4                     u6501:
  8140  07B4  2FA4               	goto	l4141
  8141  07B5                     u6500:
  8142  07B5  2FCD               	goto	l4151
  8143  07B6                     l4143:
  8144  07B6  3020               	movlw	32
  8145  07B7  0226               	subwf	__div_to_l_@exp1,w
  8146  07B8  1C03               	skipc
  8147  07B9  2FBB               	goto	u6511
  8148  07BA  2FBC               	goto	u6510
  8149  07BB                     u6511:
  8150  07BB  2FC8               	goto	l573
  8151  07BC                     u6510:
  8152  07BC  2F25               	goto	l4105
  8153  07BD                     l4149:
  8154  07BD  3001               	movlw	1
  8155  07BE  00A0               	movwf	??__div_to_l_
  8156  07BF                     u6525:
  8157  07BF  1003               	clrc
  8158  07C0  0DA1               	rlf	__div_to_l_@quot,f
  8159  07C1  0DA2               	rlf	__div_to_l_@quot+1,f
  8160  07C2  0DA3               	rlf	__div_to_l_@quot+2,f
  8161  07C3  0DA4               	rlf	__div_to_l_@quot+3,f
  8162  07C4  0BA0               	decfsz	??__div_to_l_,f
  8163  07C5  2FBF               	goto	u6525
  8164  07C6  3001               	movlw	1
  8165  07C7  02A6               	subwf	__div_to_l_@exp1,f
  8166  07C8                     l573:
  8167  07C8  0826               	movf	__div_to_l_@exp1,w
  8168  07C9  1D03               	btfss	3,2
  8169  07CA  2FCC               	goto	u6531
  8170  07CB  2FCD               	goto	u6530
  8171  07CC                     u6531:
  8172  07CC  2FBD               	goto	l4149
  8173  07CD                     u6530:
  8174  07CD                     l4151:
  8175  07CD  0824               	movf	__div_to_l_@quot+3,w
  8176  07CE  00F5               	movwf	?__div_to_l_+3
  8177  07CF  0823               	movf	__div_to_l_@quot+2,w
  8178  07D0  00F4               	movwf	?__div_to_l_+2
  8179  07D1  0822               	movf	__div_to_l_@quot+1,w
  8180  07D2  00F3               	movwf	?__div_to_l_+1
  8181  07D3  0821               	movf	__div_to_l_@quot,w
  8182  07D4  00F2               	movwf	?__div_to_l_
  8183  07D5                     l562:
  8184  07D5  0008               	return
  8185  07D6                     __end_of__div_to_l_:
  8186                           
  8187                           	psect	text13
  8188  1F44                     __ptext13:	
  8189 ;; *************** function ___xxtofl *****************
  8190 ;; Defined at:
  8191 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  8192 ;; Parameters:    Size  Location     Type
  8193 ;;  sign            1    wreg     unsigned char 
  8194 ;;  val             4    2[COMMON] long 
  8195 ;; Auto vars:     Size  Location     Type
  8196 ;;  sign            1    0[BANK0 ] unsigned char 
  8197 ;;  arg             4    2[BANK0 ] unsigned long 
  8198 ;;  exp             1    1[BANK0 ] unsigned char 
  8199 ;; Return value:  Size  Location     Type
  8200 ;;                  4    2[COMMON] unsigned char 
  8201 ;; Registers used:
  8202 ;;		wreg, status,2, status,0
  8203 ;; Tracked objects:
  8204 ;;		On entry : 0/0
  8205 ;;		On exit  : 0/0
  8206 ;;		Unchanged: 0/0
  8207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8208 ;;      Params:         4       0       0       0       0
  8209 ;;      Locals:         0       6       0       0       0
  8210 ;;      Temps:          4       0       0       0       0
  8211 ;;      Totals:         8       6       0       0       0
  8212 ;;Total ram usage:       14 bytes
  8213 ;; Hardware stack levels used:    1
  8214 ;; Hardware stack levels required when called:    1
  8215 ;; This function calls:
  8216 ;;		Nothing
  8217 ;; This function is called by:
  8218 ;;		_main
  8219 ;;		_sprintf
  8220 ;; This function uses a non-reentrant model
  8221 ;;
  8222                           
  8223                           
  8224                           ;psect for function ___xxtofl
  8225  1F44                     ___xxtofl:
  8226                           
  8227                           ;incstack = 0
  8228                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8229                           ;___xxtofl@sign stored from wreg
  8230  1F44  1283               	bcf	3,5	;RP0=0, select bank0
  8231  1F45  1303               	bcf	3,6	;RP1=0, select bank0
  8232  1F46  00A0               	movwf	___xxtofl@sign
  8233  1F47                     l3303:
  8234  1F47  0820               	movf	___xxtofl@sign,w
  8235  1F48  1903               	btfsc	3,2
  8236  1F49  2F4B               	goto	u4971
  8237  1F4A  2F4C               	goto	u4970
  8238  1F4B                     u4971:
  8239  1F4B  2F60               	goto	l3309
  8240  1F4C                     u4970:
  8241  1F4C                     l3305:
  8242  1F4C  1FF5               	btfss	___xxtofl@val+3,7
  8243  1F4D  2F4F               	goto	u4981
  8244  1F4E  2F50               	goto	u4980
  8245  1F4F                     u4981:
  8246  1F4F  2F60               	goto	l3309
  8247  1F50                     u4980:
  8248  1F50                     l3307:
  8249  1F50  0972               	comf	___xxtofl@val,w
  8250  1F51  00A2               	movwf	___xxtofl@arg
  8251  1F52  0973               	comf	___xxtofl@val+1,w
  8252  1F53  00A3               	movwf	___xxtofl@arg+1
  8253  1F54  0974               	comf	___xxtofl@val+2,w
  8254  1F55  00A4               	movwf	___xxtofl@arg+2
  8255  1F56  0975               	comf	___xxtofl@val+3,w
  8256  1F57  00A5               	movwf	___xxtofl@arg+3
  8257  1F58  0AA2               	incf	___xxtofl@arg,f
  8258  1F59  1903               	skipnz
  8259  1F5A  0AA3               	incf	___xxtofl@arg+1,f
  8260  1F5B  1903               	skipnz
  8261  1F5C  0AA4               	incf	___xxtofl@arg+2,f
  8262  1F5D  1903               	skipnz
  8263  1F5E  0AA5               	incf	___xxtofl@arg+3,f
  8264  1F5F  2F68               	goto	l859
  8265  1F60                     l3309:
  8266  1F60  0875               	movf	___xxtofl@val+3,w
  8267  1F61  00A5               	movwf	___xxtofl@arg+3
  8268  1F62  0874               	movf	___xxtofl@val+2,w
  8269  1F63  00A4               	movwf	___xxtofl@arg+2
  8270  1F64  0873               	movf	___xxtofl@val+1,w
  8271  1F65  00A3               	movwf	___xxtofl@arg+1
  8272  1F66  0872               	movf	___xxtofl@val,w
  8273  1F67  00A2               	movwf	___xxtofl@arg
  8274  1F68                     l859:
  8275  1F68  0875               	movf	___xxtofl@val+3,w
  8276  1F69  0474               	iorwf	___xxtofl@val+2,w
  8277  1F6A  0473               	iorwf	___xxtofl@val+1,w
  8278  1F6B  0472               	iorwf	___xxtofl@val,w
  8279  1F6C  1D03               	skipz
  8280  1F6D  2F6F               	goto	u4991
  8281  1F6E  2F70               	goto	u4990
  8282  1F6F                     u4991:
  8283  1F6F  2F79               	goto	l3315
  8284  1F70                     u4990:
  8285  1F70                     l3311:
  8286  1F70  3000               	movlw	0
  8287  1F71  00F5               	movwf	?___xxtofl+3
  8288  1F72  3000               	movlw	0
  8289  1F73  00F4               	movwf	?___xxtofl+2
  8290  1F74  3000               	movlw	0
  8291  1F75  00F3               	movwf	?___xxtofl+1
  8292  1F76  3000               	movlw	0
  8293  1F77  00F2               	movwf	?___xxtofl
  8294  1F78  2FFF               	goto	l861
  8295  1F79                     l3315:
  8296  1F79  3096               	movlw	150
  8297  1F7A  00F6               	movwf	??___xxtofl
  8298  1F7B  0876               	movf	??___xxtofl,w
  8299  1F7C  00A1               	movwf	___xxtofl@exp
  8300  1F7D  2F8B               	goto	l3319
  8301  1F7E                     l3317:
  8302  1F7E  3001               	movlw	1
  8303  1F7F  00F6               	movwf	??___xxtofl
  8304  1F80  0876               	movf	??___xxtofl,w
  8305  1F81  07A1               	addwf	___xxtofl@exp,f
  8306  1F82  3001               	movlw	1
  8307  1F83                     u5005:
  8308  1F83  1003               	clrc
  8309  1F84  0CA5               	rrf	___xxtofl@arg+3,f
  8310  1F85  0CA4               	rrf	___xxtofl@arg+2,f
  8311  1F86  0CA3               	rrf	___xxtofl@arg+1,f
  8312  1F87  0CA2               	rrf	___xxtofl@arg,f
  8313  1F88  3EFF               	addlw	-1
  8314  1F89  1D03               	skipz
  8315  1F8A  2F83               	goto	u5005
  8316  1F8B                     l3319:
  8317  1F8B  30FE               	movlw	254
  8318  1F8C  0525               	andwf	___xxtofl@arg+3,w
  8319  1F8D  1D03               	btfss	3,2
  8320  1F8E  2F90               	goto	u5011
  8321  1F8F  2F91               	goto	u5010
  8322  1F90                     u5011:
  8323  1F90  2F7E               	goto	l3317
  8324  1F91                     u5010:
  8325  1F91  2FAD               	goto	l865
  8326  1F92                     l3321:
  8327  1F92  3001               	movlw	1
  8328  1F93  00F6               	movwf	??___xxtofl
  8329  1F94  0876               	movf	??___xxtofl,w
  8330  1F95  07A1               	addwf	___xxtofl@exp,f
  8331  1F96                     l3323:
  8332  1F96  3001               	movlw	1
  8333  1F97  07A2               	addwf	___xxtofl@arg,f
  8334  1F98  3000               	movlw	0
  8335  1F99  1803               	skipnc
  8336  1F9A  3001               	movlw	1
  8337  1F9B  07A3               	addwf	___xxtofl@arg+1,f
  8338  1F9C  3000               	movlw	0
  8339  1F9D  1803               	skipnc
  8340  1F9E  3001               	movlw	1
  8341  1F9F  07A4               	addwf	___xxtofl@arg+2,f
  8342  1FA0  3000               	movlw	0
  8343  1FA1  1803               	skipnc
  8344  1FA2  3001               	movlw	1
  8345  1FA3  07A5               	addwf	___xxtofl@arg+3,f
  8346  1FA4                     l3325:
  8347  1FA4  3001               	movlw	1
  8348  1FA5                     u5025:
  8349  1FA5  1003               	clrc
  8350  1FA6  0CA5               	rrf	___xxtofl@arg+3,f
  8351  1FA7  0CA4               	rrf	___xxtofl@arg+2,f
  8352  1FA8  0CA3               	rrf	___xxtofl@arg+1,f
  8353  1FA9  0CA2               	rrf	___xxtofl@arg,f
  8354  1FAA  3EFF               	addlw	-1
  8355  1FAB  1D03               	skipz
  8356  1FAC  2FA5               	goto	u5025
  8357  1FAD                     l865:
  8358  1FAD  30FF               	movlw	255
  8359  1FAE  0525               	andwf	___xxtofl@arg+3,w
  8360  1FAF  1D03               	btfss	3,2
  8361  1FB0  2FB2               	goto	u5031
  8362  1FB1  2FB3               	goto	u5030
  8363  1FB2                     u5031:
  8364  1FB2  2F92               	goto	l3321
  8365  1FB3                     u5030:
  8366  1FB3  2FBF               	goto	l3329
  8367  1FB4                     l3327:
  8368  1FB4  3001               	movlw	1
  8369  1FB5  02A1               	subwf	___xxtofl@exp,f
  8370  1FB6  3001               	movlw	1
  8371  1FB7  00F6               	movwf	??___xxtofl
  8372  1FB8                     u5045:
  8373  1FB8  1003               	clrc
  8374  1FB9  0DA2               	rlf	___xxtofl@arg,f
  8375  1FBA  0DA3               	rlf	___xxtofl@arg+1,f
  8376  1FBB  0DA4               	rlf	___xxtofl@arg+2,f
  8377  1FBC  0DA5               	rlf	___xxtofl@arg+3,f
  8378  1FBD  0BF6               	decfsz	??___xxtofl,f
  8379  1FBE  2FB8               	goto	u5045
  8380  1FBF                     l3329:
  8381  1FBF  1BA4               	btfsc	___xxtofl@arg+2,7
  8382  1FC0  2FC2               	goto	u5051
  8383  1FC1  2FC3               	goto	u5050
  8384  1FC2                     u5051:
  8385  1FC2  2FC9               	goto	l872
  8386  1FC3                     u5050:
  8387  1FC3                     l3331:
  8388  1FC3  3002               	movlw	2
  8389  1FC4  0221               	subwf	___xxtofl@exp,w
  8390  1FC5  1803               	skipnc
  8391  1FC6  2FC8               	goto	u5061
  8392  1FC7  2FC9               	goto	u5060
  8393  1FC8                     u5061:
  8394  1FC8  2FB4               	goto	l3327
  8395  1FC9                     u5060:
  8396  1FC9                     l872:
  8397  1FC9  1821               	btfsc	___xxtofl@exp,0
  8398  1FCA  2FCC               	goto	u5071
  8399  1FCB  2FCD               	goto	u5070
  8400  1FCC                     u5071:
  8401  1FCC  2FD5               	goto	l873
  8402  1FCD                     u5070:
  8403  1FCD                     l3333:
  8404  1FCD  30FF               	movlw	255
  8405  1FCE  05A2               	andwf	___xxtofl@arg,f
  8406  1FCF  30FF               	movlw	255
  8407  1FD0  05A3               	andwf	___xxtofl@arg+1,f
  8408  1FD1  307F               	movlw	127
  8409  1FD2  05A4               	andwf	___xxtofl@arg+2,f
  8410  1FD3  30FF               	movlw	255
  8411  1FD4  05A5               	andwf	___xxtofl@arg+3,f
  8412  1FD5                     l873:
  8413  1FD5  1003               	clrc
  8414  1FD6  0CA1               	rrf	___xxtofl@exp,f
  8415  1FD7                     l3335:
  8416  1FD7  0821               	movf	___xxtofl@exp,w
  8417  1FD8  00F6               	movwf	??___xxtofl
  8418  1FD9  01F7               	clrf	??___xxtofl+1
  8419  1FDA  01F8               	clrf	??___xxtofl+2
  8420  1FDB  01F9               	clrf	??___xxtofl+3
  8421  1FDC  3018               	movlw	24
  8422  1FDD                     u5085:
  8423  1FDD  1003               	clrc
  8424  1FDE  0DF6               	rlf	??___xxtofl,f
  8425  1FDF  0DF7               	rlf	??___xxtofl+1,f
  8426  1FE0  0DF8               	rlf	??___xxtofl+2,f
  8427  1FE1  0DF9               	rlf	??___xxtofl+3,f
  8428  1FE2                     u5080:
  8429  1FE2  3EFF               	addlw	-1
  8430  1FE3  1D03               	skipz
  8431  1FE4  2FDD               	goto	u5085
  8432  1FE5  0876               	movf	??___xxtofl,w
  8433  1FE6  04A2               	iorwf	___xxtofl@arg,f
  8434  1FE7  0877               	movf	??___xxtofl+1,w
  8435  1FE8  04A3               	iorwf	___xxtofl@arg+1,f
  8436  1FE9  0878               	movf	??___xxtofl+2,w
  8437  1FEA  04A4               	iorwf	___xxtofl@arg+2,f
  8438  1FEB  0879               	movf	??___xxtofl+3,w
  8439  1FEC  04A5               	iorwf	___xxtofl@arg+3,f
  8440  1FED                     l3337:
  8441  1FED  0820               	movf	___xxtofl@sign,w
  8442  1FEE  1903               	btfsc	3,2
  8443  1FEF  2FF1               	goto	u5091
  8444  1FF0  2FF2               	goto	u5090
  8445  1FF1                     u5091:
  8446  1FF1  2FF7               	goto	l3343
  8447  1FF2                     u5090:
  8448  1FF2                     l3339:
  8449  1FF2  1FF5               	btfss	___xxtofl@val+3,7
  8450  1FF3  2FF5               	goto	u5101
  8451  1FF4  2FF6               	goto	u5100
  8452  1FF5                     u5101:
  8453  1FF5  2FF7               	goto	l3343
  8454  1FF6                     u5100:
  8455  1FF6                     l3341:
  8456  1FF6  17A5               	bsf	___xxtofl@arg+3,7
  8457  1FF7                     l3343:
  8458  1FF7  0825               	movf	___xxtofl@arg+3,w
  8459  1FF8  00F5               	movwf	?___xxtofl+3
  8460  1FF9  0824               	movf	___xxtofl@arg+2,w
  8461  1FFA  00F4               	movwf	?___xxtofl+2
  8462  1FFB  0823               	movf	___xxtofl@arg+1,w
  8463  1FFC  00F3               	movwf	?___xxtofl+1
  8464  1FFD  0822               	movf	___xxtofl@arg,w
  8465  1FFE  00F2               	movwf	?___xxtofl
  8466  1FFF                     l861:
  8467  1FFF  0008               	return
  8468  2000                     __end_of___xxtofl:
  8469                           
  8470                           	psect	text14
  8471  1A92                     __ptext14:	
  8472 ;; *************** function ___wmul *****************
  8473 ;; Defined at:
  8474 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  8475 ;; Parameters:    Size  Location     Type
  8476 ;;  multiplier      2    2[COMMON] unsigned int 
  8477 ;;  multiplicand    2    4[COMMON] unsigned int 
  8478 ;; Auto vars:     Size  Location     Type
  8479 ;;  product         2    6[COMMON] unsigned int 
  8480 ;; Return value:  Size  Location     Type
  8481 ;;                  2    2[COMMON] unsigned int 
  8482 ;; Registers used:
  8483 ;;		wreg, status,2, status,0
  8484 ;; Tracked objects:
  8485 ;;		On entry : 0/0
  8486 ;;		On exit  : 0/0
  8487 ;;		Unchanged: 0/0
  8488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8489 ;;      Params:         4       0       0       0       0
  8490 ;;      Locals:         2       0       0       0       0
  8491 ;;      Temps:          0       0       0       0       0
  8492 ;;      Totals:         6       0       0       0       0
  8493 ;;Total ram usage:        6 bytes
  8494 ;; Hardware stack levels used:    1
  8495 ;; Hardware stack levels required when called:    1
  8496 ;; This function calls:
  8497 ;;		Nothing
  8498 ;; This function is called by:
  8499 ;;		_sprintf
  8500 ;; This function uses a non-reentrant model
  8501 ;;
  8502                           
  8503                           
  8504                           ;psect for function ___wmul
  8505  1A92                     ___wmul:
  8506  1A92                     l3163:	
  8507                           ;incstack = 0
  8508                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8509                           
  8510  1A92  01F6               	clrf	___wmul@product
  8511  1A93  01F7               	clrf	___wmul@product+1
  8512  1A94                     l3165:
  8513  1A94  1C72               	btfss	___wmul@multiplier,0
  8514  1A95  2A97               	goto	u4591
  8515  1A96  2A98               	goto	u4590
  8516  1A97                     u4591:
  8517  1A97  2A9E               	goto	l392
  8518  1A98                     u4590:
  8519  1A98                     l3167:
  8520  1A98  0874               	movf	___wmul@multiplicand,w
  8521  1A99  07F6               	addwf	___wmul@product,f
  8522  1A9A  1803               	skipnc
  8523  1A9B  0AF7               	incf	___wmul@product+1,f
  8524  1A9C  0875               	movf	___wmul@multiplicand+1,w
  8525  1A9D  07F7               	addwf	___wmul@product+1,f
  8526  1A9E                     l392:
  8527  1A9E  3001               	movlw	1
  8528  1A9F                     u4605:
  8529  1A9F  1003               	clrc
  8530  1AA0  0DF4               	rlf	___wmul@multiplicand,f
  8531  1AA1  0DF5               	rlf	___wmul@multiplicand+1,f
  8532  1AA2  3EFF               	addlw	-1
  8533  1AA3  1D03               	skipz
  8534  1AA4  2A9F               	goto	u4605
  8535  1AA5                     l3169:
  8536  1AA5  3001               	movlw	1
  8537  1AA6                     u4615:
  8538  1AA6  1003               	clrc
  8539  1AA7  0CF3               	rrf	___wmul@multiplier+1,f
  8540  1AA8  0CF2               	rrf	___wmul@multiplier,f
  8541  1AA9  3EFF               	addlw	-1
  8542  1AAA  1D03               	skipz
  8543  1AAB  2AA6               	goto	u4615
  8544  1AAC                     l3171:
  8545  1AAC  0872               	movf	___wmul@multiplier,w
  8546  1AAD  0473               	iorwf	___wmul@multiplier+1,w
  8547  1AAE  1D03               	btfss	3,2
  8548  1AAF  2AB1               	goto	u4621
  8549  1AB0  2AB2               	goto	u4620
  8550  1AB1                     u4621:
  8551  1AB1  2A94               	goto	l3165
  8552  1AB2                     u4620:
  8553  1AB2                     l3173:
  8554  1AB2  0877               	movf	___wmul@product+1,w
  8555  1AB3  00F3               	movwf	?___wmul+1
  8556  1AB4  0876               	movf	___wmul@product,w
  8557  1AB5  00F2               	movwf	?___wmul
  8558  1AB6                     l394:
  8559  1AB6  0008               	return
  8560  1AB7                     __end_of___wmul:
  8561                           
  8562                           	psect	text15
  8563  1C2A                     __ptext15:	
  8564 ;; *************** function ___llmod *****************
  8565 ;; Defined at:
  8566 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  8567 ;; Parameters:    Size  Location     Type
  8568 ;;  divisor         4    2[COMMON] unsigned long 
  8569 ;;  dividend        4    6[COMMON] unsigned long 
  8570 ;; Auto vars:     Size  Location     Type
  8571 ;;  counter         1    1[BANK0 ] unsigned char 
  8572 ;; Return value:  Size  Location     Type
  8573 ;;                  4    2[COMMON] unsigned long 
  8574 ;; Registers used:
  8575 ;;		wreg, status,2, status,0
  8576 ;; Tracked objects:
  8577 ;;		On entry : 0/0
  8578 ;;		On exit  : 0/0
  8579 ;;		Unchanged: 0/0
  8580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8581 ;;      Params:         8       0       0       0       0
  8582 ;;      Locals:         0       1       0       0       0
  8583 ;;      Temps:          0       1       0       0       0
  8584 ;;      Totals:         8       2       0       0       0
  8585 ;;Total ram usage:       10 bytes
  8586 ;; Hardware stack levels used:    1
  8587 ;; Hardware stack levels required when called:    1
  8588 ;; This function calls:
  8589 ;;		Nothing
  8590 ;; This function is called by:
  8591 ;;		_sprintf
  8592 ;; This function uses a non-reentrant model
  8593 ;;
  8594                           
  8595                           
  8596                           ;psect for function ___llmod
  8597  1C2A                     ___llmod:
  8598  1C2A                     l4179:	
  8599                           ;incstack = 0
  8600                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  8601                           
  8602  1C2A  0875               	movf	___llmod@divisor+3,w
  8603  1C2B  0474               	iorwf	___llmod@divisor+2,w
  8604  1C2C  0473               	iorwf	___llmod@divisor+1,w
  8605  1C2D  0472               	iorwf	___llmod@divisor,w
  8606  1C2E  1903               	skipnz
  8607  1C2F  2C31               	goto	u6611
  8608  1C30  2C32               	goto	u6610
  8609  1C31                     u6611:
  8610  1C31  2C77               	goto	l4195
  8611  1C32                     u6610:
  8612  1C32                     l4181:
  8613  1C32  1283               	bcf	3,5	;RP0=0, select bank0
  8614  1C33  1303               	bcf	3,6	;RP1=0, select bank0
  8615  1C34  01A1               	clrf	___llmod@counter
  8616  1C35  0AA1               	incf	___llmod@counter,f
  8617  1C36  2C44               	goto	l4185
  8618  1C37                     l4183:
  8619  1C37  3001               	movlw	1
  8620  1C38  00A0               	movwf	??___llmod
  8621  1C39                     u6625:
  8622  1C39  1003               	clrc
  8623  1C3A  0DF2               	rlf	___llmod@divisor,f
  8624  1C3B  0DF3               	rlf	___llmod@divisor+1,f
  8625  1C3C  0DF4               	rlf	___llmod@divisor+2,f
  8626  1C3D  0DF5               	rlf	___llmod@divisor+3,f
  8627  1C3E  0BA0               	decfsz	??___llmod,f
  8628  1C3F  2C39               	goto	u6625
  8629  1C40  3001               	movlw	1
  8630  1C41  00A0               	movwf	??___llmod
  8631  1C42  0820               	movf	??___llmod,w
  8632  1C43  07A1               	addwf	___llmod@counter,f
  8633  1C44                     l4185:
  8634  1C44  1FF5               	btfss	___llmod@divisor+3,7
  8635  1C45  2C47               	goto	u6631
  8636  1C46  2C48               	goto	u6630
  8637  1C47                     u6631:
  8638  1C47  2C37               	goto	l4183
  8639  1C48                     u6630:
  8640  1C48                     l4187:
  8641  1C48  0875               	movf	___llmod@divisor+3,w
  8642  1C49  0279               	subwf	___llmod@dividend+3,w
  8643  1C4A  1D03               	skipz
  8644  1C4B  2C56               	goto	u6645
  8645  1C4C  0874               	movf	___llmod@divisor+2,w
  8646  1C4D  0278               	subwf	___llmod@dividend+2,w
  8647  1C4E  1D03               	skipz
  8648  1C4F  2C56               	goto	u6645
  8649  1C50  0873               	movf	___llmod@divisor+1,w
  8650  1C51  0277               	subwf	___llmod@dividend+1,w
  8651  1C52  1D03               	skipz
  8652  1C53  2C56               	goto	u6645
  8653  1C54  0872               	movf	___llmod@divisor,w
  8654  1C55  0276               	subwf	___llmod@dividend,w
  8655  1C56                     u6645:
  8656  1C56  1C03               	skipc
  8657  1C57  2C59               	goto	u6641
  8658  1C58  2C5A               	goto	u6640
  8659  1C59                     u6641:
  8660  1C59  2C68               	goto	l4191
  8661  1C5A                     u6640:
  8662  1C5A                     l4189:
  8663  1C5A  0872               	movf	___llmod@divisor,w
  8664  1C5B  02F6               	subwf	___llmod@dividend,f
  8665  1C5C  0873               	movf	___llmod@divisor+1,w
  8666  1C5D  1C03               	skipc
  8667  1C5E  0F73               	incfsz	___llmod@divisor+1,w
  8668  1C5F  02F7               	subwf	___llmod@dividend+1,f
  8669  1C60  0874               	movf	___llmod@divisor+2,w
  8670  1C61  1C03               	skipc
  8671  1C62  0F74               	incfsz	___llmod@divisor+2,w
  8672  1C63  02F8               	subwf	___llmod@dividend+2,f
  8673  1C64  0875               	movf	___llmod@divisor+3,w
  8674  1C65  1C03               	skipc
  8675  1C66  0F75               	incfsz	___llmod@divisor+3,w
  8676  1C67  02F9               	subwf	___llmod@dividend+3,f
  8677  1C68                     l4191:
  8678  1C68  3001               	movlw	1
  8679  1C69                     u6655:
  8680  1C69  1003               	clrc
  8681  1C6A  0CF5               	rrf	___llmod@divisor+3,f
  8682  1C6B  0CF4               	rrf	___llmod@divisor+2,f
  8683  1C6C  0CF3               	rrf	___llmod@divisor+1,f
  8684  1C6D  0CF2               	rrf	___llmod@divisor,f
  8685  1C6E  3EFF               	addlw	-1
  8686  1C6F  1D03               	skipz
  8687  1C70  2C69               	goto	u6655
  8688  1C71                     l4193:
  8689  1C71  3001               	movlw	1
  8690  1C72  02A1               	subwf	___llmod@counter,f
  8691  1C73  1D03               	btfss	3,2
  8692  1C74  2C76               	goto	u6661
  8693  1C75  2C77               	goto	u6660
  8694  1C76                     u6661:
  8695  1C76  2C48               	goto	l4187
  8696  1C77                     u6660:
  8697  1C77                     l4195:
  8698  1C77  0879               	movf	___llmod@dividend+3,w
  8699  1C78  00F5               	movwf	?___llmod+3
  8700  1C79  0878               	movf	___llmod@dividend+2,w
  8701  1C7A  00F4               	movwf	?___llmod+2
  8702  1C7B  0877               	movf	___llmod@dividend+1,w
  8703  1C7C  00F3               	movwf	?___llmod+1
  8704  1C7D  0876               	movf	___llmod@dividend,w
  8705  1C7E  00F2               	movwf	?___llmod
  8706  1C7F                     l648:
  8707  1C7F  0008               	return
  8708  1C80                     __end_of___llmod:
  8709                           
  8710                           	psect	text16
  8711  1CD9                     __ptext16:	
  8712 ;; *************** function ___lldiv *****************
  8713 ;; Defined at:
  8714 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  8715 ;; Parameters:    Size  Location     Type
  8716 ;;  divisor         4    2[COMMON] unsigned long 
  8717 ;;  dividend        4    6[COMMON] unsigned long 
  8718 ;; Auto vars:     Size  Location     Type
  8719 ;;  quotient        4    1[BANK0 ] unsigned long 
  8720 ;;  counter         1    5[BANK0 ] unsigned char 
  8721 ;; Return value:  Size  Location     Type
  8722 ;;                  4    2[COMMON] unsigned long 
  8723 ;; Registers used:
  8724 ;;		wreg, status,2, status,0
  8725 ;; Tracked objects:
  8726 ;;		On entry : 0/0
  8727 ;;		On exit  : 0/0
  8728 ;;		Unchanged: 0/0
  8729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8730 ;;      Params:         8       0       0       0       0
  8731 ;;      Locals:         0       5       0       0       0
  8732 ;;      Temps:          0       1       0       0       0
  8733 ;;      Totals:         8       6       0       0       0
  8734 ;;Total ram usage:       14 bytes
  8735 ;; Hardware stack levels used:    1
  8736 ;; Hardware stack levels required when called:    1
  8737 ;; This function calls:
  8738 ;;		Nothing
  8739 ;; This function is called by:
  8740 ;;		_sprintf
  8741 ;; This function uses a non-reentrant model
  8742 ;;
  8743                           
  8744                           
  8745                           ;psect for function ___lldiv
  8746  1CD9                     ___lldiv:
  8747  1CD9                     l4155:	
  8748                           ;incstack = 0
  8749                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8750                           
  8751  1CD9  3000               	movlw	0
  8752  1CDA  1283               	bcf	3,5	;RP0=0, select bank0
  8753  1CDB  1303               	bcf	3,6	;RP1=0, select bank0
  8754  1CDC  00A4               	movwf	___lldiv@quotient+3
  8755  1CDD  3000               	movlw	0
  8756  1CDE  00A3               	movwf	___lldiv@quotient+2
  8757  1CDF  3000               	movlw	0
  8758  1CE0  00A2               	movwf	___lldiv@quotient+1
  8759  1CE1  3000               	movlw	0
  8760  1CE2  00A1               	movwf	___lldiv@quotient
  8761  1CE3  0875               	movf	___lldiv@divisor+3,w
  8762  1CE4  0474               	iorwf	___lldiv@divisor+2,w
  8763  1CE5  0473               	iorwf	___lldiv@divisor+1,w
  8764  1CE6  0472               	iorwf	___lldiv@divisor,w
  8765  1CE7  1903               	skipnz
  8766  1CE8  2CEA               	goto	u6541
  8767  1CE9  2CEB               	goto	u6540
  8768  1CEA                     u6541:
  8769  1CEA  2D38               	goto	l4175
  8770  1CEB                     u6540:
  8771  1CEB                     l4157:
  8772  1CEB  01A5               	clrf	___lldiv@counter
  8773  1CEC  0AA5               	incf	___lldiv@counter,f
  8774  1CED  2CFB               	goto	l4161
  8775  1CEE                     l4159:
  8776  1CEE  3001               	movlw	1
  8777  1CEF  00A0               	movwf	??___lldiv
  8778  1CF0                     u6555:
  8779  1CF0  1003               	clrc
  8780  1CF1  0DF2               	rlf	___lldiv@divisor,f
  8781  1CF2  0DF3               	rlf	___lldiv@divisor+1,f
  8782  1CF3  0DF4               	rlf	___lldiv@divisor+2,f
  8783  1CF4  0DF5               	rlf	___lldiv@divisor+3,f
  8784  1CF5  0BA0               	decfsz	??___lldiv,f
  8785  1CF6  2CF0               	goto	u6555
  8786  1CF7  3001               	movlw	1
  8787  1CF8  00A0               	movwf	??___lldiv
  8788  1CF9  0820               	movf	??___lldiv,w
  8789  1CFA  07A5               	addwf	___lldiv@counter,f
  8790  1CFB                     l4161:
  8791  1CFB  1FF5               	btfss	___lldiv@divisor+3,7
  8792  1CFC  2CFE               	goto	u6561
  8793  1CFD  2CFF               	goto	u6560
  8794  1CFE                     u6561:
  8795  1CFE  2CEE               	goto	l4159
  8796  1CFF                     u6560:
  8797  1CFF                     l4163:
  8798  1CFF  3001               	movlw	1
  8799  1D00  00A0               	movwf	??___lldiv
  8800  1D01                     u6575:
  8801  1D01  1003               	clrc
  8802  1D02  0DA1               	rlf	___lldiv@quotient,f
  8803  1D03  0DA2               	rlf	___lldiv@quotient+1,f
  8804  1D04  0DA3               	rlf	___lldiv@quotient+2,f
  8805  1D05  0DA4               	rlf	___lldiv@quotient+3,f
  8806  1D06  0BA0               	decfsz	??___lldiv,f
  8807  1D07  2D01               	goto	u6575
  8808  1D08                     l4165:
  8809  1D08  0875               	movf	___lldiv@divisor+3,w
  8810  1D09  0279               	subwf	___lldiv@dividend+3,w
  8811  1D0A  1D03               	skipz
  8812  1D0B  2D16               	goto	u6585
  8813  1D0C  0874               	movf	___lldiv@divisor+2,w
  8814  1D0D  0278               	subwf	___lldiv@dividend+2,w
  8815  1D0E  1D03               	skipz
  8816  1D0F  2D16               	goto	u6585
  8817  1D10  0873               	movf	___lldiv@divisor+1,w
  8818  1D11  0277               	subwf	___lldiv@dividend+1,w
  8819  1D12  1D03               	skipz
  8820  1D13  2D16               	goto	u6585
  8821  1D14  0872               	movf	___lldiv@divisor,w
  8822  1D15  0276               	subwf	___lldiv@dividend,w
  8823  1D16                     u6585:
  8824  1D16  1C03               	skipc
  8825  1D17  2D19               	goto	u6581
  8826  1D18  2D1A               	goto	u6580
  8827  1D19                     u6581:
  8828  1D19  2D29               	goto	l4171
  8829  1D1A                     u6580:
  8830  1D1A                     l4167:
  8831  1D1A  0872               	movf	___lldiv@divisor,w
  8832  1D1B  02F6               	subwf	___lldiv@dividend,f
  8833  1D1C  0873               	movf	___lldiv@divisor+1,w
  8834  1D1D  1C03               	skipc
  8835  1D1E  0F73               	incfsz	___lldiv@divisor+1,w
  8836  1D1F  02F7               	subwf	___lldiv@dividend+1,f
  8837  1D20  0874               	movf	___lldiv@divisor+2,w
  8838  1D21  1C03               	skipc
  8839  1D22  0F74               	incfsz	___lldiv@divisor+2,w
  8840  1D23  02F8               	subwf	___lldiv@dividend+2,f
  8841  1D24  0875               	movf	___lldiv@divisor+3,w
  8842  1D25  1C03               	skipc
  8843  1D26  0F75               	incfsz	___lldiv@divisor+3,w
  8844  1D27  02F9               	subwf	___lldiv@dividend+3,f
  8845  1D28                     l4169:
  8846  1D28  1421               	bsf	___lldiv@quotient,0
  8847  1D29                     l4171:
  8848  1D29  3001               	movlw	1
  8849  1D2A                     u6595:
  8850  1D2A  1003               	clrc
  8851  1D2B  0CF5               	rrf	___lldiv@divisor+3,f
  8852  1D2C  0CF4               	rrf	___lldiv@divisor+2,f
  8853  1D2D  0CF3               	rrf	___lldiv@divisor+1,f
  8854  1D2E  0CF2               	rrf	___lldiv@divisor,f
  8855  1D2F  3EFF               	addlw	-1
  8856  1D30  1D03               	skipz
  8857  1D31  2D2A               	goto	u6595
  8858  1D32                     l4173:
  8859  1D32  3001               	movlw	1
  8860  1D33  02A5               	subwf	___lldiv@counter,f
  8861  1D34  1D03               	btfss	3,2
  8862  1D35  2D37               	goto	u6601
  8863  1D36  2D38               	goto	u6600
  8864  1D37                     u6601:
  8865  1D37  2CFF               	goto	l4163
  8866  1D38                     u6600:
  8867  1D38                     l4175:
  8868  1D38  0824               	movf	___lldiv@quotient+3,w
  8869  1D39  00F5               	movwf	?___lldiv+3
  8870  1D3A  0823               	movf	___lldiv@quotient+2,w
  8871  1D3B  00F4               	movwf	?___lldiv+2
  8872  1D3C  0822               	movf	___lldiv@quotient+1,w
  8873  1D3D  00F3               	movwf	?___lldiv+1
  8874  1D3E  0821               	movf	___lldiv@quotient,w
  8875  1D3F  00F2               	movwf	?___lldiv
  8876  1D40                     l428:
  8877  1D40  0008               	return
  8878  1D41                     __end_of___lldiv:
  8879                           
  8880                           	psect	text17
  8881  1E24                     __ptext17:	
  8882 ;; *************** function ___fltol *****************
  8883 ;; Defined at:
  8884 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  8885 ;; Parameters:    Size  Location     Type
  8886 ;;  f1              4   53[BANK0 ] unsigned long 
  8887 ;; Auto vars:     Size  Location     Type
  8888 ;;  exp1            1   63[BANK0 ] unsigned char 
  8889 ;;  sign1           1   62[BANK0 ] unsigned char 
  8890 ;; Return value:  Size  Location     Type
  8891 ;;                  4   53[BANK0 ] long 
  8892 ;; Registers used:
  8893 ;;		wreg, status,2, status,0
  8894 ;; Tracked objects:
  8895 ;;		On entry : 0/0
  8896 ;;		On exit  : 0/0
  8897 ;;		Unchanged: 0/0
  8898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8899 ;;      Params:         0       4       0       0       0
  8900 ;;      Locals:         0       2       0       0       0
  8901 ;;      Temps:          0       5       0       0       0
  8902 ;;      Totals:         0      11       0       0       0
  8903 ;;Total ram usage:       11 bytes
  8904 ;; Hardware stack levels used:    1
  8905 ;; Hardware stack levels required when called:    1
  8906 ;; This function calls:
  8907 ;;		Nothing
  8908 ;; This function is called by:
  8909 ;;		_sprintf
  8910 ;; This function uses a non-reentrant model
  8911 ;;
  8912                           
  8913                           
  8914                           ;psect for function ___fltol
  8915  1E24                     ___fltol:
  8916  1E24                     l3241:	
  8917                           ;incstack = 0
  8918                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8919                           
  8920  1E24  1003               	clrc
  8921  1E25  1283               	bcf	3,5	;RP0=0, select bank0
  8922  1E26  1303               	bcf	3,6	;RP1=0, select bank0
  8923  1E27  0D57               	rlf	___fltol@f1+2,w
  8924  1E28  0D58               	rlf	___fltol@f1+3,w
  8925  1E29  00D9               	movwf	??___fltol
  8926  1E2A  0859               	movf	??___fltol,w
  8927  1E2B  00DF               	movwf	___fltol@exp1
  8928  1E2C  085F               	movf	___fltol@exp1,w
  8929  1E2D  1D03               	btfss	3,2
  8930  1E2E  2E30               	goto	u4811
  8931  1E2F  2E31               	goto	u4810
  8932  1E30                     u4811:
  8933  1E30  2E3A               	goto	l3247
  8934  1E31                     u4810:
  8935  1E31                     l3243:
  8936  1E31  3000               	movlw	0
  8937  1E32  00D8               	movwf	?___fltol+3
  8938  1E33  3000               	movlw	0
  8939  1E34  00D7               	movwf	?___fltol+2
  8940  1E35  3000               	movlw	0
  8941  1E36  00D6               	movwf	?___fltol+1
  8942  1E37  3000               	movlw	0
  8943  1E38  00D5               	movwf	?___fltol
  8944  1E39  2E9F               	goto	l595
  8945  1E3A                     l3247:
  8946  1E3A  0855               	movf	___fltol@f1,w
  8947  1E3B  00D9               	movwf	??___fltol
  8948  1E3C  0856               	movf	___fltol@f1+1,w
  8949  1E3D  00DA               	movwf	??___fltol+1
  8950  1E3E  0857               	movf	___fltol@f1+2,w
  8951  1E3F  00DB               	movwf	??___fltol+2
  8952  1E40  0858               	movf	___fltol@f1+3,w
  8953  1E41  00DC               	movwf	??___fltol+3
  8954  1E42  301F               	movlw	31
  8955  1E43                     u4825:
  8956  1E43  1003               	clrc
  8957  1E44  0CDC               	rrf	??___fltol+3,f
  8958  1E45  0CDB               	rrf	??___fltol+2,f
  8959  1E46  0CDA               	rrf	??___fltol+1,f
  8960  1E47  0CD9               	rrf	??___fltol,f
  8961  1E48                     u4820:
  8962  1E48  3EFF               	addlw	-1
  8963  1E49  1D03               	skipz
  8964  1E4A  2E43               	goto	u4825
  8965  1E4B  0859               	movf	??___fltol,w
  8966  1E4C  00DD               	movwf	??___fltol+4
  8967  1E4D  085D               	movf	??___fltol+4,w
  8968  1E4E  00DE               	movwf	___fltol@sign1
  8969  1E4F                     l3249:
  8970  1E4F  17D7               	bsf	___fltol@f1+2,7
  8971  1E50                     l3251:
  8972  1E50  30FF               	movlw	255
  8973  1E51  05D5               	andwf	___fltol@f1,f
  8974  1E52  30FF               	movlw	255
  8975  1E53  05D6               	andwf	___fltol@f1+1,f
  8976  1E54  30FF               	movlw	255
  8977  1E55  05D7               	andwf	___fltol@f1+2,f
  8978  1E56  3000               	movlw	0
  8979  1E57  05D8               	andwf	___fltol@f1+3,f
  8980  1E58                     l3253:
  8981  1E58  3096               	movlw	150
  8982  1E59  02DF               	subwf	___fltol@exp1,f
  8983  1E5A                     l3255:
  8984  1E5A  1FDF               	btfss	___fltol@exp1,7
  8985  1E5B  2E5D               	goto	u4831
  8986  1E5C  2E5E               	goto	u4830
  8987  1E5D                     u4831:
  8988  1E5D  2E78               	goto	l3265
  8989  1E5E                     u4830:
  8990  1E5E                     l3257:
  8991  1E5E  085F               	movf	___fltol@exp1,w
  8992  1E5F  3A80               	xorlw	128
  8993  1E60  3E97               	addlw	151
  8994  1E61  1803               	skipnc
  8995  1E62  2E64               	goto	u4841
  8996  1E63  2E65               	goto	u4840
  8997  1E64                     u4841:
  8998  1E64  2E66               	goto	l3263
  8999  1E65                     u4840:
  9000  1E65  2E31               	goto	l3243
  9001  1E66                     l3263:
  9002  1E66  3001               	movlw	1
  9003  1E67                     u4855:
  9004  1E67  1003               	clrc
  9005  1E68  0CD8               	rrf	___fltol@f1+3,f
  9006  1E69  0CD7               	rrf	___fltol@f1+2,f
  9007  1E6A  0CD6               	rrf	___fltol@f1+1,f
  9008  1E6B  0CD5               	rrf	___fltol@f1,f
  9009  1E6C  3EFF               	addlw	-1
  9010  1E6D  1D03               	skipz
  9011  1E6E  2E67               	goto	u4855
  9012  1E6F  3001               	movlw	1
  9013  1E70  00D9               	movwf	??___fltol
  9014  1E71  0859               	movf	??___fltol,w
  9015  1E72  07DF               	addwf	___fltol@exp1,f
  9016  1E73  1D03               	btfss	3,2
  9017  1E74  2E76               	goto	u4861
  9018  1E75  2E77               	goto	u4860
  9019  1E76                     u4861:
  9020  1E76  2E66               	goto	l3263
  9021  1E77                     u4860:
  9022  1E77  2E8F               	goto	l3273
  9023  1E78                     l3265:
  9024  1E78  3020               	movlw	32
  9025  1E79  025F               	subwf	___fltol@exp1,w
  9026  1E7A  1C03               	skipc
  9027  1E7B  2E7D               	goto	u4871
  9028  1E7C  2E7E               	goto	u4870
  9029  1E7D                     u4871:
  9030  1E7D  2E8A               	goto	l602
  9031  1E7E                     u4870:
  9032  1E7E  2E31               	goto	l3243
  9033  1E7F                     l3271:
  9034  1E7F  3001               	movlw	1
  9035  1E80  00D9               	movwf	??___fltol
  9036  1E81                     u4885:
  9037  1E81  1003               	clrc
  9038  1E82  0DD5               	rlf	___fltol@f1,f
  9039  1E83  0DD6               	rlf	___fltol@f1+1,f
  9040  1E84  0DD7               	rlf	___fltol@f1+2,f
  9041  1E85  0DD8               	rlf	___fltol@f1+3,f
  9042  1E86  0BD9               	decfsz	??___fltol,f
  9043  1E87  2E81               	goto	u4885
  9044  1E88  3001               	movlw	1
  9045  1E89  02DF               	subwf	___fltol@exp1,f
  9046  1E8A                     l602:
  9047  1E8A  085F               	movf	___fltol@exp1,w
  9048  1E8B  1D03               	btfss	3,2
  9049  1E8C  2E8E               	goto	u4891
  9050  1E8D  2E8F               	goto	u4890
  9051  1E8E                     u4891:
  9052  1E8E  2E7F               	goto	l3271
  9053  1E8F                     u4890:
  9054  1E8F                     l3273:
  9055  1E8F  085E               	movf	___fltol@sign1,w
  9056  1E90  1903               	btfsc	3,2
  9057  1E91  2E93               	goto	u4901
  9058  1E92  2E94               	goto	u4900
  9059  1E93                     u4901:
  9060  1E93  2E9F               	goto	l605
  9061  1E94                     u4900:
  9062  1E94                     l3275:
  9063  1E94  09D5               	comf	___fltol@f1,f
  9064  1E95  09D6               	comf	___fltol@f1+1,f
  9065  1E96  09D7               	comf	___fltol@f1+2,f
  9066  1E97  09D8               	comf	___fltol@f1+3,f
  9067  1E98  0AD5               	incf	___fltol@f1,f
  9068  1E99  1903               	skipnz
  9069  1E9A  0AD6               	incf	___fltol@f1+1,f
  9070  1E9B  1903               	skipnz
  9071  1E9C  0AD7               	incf	___fltol@f1+2,f
  9072  1E9D  1903               	skipnz
  9073  1E9E  0AD8               	incf	___fltol@f1+3,f
  9074  1E9F                     l605:
  9075  1E9F                     l595:
  9076  1E9F  0008               	return
  9077  1EA0                     __end_of___fltol:
  9078                           
  9079                           	psect	text18
  9080  1BDA                     __ptext18:	
  9081 ;; *************** function ___flsub *****************
  9082 ;; Defined at:
  9083 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  9084 ;; Parameters:    Size  Location     Type
  9085 ;;  a               4    0[BANK1 ] long 
  9086 ;;  b               4    4[BANK1 ] long 
  9087 ;; Auto vars:     Size  Location     Type
  9088 ;;		None
  9089 ;; Return value:  Size  Location     Type
  9090 ;;                  4    0[BANK1 ] long 
  9091 ;; Registers used:
  9092 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9093 ;; Tracked objects:
  9094 ;;		On entry : 0/0
  9095 ;;		On exit  : 0/0
  9096 ;;		Unchanged: 0/0
  9097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9098 ;;      Params:         0       0       8       0       0
  9099 ;;      Locals:         0       0       0       0       0
  9100 ;;      Temps:          0       0       0       0       0
  9101 ;;      Totals:         0       0       8       0       0
  9102 ;;Total ram usage:        8 bytes
  9103 ;; Hardware stack levels used:    1
  9104 ;; Hardware stack levels required when called:    2
  9105 ;; This function calls:
  9106 ;;		___fladd
  9107 ;; This function is called by:
  9108 ;;		_sprintf
  9109 ;; This function uses a non-reentrant model
  9110 ;;
  9111                           
  9112                           
  9113                           ;psect for function ___flsub
  9114  1BDA                     ___flsub:
  9115  1BDA                     l3297:	
  9116                           ;incstack = 0
  9117                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9118                           
  9119  1BDA  3080               	movlw	128
  9120  1BDB  1683               	bsf	3,5	;RP0=1, select bank1
  9121  1BDC  1303               	bcf	3,6	;RP1=0, select bank1
  9122  1BDD  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  9123  1BDE                     l3299:
  9124  1BDE  0827               	movf	(___flsub@b+3)^(0+128),w
  9125  1BDF  1283               	bcf	3,5	;RP0=0, select bank0
  9126  1BE0  1303               	bcf	3,6	;RP1=0, select bank0
  9127  1BE1  00D9               	movwf	___fladd@b+3
  9128  1BE2  1683               	bsf	3,5	;RP0=1, select bank1
  9129  1BE3  1303               	bcf	3,6	;RP1=0, select bank1
  9130  1BE4  0826               	movf	(___flsub@b+2)^(0+128),w
  9131  1BE5  1283               	bcf	3,5	;RP0=0, select bank0
  9132  1BE6  1303               	bcf	3,6	;RP1=0, select bank0
  9133  1BE7  00D8               	movwf	___fladd@b+2
  9134  1BE8  1683               	bsf	3,5	;RP0=1, select bank1
  9135  1BE9  1303               	bcf	3,6	;RP1=0, select bank1
  9136  1BEA  0825               	movf	(___flsub@b+1)^(0+128),w
  9137  1BEB  1283               	bcf	3,5	;RP0=0, select bank0
  9138  1BEC  1303               	bcf	3,6	;RP1=0, select bank0
  9139  1BED  00D7               	movwf	___fladd@b+1
  9140  1BEE  1683               	bsf	3,5	;RP0=1, select bank1
  9141  1BEF  1303               	bcf	3,6	;RP1=0, select bank1
  9142  1BF0  0824               	movf	___flsub@b^(0+128),w
  9143  1BF1  1283               	bcf	3,5	;RP0=0, select bank0
  9144  1BF2  1303               	bcf	3,6	;RP1=0, select bank0
  9145  1BF3  00D6               	movwf	___fladd@b
  9146  1BF4  1683               	bsf	3,5	;RP0=1, select bank1
  9147  1BF5  1303               	bcf	3,6	;RP1=0, select bank1
  9148  1BF6  0823               	movf	(___flsub@a+3)^(0+128),w
  9149  1BF7  1283               	bcf	3,5	;RP0=0, select bank0
  9150  1BF8  1303               	bcf	3,6	;RP1=0, select bank0
  9151  1BF9  00DD               	movwf	___fladd@a+3
  9152  1BFA  1683               	bsf	3,5	;RP0=1, select bank1
  9153  1BFB  1303               	bcf	3,6	;RP1=0, select bank1
  9154  1BFC  0822               	movf	(___flsub@a+2)^(0+128),w
  9155  1BFD  1283               	bcf	3,5	;RP0=0, select bank0
  9156  1BFE  1303               	bcf	3,6	;RP1=0, select bank0
  9157  1BFF  00DC               	movwf	___fladd@a+2
  9158  1C00  1683               	bsf	3,5	;RP0=1, select bank1
  9159  1C01  1303               	bcf	3,6	;RP1=0, select bank1
  9160  1C02  0821               	movf	(___flsub@a+1)^(0+128),w
  9161  1C03  1283               	bcf	3,5	;RP0=0, select bank0
  9162  1C04  1303               	bcf	3,6	;RP1=0, select bank0
  9163  1C05  00DB               	movwf	___fladd@a+1
  9164  1C06  1683               	bsf	3,5	;RP0=1, select bank1
  9165  1C07  1303               	bcf	3,6	;RP1=0, select bank1
  9166  1C08  0820               	movf	___flsub@a^(0+128),w
  9167  1C09  1283               	bcf	3,5	;RP0=0, select bank0
  9168  1C0A  1303               	bcf	3,6	;RP1=0, select bank0
  9169  1C0B  00DA               	movwf	___fladd@a
  9170  1C0C  160A  118A  22E5  160A  158A  	fcall	___fladd
  9171  1C11  1283               	bcf	3,5	;RP0=0, select bank0
  9172  1C12  1303               	bcf	3,6	;RP1=0, select bank0
  9173  1C13  0859               	movf	?___fladd+3,w
  9174  1C14  1683               	bsf	3,5	;RP0=1, select bank1
  9175  1C15  1303               	bcf	3,6	;RP1=0, select bank1
  9176  1C16  00A3               	movwf	(?___flsub+3)^(0+128)
  9177  1C17  1283               	bcf	3,5	;RP0=0, select bank0
  9178  1C18  1303               	bcf	3,6	;RP1=0, select bank0
  9179  1C19  0858               	movf	?___fladd+2,w
  9180  1C1A  1683               	bsf	3,5	;RP0=1, select bank1
  9181  1C1B  1303               	bcf	3,6	;RP1=0, select bank1
  9182  1C1C  00A2               	movwf	(?___flsub+2)^(0+128)
  9183  1C1D  1283               	bcf	3,5	;RP0=0, select bank0
  9184  1C1E  1303               	bcf	3,6	;RP1=0, select bank0
  9185  1C1F  0857               	movf	?___fladd+1,w
  9186  1C20  1683               	bsf	3,5	;RP0=1, select bank1
  9187  1C21  1303               	bcf	3,6	;RP1=0, select bank1
  9188  1C22  00A1               	movwf	(?___flsub+1)^(0+128)
  9189  1C23  1283               	bcf	3,5	;RP0=0, select bank0
  9190  1C24  1303               	bcf	3,6	;RP1=0, select bank0
  9191  1C25  0856               	movf	?___fladd,w
  9192  1C26  1683               	bsf	3,5	;RP0=1, select bank1
  9193  1C27  1303               	bcf	3,6	;RP1=0, select bank1
  9194  1C28  00A0               	movwf	?___flsub^(0+128)
  9195  1C29                     l765:
  9196  1C29  0008               	return
  9197  1C2A                     __end_of___flsub:
  9198                           
  9199                           	psect	text19
  9200  12E5                     __ptext19:	
  9201 ;; *************** function ___fladd *****************
  9202 ;; Defined at:
  9203 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  9204 ;; Parameters:    Size  Location     Type
  9205 ;;  b               4   54[BANK0 ] long 
  9206 ;;  a               4   58[BANK0 ] long 
  9207 ;; Auto vars:     Size  Location     Type
  9208 ;;  grs             1   73[BANK0 ] unsigned char 
  9209 ;;  bexp            1   72[BANK0 ] unsigned char 
  9210 ;;  aexp            1   71[BANK0 ] unsigned char 
  9211 ;;  signs           1   70[BANK0 ] unsigned char 
  9212 ;; Return value:  Size  Location     Type
  9213 ;;                  4   54[BANK0 ] unsigned char 
  9214 ;; Registers used:
  9215 ;;		wreg, status,2, status,0, btemp+1
  9216 ;; Tracked objects:
  9217 ;;		On entry : 0/0
  9218 ;;		On exit  : 0/0
  9219 ;;		Unchanged: 0/0
  9220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9221 ;;      Params:         0       8       0       0       0
  9222 ;;      Locals:         0       4       0       0       0
  9223 ;;      Temps:          0       8       0       0       0
  9224 ;;      Totals:         0      20       0       0       0
  9225 ;;Total ram usage:       20 bytes
  9226 ;; Hardware stack levels used:    1
  9227 ;; Hardware stack levels required when called:    1
  9228 ;; This function calls:
  9229 ;;		Nothing
  9230 ;; This function is called by:
  9231 ;;		_sprintf
  9232 ;;		___flsub
  9233 ;; This function uses a non-reentrant model
  9234 ;;
  9235                           
  9236                           
  9237                           ;psect for function ___fladd
  9238  12E5                     ___fladd:
  9239  12E5                     l2627:	
  9240                           ;incstack = 0
  9241                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  9242                           
  9243  12E5  1283               	bcf	3,5	;RP0=0, select bank0
  9244  12E6  1303               	bcf	3,6	;RP1=0, select bank0
  9245  12E7  0859               	movf	___fladd@b+3,w
  9246  12E8  3980               	andlw	128
  9247  12E9  00DE               	movwf	??___fladd
  9248  12EA  085E               	movf	??___fladd,w
  9249  12EB  00E6               	movwf	___fladd@signs
  9250  12EC                     l2629:
  9251  12EC  0859               	movf	___fladd@b+3,w
  9252  12ED  00DE               	movwf	??___fladd
  9253  12EE  075E               	addwf	??___fladd,w
  9254  12EF  00DF               	movwf	??___fladd+1
  9255  12F0  085F               	movf	??___fladd+1,w
  9256  12F1  00E8               	movwf	___fladd@bexp
  9257  12F2                     l2631:
  9258  12F2  1FD8               	btfss	___fladd@b+2,7
  9259  12F3  2AF5               	goto	u3221
  9260  12F4  2AF6               	goto	u3220
  9261  12F5                     u3221:
  9262  12F5  2AF7               	goto	l2635
  9263  12F6                     u3220:
  9264  12F6                     l2633:
  9265  12F6  1468               	bsf	___fladd@bexp,0
  9266  12F7                     l2635:
  9267  12F7  0868               	movf	___fladd@bexp,w
  9268  12F8  1903               	btfsc	3,2
  9269  12F9  2AFB               	goto	u3231
  9270  12FA  2AFC               	goto	u3230
  9271  12FB                     u3231:
  9272  12FB  2B0C               	goto	l2645
  9273  12FC                     u3230:
  9274  12FC                     l2637:
  9275  12FC  0A68               	incf	___fladd@bexp,w
  9276  12FD  1D03               	btfss	3,2
  9277  12FE  2B00               	goto	u3241
  9278  12FF  2B01               	goto	u3240
  9279  1300                     u3241:
  9280  1300  2B09               	goto	l2641
  9281  1301                     u3240:
  9282  1301                     l2639:
  9283  1301  3000               	movlw	0
  9284  1302  00D9               	movwf	___fladd@b+3
  9285  1303  3000               	movlw	0
  9286  1304  00D8               	movwf	___fladd@b+2
  9287  1305  3000               	movlw	0
  9288  1306  00D7               	movwf	___fladd@b+1
  9289  1307  3000               	movlw	0
  9290  1308  00D6               	movwf	___fladd@b
  9291  1309                     l2641:
  9292  1309  17D8               	bsf	___fladd@b+2,7
  9293  130A                     l2643:
  9294  130A  01D9               	clrf	___fladd@b+3
  9295  130B  2B14               	goto	l2647
  9296  130C                     l2645:
  9297  130C  3000               	movlw	0
  9298  130D  00D9               	movwf	___fladd@b+3
  9299  130E  3000               	movlw	0
  9300  130F  00D8               	movwf	___fladd@b+2
  9301  1310  3000               	movlw	0
  9302  1311  00D7               	movwf	___fladd@b+1
  9303  1312  3000               	movlw	0
  9304  1313  00D6               	movwf	___fladd@b
  9305  1314                     l2647:
  9306  1314  085D               	movf	___fladd@a+3,w
  9307  1315  3980               	andlw	128
  9308  1316  00DE               	movwf	??___fladd
  9309  1317  085E               	movf	??___fladd,w
  9310  1318  00E7               	movwf	___fladd@aexp
  9311  1319                     l2649:
  9312  1319  0867               	movf	___fladd@aexp,w
  9313  131A  0666               	xorwf	___fladd@signs,w
  9314  131B  1903               	skipnz
  9315  131C  2B1E               	goto	u3251
  9316  131D  2B1F               	goto	u3250
  9317  131E                     u3251:
  9318  131E  2B20               	goto	l2653
  9319  131F                     u3250:
  9320  131F                     l2651:
  9321  131F  1766               	bsf	___fladd@signs,6
  9322  1320                     l2653:
  9323  1320  085D               	movf	___fladd@a+3,w
  9324  1321  00DE               	movwf	??___fladd
  9325  1322  075E               	addwf	??___fladd,w
  9326  1323  00DF               	movwf	??___fladd+1
  9327  1324  085F               	movf	??___fladd+1,w
  9328  1325  00E7               	movwf	___fladd@aexp
  9329  1326                     l2655:
  9330  1326  1FDC               	btfss	___fladd@a+2,7
  9331  1327  2B29               	goto	u3261
  9332  1328  2B2A               	goto	u3260
  9333  1329                     u3261:
  9334  1329  2B2B               	goto	l2659
  9335  132A                     u3260:
  9336  132A                     l2657:
  9337  132A  1467               	bsf	___fladd@aexp,0
  9338  132B                     l2659:
  9339  132B  0867               	movf	___fladd@aexp,w
  9340  132C  1903               	btfsc	3,2
  9341  132D  2B2F               	goto	u3271
  9342  132E  2B30               	goto	u3270
  9343  132F                     u3271:
  9344  132F  2B40               	goto	l2669
  9345  1330                     u3270:
  9346  1330                     l2661:
  9347  1330  0A67               	incf	___fladd@aexp,w
  9348  1331  1D03               	btfss	3,2
  9349  1332  2B34               	goto	u3281
  9350  1333  2B35               	goto	u3280
  9351  1334                     u3281:
  9352  1334  2B3D               	goto	l2665
  9353  1335                     u3280:
  9354  1335                     l2663:
  9355  1335  3000               	movlw	0
  9356  1336  00DD               	movwf	___fladd@a+3
  9357  1337  3000               	movlw	0
  9358  1338  00DC               	movwf	___fladd@a+2
  9359  1339  3000               	movlw	0
  9360  133A  00DB               	movwf	___fladd@a+1
  9361  133B  3000               	movlw	0
  9362  133C  00DA               	movwf	___fladd@a
  9363  133D                     l2665:
  9364  133D  17DC               	bsf	___fladd@a+2,7
  9365  133E                     l2667:
  9366  133E  01DD               	clrf	___fladd@a+3
  9367  133F  2B48               	goto	l719
  9368  1340                     l2669:
  9369  1340  3000               	movlw	0
  9370  1341  00DD               	movwf	___fladd@a+3
  9371  1342  3000               	movlw	0
  9372  1343  00DC               	movwf	___fladd@a+2
  9373  1344  3000               	movlw	0
  9374  1345  00DB               	movwf	___fladd@a+1
  9375  1346  3000               	movlw	0
  9376  1347  00DA               	movwf	___fladd@a
  9377  1348                     l719:
  9378  1348  0868               	movf	___fladd@bexp,w
  9379  1349  0267               	subwf	___fladd@aexp,w
  9380  134A  1803               	skipnc
  9381  134B  2B4D               	goto	u3291
  9382  134C  2B4E               	goto	u3290
  9383  134D                     u3291:
  9384  134D  2B92               	goto	l2705
  9385  134E                     u3290:
  9386  134E                     l2671:
  9387  134E  1F66               	btfss	___fladd@signs,6
  9388  134F  2B51               	goto	u3301
  9389  1350  2B52               	goto	u3300
  9390  1351                     u3301:
  9391  1351  2B56               	goto	l2675
  9392  1352                     u3300:
  9393  1352                     l2673:
  9394  1352  3080               	movlw	128
  9395  1353  00DE               	movwf	??___fladd
  9396  1354  085E               	movf	??___fladd,w
  9397  1355  06E6               	xorwf	___fladd@signs,f
  9398  1356                     l2675:
  9399  1356  0868               	movf	___fladd@bexp,w
  9400  1357  00DE               	movwf	??___fladd
  9401  1358  085E               	movf	??___fladd,w
  9402  1359  00E9               	movwf	___fladd@grs
  9403  135A                     l2677:
  9404  135A  0867               	movf	___fladd@aexp,w
  9405  135B  00DE               	movwf	??___fladd
  9406  135C  085E               	movf	??___fladd,w
  9407  135D  00E8               	movwf	___fladd@bexp
  9408  135E                     l2679:
  9409  135E  0869               	movf	___fladd@grs,w
  9410  135F  00DE               	movwf	??___fladd
  9411  1360  085E               	movf	??___fladd,w
  9412  1361  00E7               	movwf	___fladd@aexp
  9413  1362                     l2681:
  9414  1362  0856               	movf	___fladd@b,w
  9415  1363  00DE               	movwf	??___fladd
  9416  1364  085E               	movf	??___fladd,w
  9417  1365  00E9               	movwf	___fladd@grs
  9418  1366                     l2683:
  9419  1366  085A               	movf	___fladd@a,w
  9420  1367  00DE               	movwf	??___fladd
  9421  1368  085E               	movf	??___fladd,w
  9422  1369  00D6               	movwf	___fladd@b
  9423  136A                     l2685:
  9424  136A  0869               	movf	___fladd@grs,w
  9425  136B  00DE               	movwf	??___fladd
  9426  136C  085E               	movf	??___fladd,w
  9427  136D  00DA               	movwf	___fladd@a
  9428  136E                     l2687:
  9429  136E  0857               	movf	___fladd@b+1,w
  9430  136F  00DE               	movwf	??___fladd
  9431  1370  085E               	movf	??___fladd,w
  9432  1371  00E9               	movwf	___fladd@grs
  9433  1372                     l2689:
  9434  1372  085B               	movf	___fladd@a+1,w
  9435  1373  00DE               	movwf	??___fladd
  9436  1374  085E               	movf	??___fladd,w
  9437  1375  00D7               	movwf	___fladd@b+1
  9438  1376                     l2691:
  9439  1376  0869               	movf	___fladd@grs,w
  9440  1377  00DE               	movwf	??___fladd
  9441  1378  085E               	movf	??___fladd,w
  9442  1379  00DB               	movwf	___fladd@a+1
  9443  137A                     l2693:
  9444  137A  0858               	movf	___fladd@b+2,w
  9445  137B  00DE               	movwf	??___fladd
  9446  137C  085E               	movf	??___fladd,w
  9447  137D  00E9               	movwf	___fladd@grs
  9448  137E                     l2695:
  9449  137E  085C               	movf	___fladd@a+2,w
  9450  137F  00DE               	movwf	??___fladd
  9451  1380  085E               	movf	??___fladd,w
  9452  1381  00D8               	movwf	___fladd@b+2
  9453  1382                     l2697:
  9454  1382  0869               	movf	___fladd@grs,w
  9455  1383  00DE               	movwf	??___fladd
  9456  1384  085E               	movf	??___fladd,w
  9457  1385  00DC               	movwf	___fladd@a+2
  9458  1386                     l2699:
  9459  1386  0859               	movf	___fladd@b+3,w
  9460  1387  00DE               	movwf	??___fladd
  9461  1388  085E               	movf	??___fladd,w
  9462  1389  00E9               	movwf	___fladd@grs
  9463  138A                     l2701:
  9464  138A  085D               	movf	___fladd@a+3,w
  9465  138B  00DE               	movwf	??___fladd
  9466  138C  085E               	movf	??___fladd,w
  9467  138D  00D9               	movwf	___fladd@b+3
  9468  138E                     l2703:
  9469  138E  0869               	movf	___fladd@grs,w
  9470  138F  00DE               	movwf	??___fladd
  9471  1390  085E               	movf	??___fladd,w
  9472  1391  00DD               	movwf	___fladd@a+3
  9473  1392                     l2705:
  9474  1392  01E9               	clrf	___fladd@grs
  9475  1393                     l2707:
  9476  1393  0867               	movf	___fladd@aexp,w
  9477  1394  00DE               	movwf	??___fladd
  9478  1395  01DF               	clrf	??___fladd+1
  9479  1396  085F               	movf	??___fladd+1,w
  9480  1397  00E1               	movwf	??___fladd+3
  9481  1398  0868               	movf	___fladd@bexp,w
  9482  1399  025E               	subwf	??___fladd,w
  9483  139A  00E0               	movwf	??___fladd+2
  9484  139B  1C03               	skipc
  9485  139C  03E1               	decf	??___fladd+3,f
  9486  139D  0861               	movf	??___fladd+3,w
  9487  139E  3A80               	xorlw	128
  9488  139F  00FF               	movwf	btemp+1
  9489  13A0  3080               	movlw	128
  9490  13A1  027F               	subwf	btemp+1,w
  9491  13A2  1D03               	skipz
  9492  13A3  2BA6               	goto	u3315
  9493  13A4  301A               	movlw	26
  9494  13A5  0260               	subwf	??___fladd+2,w
  9495  13A6                     u3315:
  9496  13A6  1C03               	skipc
  9497  13A7  2BA9               	goto	u3311
  9498  13A8  2BAA               	goto	u3310
  9499  13A9                     u3311:
  9500  13A9  2BE7               	goto	l2723
  9501  13AA                     u3310:
  9502  13AA                     l2709:
  9503  13AA  1283               	bcf	3,5	;RP0=0, select bank0
  9504  13AB  1303               	bcf	3,6	;RP1=0, select bank0
  9505  13AC  0859               	movf	___fladd@b+3,w
  9506  13AD  0458               	iorwf	___fladd@b+2,w
  9507  13AE  0457               	iorwf	___fladd@b+1,w
  9508  13AF  0456               	iorwf	___fladd@b,w
  9509  13B0  1D03               	skipz
  9510  13B1  2BB3               	goto	u3321
  9511  13B2  2BB5               	goto	u3320
  9512  13B3                     u3321:
  9513  13B3  3001               	movlw	1
  9514  13B4  2BB6               	goto	u3330
  9515  13B5                     u3320:
  9516  13B5  3000               	movlw	0
  9517  13B6                     u3330:
  9518  13B6  00DE               	movwf	??___fladd
  9519  13B7  085E               	movf	??___fladd,w
  9520  13B8  00E9               	movwf	___fladd@grs
  9521  13B9  3000               	movlw	0
  9522  13BA  00D9               	movwf	___fladd@b+3
  9523  13BB  3000               	movlw	0
  9524  13BC  00D8               	movwf	___fladd@b+2
  9525  13BD  3000               	movlw	0
  9526  13BE  00D7               	movwf	___fladd@b+1
  9527  13BF  3000               	movlw	0
  9528  13C0  00D6               	movwf	___fladd@b
  9529  13C1  0867               	movf	___fladd@aexp,w
  9530  13C2  00DE               	movwf	??___fladd
  9531  13C3  085E               	movf	??___fladd,w
  9532  13C4  00E8               	movwf	___fladd@bexp
  9533  13C5  2BEF               	goto	l723
  9534  13C6                     l725:
  9535  13C6  1C69               	btfss	___fladd@grs,0
  9536  13C7  2BC9               	goto	u3341
  9537  13C8  2BCA               	goto	u3340
  9538  13C9                     u3341:
  9539  13C9  2BD3               	goto	l2713
  9540  13CA                     u3340:
  9541  13CA                     l2711:
  9542  13CA  0869               	movf	___fladd@grs,w
  9543  13CB  00DE               	movwf	??___fladd
  9544  13CC  1003               	clrc
  9545  13CD  0C5E               	rrf	??___fladd,w
  9546  13CE  3801               	iorlw	1
  9547  13CF  00DF               	movwf	??___fladd+1
  9548  13D0  085F               	movf	??___fladd+1,w
  9549  13D1  00E9               	movwf	___fladd@grs
  9550  13D2  2BD5               	goto	l2715
  9551  13D3                     l2713:
  9552  13D3  1003               	clrc
  9553  13D4  0CE9               	rrf	___fladd@grs,f
  9554  13D5                     l2715:
  9555  13D5  1C56               	btfss	___fladd@b,0
  9556  13D6  2BD8               	goto	u3351
  9557  13D7  2BD9               	goto	u3350
  9558  13D8                     u3351:
  9559  13D8  2BDA               	goto	l2719
  9560  13D9                     u3350:
  9561  13D9                     l2717:
  9562  13D9  17E9               	bsf	___fladd@grs,7
  9563  13DA                     l2719:
  9564  13DA  3001               	movlw	1
  9565  13DB  00DE               	movwf	??___fladd
  9566  13DC                     u3365:
  9567  13DC  0D59               	rlf	___fladd@b+3,w
  9568  13DD  0CD9               	rrf	___fladd@b+3,f
  9569  13DE  0CD8               	rrf	___fladd@b+2,f
  9570  13DF  0CD7               	rrf	___fladd@b+1,f
  9571  13E0  0CD6               	rrf	___fladd@b,f
  9572  13E1  0BDE               	decfsz	??___fladd& (0+127),f
  9573  13E2  2BDC               	goto	u3365
  9574  13E3                     l2721:
  9575  13E3  3001               	movlw	1
  9576  13E4  00DE               	movwf	??___fladd
  9577  13E5  085E               	movf	??___fladd,w
  9578  13E6  07E8               	addwf	___fladd@bexp,f
  9579  13E7                     l2723:
  9580  13E7  1283               	bcf	3,5	;RP0=0, select bank0
  9581  13E8  1303               	bcf	3,6	;RP1=0, select bank0
  9582  13E9  0867               	movf	___fladd@aexp,w
  9583  13EA  0268               	subwf	___fladd@bexp,w
  9584  13EB  1C03               	skipc
  9585  13EC  2BEE               	goto	u3371
  9586  13ED  2BEF               	goto	u3370
  9587  13EE                     u3371:
  9588  13EE  2BC6               	goto	l725
  9589  13EF                     u3370:
  9590  13EF                     l723:
  9591  13EF  1B66               	btfsc	___fladd@signs,6
  9592  13F0  2BF2               	goto	u3381
  9593  13F1  2BF3               	goto	u3380
  9594  13F2                     u3381:
  9595  13F2  2C3E               	goto	l2749
  9596  13F3                     u3380:
  9597  13F3                     l2725:
  9598  13F3  0868               	movf	___fladd@bexp,w
  9599  13F4  1D03               	btfss	3,2
  9600  13F5  2BF7               	goto	u3391
  9601  13F6  2BF8               	goto	u3390
  9602  13F7                     u3391:
  9603  13F7  2C01               	goto	l2731
  9604  13F8                     u3390:
  9605  13F8                     l2727:
  9606  13F8  3000               	movlw	0
  9607  13F9  00D9               	movwf	?___fladd+3
  9608  13FA  3000               	movlw	0
  9609  13FB  00D8               	movwf	?___fladd+2
  9610  13FC  3000               	movlw	0
  9611  13FD  00D7               	movwf	?___fladd+1
  9612  13FE  3000               	movlw	0
  9613  13FF  00D6               	movwf	?___fladd
  9614  1400  2D6C               	goto	l732
  9615  1401                     l2731:
  9616  1401  085A               	movf	___fladd@a,w
  9617  1402  07D6               	addwf	___fladd@b,f
  9618  1403  085B               	movf	___fladd@a+1,w
  9619  1404  1103               	clrz
  9620  1405  1803               	skipnc
  9621  1406  3E01               	addlw	1
  9622  1407  1903               	skipnz
  9623  1408  2C0A               	goto	u3401
  9624  1409  07D7               	addwf	___fladd@b+1,f
  9625  140A                     u3401:
  9626  140A  085C               	movf	___fladd@a+2,w
  9627  140B  1103               	clrz
  9628  140C  1803               	skipnc
  9629  140D  3E01               	addlw	1
  9630  140E  1903               	skipnz
  9631  140F  2C11               	goto	u3402
  9632  1410  07D8               	addwf	___fladd@b+2,f
  9633  1411                     u3402:
  9634  1411  085D               	movf	___fladd@a+3,w
  9635  1412  1103               	clrz
  9636  1413  1803               	skipnc
  9637  1414  3E01               	addlw	1
  9638  1415  1903               	skipnz
  9639  1416  2C18               	goto	u3403
  9640  1417  07D9               	addwf	___fladd@b+3,f
  9641  1418                     u3403:
  9642  1418                     l2733:
  9643  1418  1C59               	btfss	___fladd@b+3,0
  9644  1419  2C1B               	goto	u3411
  9645  141A  2C1C               	goto	u3410
  9646  141B                     u3411:
  9647  141B  2CF2               	goto	l2783
  9648  141C                     u3410:
  9649  141C                     l2735:
  9650  141C  1C69               	btfss	___fladd@grs,0
  9651  141D  2C1F               	goto	u3421
  9652  141E  2C20               	goto	u3420
  9653  141F                     u3421:
  9654  141F  2C29               	goto	l2739
  9655  1420                     u3420:
  9656  1420                     l2737:
  9657  1420  0869               	movf	___fladd@grs,w
  9658  1421  00DE               	movwf	??___fladd
  9659  1422  1003               	clrc
  9660  1423  0C5E               	rrf	??___fladd,w
  9661  1424  3801               	iorlw	1
  9662  1425  00DF               	movwf	??___fladd+1
  9663  1426  085F               	movf	??___fladd+1,w
  9664  1427  00E9               	movwf	___fladd@grs
  9665  1428  2C2B               	goto	l2741
  9666  1429                     l2739:
  9667  1429  1003               	clrc
  9668  142A  0CE9               	rrf	___fladd@grs,f
  9669  142B                     l2741:
  9670  142B  1C56               	btfss	___fladd@b,0
  9671  142C  2C2E               	goto	u3431
  9672  142D  2C2F               	goto	u3430
  9673  142E                     u3431:
  9674  142E  2C30               	goto	l2745
  9675  142F                     u3430:
  9676  142F                     l2743:
  9677  142F  17E9               	bsf	___fladd@grs,7
  9678  1430                     l2745:
  9679  1430  3001               	movlw	1
  9680  1431  00DE               	movwf	??___fladd
  9681  1432                     u3445:
  9682  1432  0D59               	rlf	___fladd@b+3,w
  9683  1433  0CD9               	rrf	___fladd@b+3,f
  9684  1434  0CD8               	rrf	___fladd@b+2,f
  9685  1435  0CD7               	rrf	___fladd@b+1,f
  9686  1436  0CD6               	rrf	___fladd@b,f
  9687  1437  0BDE               	decfsz	??___fladd& (0+127),f
  9688  1438  2C32               	goto	u3445
  9689  1439                     l2747:
  9690  1439  3001               	movlw	1
  9691  143A  00DE               	movwf	??___fladd
  9692  143B  085E               	movf	??___fladd,w
  9693  143C  07E8               	addwf	___fladd@bexp,f
  9694  143D  2CF2               	goto	l2783
  9695  143E                     l2749:
  9696  143E  0859               	movf	___fladd@b+3,w
  9697  143F  3A80               	xorlw	128
  9698  1440  00FF               	movwf	btemp+1
  9699  1441  085D               	movf	___fladd@a+3,w
  9700  1442  3A80               	xorlw	128
  9701  1443  027F               	subwf	btemp+1,w
  9702  1444  1D03               	skipz
  9703  1445  2C50               	goto	u3453
  9704  1446  085C               	movf	___fladd@a+2,w
  9705  1447  0258               	subwf	___fladd@b+2,w
  9706  1448  1D03               	skipz
  9707  1449  2C50               	goto	u3453
  9708  144A  085B               	movf	___fladd@a+1,w
  9709  144B  0257               	subwf	___fladd@b+1,w
  9710  144C  1D03               	skipz
  9711  144D  2C50               	goto	u3453
  9712  144E  085A               	movf	___fladd@a,w
  9713  144F  0256               	subwf	___fladd@b,w
  9714  1450                     u3453:
  9715  1450  1803               	skipnc
  9716  1451  2C53               	goto	u3451
  9717  1452  2C54               	goto	u3450
  9718  1453                     u3451:
  9719  1453  2CAC               	goto	l2759
  9720  1454                     u3450:
  9721  1454                     l2751:
  9722  1454  30FF               	movlw	255
  9723  1455  00DE               	movwf	??___fladd
  9724  1456  30FF               	movlw	255
  9725  1457  00DF               	movwf	??___fladd+1
  9726  1458  30FF               	movlw	255
  9727  1459  00E0               	movwf	??___fladd+2
  9728  145A  30FF               	movlw	255
  9729  145B  00E1               	movwf	??___fladd+3
  9730  145C  085A               	movf	___fladd@a,w
  9731  145D  00E2               	movwf	??___fladd+4
  9732  145E  085B               	movf	___fladd@a+1,w
  9733  145F  00E3               	movwf	??___fladd+5
  9734  1460  085C               	movf	___fladd@a+2,w
  9735  1461  00E4               	movwf	??___fladd+6
  9736  1462  085D               	movf	___fladd@a+3,w
  9737  1463  00E5               	movwf	??___fladd+7
  9738  1464  0856               	movf	___fladd@b,w
  9739  1465  02E2               	subwf	??___fladd+4,f
  9740  1466  0857               	movf	___fladd@b+1,w
  9741  1467  1C03               	skipc
  9742  1468  0F57               	incfsz	___fladd@b+1,w
  9743  1469  2C6B               	goto	u3461
  9744  146A  2C6C               	goto	u3462
  9745  146B                     u3461:
  9746  146B  02E3               	subwf	??___fladd+5,f
  9747  146C                     u3462:
  9748  146C  0858               	movf	___fladd@b+2,w
  9749  146D  1C03               	skipc
  9750  146E  0F58               	incfsz	___fladd@b+2,w
  9751  146F  2C71               	goto	u3463
  9752  1470  2C72               	goto	u3464
  9753  1471                     u3463:
  9754  1471  02E4               	subwf	??___fladd+6,f
  9755  1472                     u3464:
  9756  1472  0859               	movf	___fladd@b+3,w
  9757  1473  1C03               	skipc
  9758  1474  0F59               	incfsz	___fladd@b+3,w
  9759  1475  2C77               	goto	u3465
  9760  1476  2C78               	goto	u3466
  9761  1477                     u3465:
  9762  1477  02E5               	subwf	??___fladd+7,f
  9763  1478                     u3466:
  9764  1478  0862               	movf	??___fladd+4,w
  9765  1479  07DE               	addwf	??___fladd,f
  9766  147A  0863               	movf	??___fladd+5,w
  9767  147B  1803               	skipnc
  9768  147C  0F63               	incfsz	??___fladd+5,w
  9769  147D  2C7F               	goto	u3470
  9770  147E  2C80               	goto	u3471
  9771  147F                     u3470:
  9772  147F  07DF               	addwf	??___fladd+1,f
  9773  1480                     u3471:
  9774  1480  0864               	movf	??___fladd+6,w
  9775  1481  1803               	skipnc
  9776  1482  0F64               	incfsz	??___fladd+6,w
  9777  1483  2C85               	goto	u3472
  9778  1484  2C86               	goto	u3473
  9779  1485                     u3472:
  9780  1485  07E0               	addwf	??___fladd+2,f
  9781  1486                     u3473:
  9782  1486  0865               	movf	??___fladd+7,w
  9783  1487  1803               	skipnc
  9784  1488  0A65               	incf	??___fladd+7,w
  9785  1489  07E1               	addwf	??___fladd+3,f
  9786  148A  0861               	movf	??___fladd+3,w
  9787  148B  00D9               	movwf	___fladd@b+3
  9788  148C  0860               	movf	??___fladd+2,w
  9789  148D  00D8               	movwf	___fladd@b+2
  9790  148E  085F               	movf	??___fladd+1,w
  9791  148F  00D7               	movwf	___fladd@b+1
  9792  1490  085E               	movf	??___fladd,w
  9793  1491  00D6               	movwf	___fladd@b
  9794  1492                     l2753:
  9795  1492  3080               	movlw	128
  9796  1493  00DE               	movwf	??___fladd
  9797  1494  085E               	movf	??___fladd,w
  9798  1495  06E6               	xorwf	___fladd@signs,f
  9799  1496  09E9               	comf	___fladd@grs,f
  9800  1497  0AE9               	incf	___fladd@grs,f
  9801  1498                     l2755:
  9802  1498  0869               	movf	___fladd@grs,w
  9803  1499  1D03               	btfss	3,2
  9804  149A  2C9C               	goto	u3481
  9805  149B  2C9D               	goto	u3480
  9806  149C                     u3481:
  9807  149C  2CBA               	goto	l740
  9808  149D                     u3480:
  9809  149D                     l2757:
  9810  149D  3001               	movlw	1
  9811  149E  07D6               	addwf	___fladd@b,f
  9812  149F  3000               	movlw	0
  9813  14A0  1803               	skipnc
  9814  14A1  3001               	movlw	1
  9815  14A2  07D7               	addwf	___fladd@b+1,f
  9816  14A3  3000               	movlw	0
  9817  14A4  1803               	skipnc
  9818  14A5  3001               	movlw	1
  9819  14A6  07D8               	addwf	___fladd@b+2,f
  9820  14A7  3000               	movlw	0
  9821  14A8  1803               	skipnc
  9822  14A9  3001               	movlw	1
  9823  14AA  07D9               	addwf	___fladd@b+3,f
  9824  14AB  2CBA               	goto	l740
  9825  14AC                     l2759:
  9826  14AC  085A               	movf	___fladd@a,w
  9827  14AD  02D6               	subwf	___fladd@b,f
  9828  14AE  085B               	movf	___fladd@a+1,w
  9829  14AF  1C03               	skipc
  9830  14B0  0F5B               	incfsz	___fladd@a+1,w
  9831  14B1  02D7               	subwf	___fladd@b+1,f
  9832  14B2  085C               	movf	___fladd@a+2,w
  9833  14B3  1C03               	skipc
  9834  14B4  0F5C               	incfsz	___fladd@a+2,w
  9835  14B5  02D8               	subwf	___fladd@b+2,f
  9836  14B6  085D               	movf	___fladd@a+3,w
  9837  14B7  1C03               	skipc
  9838  14B8  0F5D               	incfsz	___fladd@a+3,w
  9839  14B9  02D9               	subwf	___fladd@b+3,f
  9840  14BA                     l740:
  9841  14BA  0859               	movf	___fladd@b+3,w
  9842  14BB  0458               	iorwf	___fladd@b+2,w
  9843  14BC  0457               	iorwf	___fladd@b+1,w
  9844  14BD  0456               	iorwf	___fladd@b,w
  9845  14BE  1D03               	skipz
  9846  14BF  2CC1               	goto	u3491
  9847  14C0  2CC2               	goto	u3490
  9848  14C1                     u3491:
  9849  14C1  2CEE               	goto	l2781
  9850  14C2                     u3490:
  9851  14C2                     l2761:
  9852  14C2  0869               	movf	___fladd@grs,w
  9853  14C3  1D03               	btfss	3,2
  9854  14C4  2CC6               	goto	u3501
  9855  14C5  2CC7               	goto	u3500
  9856  14C6                     u3501:
  9857  14C6  2CEE               	goto	l2781
  9858  14C7                     u3500:
  9859  14C7                     l2763:
  9860  14C7  3000               	movlw	0
  9861  14C8  00D9               	movwf	?___fladd+3
  9862  14C9  3000               	movlw	0
  9863  14CA  00D8               	movwf	?___fladd+2
  9864  14CB  3000               	movlw	0
  9865  14CC  00D7               	movwf	?___fladd+1
  9866  14CD  3000               	movlw	0
  9867  14CE  00D6               	movwf	?___fladd
  9868  14CF  2D6C               	goto	l732
  9869  14D0                     l2767:
  9870  14D0  3001               	movlw	1
  9871  14D1  00DE               	movwf	??___fladd
  9872  14D2                     u3515:
  9873  14D2  1003               	clrc
  9874  14D3  0DD6               	rlf	___fladd@b,f
  9875  14D4  0DD7               	rlf	___fladd@b+1,f
  9876  14D5  0DD8               	rlf	___fladd@b+2,f
  9877  14D6  0DD9               	rlf	___fladd@b+3,f
  9878  14D7  0BDE               	decfsz	??___fladd,f
  9879  14D8  2CD2               	goto	u3515
  9880  14D9                     l2769:
  9881  14D9  1FE9               	btfss	___fladd@grs,7
  9882  14DA  2CDC               	goto	u3521
  9883  14DB  2CDD               	goto	u3520
  9884  14DC                     u3521:
  9885  14DC  2CDE               	goto	l744
  9886  14DD                     u3520:
  9887  14DD                     l2771:
  9888  14DD  1456               	bsf	___fladd@b,0
  9889  14DE                     l744:
  9890  14DE  1C69               	btfss	___fladd@grs,0
  9891  14DF  2CE1               	goto	u3531
  9892  14E0  2CE2               	goto	u3530
  9893  14E1                     u3531:
  9894  14E1  2CE5               	goto	l2775
  9895  14E2                     u3530:
  9896  14E2                     l2773:
  9897  14E2  1403               	setc
  9898  14E3  0DE9               	rlf	___fladd@grs,f
  9899  14E4  2CE7               	goto	l2777
  9900  14E5                     l2775:
  9901  14E5  1003               	clrc
  9902  14E6  0DE9               	rlf	___fladd@grs,f
  9903  14E7                     l2777:
  9904  14E7  0868               	movf	___fladd@bexp,w
  9905  14E8  1903               	btfsc	3,2
  9906  14E9  2CEB               	goto	u3541
  9907  14EA  2CEC               	goto	u3540
  9908  14EB                     u3541:
  9909  14EB  2CEE               	goto	l2781
  9910  14EC                     u3540:
  9911  14EC                     l2779:
  9912  14EC  3001               	movlw	1
  9913  14ED  02E8               	subwf	___fladd@bexp,f
  9914  14EE                     l2781:
  9915  14EE  1FD8               	btfss	___fladd@b+2,7
  9916  14EF  2CF1               	goto	u3551
  9917  14F0  2CF2               	goto	u3550
  9918  14F1                     u3551:
  9919  14F1  2CD0               	goto	l2767
  9920  14F2                     u3550:
  9921  14F2                     l2783:
  9922  14F2  01E7               	clrf	___fladd@aexp
  9923  14F3                     l2785:
  9924  14F3  1FE9               	btfss	___fladd@grs,7
  9925  14F4  2CF6               	goto	u3561
  9926  14F5  2CF7               	goto	u3560
  9927  14F6                     u3561:
  9928  14F6  2D05               	goto	l2793
  9929  14F7                     u3560:
  9930  14F7                     l2787:
  9931  14F7  0869               	movf	___fladd@grs,w
  9932  14F8  397F               	andlw	127
  9933  14F9  1903               	btfsc	3,2
  9934  14FA  2CFC               	goto	u3571
  9935  14FB  2CFD               	goto	u3570
  9936  14FC                     u3571:
  9937  14FC  2D00               	goto	l750
  9938  14FD                     u3570:
  9939  14FD                     l2789:
  9940  14FD  01E7               	clrf	___fladd@aexp
  9941  14FE  0AE7               	incf	___fladd@aexp,f
  9942  14FF  2D05               	goto	l2793
  9943  1500                     l750:
  9944  1500  1C56               	btfss	___fladd@b,0
  9945  1501  2D03               	goto	u3581
  9946  1502  2D04               	goto	u3580
  9947  1503                     u3581:
  9948  1503  2D05               	goto	l2793
  9949  1504                     u3580:
  9950  1504  2CFD               	goto	l2789
  9951  1505                     l2793:
  9952  1505  0867               	movf	___fladd@aexp,w
  9953  1506  1903               	btfsc	3,2
  9954  1507  2D09               	goto	u3591
  9955  1508  2D0A               	goto	u3590
  9956  1509                     u3591:
  9957  1509  2D3E               	goto	l753
  9958  150A                     u3590:
  9959  150A                     l2795:
  9960  150A  3001               	movlw	1
  9961  150B  07D6               	addwf	___fladd@b,f
  9962  150C  3000               	movlw	0
  9963  150D  1803               	skipnc
  9964  150E  3001               	movlw	1
  9965  150F  07D7               	addwf	___fladd@b+1,f
  9966  1510  3000               	movlw	0
  9967  1511  1803               	skipnc
  9968  1512  3001               	movlw	1
  9969  1513  07D8               	addwf	___fladd@b+2,f
  9970  1514  3000               	movlw	0
  9971  1515  1803               	skipnc
  9972  1516  3001               	movlw	1
  9973  1517  07D9               	addwf	___fladd@b+3,f
  9974  1518                     l2797:
  9975  1518  1C59               	btfss	___fladd@b+3,0
  9976  1519  2D1B               	goto	u3601
  9977  151A  2D1C               	goto	u3600
  9978  151B                     u3601:
  9979  151B  2D3E               	goto	l753
  9980  151C                     u3600:
  9981  151C                     l2799:
  9982  151C  0856               	movf	___fladd@b,w
  9983  151D  00DE               	movwf	??___fladd
  9984  151E  0857               	movf	___fladd@b+1,w
  9985  151F  00DF               	movwf	??___fladd+1
  9986  1520  0858               	movf	___fladd@b+2,w
  9987  1521  00E0               	movwf	??___fladd+2
  9988  1522  0859               	movf	___fladd@b+3,w
  9989  1523  00E1               	movwf	??___fladd+3
  9990  1524  3001               	movlw	1
  9991  1525  00E2               	movwf	??___fladd+4
  9992  1526                     u3615:
  9993  1526  0D61               	rlf	??___fladd+3,w
  9994  1527  0CE1               	rrf	??___fladd+3,f
  9995  1528  0CE0               	rrf	??___fladd+2,f
  9996  1529  0CDF               	rrf	??___fladd+1,f
  9997  152A  0CDE               	rrf	??___fladd,f
  9998  152B                     u3610:
  9999  152B  0BE2               	decfsz	??___fladd+4,f
 10000  152C  2D26               	goto	u3615
 10001  152D  0861               	movf	??___fladd+3,w
 10002  152E  00D9               	movwf	___fladd@b+3
 10003  152F  0860               	movf	??___fladd+2,w
 10004  1530  00D8               	movwf	___fladd@b+2
 10005  1531  085F               	movf	??___fladd+1,w
 10006  1532  00D7               	movwf	___fladd@b+1
 10007  1533  085E               	movf	??___fladd,w
 10008  1534  00D6               	movwf	___fladd@b
 10009  1535  0A68               	incf	___fladd@bexp,w
 10010  1536  1903               	btfsc	3,2
 10011  1537  2D39               	goto	u3621
 10012  1538  2D3A               	goto	u3620
 10013  1539                     u3621:
 10014  1539  2D3E               	goto	l753
 10015  153A                     u3620:
 10016  153A                     l2801:
 10017  153A  3001               	movlw	1
 10018  153B  00DE               	movwf	??___fladd
 10019  153C  085E               	movf	??___fladd,w
 10020  153D  07E8               	addwf	___fladd@bexp,f
 10021  153E                     l753:
 10022  153E  0A68               	incf	___fladd@bexp,w
 10023  153F  1903               	btfsc	3,2
 10024  1540  2D42               	goto	u3631
 10025  1541  2D43               	goto	u3630
 10026  1542                     u3631:
 10027  1542  2D48               	goto	l2805
 10028  1543                     u3630:
 10029  1543                     l2803:
 10030  1543  0868               	movf	___fladd@bexp,w
 10031  1544  1D03               	btfss	3,2
 10032  1545  2D47               	goto	u3641
 10033  1546  2D48               	goto	u3640
 10034  1547                     u3641:
 10035  1547  2D56               	goto	l2811
 10036  1548                     u3640:
 10037  1548                     l2805:
 10038  1548  3000               	movlw	0
 10039  1549  00D9               	movwf	___fladd@b+3
 10040  154A  3000               	movlw	0
 10041  154B  00D8               	movwf	___fladd@b+2
 10042  154C  3000               	movlw	0
 10043  154D  00D7               	movwf	___fladd@b+1
 10044  154E  3000               	movlw	0
 10045  154F  00D6               	movwf	___fladd@b
 10046  1550                     l2807:
 10047  1550  0868               	movf	___fladd@bexp,w
 10048  1551  1D03               	btfss	3,2
 10049  1552  2D54               	goto	u3651
 10050  1553  2D55               	goto	u3650
 10051  1554                     u3651:
 10052  1554  2D56               	goto	l2811
 10053  1555                     u3650:
 10054  1555                     l2809:
 10055  1555  01E6               	clrf	___fladd@signs
 10056  1556                     l2811:
 10057  1556  1C68               	btfss	___fladd@bexp,0
 10058  1557  2D59               	goto	u3661
 10059  1558  2D5A               	goto	u3660
 10060  1559                     u3661:
 10061  1559  2D5C               	goto	l2815
 10062  155A                     u3660:
 10063  155A                     l2813:
 10064  155A  17D8               	bsf	___fladd@b+2,7
 10065  155B  2D60               	goto	l761
 10066  155C                     l2815:
 10067  155C  307F               	movlw	127
 10068  155D  00DE               	movwf	??___fladd
 10069  155E  085E               	movf	??___fladd,w
 10070  155F  05D8               	andwf	___fladd@b+2,f
 10071  1560                     l761:
 10072  1560  0868               	movf	___fladd@bexp,w
 10073  1561  00DE               	movwf	??___fladd
 10074  1562  1003               	clrc
 10075  1563  0C5E               	rrf	??___fladd,w
 10076  1564  00DF               	movwf	??___fladd+1
 10077  1565  085F               	movf	??___fladd+1,w
 10078  1566  00D9               	movwf	___fladd@b+3
 10079  1567                     l2817:
 10080  1567  1FE6               	btfss	___fladd@signs,7
 10081  1568  2D6A               	goto	u3671
 10082  1569  2D6B               	goto	u3670
 10083  156A                     u3671:
 10084  156A  2D6C               	goto	l762
 10085  156B                     u3670:
 10086  156B                     l2819:
 10087  156B  17D9               	bsf	___fladd@b+3,7
 10088  156C                     l762:
 10089  156C                     l732:
 10090  156C  0008               	return
 10091  156D                     __end_of___fladd:
 10092                           
 10093                           	psect	text20
 10094  1A15                     __ptext20:	
 10095 ;; *************** function ___flneg *****************
 10096 ;; Defined at:
 10097 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
 10098 ;; Parameters:    Size  Location     Type
 10099 ;;  f1              4    2[COMMON] unsigned char 
 10100 ;; Auto vars:     Size  Location     Type
 10101 ;;		None
 10102 ;; Return value:  Size  Location     Type
 10103 ;;                  4    2[COMMON] unsigned char 
 10104 ;; Registers used:
 10105 ;;		wreg
 10106 ;; Tracked objects:
 10107 ;;		On entry : 0/0
 10108 ;;		On exit  : 0/0
 10109 ;;		Unchanged: 0/0
 10110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10111 ;;      Params:         4       0       0       0       0
 10112 ;;      Locals:         0       0       0       0       0
 10113 ;;      Temps:          0       0       0       0       0
 10114 ;;      Totals:         4       0       0       0       0
 10115 ;;Total ram usage:        4 bytes
 10116 ;; Hardware stack levels used:    1
 10117 ;; Hardware stack levels required when called:    1
 10118 ;; This function calls:
 10119 ;;		Nothing
 10120 ;; This function is called by:
 10121 ;;		_sprintf
 10122 ;; This function uses a non-reentrant model
 10123 ;;
 10124                           
 10125                           
 10126                           ;psect for function ___flneg
 10127  1A15                     ___flneg:
 10128  1A15                     l3233:	
 10129                           ;incstack = 0
 10130                           ; Regs used in ___flneg: [wreg]
 10131                           
 10132  1A15  0875               	movf	___flneg@f1+3,w
 10133  1A16  0474               	iorwf	___flneg@f1+2,w
 10134  1A17  0473               	iorwf	___flneg@f1+1,w
 10135  1A18  0472               	iorwf	___flneg@f1,w
 10136  1A19  1903               	skipnz
 10137  1A1A  2A1C               	goto	u4801
 10138  1A1B  2A1D               	goto	u4800
 10139  1A1C                     u4801:
 10140  1A1C  2A1F               	goto	l3237
 10141  1A1D                     u4800:
 10142  1A1D                     l3235:
 10143  1A1D  3080               	movlw	128
 10144  1A1E  06F5               	xorwf	___flneg@f1+3,f
 10145  1A1F                     l3237:
 10146  1A1F                     l591:
 10147  1A1F  0008               	return
 10148  1A20                     __end_of___flneg:
 10149                           
 10150                           	psect	text21
 10151  1EA0                     __ptext21:	
 10152 ;; *************** function ___flge *****************
 10153 ;; Defined at:
 10154 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
 10155 ;; Parameters:    Size  Location     Type
 10156 ;;  ff1             4    2[COMMON] unsigned char 
 10157 ;;  ff2             4    6[COMMON] unsigned char 
 10158 ;; Auto vars:     Size  Location     Type
 10159 ;;		None
 10160 ;; Return value:  Size  Location     Type
 10161 ;;		None               void
 10162 ;; Registers used:
 10163 ;;		wreg, status,2, status,0
 10164 ;; Tracked objects:
 10165 ;;		On entry : 0/0
 10166 ;;		On exit  : 0/0
 10167 ;;		Unchanged: 0/0
 10168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10169 ;;      Params:         8       0       0       0       0
 10170 ;;      Locals:         0       0       0       0       0
 10171 ;;      Temps:          0       4       0       0       0
 10172 ;;      Totals:         8       4       0       0       0
 10173 ;;Total ram usage:       12 bytes
 10174 ;; Hardware stack levels used:    1
 10175 ;; Hardware stack levels required when called:    1
 10176 ;; This function calls:
 10177 ;;		Nothing
 10178 ;; This function is called by:
 10179 ;;		_sprintf
 10180 ;; This function uses a non-reentrant model
 10181 ;;
 10182                           
 10183                           
 10184                           ;psect for function ___flge
 10185  1EA0                     ___flge:
 10186  1EA0                     l3213:	
 10187                           ;incstack = 0
 10188                           ; Regs used in ___flge: [wreg+status,2+status,0]
 10189                           
 10190  1EA0  3000               	movlw	0
 10191  1EA1  0572               	andwf	___flge@ff1,w
 10192  1EA2  1283               	bcf	3,5	;RP0=0, select bank0
 10193  1EA3  1303               	bcf	3,6	;RP1=0, select bank0
 10194  1EA4  00A0               	movwf	??___flge
 10195  1EA5  3000               	movlw	0
 10196  1EA6  0573               	andwf	___flge@ff1+1,w
 10197  1EA7  00A1               	movwf	??___flge+1
 10198  1EA8  3080               	movlw	128
 10199  1EA9  0574               	andwf	___flge@ff1+2,w
 10200  1EAA  00A2               	movwf	??___flge+2
 10201  1EAB  307F               	movlw	127
 10202  1EAC  0575               	andwf	___flge@ff1+3,w
 10203  1EAD  00A3               	movwf	??___flge+3
 10204  1EAE  0823               	movf	??___flge+3,w
 10205  1EAF  0422               	iorwf	??___flge+2,w
 10206  1EB0  0421               	iorwf	??___flge+1,w
 10207  1EB1  0420               	iorwf	??___flge,w
 10208  1EB2  1D03               	skipz
 10209  1EB3  2EB5               	goto	u4731
 10210  1EB4  2EB6               	goto	u4730
 10211  1EB5                     u4731:
 10212  1EB5  2EBE               	goto	l583
 10213  1EB6                     u4730:
 10214  1EB6                     l3215:
 10215  1EB6  3000               	movlw	0
 10216  1EB7  00F5               	movwf	___flge@ff1+3
 10217  1EB8  3000               	movlw	0
 10218  1EB9  00F4               	movwf	___flge@ff1+2
 10219  1EBA  3000               	movlw	0
 10220  1EBB  00F3               	movwf	___flge@ff1+1
 10221  1EBC  3000               	movlw	0
 10222  1EBD  00F2               	movwf	___flge@ff1
 10223  1EBE                     l583:
 10224  1EBE  3000               	movlw	0
 10225  1EBF  0576               	andwf	___flge@ff2,w
 10226  1EC0  00A0               	movwf	??___flge
 10227  1EC1  3000               	movlw	0
 10228  1EC2  0577               	andwf	___flge@ff2+1,w
 10229  1EC3  00A1               	movwf	??___flge+1
 10230  1EC4  3080               	movlw	128
 10231  1EC5  0578               	andwf	___flge@ff2+2,w
 10232  1EC6  00A2               	movwf	??___flge+2
 10233  1EC7  307F               	movlw	127
 10234  1EC8  0579               	andwf	___flge@ff2+3,w
 10235  1EC9  00A3               	movwf	??___flge+3
 10236  1ECA  0823               	movf	??___flge+3,w
 10237  1ECB  0422               	iorwf	??___flge+2,w
 10238  1ECC  0421               	iorwf	??___flge+1,w
 10239  1ECD  0420               	iorwf	??___flge,w
 10240  1ECE  1D03               	skipz
 10241  1ECF  2ED1               	goto	u4741
 10242  1ED0  2ED2               	goto	u4740
 10243  1ED1                     u4741:
 10244  1ED1  2EDA               	goto	l3219
 10245  1ED2                     u4740:
 10246  1ED2                     l3217:
 10247  1ED2  3000               	movlw	0
 10248  1ED3  00F9               	movwf	___flge@ff2+3
 10249  1ED4  3000               	movlw	0
 10250  1ED5  00F8               	movwf	___flge@ff2+2
 10251  1ED6  3000               	movlw	0
 10252  1ED7  00F7               	movwf	___flge@ff2+1
 10253  1ED8  3000               	movlw	0
 10254  1ED9  00F6               	movwf	___flge@ff2
 10255  1EDA                     l3219:
 10256  1EDA  1FF5               	btfss	___flge@ff1+3,7
 10257  1EDB  2EDD               	goto	u4751
 10258  1EDC  2EDE               	goto	u4750
 10259  1EDD                     u4751:
 10260  1EDD  2F02               	goto	l3223
 10261  1EDE                     u4750:
 10262  1EDE                     l3221:
 10263  1EDE  3000               	movlw	0
 10264  1EDF  00A0               	movwf	??___flge
 10265  1EE0  3000               	movlw	0
 10266  1EE1  00A1               	movwf	??___flge+1
 10267  1EE2  3000               	movlw	0
 10268  1EE3  00A2               	movwf	??___flge+2
 10269  1EE4  3080               	movlw	128
 10270  1EE5  00A3               	movwf	??___flge+3
 10271  1EE6  0872               	movf	___flge@ff1,w
 10272  1EE7  02A0               	subwf	??___flge,f
 10273  1EE8  0873               	movf	___flge@ff1+1,w
 10274  1EE9  1C03               	skipc
 10275  1EEA  0F73               	incfsz	___flge@ff1+1,w
 10276  1EEB  2EED               	goto	u4761
 10277  1EEC  2EEE               	goto	u4762
 10278  1EED                     u4761:
 10279  1EED  02A1               	subwf	??___flge+1,f
 10280  1EEE                     u4762:
 10281  1EEE  0874               	movf	___flge@ff1+2,w
 10282  1EEF  1C03               	skipc
 10283  1EF0  0F74               	incfsz	___flge@ff1+2,w
 10284  1EF1  2EF3               	goto	u4763
 10285  1EF2  2EF4               	goto	u4764
 10286  1EF3                     u4763:
 10287  1EF3  02A2               	subwf	??___flge+2,f
 10288  1EF4                     u4764:
 10289  1EF4  0875               	movf	___flge@ff1+3,w
 10290  1EF5  1C03               	skipc
 10291  1EF6  0F75               	incfsz	___flge@ff1+3,w
 10292  1EF7  2EF9               	goto	u4765
 10293  1EF8  2EFA               	goto	u4766
 10294  1EF9                     u4765:
 10295  1EF9  02A3               	subwf	??___flge+3,f
 10296  1EFA                     u4766:
 10297  1EFA  0823               	movf	??___flge+3,w
 10298  1EFB  00F5               	movwf	___flge@ff1+3
 10299  1EFC  0822               	movf	??___flge+2,w
 10300  1EFD  00F4               	movwf	___flge@ff1+2
 10301  1EFE  0821               	movf	??___flge+1,w
 10302  1EFF  00F3               	movwf	___flge@ff1+1
 10303  1F00  0820               	movf	??___flge,w
 10304  1F01  00F2               	movwf	___flge@ff1
 10305  1F02                     l3223:
 10306  1F02  1FF9               	btfss	___flge@ff2+3,7
 10307  1F03  2F05               	goto	u4771
 10308  1F04  2F06               	goto	u4770
 10309  1F05                     u4771:
 10310  1F05  2F2A               	goto	l586
 10311  1F06                     u4770:
 10312  1F06                     l3225:
 10313  1F06  3000               	movlw	0
 10314  1F07  00A0               	movwf	??___flge
 10315  1F08  3000               	movlw	0
 10316  1F09  00A1               	movwf	??___flge+1
 10317  1F0A  3000               	movlw	0
 10318  1F0B  00A2               	movwf	??___flge+2
 10319  1F0C  3080               	movlw	128
 10320  1F0D  00A3               	movwf	??___flge+3
 10321  1F0E  0876               	movf	___flge@ff2,w
 10322  1F0F  02A0               	subwf	??___flge,f
 10323  1F10  0877               	movf	___flge@ff2+1,w
 10324  1F11  1C03               	skipc
 10325  1F12  0F77               	incfsz	___flge@ff2+1,w
 10326  1F13  2F15               	goto	u4781
 10327  1F14  2F16               	goto	u4782
 10328  1F15                     u4781:
 10329  1F15  02A1               	subwf	??___flge+1,f
 10330  1F16                     u4782:
 10331  1F16  0878               	movf	___flge@ff2+2,w
 10332  1F17  1C03               	skipc
 10333  1F18  0F78               	incfsz	___flge@ff2+2,w
 10334  1F19  2F1B               	goto	u4783
 10335  1F1A  2F1C               	goto	u4784
 10336  1F1B                     u4783:
 10337  1F1B  02A2               	subwf	??___flge+2,f
 10338  1F1C                     u4784:
 10339  1F1C  0879               	movf	___flge@ff2+3,w
 10340  1F1D  1C03               	skipc
 10341  1F1E  0F79               	incfsz	___flge@ff2+3,w
 10342  1F1F  2F21               	goto	u4785
 10343  1F20  2F22               	goto	u4786
 10344  1F21                     u4785:
 10345  1F21  02A3               	subwf	??___flge+3,f
 10346  1F22                     u4786:
 10347  1F22  0823               	movf	??___flge+3,w
 10348  1F23  00F9               	movwf	___flge@ff2+3
 10349  1F24  0822               	movf	??___flge+2,w
 10350  1F25  00F8               	movwf	___flge@ff2+2
 10351  1F26  0821               	movf	??___flge+1,w
 10352  1F27  00F7               	movwf	___flge@ff2+1
 10353  1F28  0820               	movf	??___flge,w
 10354  1F29  00F6               	movwf	___flge@ff2
 10355  1F2A                     l586:
 10356  1F2A  3080               	movlw	128
 10357  1F2B  06F5               	xorwf	___flge@ff1+3,f
 10358  1F2C  3080               	movlw	128
 10359  1F2D  06F9               	xorwf	___flge@ff2+3,f
 10360  1F2E  0879               	movf	___flge@ff2+3,w
 10361  1F2F  0275               	subwf	___flge@ff1+3,w
 10362  1F30  1D03               	skipz
 10363  1F31  2F3C               	goto	u4795
 10364  1F32  0878               	movf	___flge@ff2+2,w
 10365  1F33  0274               	subwf	___flge@ff1+2,w
 10366  1F34  1D03               	skipz
 10367  1F35  2F3C               	goto	u4795
 10368  1F36  0877               	movf	___flge@ff2+1,w
 10369  1F37  0273               	subwf	___flge@ff1+1,w
 10370  1F38  1D03               	skipz
 10371  1F39  2F3C               	goto	u4795
 10372  1F3A  0876               	movf	___flge@ff2,w
 10373  1F3B  0272               	subwf	___flge@ff1,w
 10374  1F3C                     u4795:
 10375  1F3C  1803               	skipnc
 10376  1F3D  2F3F               	goto	u4791
 10377  1F3E  2F40               	goto	u4790
 10378  1F3F                     u4791:
 10379  1F3F  2F42               	goto	l3229
 10380  1F40                     u4790:
 10381  1F40                     l3227:
 10382  1F40  1003               	clrc
 10383  1F41  2F43               	goto	l587
 10384  1F42                     l3229:
 10385  1F42  1403               	setc
 10386  1F43                     l587:
 10387  1F43  0008               	return
 10388  1F44                     __end_of___flge:
 10389                           
 10390                           	psect	text22
 10391  1B8A                     __ptext22:	
 10392 ;; *************** function ___fleq *****************
 10393 ;; Defined at:
 10394 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
 10395 ;; Parameters:    Size  Location     Type
 10396 ;;  ff1             4    2[COMMON] unsigned char 
 10397 ;;  ff2             4    6[COMMON] unsigned char 
 10398 ;; Auto vars:     Size  Location     Type
 10399 ;;		None
 10400 ;; Return value:  Size  Location     Type
 10401 ;;		None               void
 10402 ;; Registers used:
 10403 ;;		wreg, status,2, status,0
 10404 ;; Tracked objects:
 10405 ;;		On entry : 0/0
 10406 ;;		On exit  : 0/0
 10407 ;;		Unchanged: 0/0
 10408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10409 ;;      Params:         8       0       0       0       0
 10410 ;;      Locals:         0       0       0       0       0
 10411 ;;      Temps:          0       4       0       0       0
 10412 ;;      Totals:         8       4       0       0       0
 10413 ;;Total ram usage:       12 bytes
 10414 ;; Hardware stack levels used:    1
 10415 ;; Hardware stack levels required when called:    1
 10416 ;; This function calls:
 10417 ;;		Nothing
 10418 ;; This function is called by:
 10419 ;;		_sprintf
 10420 ;; This function uses a non-reentrant model
 10421 ;;
 10422                           
 10423                           
 10424                           ;psect for function ___fleq
 10425  1B8A                     ___fleq:
 10426  1B8A                     l3201:	
 10427                           ;incstack = 0
 10428                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 10429                           
 10430  1B8A  3000               	movlw	0
 10431  1B8B  0572               	andwf	___fleq@ff1,w
 10432  1B8C  1283               	bcf	3,5	;RP0=0, select bank0
 10433  1B8D  1303               	bcf	3,6	;RP1=0, select bank0
 10434  1B8E  00A0               	movwf	??___fleq
 10435  1B8F  3000               	movlw	0
 10436  1B90  0573               	andwf	___fleq@ff1+1,w
 10437  1B91  00A1               	movwf	??___fleq+1
 10438  1B92  3080               	movlw	128
 10439  1B93  0574               	andwf	___fleq@ff1+2,w
 10440  1B94  00A2               	movwf	??___fleq+2
 10441  1B95  307F               	movlw	127
 10442  1B96  0575               	andwf	___fleq@ff1+3,w
 10443  1B97  00A3               	movwf	??___fleq+3
 10444  1B98  0823               	movf	??___fleq+3,w
 10445  1B99  0422               	iorwf	??___fleq+2,w
 10446  1B9A  0421               	iorwf	??___fleq+1,w
 10447  1B9B  0420               	iorwf	??___fleq,w
 10448  1B9C  1D03               	skipz
 10449  1B9D  2B9F               	goto	u4701
 10450  1B9E  2BA0               	goto	u4700
 10451  1B9F                     u4701:
 10452  1B9F  2BA8               	goto	l578
 10453  1BA0                     u4700:
 10454  1BA0                     l3203:
 10455  1BA0  3000               	movlw	0
 10456  1BA1  00F5               	movwf	___fleq@ff1+3
 10457  1BA2  3000               	movlw	0
 10458  1BA3  00F4               	movwf	___fleq@ff1+2
 10459  1BA4  3000               	movlw	0
 10460  1BA5  00F3               	movwf	___fleq@ff1+1
 10461  1BA6  3000               	movlw	0
 10462  1BA7  00F2               	movwf	___fleq@ff1
 10463  1BA8                     l578:
 10464  1BA8  3000               	movlw	0
 10465  1BA9  0576               	andwf	___fleq@ff2,w
 10466  1BAA  00A0               	movwf	??___fleq
 10467  1BAB  3000               	movlw	0
 10468  1BAC  0577               	andwf	___fleq@ff2+1,w
 10469  1BAD  00A1               	movwf	??___fleq+1
 10470  1BAE  3080               	movlw	128
 10471  1BAF  0578               	andwf	___fleq@ff2+2,w
 10472  1BB0  00A2               	movwf	??___fleq+2
 10473  1BB1  307F               	movlw	127
 10474  1BB2  0579               	andwf	___fleq@ff2+3,w
 10475  1BB3  00A3               	movwf	??___fleq+3
 10476  1BB4  0823               	movf	??___fleq+3,w
 10477  1BB5  0422               	iorwf	??___fleq+2,w
 10478  1BB6  0421               	iorwf	??___fleq+1,w
 10479  1BB7  0420               	iorwf	??___fleq,w
 10480  1BB8  1D03               	skipz
 10481  1BB9  2BBB               	goto	u4711
 10482  1BBA  2BBC               	goto	u4710
 10483  1BBB                     u4711:
 10484  1BBB  2BC4               	goto	l579
 10485  1BBC                     u4710:
 10486  1BBC                     l3205:
 10487  1BBC  3000               	movlw	0
 10488  1BBD  00F9               	movwf	___fleq@ff2+3
 10489  1BBE  3000               	movlw	0
 10490  1BBF  00F8               	movwf	___fleq@ff2+2
 10491  1BC0  3000               	movlw	0
 10492  1BC1  00F7               	movwf	___fleq@ff2+1
 10493  1BC2  3000               	movlw	0
 10494  1BC3  00F6               	movwf	___fleq@ff2
 10495  1BC4                     l579:
 10496  1BC4  0879               	movf	___fleq@ff2+3,w
 10497  1BC5  0675               	xorwf	___fleq@ff1+3,w
 10498  1BC6  1D03               	skipz
 10499  1BC7  2BD2               	goto	u4725
 10500  1BC8  0878               	movf	___fleq@ff2+2,w
 10501  1BC9  0674               	xorwf	___fleq@ff1+2,w
 10502  1BCA  1D03               	skipz
 10503  1BCB  2BD2               	goto	u4725
 10504  1BCC  0877               	movf	___fleq@ff2+1,w
 10505  1BCD  0673               	xorwf	___fleq@ff1+1,w
 10506  1BCE  1D03               	skipz
 10507  1BCF  2BD2               	goto	u4725
 10508  1BD0  0876               	movf	___fleq@ff2,w
 10509  1BD1  0672               	xorwf	___fleq@ff1,w
 10510  1BD2                     u4725:
 10511  1BD2  1903               	skipnz
 10512  1BD3  2BD5               	goto	u4721
 10513  1BD4  2BD6               	goto	u4720
 10514  1BD5                     u4721:
 10515  1BD5  2BD8               	goto	l3209
 10516  1BD6                     u4720:
 10517  1BD6                     l3207:
 10518  1BD6  1003               	clrc
 10519  1BD7  2BD9               	goto	l580
 10520  1BD8                     l3209:
 10521  1BD8  1403               	setc
 10522  1BD9                     l580:
 10523  1BD9  0008               	return
 10524  1BDA                     __end_of___fleq:
 10525                           
 10526                           	psect	text23
 10527  1A02                     __ptext23:	
 10528 ;; *************** function _USART_Rx *****************
 10529 ;; Defined at:
 10530 ;;		line 25 in file "Lab_2/USART.c"
 10531 ;; Parameters:    Size  Location     Type
 10532 ;;		None
 10533 ;; Auto vars:     Size  Location     Type
 10534 ;;		None
 10535 ;; Return value:  Size  Location     Type
 10536 ;;                  1    wreg      unsigned char 
 10537 ;; Registers used:
 10538 ;;		wreg
 10539 ;; Tracked objects:
 10540 ;;		On entry : 0/0
 10541 ;;		On exit  : 0/0
 10542 ;;		Unchanged: 0/0
 10543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10544 ;;      Params:         0       0       0       0       0
 10545 ;;      Locals:         0       0       0       0       0
 10546 ;;      Temps:          0       0       0       0       0
 10547 ;;      Totals:         0       0       0       0       0
 10548 ;;Total ram usage:        0 bytes
 10549 ;; Hardware stack levels used:    1
 10550 ;; Hardware stack levels required when called:    1
 10551 ;; This function calls:
 10552 ;;		Nothing
 10553 ;; This function is called by:
 10554 ;;		_main
 10555 ;; This function uses a non-reentrant model
 10556 ;;
 10557                           
 10558                           
 10559                           ;psect for function _USART_Rx
 10560  1A02                     _USART_Rx:
 10561  1A02                     l3705:	
 10562                           ;incstack = 0
 10563                           ; Regs used in _USART_Rx: [wreg]
 10564                           
 10565                           
 10566                           ;Lab_2/USART.c: 26:     return RCREG;
 10567  1A02  1283               	bcf	3,5	;RP0=0, select bank0
 10568  1A03  1303               	bcf	3,6	;RP1=0, select bank0
 10569  1A04  081A               	movf	26,w	;volatile
 10570  1A05                     l190:
 10571  1A05  0008               	return
 10572  1A06                     __end_of_USART_Rx:
 10573                           
 10574                           	psect	text24
 10575  1A32                     __ptext24:	
 10576 ;; *************** function _USART_Init *****************
 10577 ;; Defined at:
 10578 ;;		line 4 in file "Lab_2/USART.c"
 10579 ;; Parameters:    Size  Location     Type
 10580 ;;		None
 10581 ;; Auto vars:     Size  Location     Type
 10582 ;;		None
 10583 ;; Return value:  Size  Location     Type
 10584 ;;                  1    wreg      void 
 10585 ;; Registers used:
 10586 ;;		wreg, status,2
 10587 ;; Tracked objects:
 10588 ;;		On entry : 0/0
 10589 ;;		On exit  : 0/0
 10590 ;;		Unchanged: 0/0
 10591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10592 ;;      Params:         0       0       0       0       0
 10593 ;;      Locals:         0       0       0       0       0
 10594 ;;      Temps:          0       0       0       0       0
 10595 ;;      Totals:         0       0       0       0       0
 10596 ;;Total ram usage:        0 bytes
 10597 ;; Hardware stack levels used:    1
 10598 ;; Hardware stack levels required when called:    1
 10599 ;; This function calls:
 10600 ;;		Nothing
 10601 ;; This function is called by:
 10602 ;;		_main
 10603 ;; This function uses a non-reentrant model
 10604 ;;
 10605                           
 10606                           
 10607                           ;psect for function _USART_Init
 10608  1A32                     _USART_Init:
 10609  1A32                     l3399:	
 10610                           ;incstack = 0
 10611                           ; Regs used in _USART_Init: [wreg+status,2]
 10612                           
 10613                           
 10614                           ;Lab_2/USART.c: 6:     TXSTAbits.SYNC = 0;
 10615  1A32  1683               	bsf	3,5	;RP0=1, select bank1
 10616  1A33  1303               	bcf	3,6	;RP1=0, select bank1
 10617  1A34  1218               	bcf	24,4	;volatile
 10618                           
 10619                           ;Lab_2/USART.c: 7:     TXSTAbits.BRGH = 1;
 10620  1A35  1518               	bsf	24,2	;volatile
 10621                           
 10622                           ;Lab_2/USART.c: 8:     BAUDCTLbits.BRG16 = 1;
 10623  1A36  1683               	bsf	3,5	;RP0=1, select bank3
 10624  1A37  1703               	bsf	3,6	;RP1=1, select bank3
 10625  1A38  1587               	bsf	7,3	;volatile
 10626  1A39                     l3401:
 10627                           
 10628                           ;Lab_2/USART.c: 10:     SPBRG = 207;
 10629  1A39  30CF               	movlw	207
 10630  1A3A  1683               	bsf	3,5	;RP0=1, select bank1
 10631  1A3B  1303               	bcf	3,6	;RP1=0, select bank1
 10632  1A3C  0099               	movwf	25	;volatile
 10633  1A3D                     l3403:
 10634                           
 10635                           ;Lab_2/USART.c: 11:     SPBRGH = 0;
 10636  1A3D  019A               	clrf	26	;volatile
 10637  1A3E                     l3405:
 10638                           
 10639                           ;Lab_2/USART.c: 13:     RCSTAbits.SPEN = 1;
 10640  1A3E  1283               	bcf	3,5	;RP0=0, select bank0
 10641  1A3F  1303               	bcf	3,6	;RP1=0, select bank0
 10642  1A40  1798               	bsf	24,7	;volatile
 10643  1A41                     l3407:
 10644                           
 10645                           ;Lab_2/USART.c: 14:     RCSTAbits.RX9 = 0;
 10646  1A41  1318               	bcf	24,6	;volatile
 10647  1A42                     l3409:
 10648                           
 10649                           ;Lab_2/USART.c: 15:     RCSTAbits.CREN = 1;
 10650  1A42  1618               	bsf	24,4	;volatile
 10651  1A43                     l3411:
 10652                           
 10653                           ;Lab_2/USART.c: 16:     TXSTAbits.TXEN = 1;
 10654  1A43  1683               	bsf	3,5	;RP0=1, select bank1
 10655  1A44  1303               	bcf	3,6	;RP1=0, select bank1
 10656  1A45  1698               	bsf	24,5	;volatile
 10657  1A46                     l181:
 10658  1A46  0008               	return
 10659  1A47                     __end_of_USART_Init:
 10660                           
 10661                           	psect	text25
 10662  1AB7                     __ptext25:	
 10663 ;; *************** function _USART_Cadena *****************
 10664 ;; Defined at:
 10665 ;;		line 29 in file "Lab_2/USART.c"
 10666 ;; Parameters:    Size  Location     Type
 10667 ;;  str             2    3[COMMON] PTR unsigned char 
 10668 ;;		 -> STR_8(17), STR_7(15), STR_6(30), STR_5(31), 
 10669 ;;		 -> valor2(6), valor1(6), 
 10670 ;; Auto vars:     Size  Location     Type
 10671 ;;		None
 10672 ;; Return value:  Size  Location     Type
 10673 ;;                  1    wreg      void 
 10674 ;; Registers used:
 10675 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10676 ;; Tracked objects:
 10677 ;;		On entry : 0/0
 10678 ;;		On exit  : 0/0
 10679 ;;		Unchanged: 0/0
 10680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10681 ;;      Params:         2       0       0       0       0
 10682 ;;      Locals:         0       0       0       0       0
 10683 ;;      Temps:          0       0       0       0       0
 10684 ;;      Totals:         2       0       0       0       0
 10685 ;;Total ram usage:        2 bytes
 10686 ;; Hardware stack levels used:    1
 10687 ;; Hardware stack levels required when called:    2
 10688 ;; This function calls:
 10689 ;;		_USART_Tx
 10690 ;; This function is called by:
 10691 ;;		_main
 10692 ;; This function uses a non-reentrant model
 10693 ;;
 10694                           
 10695                           
 10696                           ;psect for function _USART_Cadena
 10697  1AB7                     _USART_Cadena:
 10698  1AB7                     l3697:	
 10699                           ;incstack = 0
 10700                           ; Regs used in _USART_Cadena: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10701                           
 10702                           
 10703                           ;Lab_2/USART.c: 30:     while(*str != '\0'){
 10704  1AB7  2ACC               	goto	l3703
 10705  1AB8                     l3699:
 10706                           
 10707                           ;Lab_2/USART.c: 31:         USART_Tx(*str);
 10708  1AB8  0874               	movf	USART_Cadena@str+1,w
 10709  1AB9  00FF               	movwf	btemp+1
 10710  1ABA  0873               	movf	USART_Cadena@str,w
 10711  1ABB  0084               	movwf	4
 10712  1ABC  160A  158A  2000  160A  158A  	fcall	stringtab
 10713  1AC1  120A  158A  2003  160A  158A  	fcall	_USART_Tx
 10714  1AC6                     l3701:
 10715                           
 10716                           ;Lab_2/USART.c: 32:         str++;
 10717  1AC6  3001               	movlw	1
 10718  1AC7  07F3               	addwf	USART_Cadena@str,f
 10719  1AC8  1803               	skipnc
 10720  1AC9  0AF4               	incf	USART_Cadena@str+1,f
 10721  1ACA  3000               	movlw	0
 10722  1ACB  07F4               	addwf	USART_Cadena@str+1,f
 10723  1ACC                     l3703:
 10724                           
 10725                           ;Lab_2/USART.c: 30:     while(*str != '\0'){
 10726  1ACC  0874               	movf	USART_Cadena@str+1,w
 10727  1ACD  1283               	bcf	3,5	;RP0=0, select bank0
 10728  1ACE  1303               	bcf	3,6	;RP1=0, select bank0
 10729  1ACF  00FF               	movwf	btemp+1
 10730  1AD0  0873               	movf	USART_Cadena@str,w
 10731  1AD1  0084               	movwf	4
 10732  1AD2  160A  158A  2000  160A  158A  	fcall	stringtab
 10733  1AD7  3A00               	xorlw	0
 10734  1AD8  1D03               	skipz
 10735  1AD9  2ADB               	goto	u5601
 10736  1ADA  2ADC               	goto	u5600
 10737  1ADB                     u5601:
 10738  1ADB  2AB8               	goto	l3699
 10739  1ADC                     u5600:
 10740  1ADC                     l196:
 10741  1ADC  0008               	return
 10742  1ADD                     __end_of_USART_Cadena:
 10743                           
 10744                           	psect	text26
 10745  0803                     __ptext26:	
 10746 ;; *************** function _USART_Tx *****************
 10747 ;; Defined at:
 10748 ;;		line 20 in file "Lab_2/USART.c"
 10749 ;; Parameters:    Size  Location     Type
 10750 ;;  data            1    wreg     unsigned char 
 10751 ;; Auto vars:     Size  Location     Type
 10752 ;;  data            1    2[COMMON] unsigned char 
 10753 ;; Return value:  Size  Location     Type
 10754 ;;                  1    wreg      void 
 10755 ;; Registers used:
 10756 ;;		wreg
 10757 ;; Tracked objects:
 10758 ;;		On entry : 0/0
 10759 ;;		On exit  : 0/0
 10760 ;;		Unchanged: 0/0
 10761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10762 ;;      Params:         0       0       0       0       0
 10763 ;;      Locals:         1       0       0       0       0
 10764 ;;      Temps:          0       0       0       0       0
 10765 ;;      Totals:         1       0       0       0       0
 10766 ;;Total ram usage:        1 bytes
 10767 ;; Hardware stack levels used:    1
 10768 ;; Hardware stack levels required when called:    1
 10769 ;; This function calls:
 10770 ;;		Nothing
 10771 ;; This function is called by:
 10772 ;;		_USART_Cadena
 10773 ;; This function uses a non-reentrant model
 10774 ;;
 10775                           
 10776                           
 10777                           ;psect for function _USART_Tx
 10778  0803                     _USART_Tx:
 10779                           
 10780                           ;incstack = 0
 10781                           ; Regs used in _USART_Tx: [wreg]
 10782                           ;USART_Tx@data stored from wreg
 10783  0803  00F2               	movwf	USART_Tx@data
 10784  0804                     l2985:
 10785  0804                     l184:	
 10786                           ;Lab_2/USART.c: 21:     while(TXSTAbits.TRMT == 0);
 10787                           
 10788  0804  1683               	bsf	3,5	;RP0=1, select bank1
 10789  0805  1303               	bcf	3,6	;RP1=0, select bank1
 10790  0806  1C98               	btfss	24,1	;volatile
 10791  0807  2809               	goto	u4051
 10792  0808  280A               	goto	u4050
 10793  0809                     u4051:
 10794  0809  2804               	goto	l184
 10795  080A                     u4050:
 10796  080A                     l2987:
 10797                           
 10798                           ;Lab_2/USART.c: 22:     TXREG = data;
 10799  080A  0872               	movf	USART_Tx@data,w
 10800  080B  1283               	bcf	3,5	;RP0=0, select bank0
 10801  080C  1303               	bcf	3,6	;RP1=0, select bank0
 10802  080D  0099               	movwf	25	;volatile
 10803  080E                     l187:
 10804  080E  0008               	return
 10805  080F                     __end_of_USART_Tx:
 10806                           
 10807                           	psect	text27
 10808  1DAA                     __ptext27:	
 10809 ;; *************** function _LCD_Init8 *****************
 10810 ;; Defined at:
 10811 ;;		line 7 in file "Lab_2/LCD_16_2.c"
 10812 ;; Parameters:    Size  Location     Type
 10813 ;;		None
 10814 ;; Auto vars:     Size  Location     Type
 10815 ;;		None
 10816 ;; Return value:  Size  Location     Type
 10817 ;;                  1    wreg      void 
 10818 ;; Registers used:
 10819 ;;		wreg, status,2, status,0, pclath, cstack
 10820 ;; Tracked objects:
 10821 ;;		On entry : 0/0
 10822 ;;		On exit  : 0/0
 10823 ;;		Unchanged: 0/0
 10824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10825 ;;      Params:         0       0       0       0       0
 10826 ;;      Locals:         0       0       0       0       0
 10827 ;;      Temps:          2       0       0       0       0
 10828 ;;      Totals:         2       0       0       0       0
 10829 ;;Total ram usage:        2 bytes
 10830 ;; Hardware stack levels used:    1
 10831 ;; Hardware stack levels required when called:    2
 10832 ;; This function calls:
 10833 ;;		_LCD_8_comando
 10834 ;; This function is called by:
 10835 ;;		_main
 10836 ;; This function uses a non-reentrant model
 10837 ;;
 10838                           
 10839                           
 10840                           ;psect for function _LCD_Init8
 10841  1DAA                     _LCD_Init8:
 10842  1DAA                     l3347:	
 10843                           ;incstack = 0
 10844                           ; Regs used in _LCD_Init8: [wreg+status,2+status,0+pclath+cstack]
 10845                           
 10846                           
 10847                           ;Lab_2/LCD_16_2.c: 8:     PORTD = PORTD & 0x00;
 10848  1DAA  1283               	bcf	3,5	;RP0=0, select bank0
 10849  1DAB  1303               	bcf	3,6	;RP1=0, select bank0
 10850  1DAC  0188               	clrf	8	;volatile
 10851                           
 10852                           ;Lab_2/LCD_16_2.c: 9:     TRISD = 0x00;
 10853  1DAD  1683               	bsf	3,5	;RP0=1, select bank1
 10854  1DAE  1303               	bcf	3,6	;RP1=0, select bank1
 10855  1DAF  0188               	clrf	8	;volatile
 10856  1DB0                     l3349:
 10857                           
 10858                           ;Lab_2/LCD_16_2.c: 10:     TRISCbits.TRISC0 = 0;
 10859  1DB0  1007               	bcf	7,0	;volatile
 10860  1DB1                     l3351:
 10861                           
 10862                           ;Lab_2/LCD_16_2.c: 11:     TRISCbits.TRISC1 = 0;
 10863  1DB1  1087               	bcf	7,1	;volatile
 10864  1DB2                     l3353:
 10865                           
 10866                           ;Lab_2/LCD_16_2.c: 12:     TRISCbits.TRISC2 = 0;
 10867  1DB2  1107               	bcf	7,2	;volatile
 10868  1DB3                     l3355:
 10869                           
 10870                           ;Lab_2/LCD_16_2.c: 13:     PORTCbits.RC0 = 0;
 10871  1DB3  1283               	bcf	3,5	;RP0=0, select bank0
 10872  1DB4  1303               	bcf	3,6	;RP1=0, select bank0
 10873  1DB5  1007               	bcf	7,0	;volatile
 10874  1DB6                     l3357:
 10875                           
 10876                           ;Lab_2/LCD_16_2.c: 14:     PORTCbits.RC1 = 0;
 10877  1DB6  1087               	bcf	7,1	;volatile
 10878  1DB7                     l3359:
 10879                           
 10880                           ;Lab_2/LCD_16_2.c: 15:     PORTCbits.RC2 = 0;
 10881  1DB7  1107               	bcf	7,2	;volatile
 10882  1DB8                     l3361:
 10883                           
 10884                           ;Lab_2/LCD_16_2.c: 17:     _delay((unsigned long)((16)*(8000000/4000.0)));
 10885  1DB8  302A               	movlw	42
 10886  1DB9  00F5               	movwf	??_LCD_Init8+1
 10887  1DBA  308D               	movlw	141
 10888  1DBB  00F4               	movwf	??_LCD_Init8
 10889  1DBC                     u7247:
 10890  1DBC  0BF4               	decfsz	??_LCD_Init8,f
 10891  1DBD  2DBC               	goto	u7247
 10892  1DBE  0BF5               	decfsz	??_LCD_Init8+1,f
 10893  1DBF  2DBC               	goto	u7247
 10894  1DC0  2DC1               	nop2
 10895  1DC1                     l3363:
 10896                           
 10897                           ;Lab_2/LCD_16_2.c: 19:     LCD_8_comando(0b00110000);
 10898  1DC1  3030               	movlw	48
 10899  1DC2  160A  158A  225D  160A  158A  	fcall	_LCD_8_comando
 10900  1DC7                     l3365:
 10901                           
 10902                           ;Lab_2/LCD_16_2.c: 20:     _delay((unsigned long)((5)*(8000000/4000.0)));
 10903  1DC7  300D               	movlw	13
 10904  1DC8  00F5               	movwf	??_LCD_Init8+1
 10905  1DC9  30FB               	movlw	251
 10906  1DCA  00F4               	movwf	??_LCD_Init8
 10907  1DCB                     u7257:
 10908  1DCB  0BF4               	decfsz	??_LCD_Init8,f
 10909  1DCC  2DCB               	goto	u7257
 10910  1DCD  0BF5               	decfsz	??_LCD_Init8+1,f
 10911  1DCE  2DCB               	goto	u7257
 10912  1DCF  2DD0               	nop2
 10913  1DD0                     l3367:
 10914                           
 10915                           ;Lab_2/LCD_16_2.c: 22:     LCD_8_comando(0b00110000);
 10916  1DD0  3030               	movlw	48
 10917  1DD1  160A  158A  225D  160A  158A  	fcall	_LCD_8_comando
 10918  1DD6                     l3369:
 10919                           
 10920                           ;Lab_2/LCD_16_2.c: 23:     _delay((unsigned long)((100)*(8000000/4000000.0)));
 10921  1DD6  3042               	movlw	66
 10922  1DD7  00F4               	movwf	??_LCD_Init8
 10923  1DD8                     u7267:
 10924  1DD8  0BF4               	decfsz	??_LCD_Init8,f
 10925  1DD9  2DD8               	goto	u7267
 10926  1DDA  0000               	nop
 10927  1DDB                     l3371:
 10928                           
 10929                           ;Lab_2/LCD_16_2.c: 25:     LCD_8_comando(0b00110000);
 10930  1DDB  3030               	movlw	48
 10931  1DDC  160A  158A  225D  160A  158A  	fcall	_LCD_8_comando
 10932  1DE1                     l3373:
 10933                           
 10934                           ;Lab_2/LCD_16_2.c: 26:     _delay((unsigned long)((100)*(8000000/4000000.0)));
 10935  1DE1  3042               	movlw	66
 10936  1DE2  00F4               	movwf	??_LCD_Init8
 10937  1DE3                     u7277:
 10938  1DE3  0BF4               	decfsz	??_LCD_Init8,f
 10939  1DE4  2DE3               	goto	u7277
 10940  1DE5  0000               	nop
 10941  1DE6                     l3375:
 10942                           
 10943                           ;Lab_2/LCD_16_2.c: 30:     LCD_8_comando(0b00111000);
 10944  1DE6  3038               	movlw	56
 10945  1DE7  160A  158A  225D  160A  158A  	fcall	_LCD_8_comando
 10946  1DEC                     l3377:
 10947                           
 10948                           ;Lab_2/LCD_16_2.c: 31:     _delay((unsigned long)((100)*(8000000/4000000.0)));
 10949  1DEC  3042               	movlw	66
 10950  1DED  00F4               	movwf	??_LCD_Init8
 10951  1DEE                     u7287:
 10952  1DEE  0BF4               	decfsz	??_LCD_Init8,f
 10953  1DEF  2DEE               	goto	u7287
 10954  1DF0  0000               	nop
 10955  1DF1                     l3379:
 10956                           
 10957                           ;Lab_2/LCD_16_2.c: 33:     LCD_8_comando(0b00001000);
 10958  1DF1  3008               	movlw	8
 10959  1DF2  160A  158A  225D  160A  158A  	fcall	_LCD_8_comando
 10960  1DF7                     l3381:
 10961                           
 10962                           ;Lab_2/LCD_16_2.c: 34:     _delay((unsigned long)((100)*(8000000/4000000.0)));
 10963  1DF7  3042               	movlw	66
 10964  1DF8  00F4               	movwf	??_LCD_Init8
 10965  1DF9                     u7297:
 10966  1DF9  0BF4               	decfsz	??_LCD_Init8,f
 10967  1DFA  2DF9               	goto	u7297
 10968  1DFB  0000               	nop
 10969  1DFC                     l3383:
 10970                           
 10971                           ;Lab_2/LCD_16_2.c: 36:     LCD_8_comando(0b00000001);
 10972  1DFC  3001               	movlw	1
 10973  1DFD  160A  158A  225D  160A  158A  	fcall	_LCD_8_comando
 10974  1E02                     l3385:
 10975                           
 10976                           ;Lab_2/LCD_16_2.c: 37:     _delay((unsigned long)((100)*(8000000/4000000.0)));
 10977  1E02  3042               	movlw	66
 10978  1E03  00F4               	movwf	??_LCD_Init8
 10979  1E04                     u7307:
 10980  1E04  0BF4               	decfsz	??_LCD_Init8,f
 10981  1E05  2E04               	goto	u7307
 10982  1E06  0000               	nop
 10983  1E07                     l3387:
 10984                           
 10985                           ;Lab_2/LCD_16_2.c: 39:     LCD_8_comando(0b00000100);
 10986  1E07  3004               	movlw	4
 10987  1E08  160A  158A  225D  160A  158A  	fcall	_LCD_8_comando
 10988  1E0D                     l3389:
 10989                           
 10990                           ;Lab_2/LCD_16_2.c: 40:     _delay((unsigned long)((100)*(8000000/4000000.0)));
 10991  1E0D  3042               	movlw	66
 10992  1E0E  00F4               	movwf	??_LCD_Init8
 10993  1E0F                     u7317:
 10994  1E0F  0BF4               	decfsz	??_LCD_Init8,f
 10995  1E10  2E0F               	goto	u7317
 10996  1E11  0000               	nop
 10997  1E12                     l3391:
 10998                           
 10999                           ;Lab_2/LCD_16_2.c: 42:     _delay((unsigned long)((100)*(8000000/4000000.0)));
 11000  1E12  3042               	movlw	66
 11001  1E13  00F4               	movwf	??_LCD_Init8
 11002  1E14                     u7327:
 11003  1E14  0BF4               	decfsz	??_LCD_Init8,f
 11004  1E15  2E14               	goto	u7327
 11005  1E16  0000               	nop
 11006  1E17                     l3393:
 11007                           
 11008                           ;Lab_2/LCD_16_2.c: 43:     LCD_8_comando(0x06);
 11009  1E17  3006               	movlw	6
 11010  1E18  160A  158A  225D  160A  158A  	fcall	_LCD_8_comando
 11011  1E1D                     l3395:
 11012                           
 11013                           ;Lab_2/LCD_16_2.c: 44:     LCD_8_comando(0x0C);
 11014  1E1D  300C               	movlw	12
 11015  1E1E  160A  158A  225D  160A  158A  	fcall	_LCD_8_comando
 11016  1E23                     l127:
 11017  1E23  0008               	return
 11018  1E24                     __end_of_LCD_Init8:
 11019                           
 11020                           	psect	text28
 11021  1A47                     __ptext28:	
 11022 ;; *************** function _LCD_8XY *****************
 11023 ;; Defined at:
 11024 ;;		line 60 in file "Lab_2/LCD_16_2.c"
 11025 ;; Parameters:    Size  Location     Type
 11026 ;;  x               1    wreg     unsigned char 
 11027 ;;  y               1    4[COMMON] unsigned char 
 11028 ;; Auto vars:     Size  Location     Type
 11029 ;;  x               1    5[COMMON] unsigned char 
 11030 ;; Return value:  Size  Location     Type
 11031 ;;                  1    wreg      void 
 11032 ;; Registers used:
 11033 ;;		wreg, status,2, status,0, pclath, cstack
 11034 ;; Tracked objects:
 11035 ;;		On entry : 0/0
 11036 ;;		On exit  : 0/0
 11037 ;;		Unchanged: 0/0
 11038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11039 ;;      Params:         1       0       0       0       0
 11040 ;;      Locals:         1       0       0       0       0
 11041 ;;      Temps:          0       0       0       0       0
 11042 ;;      Totals:         2       0       0       0       0
 11043 ;;Total ram usage:        2 bytes
 11044 ;; Hardware stack levels used:    1
 11045 ;; Hardware stack levels required when called:    2
 11046 ;; This function calls:
 11047 ;;		_LCD_8_comando
 11048 ;; This function is called by:
 11049 ;;		_main
 11050 ;; This function uses a non-reentrant model
 11051 ;;
 11052                           
 11053                           
 11054                           ;psect for function _LCD_8XY
 11055  1A47                     _LCD_8XY:
 11056                           
 11057                           ;incstack = 0
 11058                           ; Regs used in _LCD_8XY: [wreg+status,2+status,0+pclath+cstack]
 11059                           ;LCD_8XY@x stored from wreg
 11060  1A47  00F5               	movwf	LCD_8XY@x
 11061  1A48                     l3681:
 11062                           
 11063                           ;Lab_2/LCD_16_2.c: 61:     if(x>0){
 11064  1A48  0875               	movf	LCD_8XY@x,w
 11065  1A49  1903               	btfsc	3,2
 11066  1A4A  2A4C               	goto	u5581
 11067  1A4B  2A4D               	goto	u5580
 11068  1A4C                     u5581:
 11069  1A4C  2A55               	goto	l3685
 11070  1A4D                     u5580:
 11071  1A4D                     l3683:
 11072                           
 11073                           ;Lab_2/LCD_16_2.c: 62:         LCD_8_comando(0xC0 + y);
 11074  1A4D  0874               	movf	LCD_8XY@y,w
 11075  1A4E  3EC0               	addlw	192
 11076  1A4F  160A  158A  225D  160A  158A  	fcall	_LCD_8_comando
 11077                           
 11078                           ;Lab_2/LCD_16_2.c: 63:     }
 11079  1A54  2A5C               	goto	l135
 11080  1A55                     l3685:
 11081                           
 11082                           ;Lab_2/LCD_16_2.c: 65:         LCD_8_comando(0x80 + y);
 11083  1A55  0874               	movf	LCD_8XY@y,w
 11084  1A56  3E80               	addlw	128
 11085  1A57  160A  158A  225D  160A  158A  	fcall	_LCD_8_comando
 11086  1A5C                     l135:
 11087  1A5C  0008               	return
 11088  1A5D                     __end_of_LCD_8XY:
 11089                           
 11090                           	psect	text29
 11091  1A5D                     __ptext29:	
 11092 ;; *************** function _LCD_8_comando *****************
 11093 ;; Defined at:
 11094 ;;		line 48 in file "Lab_2/LCD_16_2.c"
 11095 ;; Parameters:    Size  Location     Type
 11096 ;;  dato            1    wreg     unsigned char 
 11097 ;; Auto vars:     Size  Location     Type
 11098 ;;  dato            1    3[COMMON] unsigned char 
 11099 ;; Return value:  Size  Location     Type
 11100 ;;                  1    wreg      void 
 11101 ;; Registers used:
 11102 ;;		wreg
 11103 ;; Tracked objects:
 11104 ;;		On entry : 0/0
 11105 ;;		On exit  : 0/0
 11106 ;;		Unchanged: 0/0
 11107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11108 ;;      Params:         0       0       0       0       0
 11109 ;;      Locals:         1       0       0       0       0
 11110 ;;      Temps:          1       0       0       0       0
 11111 ;;      Totals:         2       0       0       0       0
 11112 ;;Total ram usage:        2 bytes
 11113 ;; Hardware stack levels used:    1
 11114 ;; Hardware stack levels required when called:    1
 11115 ;; This function calls:
 11116 ;;		Nothing
 11117 ;; This function is called by:
 11118 ;;		_LCD_Init8
 11119 ;;		_LCD_8XY
 11120 ;; This function uses a non-reentrant model
 11121 ;;
 11122                           
 11123                           
 11124                           ;psect for function _LCD_8_comando
 11125  1A5D                     _LCD_8_comando:
 11126                           
 11127                           ;incstack = 0
 11128                           ; Regs used in _LCD_8_comando: [wreg]
 11129                           ;LCD_8_comando@dato stored from wreg
 11130  1A5D  00F3               	movwf	LCD_8_comando@dato
 11131  1A5E                     l2961:
 11132                           
 11133                           ;Lab_2/LCD_16_2.c: 49:     PORTD = dato;
 11134  1A5E  0873               	movf	LCD_8_comando@dato,w
 11135  1A5F  1283               	bcf	3,5	;RP0=0, select bank0
 11136  1A60  1303               	bcf	3,6	;RP1=0, select bank0
 11137  1A61  0088               	movwf	8	;volatile
 11138  1A62                     l2963:
 11139                           
 11140                           ;Lab_2/LCD_16_2.c: 50:     PORTCbits.RC0 = 0;
 11141  1A62  1007               	bcf	7,0	;volatile
 11142  1A63                     l2965:
 11143                           
 11144                           ;Lab_2/LCD_16_2.c: 51:     PORTCbits.RC1 = 0;
 11145  1A63  1087               	bcf	7,1	;volatile
 11146                           
 11147                           ;Lab_2/LCD_16_2.c: 52:     _delay((unsigned long)((10)*(8000000/4000000.0)));
 11148  1A64  3006               	movlw	6
 11149  1A65  00F2               	movwf	??_LCD_8_comando
 11150  1A66                     u7337:
 11151  1A66  0BF2               	decfsz	??_LCD_8_comando,f
 11152  1A67  2A66               	goto	u7337
 11153  1A68  0000               	nop
 11154  1A69                     l2967:
 11155                           
 11156                           ;Lab_2/LCD_16_2.c: 53:     PORTCbits.RC2 = 1;
 11157  1A69  1283               	bcf	3,5	;RP0=0, select bank0
 11158  1A6A  1303               	bcf	3,6	;RP1=0, select bank0
 11159  1A6B  1507               	bsf	7,2	;volatile
 11160                           
 11161                           ;Lab_2/LCD_16_2.c: 54:     _delay((unsigned long)((10)*(8000000/4000000.0)));
 11162  1A6C  3006               	movlw	6
 11163  1A6D  00F2               	movwf	??_LCD_8_comando
 11164  1A6E                     u7347:
 11165  1A6E  0BF2               	decfsz	??_LCD_8_comando,f
 11166  1A6F  2A6E               	goto	u7347
 11167  1A70  0000               	nop
 11168  1A71                     l2969:
 11169                           
 11170                           ;Lab_2/LCD_16_2.c: 55:     PORTCbits.RC2 = 0;
 11171  1A71  1283               	bcf	3,5	;RP0=0, select bank0
 11172  1A72  1303               	bcf	3,6	;RP1=0, select bank0
 11173  1A73  1107               	bcf	7,2	;volatile
 11174  1A74                     l130:
 11175  1A74  0008               	return
 11176  1A75                     __end_of_LCD_8_comando:
 11177                           
 11178                           	psect	text30
 11179  1ADD                     __ptext30:	
 11180 ;; *************** function _LCD_8Cadena *****************
 11181 ;; Defined at:
 11182 ;;		line 69 in file "Lab_2/LCD_16_2.c"
 11183 ;; Parameters:    Size  Location     Type
 11184 ;;  dato            2    4[COMMON] PTR const unsigned char 
 11185 ;;		 -> STR_4(16), valor3(6), valor2(6), valor1(6), 
 11186 ;; Auto vars:     Size  Location     Type
 11187 ;;		None
 11188 ;; Return value:  Size  Location     Type
 11189 ;;                  1    wreg      void 
 11190 ;; Registers used:
 11191 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11192 ;; Tracked objects:
 11193 ;;		On entry : 0/0
 11194 ;;		On exit  : 0/0
 11195 ;;		Unchanged: 0/0
 11196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11197 ;;      Params:         2       0       0       0       0
 11198 ;;      Locals:         0       0       0       0       0
 11199 ;;      Temps:          1       0       0       0       0
 11200 ;;      Totals:         3       0       0       0       0
 11201 ;;Total ram usage:        3 bytes
 11202 ;; Hardware stack levels used:    1
 11203 ;; Hardware stack levels required when called:    2
 11204 ;; This function calls:
 11205 ;;		_LCD_8Data
 11206 ;; This function is called by:
 11207 ;;		_main
 11208 ;; This function uses a non-reentrant model
 11209 ;;
 11210                           
 11211                           
 11212                           ;psect for function _LCD_8Cadena
 11213  1ADD                     _LCD_8Cadena:
 11214  1ADD                     l3687:	
 11215                           ;incstack = 0
 11216                           ; Regs used in _LCD_8Cadena: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 11217                           
 11218                           
 11219                           ;Lab_2/LCD_16_2.c: 70:     while(*dato){
 11220  1ADD  2AF9               	goto	l3695
 11221  1ADE                     l3689:
 11222                           
 11223                           ;Lab_2/LCD_16_2.c: 71:         _delay((unsigned long)((100)*(8000000/4000000.0)));
 11224  1ADE  3042               	movlw	66
 11225  1ADF  00F6               	movwf	??_LCD_8Cadena
 11226  1AE0                     u7357:
 11227  1AE0  0BF6               	decfsz	??_LCD_8Cadena,f
 11228  1AE1  2AE0               	goto	u7357
 11229  1AE2  0000               	nop
 11230  1AE3                     l3691:
 11231                           
 11232                           ;Lab_2/LCD_16_2.c: 72:         LCD_8Data(*dato);
 11233  1AE3  0875               	movf	LCD_8Cadena@dato+1,w
 11234  1AE4  1283               	bcf	3,5	;RP0=0, select bank0
 11235  1AE5  1303               	bcf	3,6	;RP1=0, select bank0
 11236  1AE6  00FF               	movwf	btemp+1
 11237  1AE7  0874               	movf	LCD_8Cadena@dato,w
 11238  1AE8  0084               	movwf	4
 11239  1AE9  160A  158A  2000  160A  158A  	fcall	stringtab
 11240  1AEE  160A  158A  2275  160A  158A  	fcall	_LCD_8Data
 11241  1AF3                     l3693:
 11242                           
 11243                           ;Lab_2/LCD_16_2.c: 73:         dato++;
 11244  1AF3  3001               	movlw	1
 11245  1AF4  07F4               	addwf	LCD_8Cadena@dato,f
 11246  1AF5  1803               	skipnc
 11247  1AF6  0AF5               	incf	LCD_8Cadena@dato+1,f
 11248  1AF7  3000               	movlw	0
 11249  1AF8  07F5               	addwf	LCD_8Cadena@dato+1,f
 11250  1AF9                     l3695:
 11251                           
 11252                           ;Lab_2/LCD_16_2.c: 70:     while(*dato){
 11253  1AF9  0875               	movf	LCD_8Cadena@dato+1,w
 11254  1AFA  1283               	bcf	3,5	;RP0=0, select bank0
 11255  1AFB  1303               	bcf	3,6	;RP1=0, select bank0
 11256  1AFC  00FF               	movwf	btemp+1
 11257  1AFD  0874               	movf	LCD_8Cadena@dato,w
 11258  1AFE  0084               	movwf	4
 11259  1AFF  160A  158A  2000  160A  158A  	fcall	stringtab
 11260  1B04  3A00               	xorlw	0
 11261  1B05  1D03               	skipz
 11262  1B06  2B08               	goto	u5591
 11263  1B07  2B09               	goto	u5590
 11264  1B08                     u5591:
 11265  1B08  2ADE               	goto	l3689
 11266  1B09                     u5590:
 11267  1B09                     l141:
 11268  1B09  0008               	return
 11269  1B0A                     __end_of_LCD_8Cadena:
 11270                           
 11271                           	psect	text31
 11272  1A75                     __ptext31:	
 11273 ;; *************** function _LCD_8Data *****************
 11274 ;; Defined at:
 11275 ;;		line 77 in file "Lab_2/LCD_16_2.c"
 11276 ;; Parameters:    Size  Location     Type
 11277 ;;  data            1    wreg     unsigned char 
 11278 ;; Auto vars:     Size  Location     Type
 11279 ;;  data            1    3[COMMON] unsigned char 
 11280 ;; Return value:  Size  Location     Type
 11281 ;;                  1    wreg      void 
 11282 ;; Registers used:
 11283 ;;		wreg
 11284 ;; Tracked objects:
 11285 ;;		On entry : 0/0
 11286 ;;		On exit  : 0/0
 11287 ;;		Unchanged: 0/0
 11288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11289 ;;      Params:         0       0       0       0       0
 11290 ;;      Locals:         1       0       0       0       0
 11291 ;;      Temps:          1       0       0       0       0
 11292 ;;      Totals:         2       0       0       0       0
 11293 ;;Total ram usage:        2 bytes
 11294 ;; Hardware stack levels used:    1
 11295 ;; Hardware stack levels required when called:    1
 11296 ;; This function calls:
 11297 ;;		Nothing
 11298 ;; This function is called by:
 11299 ;;		_LCD_8Cadena
 11300 ;; This function uses a non-reentrant model
 11301 ;;
 11302                           
 11303                           
 11304                           ;psect for function _LCD_8Data
 11305  1A75                     _LCD_8Data:
 11306                           
 11307                           ;incstack = 0
 11308                           ; Regs used in _LCD_8Data: [wreg]
 11309                           ;LCD_8Data@data stored from wreg
 11310  1A75  00F3               	movwf	LCD_8Data@data
 11311  1A76                     l2973:
 11312                           
 11313                           ;Lab_2/LCD_16_2.c: 78:     _delay((unsigned long)((100)*(8000000/4000000.0)));
 11314  1A76  3042               	movlw	66
 11315  1A77  00F2               	movwf	??_LCD_8Data
 11316  1A78                     u7367:
 11317  1A78  0BF2               	decfsz	??_LCD_8Data,f
 11318  1A79  2A78               	goto	u7367
 11319  1A7A  0000               	nop
 11320                           
 11321                           ;Lab_2/LCD_16_2.c: 80:     PORTD = data;
 11322  1A7B  0873               	movf	LCD_8Data@data,w
 11323  1A7C  1283               	bcf	3,5	;RP0=0, select bank0
 11324  1A7D  1303               	bcf	3,6	;RP1=0, select bank0
 11325  1A7E  0088               	movwf	8	;volatile
 11326  1A7F                     l2975:
 11327                           
 11328                           ;Lab_2/LCD_16_2.c: 82:     PORTCbits.RC1 = 0;
 11329  1A7F  1087               	bcf	7,1	;volatile
 11330  1A80                     l2977:
 11331                           
 11332                           ;Lab_2/LCD_16_2.c: 83:     PORTCbits.RC0 = 1;
 11333  1A80  1407               	bsf	7,0	;volatile
 11334                           
 11335                           ;Lab_2/LCD_16_2.c: 84:     _delay((unsigned long)((10)*(8000000/4000000.0)));
 11336  1A81  3006               	movlw	6
 11337  1A82  00F2               	movwf	??_LCD_8Data
 11338  1A83                     u7377:
 11339  1A83  0BF2               	decfsz	??_LCD_8Data,f
 11340  1A84  2A83               	goto	u7377
 11341  1A85  0000               	nop
 11342  1A86                     l2979:
 11343                           
 11344                           ;Lab_2/LCD_16_2.c: 85:     PORTCbits.RC2 = 1;
 11345  1A86  1283               	bcf	3,5	;RP0=0, select bank0
 11346  1A87  1303               	bcf	3,6	;RP1=0, select bank0
 11347  1A88  1507               	bsf	7,2	;volatile
 11348                           
 11349                           ;Lab_2/LCD_16_2.c: 86:     _delay((unsigned long)((10)*(8000000/4000000.0)));
 11350  1A89  3006               	movlw	6
 11351  1A8A  00F2               	movwf	??_LCD_8Data
 11352  1A8B                     u7387:
 11353  1A8B  0BF2               	decfsz	??_LCD_8Data,f
 11354  1A8C  2A8B               	goto	u7387
 11355  1A8D  0000               	nop
 11356  1A8E                     l2981:
 11357                           
 11358                           ;Lab_2/LCD_16_2.c: 87:     PORTCbits.RC2 = 0;
 11359  1A8E  1283               	bcf	3,5	;RP0=0, select bank0
 11360  1A8F  1303               	bcf	3,6	;RP1=0, select bank0
 11361  1A90  1107               	bcf	7,2	;volatile
 11362  1A91                     l144:
 11363  1A91  0008               	return
 11364  1A92                     __end_of_LCD_8Data:
 11365                           
 11366                           	psect	text32
 11367  1A06                     __ptext32:	
 11368 ;; *************** function _isr *****************
 11369 ;; Defined at:
 11370 ;;		line 59 in file "Lab_2/Lab_2.c"
 11371 ;; Parameters:    Size  Location     Type
 11372 ;;		None
 11373 ;; Auto vars:     Size  Location     Type
 11374 ;;		None
 11375 ;; Return value:  Size  Location     Type
 11376 ;;                  1    wreg      void 
 11377 ;; Registers used:
 11378 ;;		None
 11379 ;; Tracked objects:
 11380 ;;		On entry : 0/0
 11381 ;;		On exit  : 0/0
 11382 ;;		Unchanged: 0/0
 11383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11384 ;;      Params:         0       0       0       0       0
 11385 ;;      Locals:         0       0       0       0       0
 11386 ;;      Temps:          2       0       0       0       0
 11387 ;;      Totals:         2       0       0       0       0
 11388 ;;Total ram usage:        2 bytes
 11389 ;; Hardware stack levels used:    1
 11390 ;; This function calls:
 11391 ;;		Nothing
 11392 ;; This function is called by:
 11393 ;;		Interrupt level 1
 11394 ;; This function uses a non-reentrant model
 11395 ;;
 11396                           
 11397                           
 11398                           ;psect for function _isr
 11399  1A06                     _isr:
 11400  1A06                     i1l87:
 11401  1A06  0871               	movf	??_isr+1,w
 11402  1A07  008A               	movwf	10
 11403  1A08  0E70               	swapf	??_isr,w
 11404  1A09  0083               	movwf	3
 11405  1A0A  0EFE               	swapf	btemp,f
 11406  1A0B  0E7E               	swapf	btemp,w
 11407  1A0C  0009               	retfie
 11408  1A0D                     __end_of_isr:
 11409  007E                     btemp	set	126	;btemp
 11410  007E                     wtemp0	set	126
 11411                           
 11412                           	psect	intentry
 11413  0004                     __pintentry:	
 11414                           ;incstack = 0
 11415                           ; Regs used in _isr: []
 11416                           
 11417  0004                     interrupt_function:
 11418  007E                     saved_w	set	btemp
 11419  0004  00FE               	movwf	btemp
 11420  0005  0E03               	swapf	3,w
 11421  0006  00F0               	movwf	??_isr
 11422  0007  080A               	movf	10,w
 11423  0008  00F1               	movwf	??_isr+1
 11424  0009  160A  158A  2A06   	ljmp	_isr
 11425                           
 11426                           	psect	config
 11427                           
 11428                           ;Config register CONFIG1 @ 0x2007
 11429                           ;	Oscillator Selection bits
 11430                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 11431                           ;	Watchdog Timer Enable bit
 11432                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11433                           ;	Power-up Timer Enable bit
 11434                           ;	PWRTE = OFF, PWRT disabled
 11435                           ;	RE3/MCLR pin function select bit
 11436                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 11437                           ;	Code Protection bit
 11438                           ;	CP = OFF, Program memory code protection is disabled
 11439                           ;	Data Code Protection bit
 11440                           ;	CPD = OFF, Data memory code protection is disabled
 11441                           ;	Brown Out Reset Selection bits
 11442                           ;	BOREN = OFF, BOR disabled
 11443                           ;	Internal External Switchover bit
 11444                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 11445                           ;	Fail-Safe Clock Monitor Enabled bit
 11446                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11447                           ;	Low Voltage Programming Enable bit
 11448                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 11449                           ;	In-Circuit Debugger Mode bit
 11450                           ;	DEBUG = 0x1, unprogrammed default
 11451  2007                     	org	8199
 11452  2007  20D4               	dw	8404
 11453                           
 11454                           ;Config register CONFIG2 @ 0x2008
 11455                           ;	Brown-out Reset Selection bit
 11456                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 11457                           ;	Flash Program Memory Self Write Enable bits
 11458                           ;	WRT = OFF, Write protection off
 11459  2008                     	org	8200
 11460  2008  3FFF               	dw	16383

Data Sizes:
    Strings     116
    Constant    144
    Data        0
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     80      80
    BANK1            80     44      79
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), STR_2(CODE[7]), STR_1(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 6
		 -> valor3(BANK1[6]), valor2(BANK1[6]), valor1(BANK1[6]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    USART_Cadena@str	PTR unsigned char  size(2) Largest target is 31
		 -> STR_8(CODE[17]), STR_7(CODE[15]), STR_6(CODE[30]), STR_5(CODE[31]), 
		 -> valor2(BANK1[6]), valor1(BANK1[6]), 

    LCD_8Cadena@dato	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[16]), valor3(BANK1[6]), valor2(BANK1[6]), valor1(BANK1[6]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___awdiv
    _sprintf->___fleq
    _sprintf->___flge
    _sprintf->___lldiv
    _sprintf->___llmod
    _sprintf->___xxtofl
    _sprintf->__div_to_l_
    _sprintf->__tdiv_to_l_
    _scale->___awdiv
    ___awdiv->___awmod
    ___lwdiv->___lwmod
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___flsub->___xxtofl
    _USART_Cadena->_USART_Tx
    _LCD_Init8->_LCD_8_comando
    _LCD_8XY->_LCD_8_comando
    _LCD_8Cadena->_LCD_8Data

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   47621
                                             40 BANK1      4     4      0
                        _LCD_8Cadena
                            _LCD_8XY
                          _LCD_Init8
                       _USART_Cadena
                         _USART_Init
                           _USART_Rx
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             43    37      6   39454
                                             74 BANK0      6     0      6
                                              8 BANK1     32    32      0
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    9586
                                             34 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1516
                                              9 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    7979
                                             34 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     781
                                              8 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    6233
                                              8 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     980
                                              2 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              2 COMMON     8     0      8
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     634
                                              2 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     772
                                              2 COMMON     8     0      8
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     601
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             53 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             54 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _USART_Rx                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Cadena                                         2     0      2     523
                                              3 COMMON     2     0      2
                           _USART_Tx
 ---------------------------------------------------------------------------------
 (2) _USART_Tx                                             1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init8                                            2     2      0      22
                                              4 COMMON     2     2      0
                      _LCD_8_comando
 ---------------------------------------------------------------------------------
 (1) _LCD_8XY                                              2     1      1     392
                                              4 COMMON     2     1      1
                      _LCD_8_comando
 ---------------------------------------------------------------------------------
 (2) _LCD_8_comando                                        2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_8Cadena                                          3     1      2     371
                                              4 COMMON     3     1      2
                          _LCD_8Data
 ---------------------------------------------------------------------------------
 (2) _LCD_8Data                                            2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_8Cadena
     _LCD_8Data
   _LCD_8XY
     _LCD_8_comando
   _LCD_Init8
     _LCD_8_comando
   _USART_Cadena
     _USART_Tx
   _USART_Init
   _USART_Rx
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      AB       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2C      4F       7       98.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      AB      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Jul 25 19:28:34 2021

                      pc 0002             ___awdiv@sign 0025                       fsr 0004  
    ___wmul@multiplicand 0074      __Umul8_16@word_mpld 0022                      l130 1A74  
                    l141 1B09                      l135 1A5C                      l127 1E23  
                    l144 1A91                      l305 03B6                      l181 1A46  
                    l190 1A05                      l327 08FD                      l184 0804  
                    l602 1E8A                      l610 1031                      l187 080E  
                    l196 1ADC                      l428 1D40                      l620 10B2  
                    l605 1E9F                      l613 1082                      l373 0F20  
                    l365 0DA9                      l392 1A9E                      l609 10BF  
                    l545 1DA9                      l394 1AB6                      l562 07D5  
                    l298 12E4                      l723 13EF                      l563 073A  
                    l580 1BD9                      l740 14BA                      l732 156C  
                    l708 1B43                      l388 0FFF                      l725 13C6  
                    l573 07C8                      l821 0683                      l750 1500  
                    l566 0798                      l558 1CD8                      l583 1EBE  
                    l591 1A1F                      l719 1348                      l815 0717  
                    l744 14DE                      l648 1C7F                      l761 1560  
                    l753 153E                      l578 1BA8                      l586 1F2A  
                    l762 156C                      l834 07EC                      l579 1BC4  
                    l587 1F43                      l595 1E9F                      l827 070B  
                    l836 07FE                      l765 1C29                      l861 1FFF  
                    l872 1FC9                      l873 1FD5                      l865 1FAD  
                    l698 1B89                      l859 1F68                      l879 1A31  
                    _isr 1A06                      fsr0 0004                      indf 0000  
           ___awmod@sign 0078             ___flmul@aexp 0036             ___flmul@bexp 003B  
           ___flmul@sign 0035             ___flmul@temp 0040             ___flmul@prod 003C  
        __end_of_LCD_8XY 1A5D             ___fltol@exp1 005F                     l3201 1B8A  
                   l3105 10A7                     l4001 0663                     l3203 1BA0  
                   l3107 10B7                     l4003 0667                     l3051 1A28  
                   l3205 1BBC                     l3221 1EDE                     l3213 1EA0  
                   l3061 1016                     l4021 06B8                     l4013 0688  
                   l4005 0668                     l3053 1A2E                     l2501 1D48  
                   l3207 1BD6                     l3223 1F02                     l3215 1EB6  
                   l3311 1F70                     l3303 1F47                     l4103 0718  
                   l3071 1032                     l4031 06EF                     l4015 068D  
                   l4023 06BE                     l4007 066C                     l3055 1A30  
                   l3047 1A21                     l2511 1D5C                     l2503 1D4D  
                   l3401 1A39                     l3209 1BD8                     l3225 1F06  
                   l3217 1ED2                     l3233 1A15                     l3241 1E24  
                   l3321 1F92                     l3305 1F4C                     l4121 0756  
                   l4105 0725                     l3081 105B                     l3073 1038  
                   l3065 101F                     l4041 070F                     l4033 06F1  
                   l4025 06CB                     l4017 069B                     l4009 0680  
                   l3049 1A22                     l2521 1D72                     l2513 1D5E  
                   l2505 1D4F                     l4201 0817                     l3411 1A43  
                   l3403 1A3D                     l3227 1F40                     l3219 1EDA  
                   l3235 1A1D                     l3251 1E50                     l3243 1E31  
                   l3171 1AAC                     l3163 1A92                     l3331 1FC3  
                   l3323 1F96                     l3315 1F79                     l3307 1F50  
                   l4131 0789                     l4123 075F                     l4115 073B  
                   l3091 1086                     l3083 1069                     l3075 1047  
                   l3059 1003                     l4035 06FF                     l4027 06D6  
                   l4019 069F                     l2611 1B1A                     l2531 1D95  
                   l2523 1D76                     l2515 1D64                     l2507 1D53  
                   l4211 0841                     l4203 081D                     l3405 1A3E  
                   l3229 1F42                     l3237 1A1F                     l2701 138A  
                   l3253 1E58                     l3173 1AB2                     l3165 1A94  
                   l3341 1FF6                     l3333 1FCD                     l3325 1FA4  
                   l3317 1F7E                     l3309 1F60                     l4141 07A4  
                   l4133 0792                     l4125 0768                     l4117 0743  
                   l4109 072E                     l3085 1073                     l3077 1049  
                   l4037 0703                     l4029 06E5                     l2621 1B39  
                   l2613 1B1E                     l2605 1B0A                     l4053 11E4  
                   l4045 10C3                     l2525 1D87                     l2517 1D67  
                   l2533 1D9B                     l2509 1D58                     l2541 1C80  
                   l4301 0B62                     l4213 0845                     l4221 088D  
                   l4205 0824                     l3351 1DB1                     l3407 1A41  
                   l2711 13CA                     l2703 138E                     l2631 12F2  
                   l3271 1E7F                     l3263 1E66                     l3255 1E5A  
                   l3247 1E3A                     l3167 1A98                     l3343 1FF7  
                   l3335 1FD7                     l3327 1FB4                     l3319 1F8B  
                   l4151 07CD                     l4135 079C                     l4143 07B6  
                   l4127 077A                     l4119 0754                     l3087 1074  
                   l3079 1052                     l4039 0704                     l2615 1B22  
                   l2607 1B10                     l2623 1B3F                     l4055 11EA  
                   l4047 10C9                     l2535 1DA0                     l2527 1D8D  
                   l2519 1D6E                     l2551 1C90                     l2543 1C81  
                   l4063 0021                     l4303 0B7D                     l4231 08C2  
                   l4223 089D                     l4215 085A                     l4207 0829  
                   l3361 1DB8                     l3353 1DB2                     l3409 1A42  
                   l2801 153A                     l2721 13E3                     l2713 13D3  
                   l2705 1392                     l2641 1309                     l2633 12F6  
                   l3273 1E8F                     l3257 1E5E                     l3265 1E78  
                   l3249 1E4F                     l4161 1CFB                     l3169 1AA5  
                   l3337 1FED                     l3329 1FBF                     l4129 0788  
                   l3097 108E                     l3089 107C                     l2617 1B2C  
                   l2609 1B13                     l2537 1DA5                     l2529 1D8E  
                   l2561 1CA9                     l2553 1C95                     l2545 1C85  
                   l4081 01BE                     l4065 0025                     l4401 0EF4  
                   l4321 0C3A                     l4313 0BCB                     l4305 0B86  
                   l4233 08DB                     l4225 08A0                     l4217 0873  
                   l4209 082D                     l3371 1DDB                     l3363 1DC1  
                   l3355 1DB3                     l3347 1DAA                     l2811 1556  
                   l2803 1543                     l2731 1401                     l2715 13D5  
                   l2723 13E7                     l2707 1393                     l2651 131F  
                   l2643 130A                     l2635 12F7                     l2627 12E5  
                   l3275 1E94                     l4171 1D29                     l4163 1CFF  
                   l4155 1CD9                     l3339 1FF2                     l3099 10A0  
                   l2619 1B32                     l4059 129D                     l2563 1CAD  
                   l2555 1C9B                     l2571 1CCA                     l2547 1C8A  
                   l4075 0126                     l4067 0027                     l4411 0F12  
                   l4403 0EFB                     l4331 0C87                     l4307 0B8E  
                   l4315 0BD4                     l4251 0947                     l4243 08FF  
                   l4235 08E3                     l4227 08A8                     l4219 087B  
                   l3381 1DF7                     l3373 1DE1                     l3365 1DC7  
                   l3357 1DB6                     l3349 1DB0                     l3701 1AC6  
                   l2813 155A                     l2805 1548                     l2741 142B  
                   l2733 1418                     l2725 13F3                     l2717 13D9  
                   l2709 13AA                     l2661 1330                     l2653 1320  
                   l2637 12FC                     l2645 130C                     l2629 12EC  
                   l4173 1D32                     l4165 1D08                     l4157 1CEB  
                   l4181 1C32                     l4149 07BD                     l2573 1CCF  
                   l2565 1CB7                     l2557 1C9E                     l2549 1C8C  
                   l4093 02EE                     l4077 012D                     l4069 002E  
                   l4085 01EF                     l4421 0F4A                     l4413 0F1A  
                   l4405 0EFF                     l4341 0CC5                     l4333 0C91  
                   l4317 0C09                     l4309 0BAC                     l4261 098F  
                   l4253 0955                     l4245 0933                     l4229 08AD  
                   l4237 08F7                     l4501 159C                     l3391 1E12  
                   l3383 1DFC                     l3375 1DE6                     l3367 1DD0  
                   l3359 1DB7                     l3703 1ACC                     l2815 155C  
                   l2807 1550                     l2751 1454                     l2743 142F  
                   l2735 141C                     l2727 13F8                     l2719 13DA  
                   l2671 134E                     l2663 1335                     l2655 1326  
                   l2647 1314                     l2639 1301                     l4167 1D1A  
                   l4159 1CEE                     l4175 1D38                     l4191 1C68  
                   l4183 1C37                     l2575 1CD4                     l2567 1CBD  
                   l2559 1CA5                     l4095 02F5                     l4087 01F6  
                   l4431 0F76                     l4423 0F52                     l4415 0F2B  
                   l4407 0F05                     l4351 0CEE                     l4343 0CCE  
                   l4335 0CAC                     l4327 0C3C                     l4319 0C38  
                   l4271 09D0                     l4263 0993                     l4255 0959  
                   l4247 093F                     l4239 08FB                     l4511 15B1  
                   l4503 159D                     l3393 1E17                     l3385 1E02  
                   l3377 1DEC                     l3369 1DD6                     l3705 1A02  
                   l2817 1567                     l2809 1555                     l2761 14C2  
                   l2753 1492                     l2745 1430                     l2737 1420  
                   l2681 1362                     l2673 1352                     l2665 133D  
                   l2657 132A                     l2649 1319                     l3297 1BDA  
                   l4169 1D28                     l4193 1C71                     l4185 1C44  
                   l2497 1D41                     l2569 1CC4                     l4441 0F9E  
                   l4433 0F7F                     l4425 0F5E                     l4417 0F32  
                   l4353 0CF5                     l4337 0CB2                     l4281 0A67  
                   l4273 09F3                     l4265 09AC                     l4257 0972  
                   l4249 0943                     l4409 0F0C                     l4521 15BD  
                   l4513 15B4                     l4505 15A0                     l3395 1E1D  
                   l3387 1E07                     l3379 1DF1                     l2819 156B  
                   l2771 14DD                     l2763 14C7                     l2755 1498  
                   l2747 1439                     l2739 1429                     l2691 1376  
                   l2683 1366                     l2675 1356                     l2667 133E  
                   l2659 132B                     l3299 1BDE                     l4187 1C48  
                   l4195 1C77                     l4179 1C2A                     l2499 1D44  
                   l4099 0386                     l4451 0FC7                     l4443 0FA4  
                   l4435 0F83                     l4427 0F64                     l4419 0F41  
                   l4371 0D80                     l4355 0CFA                     l4363 0D65  
                   l4339 0CBE                     l4347 0CD3                     l4291 0ABB  
                   l4283 0A80                     l4275 09F7                     l4267 09B7  
                   l4259 098B                     l4531 15E1                     l4523 15C1  
                   l4515 15B5                     l4507 15A1                     l3389 1E0D  
                   l2773 14E2                     l2781 14EE                     l2757 149D  
                   l2749 143E                     l2693 137A                     l2685 136A  
                   l2677 135A                     l2669 1340                     l4189 1C5A  
                   l3901 1B85                     l4445 0FAB                     l4437 0F8E  
                   l4429 0F68                     l4381 0DB7                     l4373 0D8D  
                   l4365 0D6D                     l4357 0D3D                     l4349 0CE0  
                   l4293 0B02                     l4285 0A89                     l4277 09FD  
                   l4269 09BD                     l4533 15EE                     l4525 15C7  
                   l4541 1606                     l4517 15B6                     l4509 15A9  
                   l3399 1A32                     l2775 14E5                     l2767 14D0  
                   l2759 14AC                     l2783 14F2                     l2695 137E  
                   l2687 136E                     l2679 135E                     l3911 03C8  
                   l4447 0FAF                     l4439 0F9A                     l4391 0E7E  
                   l4383 0DBE                     l4375 0D9C                     l4367 0D76  
                   l4359 0D5C                     l4295 0B11                     l4287 0AA4  
                   l4279 0A1C                     l4455 0FCF                     l4199 0812  
                   l4551 171E                     l4543 164A                     l4535 15F6  
                   l4527 15D2                     l4519 15B7                     l4471 157B  
                   l2961 1A5E                     l3681 1A48                     l2793 1505  
                   l2785 14F3                     l2777 14E7                     l2769 14D9  
                   l2697 1382                     l2689 1372                     l3921 03DD  
                   l3913 03C9                     l3905 03B7                     l4449 0FBB  
                   l4393 0E9D                     l4385 0DC2                     l4377 0DA3  
                   l4369 0D7A                     l4297 0B2C                     l4289 0AAC  
                   l4457 0FFB                     l4561 1762                     l4553 1742  
                   l4545 1690                     l4537 15FC                     l4529 15DA  
                   l4481 1584                     l4473 157C                     l3691 1AE3  
                   l2963 1A62                     l3683 1A4D                     l2795 150A  
                   l2787 14F7                     l2779 14EC                     l2699 1386  
                   l3931 03F5                     l3923 03E5                     l3915 03CE  
                   l3907 03BE                     l4395 0EA5                     l4387 0DE0  
                   l4379 0DB2                     l4299 0B53                     l4619 092B  
                   l4571 1794                     l4563 176E                     l4555 1749  
                   l4547 16D6                     l4539 1603                     l4491 158A  
                   l4483 1586                     l4475 157F                     l4467 156D  
                   l2981 1A8E                     l2973 1A76                     l3693 1AF3  
                   l2965 1A63                     l3685 1A55                     l2797 1518  
                   l2789 14FD                     l3941 0411                     l3933 03FA  
                   l3925 03EA                     l3917 03D3                     l3909 03C4  
                   l4397 0EA9                     l4389 0E3B                     l4581 17E8  
                   l4573 179A                     l4565 1777                     l4557 1752  
                   l4549 16FA                     l4493 158D                     l4485 1587  
                   l4477 1581                     l4469 1577                     l2975 1A7F  
                   l3695 1AF9                     l3687 1ADD                     l2967 1A69  
                   l2799 151C                     l3871 07E6                     l3951 0434  
                   l3943 0416                     l3935 03FF                     l3927 03F0  
                   l3919 03DB                     l4399 0EEC                     l4583 17EF  
                   l4575 17D0                     l4567 1783                     l4559 1759  
                   l4495 158E                     l4487 1588                     l4479 1582  
                   l2977 1A80                     l3689 1ADE                     l2969 1A71  
                   l2985 0804                     l3697 1AB7                     l3873 07F5  
                   l3865 07D9                     l3961 04C2                     l3953 0441  
                   l3945 041B                     l3937 0407                     l3929 03F4  
                   l3881 1B48                     l4585 17F5                     l4577 17D6  
                   l4569 178C                     l4497 1592                     l4489 1589  
                   l2979 1A86                     l2987 080A                     l3699 1AB8  
                   l3875 07FA                     l3867 07DB                     l3971 0524  
                   l3963 04DE                     l3955 045E                     l3939 0409  
                   l3891 1B60                     l3883 1B4E                     l4587 17F9  
                   l4579 17E0                     l4499 1599                     l3869 07E2  
                   l3981 05B4                     l3973 0541                     l3965 04E7  
                   l3957 047A                     l3949 0424                     l3893 1B71  
                   l3885 1B51                     l3991 0646                     l3983 05E1  
                   l3975 055A                     l3967 04F7                     l3959 04A6  
                   l3895 1B77                     l3887 1B58                     l3879 1B44  
                   l3993 064F                     l3985 0607                     l3977 0577  
                   l3969 0514                     l3897 1B78                     l3889 1B5C  
                   l3995 0653                     l3987 062F                     l3979 05A4  
                   l3899 1B7F                     ?_isr 0070                     l3997 0654  
                   l3989 0638                     l3999 065D                     STR_1 190F  
                   STR_2 190F                     STR_3 190F                     STR_4 18F0  
                   STR_5 18A2                     STR_6 18C1                     STR_7 1900  
                   STR_8 18DF                     u3000 1C85                     u3001 1C84  
                   u3010 1C90                     u3011 1C8F                     u3020 1C9B  
                   u3021 1C9A                     u3040 1CAD                     u3041 1CAC  
                   u3210 1B3F                     u3050 1CB7                     u3211 1B3E  
                   u3051 1CB6                     u3035 1C9F                     u3300 1352  
                   u3220 12F6                     u3301 1351                     u3221 12F5  
                   u3205 1B33                     u3310 13AA                     u3230 12FC  
                   u3070 1CCA                     u3311 13A9                     u3231 12FB  
                   u3071 1CC9                     u3055 1CB3                     u3320 13B5  
                   u3240 1301                     u3160 1B10                     u3080 1CCF  
                   u3401 140A                     u3321 13B3                     u3241 1300  
                   u3161 1B0F                     u3081 1CCE                     u3065 1CBE  
                   u4050 080A                     u3410 141C                     u3402 1411  
                   u3330 13B6                     u3250 131F                     u5010 1F91  
                   u4051 0809                     u3411 141B                     u3403 1418  
                   u3315 13A6                     u3251 131E                     u5011 1F90  
                   u3500 14C7                     u3420 1420                     u3340 13CA  
                   u3260 132A                     u5100 1FF6                     u3180 1B22  
                   u3501 14C6                     u3421 141F                     u3341 13C9  
                   u3261 1329                     u5101 1FF5                     u5005 1F83  
                   u3181 1B21                     u3430 142F                     u3350 13D9  
                   u3270 1330                     u5030 1FB3                     u3190 1B2C  
                   u4310 1A28                     u3431 142E                     u3351 13D8  
                   u3271 132F                     u5031 1FB2                     u3191 1B2B  
                   u3175 1B14                     u4311 1A27                     u3600 151C  
                   u3520 14DD                     u3280 1335                     u4400 108D  
                   u6000 0615                     u4320 1A2E                     u3601 151B  
                   u3521 14DC                     u3281 1334                     u5025 1FA5  
                   u4401 108C                     u4321 1A2D                     u3610 152B  
                   u3530 14E2                     u3450 1454                     u3370 13EF  
                   u3290 134E                     u5050 1FC3                     u4330 1016  
                   u3531 14E1                     u3515 14D2                     u3451 1453  
                   u3371 13EE                     u3291 134D                     u5051 1FC2  
                   u4331 1015                     u6011 0621                     u3195 1B28  
                   u3620 153A                     u3540 14EC                     u3380 13F3  
                   u5060 1FC9                     u4420 109F                     u4340 1030  
                   u6100 068D                     u6012 0628                     u2900 1D48  
                   u3621 1539                     u3541 14EB                     u3461 146B  
                   u3453 1450                     u3445 1432                     u3381 13F2  
                   u3365 13DC                     u5061 1FC8                     u5045 1FB8  
                   u4421 109E                     u4341 102F                     u6101 068C  
                   u6013 062F                     u6005 0610                     u2901 1D47  
                   u3630 1543                     u3550 14F2                     u3470 147F  
                   u3462 146C                     u3390 13F8                     u5070 1FCD  
                   u4430 10A6                     u6110 069F                     u2910 1D53  
                   u3631 1542                     u3615 1526                     u3551 14F1  
                   u3471 1480                     u3463 1471                     u3391 13F7  
                   u5071 1FCC                     u4431 10A5                     u4415 108F  
                   u6111 069E                     u2911 1D52                     u3640 1548  
                   u3560 14F7                     u3480 149D                     u3472 1485  
                   u3464 1472                     u5080 1FE2                     u4360 1069  
                   u6120 06AE                     u6040 0653                     u6200 11EA  
                   u2920 1D64                     u7000 0F0B                     u3641 1547  
                   u3561 14F6                     u3481 149C                     u3473 1486  
                   u3465 1477                     u4361 1068                     u6041 0652  
                   u6025 0631                     u6201 11E9                     u2921 1D63  
                   u7001 0F0A                     u3650 1555                     u3570 14FD  
                   u3490 14C2                     u3466 1478                     u5090 1FF2  
                   u4450 10B7                     u6130 06CB                     u7010 0F12  
                   u3651 1554                     u3571 14FC                     u3491 14C1  
                   u5091 1FF1                     u4451 10B6                     u4355 1054  
                   u6131 06CA                     u6035 0648                     u7011 0F11  
                   u4700 1BA0                     u3660 155A                     u3580 1504  
                   u4620 1AB2                     u4380 1082                     u6140 06E5  
                   u6060 0667                     u2940 1D76                     u7100 0FA4  
                   u7020 0F1A                     u4701 1B9F                     u3661 1559  
                   u3581 1503                     u4621 1AB1                     u4605 1A9F  
                   u5085 1FDD                     u4445 10A9                     u4381 1081  
                   u4365 1065                     u6141 06E4                     u6125 06A9  
                   u6061 0666                     u2941 1D75                     u7101 0FA3  
                   u7021 0F19                     u4710 1BBC                     u3670 156B  
                   u3590 150A                     u4390 1086                     u6150 0703  
                   u6070 066C                     u7110 0FBB                     u7030 0F2B  
                   u4711 1BBB                     u3671 156A                     u3591 1509  
                   u4615 1AA6                     u4391 1085                     u4375 1075  
                   u6151 0702                     u6135 06C7                     u6071 066B  
                   u6055 0656                     u6215 1207                     u2935 1D68  
                   u7111 0FBA                     u7031 0F2A                     u5600 1ADC  
                   u4720 1BD6                     u4800 1A1D                     u6080 0680  
                   u6160 10C9                     u2960 1D87                     u6240 0025  
                   u7120 0FC7                     u7040 0F41                     u7200 17E8  
                   u5601 1ADB                     u4721 1BD5                     u4801 1A1C  
                   u6145 06E1                     u6081 067F                     u6225 1258  
                   u6161 10C8                     u2961 1D86                     u6305 0140  
                   u6241 0024                     u7121 0FC6                     u7041 0F40  
                   u7201 17E7                     u4730 1EB6                     u4810 1E31  
                   u6410 0725                     u6090 0687                     u6330 01F6  
                   u6250 002E                     u7130 0FFB                     u7050 0F52  
                   u7210 17F5                     u4731 1EB5                     u4811 1E30  
                   u6411 0724                     u6091 0686                     u6235 12A8  
                   u2955 1D77                     u6331 01F5                     u6315 0180  
                   u6251 002D                     u7131 0FFA                     u7051 0F51  
                   u7035 0F27                     u7211 17F4                     u4740 1ED2  
                   u4900 1E94                     u4820 1E48                     u6500 07B5  
                   u6420 0739                     u2980 1D9B                     u7060 0F5E  
                   u7140 15C7                     u4725 1BD2                     u4741 1ED1  
                   u4901 1E93                     u6501 07B4                     u6421 0738  
                   u2981 1D9A                     u2965 1D83                     u6405 0389  
                   u6325 01C1                     u7061 0F5D                     u7045 0F3D  
                   u7141 15C6                     u4750 1EDE                     u4830 1E5E  
                   u4590 1A98                     u6510 07BC                     u5710 07FA  
                   u2990 1DA0                     u7070 0F68                     u7150 15D2  
                   u4751 1EDD                     u4831 1E5D                     u4591 1A97  
                   u6511 07BB                     u5711 07F9                     u6175 10E6  
                   u2991 1D9F                     u2975 1D8F                     u7071 0F67  
                   u7151 15D1                     u4840 1E65                     u6600 1D38  
                   u6440 077A                     u5800 03CE                     u5720 1B4E  
                   u7080 0F76                     u7160 15EE                     u4761 1EED  
                   u4841 1E64                     u4825 1E43                     u6601 1D37  
                   u6441 0779                     u5705 07ED                     u5801 03CD  
                   u5721 1B4D                     u6185 1146                     u6345 0218  
                   u6265 0050                     u7081 0F75                     u7161 15ED  
                   u4770 1F06                     u4762 1EEE                     u6610 1C32  
                   u6530 07CD                     u5810 03D3                     u6370 02F5  
                   u6290 012D                     u7090 0F8E                     u7170 1794  
                   u7307 1E04                     u4771 1F05                     u4763 1EF3  
                   u6611 1C31                     u6531 07CC                     u6435 0761  
                   u5811 03D2                     u6195 119F                     u6371 02F4  
                   u6355 0259                     u6291 012C                     u6275 0091  
                   u7091 0F8D                     u7171 1793                     u7227 1596  
                   u5580 1A4D                     u4764 1EF4                     u4860 1E77  
                   u6540 1CEB                     u6460 0798                     u5820 03F4  
                   u5740 1B60                     u6700 089D                     u7180 179A  
                   u5581 1A4C                     u7317 1E0F                     u4781 1F15  
                   u4765 1EF9                     u4861 1E76                     u6541 1CEA  
                   u6525 07BF                     u6461 0797                     u6445 0776  
                   u5901 04D0                     u5821 03F3                     u5741 1B5F  
                   u6365 02A9                     u6285 00E1                     u7085 0F72  
                   u6701 089C                     u7181 1799                     u7237 1600  
     __size_of_LCD_8Data 001D                     u5590 1B09                     u4790 1F40  
                   u4782 1F16                     u4766 1EFA                     u4870 1E7E  
                   u6630 1C48                     u6470 079C                     u5902 04D7  
                   u5830 03FA                     u6710 08F6                     u7190 17D6  
                   i1l87 1A06                     u5591 1B08                     u7327 1E14  
                   u7247 1DBC                     u4791 1F3F                     u4783 1F1B  
                   u4871 1E7D                     u4855 1E67                     u6631 1C47  
                   u6471 079B                     u6455 078B                     u5903 04DE  
                   u5831 03F9                     u5735 1B52                     u7095 0F8A  
                   u6711 08F5                     u7191 17D5                     u4784 1F1C  
                   u6560 1CFF                     u6640 1C5A                     u6480 07A3  
                   u5840 03FF                     u5760 1B71                     u6800 0B11  
                   u6720 093F                     u7337 1A66                     u7257 1DCB  
                   u4785 1F21                     u6561 1CFE                     u6641 1C59  
                   u6625 1C39                     u6481 07A2                     u5921 0506  
                   u5841 03FE                     u5761 1B70                     u6385 0308  
                   u6801 0B10                     u6721 093E                     u4786 1F22  
                   u4890 1E8F                     u4970 1F4C                     u5690 07E6  
                   u5922 050D                     u5850 0416                     u6810 0B2C  
                   u6730 0943                     u7347 1A6E                     u7267 1DD8  
                   u4795 1F3C                     u4891 1E8E                     u6555 1CF0  
                   u4971 1F4B                     u5691 07E5                     u5931 0533  
                   u5923 0514                     u5915 04E0                     u5851 0415  
                   u5755 1B61                     u6395 0348                     u6811 0B2B  
                   u6731 0942                     u6580 1D1A                     u6660 1C77  
                   u4980 1F50                     u5932 053A                     u5860 041B  
                   u5780 1B85                     u6900 0CE0                     u6820 0B53  
                   u6740 0972                     u7357 1AE0                     u7277 1DE3  
                   u4885 1E81                     u6581 1D19                     u6661 1C76  
                   u6645 1C56                     u4981 1F4F                     u5933 0541  
                   u5861 041A                     u5781 1B84                     u5765 1B6D  
                   u6901 0CDF                     u6821 0B52                     u6805 0B0D  
                   u6741 0971                     u4990 1F70                     u5790 03C8  
                   u6910 0CEE                     u6830 0B62                     u6750 09AC  
                   u6670 081D                     u7367 1A78                     u7287 1DEE  
                   u6575 1D01                     u6655 1C69                     u4991 1F6F  
                   u6495 07A5                     u5951 0569                     u5871 046C  
                   u5791 03C7                     u5775 1B79                     u6911 0CED  
                   u6831 0B61                     u6751 09AB                     u6671 081C  
                   u5952 0570                     u5872 0473                     u6840 0B7D  
                   u6760 09F7                     u6680 0841                     u7377 1A83  
                   u7297 1DF9                     u6585 1D16                     u5961 0596  
                   u5953 0577                     u5945 0543                     u5881 0488  
                   u5873 047A                     u6905 0CDC                     u6841 0B7C  
                   u6761 09F6                     u6681 0840                     u5962 059D  
                   u5882 048F                     u6930 0D6C                     u6770 0A80  
                   u6690 088D                     u7387 1A8B                     u6595 1D2A  
                   u5971 05C3                     u5963 05A4                     u5891 04B4  
                   u5883 0496                     u6931 0D6B                     u6835 0B5E  
                   u6771 0A7F                     u6691 088C                     u5980 05ED  
                   u5972 05CA                     u5892 04BB                     u6940 0D8D  
                   u6860 0C86                     u6780 0AA4                     u5973 05D1  
                   u5893 04C2                     u6941 0D8C                     u6925 0CFD  
                   u6861 0C85                     u6781 0AA3                     u6950 0D9C  
                   u6870 0C91                     u6790 0ABB                     u5991 05F9  
                   u6951 0D9B                     u6871 0C90                     u6855 0C3F  
                   u6791 0ABA                     u5992 0600                     u6960 0DB7  
                   u6880 0CAC                     u5993 0607                     u5985 05E8  
                   u6961 0DB6                     u6945 0D89                     u6881 0CAB  
                   u6865 0C82                     u6890 0CBE                     u6955 0D98  
                   u6891 0CBD                     u6795 0AB7                     u6990 0EF3  
                   u6991 0EF2                     u6975 0E3E                     u6985 0EAC  
                   _main 156D                     btemp 007E       __size_of_LCD_Init8 007A  
                   start 000C             _sprintf$1183 00AD                    ??_isr 0070  
        ??_LCD_8_comando 0072            ___fltol@sign1 005E          __end_of___fladd 156D  
                  ?_main 0070          __end_of___awdiv 1DAA          __end_of___flneg 1A20  
        __end_of___awmod 1CD9          __end_of___flmul 0718          __end_of___flsub 1C2A  
        __end_of___fltol 1EA0                    _ANSEL 0188          __end_of___lldiv 1D41  
        ___awdiv@divisor 0020          __end_of___llmod 1C80          __end_of___lwdiv 1B8A  
        __end_of___lwmod 1B44          ___awdiv@counter 0024                    _RCREG 001A  
                  _SPBRG 0099                    _PORTA 0005                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _TXREG 0019                    _dato1 00DC                    _dato2 00DB  
                  _comp1 00DA                    _comp2 00D9          __end_of_dpowers 18A2  
                  _scale 001E          __end_of_isdigit 1A32         __end_of_USART_Rx 1A06  
       __end_of_USART_Tx 080F             USART_Tx@data 0072                    pclath 000A  
                  status 0003                    wtemp0 007E          __end_of_sprintf 1000  
            ?_USART_Init 0070          __initialization 000F             __end_of_main 1800  
      __end_of_LCD_8Data 1A92                   ??_main 00C8                ??_LCD_8XY 0075  
      __end_of_LCD_Init8 1E24     __size_of__tdiv_to_l_ 00BD         ___llmod@dividend 0076  
                 ?_scale 0042                   _ADRESH 001E         ___awdiv@dividend 0022  
                 _ANSELH 0189     __size_of_LCD_8Cadena 002D                   _SPBRGH 009A  
       __end_of___xxtofl 2000         __end_of__powers_ 1846                   ___flge 1EA0  
                 ___fleq 1B8A                ??___fladd 005E                   ___wmul 1A92  
              ??___awdiv 0079                ??___flneg 0076                ??___awmod 0076  
              ??___flmul 0030                ??___flsub 007A                ??___fltol 0059  
              ??___lldiv 0020                ??___llmod 0020                ??___lwdiv 0078  
              ??___lwmod 0076                   _fround 10C0         ___awdiv@quotient 0026  
        ___awmod@divisor 0072                   _valor1 00E9                   _valor2 00E3  
                 _valor3 00DD          ___awmod@counter 0077                ??_isdigit 0072  
     __size_of__Umul8_16 0029                   saved_w 007E      __size_of_USART_Init 0015  
              ??_sprintf 00A8               ___flge@ff1 0072               ___flge@ff2 0076  
           ___xxtofl@arg 0022             ___xxtofl@exp 0021             ___xxtofl@val 0072  
             ___fleq@ff1 0072               ___fleq@ff2 0076  __end_of__initialization 001A  
             ___flneg@f1 0072               ___fltol@f1 0055           __pcstackCOMMON 0070  
          __end_of_scale 03B7                ?_USART_Rx 0070                ?_USART_Tx 0070  
             __div_to_l_ 0718          __div_to_l_@exp1 0026          __div_to_l_@cntr 0025  
                ??_scale 0046          __div_to_l_@quot 0021             sprintf@width 00B8  
             __pbssBANK1 00CC               _data_menor 007A               _data_mayor 007B  
          __div_to_l_@f1 0072            __div_to_l_@f2 0076        __end_of__Umul8_16 07FF  
             __pmaintext 156D                  ?___flge 0072                  ?___fleq 0072  
                ?___wmul 0072               __pintentry 0004                  ?_fround 0042  
             ??_USART_Rx 0072               ??_USART_Tx 0072                  _LCD_8XY 1A47  
              ?___xxtofl 0072               __stringtab 1800             ??_USART_Init 0072  
      __end_of__npowers_ 187A               _scale$1182 0050          __size_of___flge 00A4  
        __size_of___fleq 0050                  ___fladd 12E5                  ___awdiv 1D41  
                ___flneg 1A15                  ___awmod 1C80                  ___flmul 03B7  
                ___flsub 1BDA                  ___fltol 1E24                  ___lldiv 1CD9  
        __size_of___wmul 0025                  ___llmod 1C2A                  ___lwdiv 1B44  
                ___lwmod 1B0A          __size_of_fround 0225                  __ptext1 080F  
                __ptext2 001E                  __ptext3 1C80                  __ptext4 1D41  
                __ptext5 1A20                  __ptext6 10C0                  __ptext7 1B0A  
                __ptext8 1B44                  __ptext9 03B7    __end_of_LCD_8_comando 1A75  
            ?__div_to_l_ 0072                  _dpowers 187A                  _ingreso 00D8  
              _LCD_8Data 1A75                  _isdigit 1A20             __size_of_isr 0007  
             ??___xxtofl 0076         ___awmod@dividend 0074                _LCD_Init8 1DAA  
     __end_of_USART_Init 1A47                  _sprintf 080F                  clrloop0 1A0E  
   end_of_initialization 001A          ___lldiv@divisor 0072          ___lldiv@counter 0025  
              _RCSTAbits 0018             __pstringtext 1800           __tdiv_to_l_@f1 0072  
         __tdiv_to_l_@f2 0076            ??__tdiv_to_l_ 0020                _PORTCbits 0007  
            ___fladd@grs 0069               ?_LCD_8Data 0070            ___xxtofl@sign 0020  
              _TRISCbits 0087            ??_LCD_8Cadena 0076               ?_LCD_Init8 0070  
          ?_USART_Cadena 0073              ___flmul@grs 0037                _TXSTAbits 0098  
    __size_of__div_to_l_ 00BE           __end_of___flge 1F44           __end_of___fleq 1BDA  
         __end_of___wmul 1AB7              _BAUDCTLbits 0187           __end_of_fround 12E5  
      __size_of_USART_Rx 0004        __size_of_USART_Tx 000C      start_initialization 000F  
    __end_of__tdiv_to_l_ 10C0              __end_of_isr 1A0D           ??_USART_Cadena 0075  
    __end_of_LCD_8Cadena 1B0A          ___llmod@divisor 0072          ___llmod@counter 0021  
               ??___flge 0020                 ??___fleq 0020                 ??___wmul 0076  
              __Umul8_16 07D6                 ??_fround 0046            sprintf@tmpval 00BA  
              ___fladd@a 005A                ___fladd@b 0056                 LCD_8XY@x 0075  
               LCD_8XY@y 0074                 ?_LCD_8XY 0074               fround@prec 0055  
            ??_LCD_8Data 0072                ___flmul@a 002C                ___flmul@b 0028  
            __pbssCOMMON 007A                ___flsub@a 00A0                ___flsub@b 00A4  
              ___latbits 0002            __pcstackBANK0 0020            __pcstackBANK1 00A0  
            ??_LCD_Init8 0074        __size_of___xxtofl 00BC              sprintf@flag 00B6  
            sprintf@eexp 00BE              sprintf@fval 00C0              sprintf@prec 00C5  
        LCD_8Cadena@dato 0074         ___lwdiv@dividend 0022                 ?___fladd 0056  
               ?___awdiv 0020                 ?___flneg 0072                 ?___awmod 0072  
               ?___flmul 0028                 ?___flsub 00A0                 ?___fltol 0055  
               ?___lldiv 0072                 ?___llmod 0072                __npowers_ 1846  
             ?__Umul8_16 0072                 ?___lwdiv 0020                 ?___lwmod 0072  
            __tdiv_to_l_ 1003             ??__div_to_l_ 0020                 ?_isdigit 0070  
       ___lwdiv@quotient 0025              _LCD_8Cadena 1ADD                 ?_sprintf 006A  
         __size_of_scale 0399        interrupt_function 0004           ___wmul@product 0076  
              clear_ram0 1A0D                 _PIR1bits 000C       __end_of__div_to_l_ 07D6  
        USART_Cadena@str 0073     __end_of_USART_Cadena 1ADD                 _USART_Rx 1A02  
               _USART_Tx 0803               _ADCON0bits 001F              __stringbase 1812  
             _ADCON1bits 009F        ___wmul@multiplier 0072         __size_of_LCD_8XY 0016  
 __size_of_LCD_8_comando 0018              ??__Umul8_16 0074         __size_of___fladd 0288  
       __size_of___awdiv 0069         __size_of___flneg 000B         __size_of___awmod 0059  
       __size_of___flmul 0361         __size_of___flsub 0050         __size_of___fltol 007C  
       __size_of___lldiv 0068         __size_of___llmod 0056         __size_of___lwdiv 0046  
       __size_of___lwmod 003A              _fround$1180 0051              _fround$1181 004D  
     __end_of__stringtab 1812              _isdigit$994 0072               sprintf@val 00B2  
               ___xxtofl 1F44         __size_of_isdigit 0012          ___lwdiv@divisor 0020  
        ___lwdiv@counter 0024                 __ptext10 07D6                 __ptext11 1003  
               __ptext20 1A15                 __ptext12 0718                 __ptext21 1EA0  
               __ptext13 1F44                 __ptext30 1ADD                 __ptext22 1B8A  
               __ptext14 1A92                 __ptext31 1A75                 __ptext23 1A02  
               __ptext15 1C2A                 __ptext32 1A06                 __ptext24 1A32  
               __ptext16 1CD9                 __ptext25 1AB7                 __ptext17 1E24  
               __ptext26 0803                 __ptext18 1BDA                 __ptext27 1DAA  
               __ptext19 12E5                 __ptext28 1A47                 __ptext29 1A5D  
               __powers_ 1812        LCD_8_comando@dato 0073         __size_of_sprintf 07F1  
          __size_of_main 0293                 _voltaje1 00D4                 _voltaje2 00D0  
               _voltaje3 00CC            _LCD_8_comando 1A5D                 isdigit@c 0073  
               scale@scl 0054                 intlevel1 0000                sprintf@ap 00B1  
       __tdiv_to_l_@exp1 0029         __tdiv_to_l_@cntr 0028                sprintf@sp 00C4  
       __tdiv_to_l_@quot 0024         ___lwmod@dividend 0074         ___lldiv@dividend 0076  
          LCD_8Data@data 0073                stringcode 180A    __size_of_USART_Cadena 0026  
             _OSCCONbits 008F             ?__tdiv_to_l_ 0072           ?_LCD_8_comando 0070  
 __Umul8_16@multiplicand 0072                 sprintf@c 00C7                 sprintf@f 006A  
       ___lldiv@quotient 0021          ___lwmod@divisor 0072          ___lwmod@counter 0077  
               stringtab 1800             ?_LCD_8Cadena 0074            ___fladd@signs 0066  
           _USART_Cadena 1AB7             ___fladd@aexp 0067             ___fladd@bexp 0068  
   __Umul8_16@multiplier 0024               _USART_Init 1A32        __Umul8_16@product 0020  
