

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Aug 13 23:10:13 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.20
    27                           ; Generated 12/02/2020 GMT
    28                           ; 
    29                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  008F                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  0105                     	;# 
   202  0107                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010E                     	;# 
   209  010F                     	;# 
   210  0185                     	;# 
   211  0187                     	;# 
   212  0188                     	;# 
   213  0189                     	;# 
   214  018C                     	;# 
   215  018D                     	;# 
   216  0000                     	;# 
   217  0001                     	;# 
   218  0002                     	;# 
   219  0003                     	;# 
   220  0004                     	;# 
   221  0005                     	;# 
   222  0006                     	;# 
   223  0007                     	;# 
   224  0008                     	;# 
   225  0009                     	;# 
   226  000A                     	;# 
   227  000B                     	;# 
   228  000C                     	;# 
   229  000D                     	;# 
   230  000E                     	;# 
   231  000E                     	;# 
   232  000F                     	;# 
   233  0010                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0014                     	;# 
   238  0015                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0017                     	;# 
   242  0018                     	;# 
   243  0019                     	;# 
   244  001A                     	;# 
   245  001B                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  001D                     	;# 
   249  001E                     	;# 
   250  001F                     	;# 
   251  0081                     	;# 
   252  0085                     	;# 
   253  0086                     	;# 
   254  0087                     	;# 
   255  0088                     	;# 
   256  0089                     	;# 
   257  008C                     	;# 
   258  008D                     	;# 
   259  008E                     	;# 
   260  008F                     	;# 
   261  0090                     	;# 
   262  0091                     	;# 
   263  0092                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0097                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009A                     	;# 
   274  009B                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  009F                     	;# 
   279  0105                     	;# 
   280  0107                     	;# 
   281  0108                     	;# 
   282  0109                     	;# 
   283  010C                     	;# 
   284  010C                     	;# 
   285  010D                     	;# 
   286  010E                     	;# 
   287  010F                     	;# 
   288  0185                     	;# 
   289  0187                     	;# 
   290  0188                     	;# 
   291  0189                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294                           
   295                           	psect	nvBANK0
   296  0036                     __pnvBANK0:
   297  0036                     _old:
   298  0036                     	ds	1
   299  0037                     _unidad:
   300  0037                     	ds	1
   301  0038                     _decena:
   302  0038                     	ds	1
   303  0039                     _centena:
   304  0039                     	ds	1
   305  000C                     _PIR1bits	set	12
   306  0007                     _PORTC	set	7
   307  0006                     _PORTB	set	6
   308  0005                     _PORTA	set	5
   309  000B                     _INTCONbits	set	11
   310  0008                     _PORTD	set	8
   311  001A                     _RCREG	set	26
   312  0019                     _TXREG	set	25
   313  0018                     _RCSTAbits	set	24
   314  0031                     _RB1	set	49
   315  0030                     _RB0	set	48
   316  0058                     _RBIF	set	88
   317  0096                     _IOCBbits	set	150
   318  0095                     _WPUBbits	set	149
   319  0081                     _OPTION_REGbits	set	129
   320  008F                     _OSCCONbits	set	143
   321  0088                     _TRISD	set	136
   322  0087                     _TRISC	set	135
   323  0086                     _TRISB	set	134
   324  0085                     _TRISA	set	133
   325  009A                     _SPBRGH	set	154
   326  0099                     _SPBRG	set	153
   327  0098                     _TXSTAbits	set	152
   328  0189                     _ANSELH	set	393
   329  0188                     _ANSEL	set	392
   330  0187                     _BAUDCTLbits	set	391
   331                           
   332                           	psect	strings
   333  02A1                     __pstrings:
   334  02A1                     stringtab:
   335  02A1                     __stringtab:
   336  02A1                     stringcode:	
   337                           ;	String table - string pointers are 1 byte each
   338                           
   339  02A1                     stringdir:
   340  02A1  3002               	movlw	high stringdir
   341  02A2  008A               	movwf	10
   342  02A3  0804               	movf	4,w
   343  02A4  0A84               	incf	4,f
   344  02A5  0782               	addwf	2,f
   345  02A6                     __stringbase:
   346  02A6  3400               	retlw	0
   347  02A7                     __end_of__stringtab:
   348  02A7                     STR_2:
   349  02A7  3445               	retlw	69	;'E'
   350  02A8  346C               	retlw	108	;'l'
   351  02A9  3420               	retlw	32	;' '
   352  02AA  3476               	retlw	118	;'v'
   353  02AB  3461               	retlw	97	;'a'
   354  02AC  346C               	retlw	108	;'l'
   355  02AD  346F               	retlw	111	;'o'
   356  02AE  3472               	retlw	114	;'r'
   357  02AF  3420               	retlw	32	;' '
   358  02B0  3464               	retlw	100	;'d'
   359  02B1  3465               	retlw	101	;'e'
   360  02B2  346C               	retlw	108	;'l'
   361  02B3  3420               	retlw	32	;' '
   362  02B4  3470               	retlw	112	;'p'
   363  02B5  3475               	retlw	117	;'u'
   364  02B6  3465               	retlw	101	;'e'
   365  02B7  3472               	retlw	114	;'r'
   366  02B8  3474               	retlw	116	;'t'
   367  02B9  346F               	retlw	111	;'o'
   368  02BA  3420               	retlw	32	;' '
   369  02BB  3444               	retlw	68	;'D'
   370  02BC  3420               	retlw	32	;' '
   371  02BD  3465               	retlw	101	;'e'
   372  02BE  3473               	retlw	115	;'s'
   373  02BF  343A               	retlw	58	;':'
   374  02C0  3420               	retlw	32	;' '
   375  02C1  3400               	retlw	0
   376  02C2                     STR_1:
   377  02C2  340A               	retlw	10
   378  02C3  340D               	retlw	13
   379  02C4  340A               	retlw	10
   380  02C5  340D               	retlw	13
   381  02C6  3400               	retlw	0
   382  02C4                     
   383                           	psect	cinit
   384  000F                     start_initialization:	
   385                           ; #config settings
   386                           
   387  000F                     __initialization:
   388                           
   389                           ; Clear objects allocated to BANK0
   390  000F  1283               	bcf	3,5	;RP0=0, select bank0
   391  0010  1303               	bcf	3,6	;RP1=0, select bank0
   392  0011  01B1               	clrf	__pbssBANK0& (0+127)
   393  0012  01B2               	clrf	(__pbssBANK0+1)& (0+127)
   394  0013  01B3               	clrf	(__pbssBANK0+2)& (0+127)
   395  0014  01B4               	clrf	(__pbssBANK0+3)& (0+127)
   396  0015  01B5               	clrf	(__pbssBANK0+4)& (0+127)
   397  0016                     end_of_initialization:	
   398                           ;End of C runtime variable initialization code
   399                           
   400  0016                     __end_of__initialization:
   401  0016  0183               	clrf	3
   402  0017  120A  118A  281A   	ljmp	_main	;jump to C main() function
   403                           
   404                           	psect	bssBANK0
   405  0031                     __pbssBANK0:
   406  0031                     _total:
   407  0031                     	ds	1
   408  0032                     _pos:
   409  0032                     	ds	1
   410  0033                     _ingreso:
   411  0033                     	ds	1
   412  0034                     _entrante:
   413  0034                     	ds	2
   414                           
   415                           	psect	cstackCOMMON
   416  0070                     __pcstackCOMMON:
   417  0070                     ?_USART_Init:
   418  0070                     ?_USART_Tx:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?_USART_Rx:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_USART_Cadena:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_isr:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ??_isr:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_main:	
   434                           ; 1 bytes @ 0x0
   435                           
   436                           
   437                           ; 1 bytes @ 0x0
   438  0070                     	ds	3
   439  0073                     _isr$363:
   440                           
   441                           ; 1 bytes @ 0x3
   442  0073                     	ds	1
   443  0074                     ??_USART_Init:
   444  0074                     ??_USART_Tx:	
   445                           ; 1 bytes @ 0x4
   446                           
   447  0074                     ??_USART_Rx:	
   448                           ; 1 bytes @ 0x4
   449                           
   450  0074                     ?___bmul:	
   451                           ; 1 bytes @ 0x4
   452                           
   453  0074                     ?___awmod:	
   454                           ; 1 bytes @ 0x4
   455                           
   456  0074                     USART_Tx@data:	
   457                           ; 2 bytes @ 0x4
   458                           
   459  0074                     ___bmul@multiplicand:	
   460                           ; 1 bytes @ 0x4
   461                           
   462  0074                     ___awmod@divisor:	
   463                           ; 1 bytes @ 0x4
   464                           
   465                           
   466                           ; 2 bytes @ 0x4
   467  0074                     	ds	1
   468  0075                     ??_USART_Cadena:
   469  0075                     ??___bmul:	
   470                           ; 1 bytes @ 0x5
   471                           
   472                           
   473                           ; 1 bytes @ 0x5
   474  0075                     	ds	1
   475  0076                     USART_Cadena@str:
   476  0076                     ___bmul@product:	
   477                           ; 1 bytes @ 0x6
   478                           
   479  0076                     ___awmod@dividend:	
   480                           ; 1 bytes @ 0x6
   481                           
   482                           
   483                           ; 2 bytes @ 0x6
   484  0076                     	ds	1
   485  0077                     ___bmul@multiplier:
   486                           
   487                           ; 1 bytes @ 0x7
   488  0077                     	ds	1
   489  0078                     ??___awmod:
   490                           
   491                           ; 1 bytes @ 0x8
   492  0078                     	ds	1
   493  0079                     ??_unidades:
   494  0079                     ??___awdiv:	
   495                           ; 1 bytes @ 0x9
   496                           
   497                           
   498                           ; 1 bytes @ 0x9
   499  0079                     	ds	1
   500                           
   501                           	psect	cstackBANK0
   502  0020                     __pcstackBANK0:
   503  0020                     ___awmod@counter:
   504                           
   505                           ; 1 bytes @ 0x0
   506  0020                     	ds	1
   507  0021                     ___awmod@sign:
   508                           
   509                           ; 1 bytes @ 0x1
   510  0021                     	ds	1
   511  0022                     ?_unidades:
   512  0022                     ?___awdiv:	
   513                           ; 1 bytes @ 0x2
   514                           
   515  0022                     unidades@dato:	
   516                           ; 2 bytes @ 0x2
   517                           
   518  0022                     ___awdiv@divisor:	
   519                           ; 2 bytes @ 0x2
   520                           
   521                           
   522                           ; 2 bytes @ 0x2
   523  0022                     	ds	2
   524  0024                     ___awdiv@dividend:
   525  0024                     _unidades$1020:	
   526                           ; 2 bytes @ 0x4
   527                           
   528                           
   529                           ; 2 bytes @ 0x4
   530  0024                     	ds	2
   531  0026                     unidades@out:
   532  0026                     ___awdiv@counter:	
   533                           ; 1 bytes @ 0x6
   534                           
   535                           
   536                           ; 1 bytes @ 0x6
   537  0026                     	ds	1
   538  0027                     ___awdiv@sign:
   539                           
   540                           ; 1 bytes @ 0x7
   541  0027                     	ds	1
   542  0028                     ___awdiv@quotient:
   543                           
   544                           ; 2 bytes @ 0x8
   545  0028                     	ds	2
   546  002A                     ?_centenas:
   547  002A                     ?_decenas:	
   548                           ; 1 bytes @ 0xA
   549                           
   550  002A                     centenas@dato:	
   551                           ; 1 bytes @ 0xA
   552                           
   553  002A                     decenas@dato:	
   554                           ; 2 bytes @ 0xA
   555                           
   556                           
   557                           ; 2 bytes @ 0xA
   558  002A                     	ds	2
   559  002C                     ??_centenas:
   560  002C                     ??_decenas:	
   561                           ; 1 bytes @ 0xC
   562                           
   563                           
   564                           ; 1 bytes @ 0xC
   565  002C                     	ds	1
   566  002D                     centenas@out:
   567  002D                     decenas@out:	
   568                           ; 1 bytes @ 0xD
   569                           
   570                           
   571                           ; 1 bytes @ 0xD
   572  002D                     	ds	1
   573  002E                     ??_main:
   574                           
   575                           ; 1 bytes @ 0xE
   576  002E                     	ds	3
   577                           
   578                           	psect	maintext
   579  001A                     __pmaintext:	
   580 ;;
   581 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   582 ;;
   583 ;; *************** function _main *****************
   584 ;; Defined at:
   585 ;;		line 70 in file "Lab_5/LAB5.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;		None
   588 ;; Auto vars:     Size  Location     Type
   589 ;;		None
   590 ;; Return value:  Size  Location     Type
   591 ;;                  1    wreg      void 
   592 ;; Registers used:
   593 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   594 ;; Tracked objects:
   595 ;;		On entry : B00/0
   596 ;;		On exit  : 0/0
   597 ;;		Unchanged: 0/0
   598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   599 ;;      Params:         0       0       0       0       0
   600 ;;      Locals:         0       0       0       0       0
   601 ;;      Temps:          0       3       0       0       0
   602 ;;      Totals:         0       3       0       0       0
   603 ;;Total ram usage:        3 bytes
   604 ;; Hardware stack levels required when called:    3
   605 ;; This function calls:
   606 ;;		_USART_Cadena
   607 ;;		_USART_Init
   608 ;;		_USART_Rx
   609 ;;		_USART_Tx
   610 ;;		___bmul
   611 ;;		_centenas
   612 ;;		_decenas
   613 ;;		_unidades
   614 ;; This function is called by:
   615 ;;		Startup code after reset
   616 ;; This function uses a non-reentrant model
   617 ;;
   618                           
   619                           
   620                           ;psect for function _main
   621  001A                     _main:
   622  001A                     l1212:	
   623                           ;incstack = 0
   624                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   625                           
   626                           
   627                           ;Lab_5/LAB5.c: 71:     USART_Init();
   628  001A  120A  118A  2338  120A  118A  	fcall	_USART_Init
   629  001F                     l1214:
   630                           
   631                           ;Lab_5/LAB5.c: 72:     ANSEL = 0x00;
   632  001F  1683               	bsf	3,5	;RP0=1, select bank3
   633  0020  1703               	bsf	3,6	;RP1=1, select bank3
   634  0021  0188               	clrf	8	;volatile
   635  0022                     l1216:
   636                           
   637                           ;Lab_5/LAB5.c: 73:     ANSELH = 0x00;
   638  0022  0189               	clrf	9	;volatile
   639  0023                     l1218:
   640                           
   641                           ;Lab_5/LAB5.c: 75:     TRISA = 0x00;
   642  0023  1683               	bsf	3,5	;RP0=1, select bank1
   643  0024  1303               	bcf	3,6	;RP1=0, select bank1
   644  0025  0185               	clrf	5	;volatile
   645  0026                     l1220:
   646                           
   647                           ;Lab_5/LAB5.c: 76:     TRISB = 0x03;
   648  0026  3003               	movlw	3
   649  0027  0086               	movwf	6	;volatile
   650  0028                     l1222:
   651                           
   652                           ;Lab_5/LAB5.c: 77:     TRISC = 0b10000000;
   653  0028  3080               	movlw	128
   654  0029  0087               	movwf	7	;volatile
   655  002A                     l1224:
   656                           
   657                           ;Lab_5/LAB5.c: 78:     TRISD = 0x00;
   658  002A  0188               	clrf	8	;volatile
   659  002B                     l1226:
   660                           
   661                           ;Lab_5/LAB5.c: 81:     OSCCONbits.IRCF = 0b111;
   662  002B  3070               	movlw	112
   663  002C  048F               	iorwf	15,f	;volatile
   664  002D                     l1228:
   665                           
   666                           ;Lab_5/LAB5.c: 82:     OSCCONbits.SCS = 1;
   667  002D  140F               	bsf	15,0	;volatile
   668  002E                     l1230:
   669                           
   670                           ;Lab_5/LAB5.c: 86:     OPTION_REGbits.nRBPU = 0;
   671  002E  1381               	bcf	1,7	;volatile
   672  002F                     l1232:
   673                           
   674                           ;Lab_5/LAB5.c: 87:     WPUBbits.WPUB0 = 1;
   675  002F  1415               	bsf	21,0	;volatile
   676  0030                     l1234:
   677                           
   678                           ;Lab_5/LAB5.c: 88:     WPUBbits.WPUB1 = 1;
   679  0030  1495               	bsf	21,1	;volatile
   680  0031                     l1236:
   681                           
   682                           ;Lab_5/LAB5.c: 91:     IOCBbits.IOCB0 = 1;
   683  0031  1416               	bsf	22,0	;volatile
   684  0032                     l1238:
   685                           
   686                           ;Lab_5/LAB5.c: 92:     IOCBbits.IOCB1 = 1;
   687  0032  1496               	bsf	22,1	;volatile
   688  0033                     l1240:
   689                           
   690                           ;Lab_5/LAB5.c: 93:     RBIF = 0;
   691  0033  100B               	bcf	11,0	;volatile
   692  0034                     l1242:
   693                           
   694                           ;Lab_5/LAB5.c: 95:     INTCONbits.GIE = 1;
   695  0034  178B               	bsf	11,7	;volatile
   696  0035                     l1244:
   697                           
   698                           ;Lab_5/LAB5.c: 96:     INTCONbits.RBIE = 1;
   699  0035  158B               	bsf	11,3	;volatile
   700  0036                     l1246:
   701                           
   702                           ;Lab_5/LAB5.c: 97:     INTCONbits.RBIF = 0;
   703  0036  100B               	bcf	11,0	;volatile
   704  0037                     l1248:
   705                           
   706                           ;Lab_5/LAB5.c: 100:     old = 1;
   707  0037  1283               	bcf	3,5	;RP0=0, select bank0
   708  0038  1303               	bcf	3,6	;RP1=0, select bank0
   709  0039  01B6               	clrf	_old
   710  003A  0AB6               	incf	_old,f
   711  003B                     l1250:
   712                           
   713                           ;Lab_5/LAB5.c: 101:     PORTA = 0x00;
   714  003B  0185               	clrf	5	;volatile
   715  003C                     l1252:
   716                           
   717                           ;Lab_5/LAB5.c: 102:     PORTB = 0x00;
   718  003C  0186               	clrf	6	;volatile
   719  003D                     l1254:
   720                           
   721                           ;Lab_5/LAB5.c: 103:     PORTC = 0x00;
   722  003D  0187               	clrf	7	;volatile
   723  003E                     l1256:
   724                           
   725                           ;Lab_5/LAB5.c: 104:     PORTD = 0x00;
   726  003E  0188               	clrf	8	;volatile
   727  003F                     l1258:
   728                           
   729                           ;Lab_5/LAB5.c: 110:         centena = centenas(PORTD);
   730  003F  0808               	movf	8,w	;volatile
   731  0040  00AE               	movwf	??_main
   732  0041  01AF               	clrf	??_main+1
   733  0042  082E               	movf	??_main,w
   734  0043  00AA               	movwf	centenas@dato
   735  0044  082F               	movf	??_main+1,w
   736  0045  00AB               	movwf	centenas@dato+1
   737  0046  120A  118A  230C  120A  118A  	fcall	_centenas
   738  004B  1283               	bcf	3,5	;RP0=0, select bank0
   739  004C  1303               	bcf	3,6	;RP1=0, select bank0
   740  004D  00B0               	movwf	??_main+2
   741  004E  0830               	movf	??_main+2,w
   742  004F  00B9               	movwf	_centena
   743  0050                     l1260:
   744                           
   745                           ;Lab_5/LAB5.c: 111:         decena = decenas(PORTD);
   746  0050  0808               	movf	8,w	;volatile
   747  0051  00AE               	movwf	??_main
   748  0052  01AF               	clrf	??_main+1
   749  0053  082E               	movf	??_main,w
   750  0054  00AA               	movwf	decenas@dato
   751  0055  082F               	movf	??_main+1,w
   752  0056  00AB               	movwf	decenas@dato+1
   753  0057  120A  118A  22C7  120A  118A  	fcall	_decenas
   754  005C  1283               	bcf	3,5	;RP0=0, select bank0
   755  005D  1303               	bcf	3,6	;RP1=0, select bank0
   756  005E  00B0               	movwf	??_main+2
   757  005F  0830               	movf	??_main+2,w
   758  0060  00B8               	movwf	_decena
   759  0061                     l1262:
   760                           
   761                           ;Lab_5/LAB5.c: 112:         unidad = unidades(PORTD);
   762  0061  0808               	movf	8,w	;volatile
   763  0062  00AE               	movwf	??_main
   764  0063  01AF               	clrf	??_main+1
   765  0064  082E               	movf	??_main,w
   766  0065  00A2               	movwf	unidades@dato
   767  0066  082F               	movf	??_main+1,w
   768  0067  00A3               	movwf	unidades@dato+1
   769  0068  120A  118A  2277  120A  118A  	fcall	_unidades
   770  006D  1283               	bcf	3,5	;RP0=0, select bank0
   771  006E  1303               	bcf	3,6	;RP1=0, select bank0
   772  006F  00B0               	movwf	??_main+2
   773  0070  0830               	movf	??_main+2,w
   774  0071  00B7               	movwf	_unidad
   775                           
   776                           ;Lab_5/LAB5.c: 113:         centena += 48;
   777  0072  3030               	movlw	48
   778  0073  00AE               	movwf	??_main
   779  0074  082E               	movf	??_main,w
   780  0075  07B9               	addwf	_centena,f
   781                           
   782                           ;Lab_5/LAB5.c: 114:         decena += 48;
   783  0076  3030               	movlw	48
   784  0077  00AE               	movwf	??_main
   785  0078  082E               	movf	??_main,w
   786  0079  07B8               	addwf	_decena,f
   787                           
   788                           ;Lab_5/LAB5.c: 115:         unidad += 48;
   789  007A  3030               	movlw	48
   790  007B  00AE               	movwf	??_main
   791  007C  082E               	movf	??_main,w
   792  007D  07B7               	addwf	_unidad,f
   793                           
   794                           ;Lab_5/LAB5.c: 117:         if(old || total != PORTA){
   795  007E  0836               	movf	_old,w
   796  007F  1D03               	btfss	3,2
   797  0080  2882               	goto	u651
   798  0081  2883               	goto	u650
   799  0082                     u651:
   800  0082  2889               	goto	l1266
   801  0083                     u650:
   802  0083                     l1264:
   803  0083  0831               	movf	_total,w
   804  0084  0605               	xorwf	5,w	;volatile
   805  0085  1903               	skipnz
   806  0086  2888               	goto	u661
   807  0087  2889               	goto	u660
   808  0088                     u661:
   809  0088  291B               	goto	l1294
   810  0089                     u660:
   811  0089                     l1266:
   812                           
   813                           ;Lab_5/LAB5.c: 118:             USART_Cadena("\n\r\n\r");
   814  0089  301C               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   815  008A  120A  118A  22ED  120A  118A  	fcall	_USART_Cadena
   816                           
   817                           ;Lab_5/LAB5.c: 119:             USART_Cadena("El valor del puerto D es: ");
   818  008F  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   819  0090  120A  118A  22ED  120A  118A  	fcall	_USART_Cadena
   820  0095                     l1268:
   821                           
   822                           ;Lab_5/LAB5.c: 120:             USART_Tx(centena);
   823  0095  1283               	bcf	3,5	;RP0=0, select bank0
   824  0096  1303               	bcf	3,6	;RP1=0, select bank0
   825  0097  0839               	movf	_centena,w
   826  0098  120A  118A  234D  120A  118A  	fcall	_USART_Tx
   827  009D                     l1270:
   828                           
   829                           ;Lab_5/LAB5.c: 121:             USART_Tx(decena);
   830  009D  1283               	bcf	3,5	;RP0=0, select bank0
   831  009E  1303               	bcf	3,6	;RP1=0, select bank0
   832  009F  0838               	movf	_decena,w
   833  00A0  120A  118A  234D  120A  118A  	fcall	_USART_Tx
   834  00A5                     l1272:
   835                           
   836                           ;Lab_5/LAB5.c: 122:             USART_Tx(unidad);
   837  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   838  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   839  00A7  0837               	movf	_unidad,w
   840  00A8  120A  118A  234D  120A  118A  	fcall	_USART_Tx
   841  00AD                     l1274:
   842                           
   843                           ;Lab_5/LAB5.c: 123:             USART_Cadena("\n\r");
   844  00AD  301E               	movlw	(low (((STR_1+2)-__stringbase)| (0+32768)))& (0+255)
   845  00AE  120A  118A  22ED  120A  118A  	fcall	_USART_Cadena
   846                           
   847                           ;Lab_5/LAB5.c: 124:             centena = centenas(PORTA);
   848  00B3  1283               	bcf	3,5	;RP0=0, select bank0
   849  00B4  1303               	bcf	3,6	;RP1=0, select bank0
   850  00B5  0805               	movf	5,w	;volatile
   851  00B6  00AE               	movwf	??_main
   852  00B7  01AF               	clrf	??_main+1
   853  00B8  082E               	movf	??_main,w
   854  00B9  00AA               	movwf	centenas@dato
   855  00BA  082F               	movf	??_main+1,w
   856  00BB  00AB               	movwf	centenas@dato+1
   857  00BC  120A  118A  230C  120A  118A  	fcall	_centenas
   858  00C1  1283               	bcf	3,5	;RP0=0, select bank0
   859  00C2  1303               	bcf	3,6	;RP1=0, select bank0
   860  00C3  00B0               	movwf	??_main+2
   861  00C4  0830               	movf	??_main+2,w
   862  00C5  00B9               	movwf	_centena
   863                           
   864                           ;Lab_5/LAB5.c: 125:             decena = decenas(PORTA);
   865  00C6  0805               	movf	5,w	;volatile
   866  00C7  00AE               	movwf	??_main
   867  00C8  01AF               	clrf	??_main+1
   868  00C9  082E               	movf	??_main,w
   869  00CA  00AA               	movwf	decenas@dato
   870  00CB  082F               	movf	??_main+1,w
   871  00CC  00AB               	movwf	decenas@dato+1
   872  00CD  120A  118A  22C7  120A  118A  	fcall	_decenas
   873  00D2  1283               	bcf	3,5	;RP0=0, select bank0
   874  00D3  1303               	bcf	3,6	;RP1=0, select bank0
   875  00D4  00B0               	movwf	??_main+2
   876  00D5  0830               	movf	??_main+2,w
   877  00D6  00B8               	movwf	_decena
   878                           
   879                           ;Lab_5/LAB5.c: 126:             unidad = unidades(PORTA);
   880  00D7  0805               	movf	5,w	;volatile
   881  00D8  00AE               	movwf	??_main
   882  00D9  01AF               	clrf	??_main+1
   883  00DA  082E               	movf	??_main,w
   884  00DB  00A2               	movwf	unidades@dato
   885  00DC  082F               	movf	??_main+1,w
   886  00DD  00A3               	movwf	unidades@dato+1
   887  00DE  120A  118A  2277  120A  118A  	fcall	_unidades
   888  00E3  1283               	bcf	3,5	;RP0=0, select bank0
   889  00E4  1303               	bcf	3,6	;RP1=0, select bank0
   890  00E5  00B0               	movwf	??_main+2
   891  00E6  0830               	movf	??_main+2,w
   892  00E7  00B7               	movwf	_unidad
   893  00E8                     l1276:
   894                           
   895                           ;Lab_5/LAB5.c: 127:             centena += 48;
   896  00E8  3030               	movlw	48
   897  00E9  00AE               	movwf	??_main
   898  00EA  082E               	movf	??_main,w
   899  00EB  07B9               	addwf	_centena,f
   900  00EC                     l1278:
   901                           
   902                           ;Lab_5/LAB5.c: 128:             decena += 48;
   903  00EC  3030               	movlw	48
   904  00ED  00AE               	movwf	??_main
   905  00EE  082E               	movf	??_main,w
   906  00EF  07B8               	addwf	_decena,f
   907  00F0                     l1280:
   908                           
   909                           ;Lab_5/LAB5.c: 129:             unidad += 48;
   910  00F0  3030               	movlw	48
   911  00F1  00AE               	movwf	??_main
   912  00F2  082E               	movf	??_main,w
   913  00F3  07B7               	addwf	_unidad,f
   914  00F4                     l1282:
   915                           
   916                           ;Lab_5/LAB5.c: 130:             USART_Cadena("El valor del puerto D es: ");
   917  00F4  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   918  00F5  120A  118A  22ED  120A  118A  	fcall	_USART_Cadena
   919  00FA                     l1284:
   920                           
   921                           ;Lab_5/LAB5.c: 131:             USART_Tx(centena);
   922  00FA  1283               	bcf	3,5	;RP0=0, select bank0
   923  00FB  1303               	bcf	3,6	;RP1=0, select bank0
   924  00FC  0839               	movf	_centena,w
   925  00FD  120A  118A  234D  120A  118A  	fcall	_USART_Tx
   926  0102                     l1286:
   927                           
   928                           ;Lab_5/LAB5.c: 132:             USART_Tx(decena);
   929  0102  1283               	bcf	3,5	;RP0=0, select bank0
   930  0103  1303               	bcf	3,6	;RP1=0, select bank0
   931  0104  0838               	movf	_decena,w
   932  0105  120A  118A  234D  120A  118A  	fcall	_USART_Tx
   933  010A                     l1288:
   934                           
   935                           ;Lab_5/LAB5.c: 133:             USART_Tx(unidad);
   936  010A  1283               	bcf	3,5	;RP0=0, select bank0
   937  010B  1303               	bcf	3,6	;RP1=0, select bank0
   938  010C  0837               	movf	_unidad,w
   939  010D  120A  118A  234D  120A  118A  	fcall	_USART_Tx
   940  0112                     l1290:
   941                           
   942                           ;Lab_5/LAB5.c: 134:             USART_Cadena("\n\r\n\r");
   943  0112  301C               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   944  0113  120A  118A  22ED  120A  118A  	fcall	_USART_Cadena
   945  0118                     l1292:
   946                           
   947                           ;Lab_5/LAB5.c: 135:             old = 0x00;
   948  0118  1283               	bcf	3,5	;RP0=0, select bank0
   949  0119  1303               	bcf	3,6	;RP1=0, select bank0
   950  011A  01B6               	clrf	_old
   951  011B                     l1294:
   952                           
   953                           ;Lab_5/LAB5.c: 138:          if (PIR1bits.RCIF == 1){
   954  011B  1E8C               	btfss	12,5	;volatile
   955  011C  291E               	goto	u671
   956  011D  291F               	goto	u670
   957  011E                     u671:
   958  011E  296F               	goto	l1318
   959  011F                     u670:
   960  011F                     l1296:
   961                           
   962                           ;Lab_5/LAB5.c: 139:             ingreso = USART_Rx();
   963  011F  120A  118A  2359  120A  118A  	fcall	_USART_Rx
   964  0124  1283               	bcf	3,5	;RP0=0, select bank0
   965  0125  1303               	bcf	3,6	;RP1=0, select bank0
   966  0126  00AE               	movwf	??_main
   967  0127  082E               	movf	??_main,w
   968  0128  00B3               	movwf	_ingreso
   969  0129                     l1298:
   970                           
   971                           ;Lab_5/LAB5.c: 140:             if(ingreso > 47 && ingreso < 58){
   972  0129  3030               	movlw	48
   973  012A  0233               	subwf	_ingreso,w
   974  012B  1C03               	skipc
   975  012C  292E               	goto	u681
   976  012D  292F               	goto	u680
   977  012E                     u681:
   978  012E  296F               	goto	l1318
   979  012F                     u680:
   980  012F                     l1300:
   981  012F  303A               	movlw	58
   982  0130  0233               	subwf	_ingreso,w
   983  0131  1803               	skipnc
   984  0132  2934               	goto	u691
   985  0133  2935               	goto	u690
   986  0134                     u691:
   987  0134  296F               	goto	l1318
   988  0135                     u690:
   989  0135                     l1302:
   990                           
   991                           ;Lab_5/LAB5.c: 141:                 entrante[pos] = ingreso;
   992  0135  0833               	movf	_ingreso,w
   993  0136  00AE               	movwf	??_main
   994  0137  0832               	movf	_pos,w
   995  0138  3E34               	addlw	(low (_entrante| 0))& (0+255)
   996  0139  0084               	movwf	4
   997  013A  082E               	movf	??_main,w
   998  013B  1383               	bcf	3,7	;select IRP bank0
   999  013C  0080               	movwf	0
  1000  013D                     l1304:
  1001                           
  1002                           ;Lab_5/LAB5.c: 142:                 pos++;
  1003  013D  3001               	movlw	1
  1004  013E  00AE               	movwf	??_main
  1005  013F  082E               	movf	??_main,w
  1006  0140  07B2               	addwf	_pos,f
  1007  0141                     l1306:
  1008                           
  1009                           ;Lab_5/LAB5.c: 144:                 if (pos > 2){
  1010  0141  3003               	movlw	3
  1011  0142  0232               	subwf	_pos,w
  1012  0143  1C03               	skipc
  1013  0144  2946               	goto	u701
  1014  0145  2947               	goto	u700
  1015  0146                     u701:
  1016  0146  296F               	goto	l1318
  1017  0147                     u700:
  1018  0147                     l1308:
  1019                           
  1020                           ;Lab_5/LAB5.c: 145:                     pos = 0;
  1021  0147  01B2               	clrf	_pos
  1022  0148                     l1310:
  1023                           
  1024                           ;Lab_5/LAB5.c: 146:                     total = (entrante[0] - 48) * 100;
  1025  0148  3064               	movlw	100
  1026  0149  00AE               	movwf	??_main
  1027  014A  082E               	movf	??_main,w
  1028  014B  00F4               	movwf	___bmul@multiplicand
  1029  014C  0834               	movf	_entrante,w
  1030  014D  3ED0               	addlw	208
  1031  014E  120A  118A  2323  120A  118A  	fcall	___bmul
  1032  0153  1283               	bcf	3,5	;RP0=0, select bank0
  1033  0154  1303               	bcf	3,6	;RP1=0, select bank0
  1034  0155  00AF               	movwf	??_main+1
  1035  0156  082F               	movf	??_main+1,w
  1036  0157  00B1               	movwf	_total
  1037  0158                     l1312:
  1038                           
  1039                           ;Lab_5/LAB5.c: 147:                     total +=(entrante[1] - 48) *10;
  1040  0158  300A               	movlw	10
  1041  0159  00AE               	movwf	??_main
  1042  015A  082E               	movf	??_main,w
  1043  015B  00F4               	movwf	___bmul@multiplicand
  1044  015C  0835               	movf	_entrante+1,w
  1045  015D  3ED0               	addlw	208
  1046  015E  120A  118A  2323  120A  118A  	fcall	___bmul
  1047  0163  1283               	bcf	3,5	;RP0=0, select bank0
  1048  0164  1303               	bcf	3,6	;RP1=0, select bank0
  1049  0165  00AF               	movwf	??_main+1
  1050  0166  082F               	movf	??_main+1,w
  1051  0167  07B1               	addwf	_total,f
  1052  0168                     l1314:
  1053                           
  1054                           ;Lab_5/LAB5.c: 148:                     total +=(entrante[2] - 48);
  1055  0168  0836               	movf	_entrante+2,w
  1056  0169  3ED0               	addlw	208
  1057  016A  00AE               	movwf	??_main
  1058  016B  082E               	movf	??_main,w
  1059  016C  07B1               	addwf	_total,f
  1060  016D                     l1316:
  1061                           
  1062                           ;Lab_5/LAB5.c: 149:                     PORTA = total;
  1063  016D  0831               	movf	_total,w
  1064  016E  0085               	movwf	5	;volatile
  1065  016F                     l1318:
  1066                           
  1067                           ;Lab_5/LAB5.c: 155:         if(ingreso == '+'){
  1068  016F  302B               	movlw	43
  1069  0170  0633               	xorwf	_ingreso,w
  1070  0171  1D03               	btfss	3,2
  1071  0172  2974               	goto	u711
  1072  0173  2975               	goto	u710
  1073  0174                     u711:
  1074  0174  297A               	goto	l1322
  1075  0175                     u710:
  1076  0175                     l1320:
  1077                           
  1078                           ;Lab_5/LAB5.c: 156:             PORTD++;
  1079  0175  3001               	movlw	1
  1080  0176  00AE               	movwf	??_main
  1081  0177  082E               	movf	??_main,w
  1082  0178  0788               	addwf	8,f	;volatile
  1083                           
  1084                           ;Lab_5/LAB5.c: 157:         }else if(ingreso == '-'){
  1085  0179  2982               	goto	l1326
  1086  017A                     l1322:
  1087  017A  302D               	movlw	45
  1088  017B  0633               	xorwf	_ingreso,w
  1089  017C  1D03               	btfss	3,2
  1090  017D  297F               	goto	u721
  1091  017E  2980               	goto	u720
  1092  017F                     u721:
  1093  017F  2982               	goto	l1326
  1094  0180                     u720:
  1095  0180                     l1324:
  1096                           
  1097                           ;Lab_5/LAB5.c: 158:             PORTD--;
  1098  0180  3001               	movlw	1
  1099  0181  0288               	subwf	8,f	;volatile
  1100  0182                     l1326:
  1101                           
  1102                           ;Lab_5/LAB5.c: 161:         ingreso = 0;
  1103  0182  01B3               	clrf	_ingreso
  1104  0183  283F               	goto	l1258
  1105  0184  120A  118A  280C   	ljmp	start
  1106  0187                     __end_of_main:
  1107                           
  1108                           	psect	text1
  1109  0277                     __ptext1:	
  1110 ;; *************** function _unidades *****************
  1111 ;; Defined at:
  1112 ;;		line 177 in file "Lab_5/LAB5.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;  dato            2    2[BANK0 ] int 
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;  out             1    6[BANK0 ] unsigned char 
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  1    wreg      unsigned char 
  1119 ;; Registers used:
  1120 ;;		wreg, status,2, status,0, pclath, cstack
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1126 ;;      Params:         0       2       0       0       0
  1127 ;;      Locals:         0       3       0       0       0
  1128 ;;      Temps:          1       0       0       0       0
  1129 ;;      Totals:         1       5       0       0       0
  1130 ;;Total ram usage:        6 bytes
  1131 ;; Hardware stack levels used:    1
  1132 ;; Hardware stack levels required when called:    2
  1133 ;; This function calls:
  1134 ;;		___awmod
  1135 ;; This function is called by:
  1136 ;;		_main
  1137 ;; This function uses a non-reentrant model
  1138 ;;
  1139                           
  1140                           
  1141                           ;psect for function _unidades
  1142  0277                     _unidades:
  1143  0277                     l1154:	
  1144                           ;incstack = 0
  1145                           ; Regs used in _unidades: [wreg+status,2+status,0+pclath+cstack]
  1146                           
  1147                           
  1148                           ;Lab_5/LAB5.c: 178:     char out;;Lab_5/LAB5.c: 179:     out = (dato % 100) % 10;
  1149  0277  1283               	bcf	3,5	;RP0=0, select bank0
  1150  0278  1303               	bcf	3,6	;RP1=0, select bank0
  1151  0279  0823               	movf	unidades@dato+1,w
  1152  027A  00F7               	movwf	___awmod@dividend+1
  1153  027B  0822               	movf	unidades@dato,w
  1154  027C  00F6               	movwf	___awmod@dividend
  1155  027D  3064               	movlw	100
  1156  027E  00F4               	movwf	___awmod@divisor
  1157  027F  3000               	movlw	0
  1158  0280  00F5               	movwf	___awmod@divisor+1
  1159  0281  120A  118A  21F0  120A  118A  	fcall	___awmod
  1160  0286  0875               	movf	?___awmod+1,w
  1161  0287  1283               	bcf	3,5	;RP0=0, select bank0
  1162  0288  1303               	bcf	3,6	;RP1=0, select bank0
  1163  0289  00A5               	movwf	_unidades$1020+1
  1164  028A  0874               	movf	?___awmod,w
  1165  028B  00A4               	movwf	_unidades$1020
  1166                           
  1167                           ;Lab_5/LAB5.c: 178:     char out;;Lab_5/LAB5.c: 179:     out = (dato % 100) % 10;
  1168  028C  300A               	movlw	10
  1169  028D  00F4               	movwf	___awmod@divisor
  1170  028E  3000               	movlw	0
  1171  028F  00F5               	movwf	___awmod@divisor+1
  1172  0290  0825               	movf	_unidades$1020+1,w
  1173  0291  00F7               	movwf	___awmod@dividend+1
  1174  0292  0824               	movf	_unidades$1020,w
  1175  0293  00F6               	movwf	___awmod@dividend
  1176  0294  120A  118A  21F0  120A  118A  	fcall	___awmod
  1177  0299  0874               	movf	?___awmod,w
  1178  029A  00F9               	movwf	??_unidades
  1179  029B  0879               	movf	??_unidades,w
  1180  029C  1283               	bcf	3,5	;RP0=0, select bank0
  1181  029D  1303               	bcf	3,6	;RP1=0, select bank0
  1182  029E  00A6               	movwf	unidades@out
  1183  029F                     l1156:
  1184                           
  1185                           ;Lab_5/LAB5.c: 180:     return out;
  1186  029F  0826               	movf	unidades@out,w
  1187  02A0                     l140:
  1188  02A0  0008               	return
  1189  02A1                     __end_of_unidades:
  1190                           
  1191                           	psect	text2
  1192  02C7                     __ptext2:	
  1193 ;; *************** function _decenas *****************
  1194 ;; Defined at:
  1195 ;;		line 171 in file "Lab_5/LAB5.c"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;  dato            2   10[BANK0 ] int 
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;  out             1   13[BANK0 ] unsigned char 
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  1    wreg      unsigned char 
  1202 ;; Registers used:
  1203 ;;		wreg, status,2, status,0, pclath, cstack
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1209 ;;      Params:         0       2       0       0       0
  1210 ;;      Locals:         0       1       0       0       0
  1211 ;;      Temps:          0       1       0       0       0
  1212 ;;      Totals:         0       4       0       0       0
  1213 ;;Total ram usage:        4 bytes
  1214 ;; Hardware stack levels used:    1
  1215 ;; Hardware stack levels required when called:    2
  1216 ;; This function calls:
  1217 ;;		___awdiv
  1218 ;;		___awmod
  1219 ;; This function is called by:
  1220 ;;		_main
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224                           
  1225                           ;psect for function _decenas
  1226  02C7                     _decenas:
  1227  02C7                     l1148:	
  1228                           ;incstack = 0
  1229                           ; Regs used in _decenas: [wreg+status,2+status,0+pclath+cstack]
  1230                           
  1231                           
  1232                           ;Lab_5/LAB5.c: 172:     char out;;Lab_5/LAB5.c: 173:     out = (dato % 100) / 10;
  1233  02C7  300A               	movlw	10
  1234  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  1235  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  1236  02CA  00A2               	movwf	___awdiv@divisor
  1237  02CB  3000               	movlw	0
  1238  02CC  00A3               	movwf	___awdiv@divisor+1
  1239  02CD  082B               	movf	decenas@dato+1,w
  1240  02CE  00F7               	movwf	___awmod@dividend+1
  1241  02CF  082A               	movf	decenas@dato,w
  1242  02D0  00F6               	movwf	___awmod@dividend
  1243  02D1  3064               	movlw	100
  1244  02D2  00F4               	movwf	___awmod@divisor
  1245  02D3  3000               	movlw	0
  1246  02D4  00F5               	movwf	___awmod@divisor+1
  1247  02D5  120A  118A  21F0  120A  118A  	fcall	___awmod
  1248  02DA  0875               	movf	?___awmod+1,w
  1249  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  1250  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  1251  02DD  00A5               	movwf	___awdiv@dividend+1
  1252  02DE  0874               	movf	?___awmod,w
  1253  02DF  00A4               	movwf	___awdiv@dividend
  1254  02E0  120A  118A  2187  120A  118A  	fcall	___awdiv
  1255  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  1256  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  1257  02E7  0822               	movf	?___awdiv,w
  1258  02E8  00AC               	movwf	??_decenas
  1259  02E9  082C               	movf	??_decenas,w
  1260  02EA  00AD               	movwf	decenas@out
  1261  02EB                     l1150:
  1262                           
  1263                           ;Lab_5/LAB5.c: 174:     return out;
  1264  02EB  082D               	movf	decenas@out,w
  1265  02EC                     l137:
  1266  02EC  0008               	return
  1267  02ED                     __end_of_decenas:
  1268                           
  1269                           	psect	text3
  1270  01F0                     __ptext3:	
  1271 ;; *************** function ___awmod *****************
  1272 ;; Defined at:
  1273 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  1274 ;; Parameters:    Size  Location     Type
  1275 ;;  divisor         2    4[COMMON] int 
  1276 ;;  dividend        2    6[COMMON] int 
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;  sign            1    1[BANK0 ] unsigned char 
  1279 ;;  counter         1    0[BANK0 ] unsigned char 
  1280 ;; Return value:  Size  Location     Type
  1281 ;;                  2    4[COMMON] int 
  1282 ;; Registers used:
  1283 ;;		wreg, status,2, status,0
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1289 ;;      Params:         4       0       0       0       0
  1290 ;;      Locals:         0       2       0       0       0
  1291 ;;      Temps:          1       0       0       0       0
  1292 ;;      Totals:         5       2       0       0       0
  1293 ;;Total ram usage:        7 bytes
  1294 ;; Hardware stack levels used:    1
  1295 ;; Hardware stack levels required when called:    1
  1296 ;; This function calls:
  1297 ;;		Nothing
  1298 ;; This function is called by:
  1299 ;;		_decenas
  1300 ;;		_unidades
  1301 ;; This function uses a non-reentrant model
  1302 ;;
  1303                           
  1304                           
  1305                           ;psect for function ___awmod
  1306  01F0                     ___awmod:
  1307  01F0                     l1078:	
  1308                           ;incstack = 0
  1309                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1310                           
  1311  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  1312  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  1313  01F2  01A1               	clrf	___awmod@sign
  1314  01F3                     l1080:
  1315  01F3  1FF7               	btfss	___awmod@dividend+1,7
  1316  01F4  29F6               	goto	u481
  1317  01F5  29F7               	goto	u480
  1318  01F6                     u481:
  1319  01F6  29FE               	goto	l1086
  1320  01F7                     u480:
  1321  01F7                     l1082:
  1322  01F7  09F6               	comf	___awmod@dividend,f
  1323  01F8  09F7               	comf	___awmod@dividend+1,f
  1324  01F9  0AF6               	incf	___awmod@dividend,f
  1325  01FA  1903               	skipnz
  1326  01FB  0AF7               	incf	___awmod@dividend+1,f
  1327  01FC                     l1084:
  1328  01FC  01A1               	clrf	___awmod@sign
  1329  01FD  0AA1               	incf	___awmod@sign,f
  1330  01FE                     l1086:
  1331  01FE  1FF5               	btfss	___awmod@divisor+1,7
  1332  01FF  2A01               	goto	u491
  1333  0200  2A02               	goto	u490
  1334  0201                     u491:
  1335  0201  2A07               	goto	l1090
  1336  0202                     u490:
  1337  0202                     l1088:
  1338  0202  09F4               	comf	___awmod@divisor,f
  1339  0203  09F5               	comf	___awmod@divisor+1,f
  1340  0204  0AF4               	incf	___awmod@divisor,f
  1341  0205  1903               	skipnz
  1342  0206  0AF5               	incf	___awmod@divisor+1,f
  1343  0207                     l1090:
  1344  0207  0874               	movf	___awmod@divisor,w
  1345  0208  0475               	iorwf	___awmod@divisor+1,w
  1346  0209  1903               	btfsc	3,2
  1347  020A  2A0C               	goto	u501
  1348  020B  2A0D               	goto	u500
  1349  020C                     u501:
  1350  020C  2A3C               	goto	l1108
  1351  020D                     u500:
  1352  020D                     l1092:
  1353  020D  01A0               	clrf	___awmod@counter
  1354  020E  0AA0               	incf	___awmod@counter,f
  1355  020F  2A1B               	goto	l1098
  1356  0210                     l1094:
  1357  0210  3001               	movlw	1
  1358  0211                     u515:
  1359  0211  1003               	clrc
  1360  0212  0DF4               	rlf	___awmod@divisor,f
  1361  0213  0DF5               	rlf	___awmod@divisor+1,f
  1362  0214  3EFF               	addlw	-1
  1363  0215  1D03               	skipz
  1364  0216  2A11               	goto	u515
  1365  0217                     l1096:
  1366  0217  3001               	movlw	1
  1367  0218  00F8               	movwf	??___awmod
  1368  0219  0878               	movf	??___awmod,w
  1369  021A  07A0               	addwf	___awmod@counter,f
  1370  021B                     l1098:
  1371  021B  1FF5               	btfss	___awmod@divisor+1,7
  1372  021C  2A1E               	goto	u521
  1373  021D  2A1F               	goto	u520
  1374  021E                     u521:
  1375  021E  2A10               	goto	l1094
  1376  021F                     u520:
  1377  021F                     l1100:
  1378  021F  0875               	movf	___awmod@divisor+1,w
  1379  0220  0277               	subwf	___awmod@dividend+1,w
  1380  0221  1D03               	skipz
  1381  0222  2A25               	goto	u535
  1382  0223  0874               	movf	___awmod@divisor,w
  1383  0224  0276               	subwf	___awmod@dividend,w
  1384  0225                     u535:
  1385  0225  1C03               	skipc
  1386  0226  2A28               	goto	u531
  1387  0227  2A29               	goto	u530
  1388  0228                     u531:
  1389  0228  2A2F               	goto	l1104
  1390  0229                     u530:
  1391  0229                     l1102:
  1392  0229  0874               	movf	___awmod@divisor,w
  1393  022A  02F6               	subwf	___awmod@dividend,f
  1394  022B  0875               	movf	___awmod@divisor+1,w
  1395  022C  1C03               	skipc
  1396  022D  03F7               	decf	___awmod@dividend+1,f
  1397  022E  02F7               	subwf	___awmod@dividend+1,f
  1398  022F                     l1104:
  1399  022F  3001               	movlw	1
  1400  0230                     u545:
  1401  0230  1003               	clrc
  1402  0231  0CF5               	rrf	___awmod@divisor+1,f
  1403  0232  0CF4               	rrf	___awmod@divisor,f
  1404  0233  3EFF               	addlw	-1
  1405  0234  1D03               	skipz
  1406  0235  2A30               	goto	u545
  1407  0236                     l1106:
  1408  0236  3001               	movlw	1
  1409  0237  02A0               	subwf	___awmod@counter,f
  1410  0238  1D03               	btfss	3,2
  1411  0239  2A3B               	goto	u551
  1412  023A  2A3C               	goto	u550
  1413  023B                     u551:
  1414  023B  2A1F               	goto	l1100
  1415  023C                     u550:
  1416  023C                     l1108:
  1417  023C  0821               	movf	___awmod@sign,w
  1418  023D  1903               	btfsc	3,2
  1419  023E  2A40               	goto	u561
  1420  023F  2A41               	goto	u560
  1421  0240                     u561:
  1422  0240  2A46               	goto	l1112
  1423  0241                     u560:
  1424  0241                     l1110:
  1425  0241  09F6               	comf	___awmod@dividend,f
  1426  0242  09F7               	comf	___awmod@dividend+1,f
  1427  0243  0AF6               	incf	___awmod@dividend,f
  1428  0244  1903               	skipnz
  1429  0245  0AF7               	incf	___awmod@dividend+1,f
  1430  0246                     l1112:
  1431  0246  0877               	movf	___awmod@dividend+1,w
  1432  0247  00F5               	movwf	?___awmod+1
  1433  0248  0876               	movf	___awmod@dividend,w
  1434  0249  00F4               	movwf	?___awmod
  1435  024A                     l392:
  1436  024A  0008               	return
  1437  024B                     __end_of___awmod:
  1438                           
  1439                           	psect	text4
  1440  030C                     __ptext4:	
  1441 ;; *************** function _centenas *****************
  1442 ;; Defined at:
  1443 ;;		line 166 in file "Lab_5/LAB5.c"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;  dato            2   10[BANK0 ] int 
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;  out             1   13[BANK0 ] unsigned char 
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  1    wreg      unsigned char 
  1450 ;; Registers used:
  1451 ;;		wreg, status,2, status,0, pclath, cstack
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1457 ;;      Params:         0       2       0       0       0
  1458 ;;      Locals:         0       1       0       0       0
  1459 ;;      Temps:          0       1       0       0       0
  1460 ;;      Totals:         0       4       0       0       0
  1461 ;;Total ram usage:        4 bytes
  1462 ;; Hardware stack levels used:    1
  1463 ;; Hardware stack levels required when called:    2
  1464 ;; This function calls:
  1465 ;;		___awdiv
  1466 ;; This function is called by:
  1467 ;;		_main
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           
  1472                           ;psect for function _centenas
  1473  030C                     _centenas:
  1474  030C                     l1142:	
  1475                           ;incstack = 0
  1476                           ; Regs used in _centenas: [wreg+status,2+status,0+pclath+cstack]
  1477                           
  1478                           
  1479                           ;Lab_5/LAB5.c: 167:     char out = dato / 100;
  1480  030C  3064               	movlw	100
  1481  030D  1283               	bcf	3,5	;RP0=0, select bank0
  1482  030E  1303               	bcf	3,6	;RP1=0, select bank0
  1483  030F  00A2               	movwf	___awdiv@divisor
  1484  0310  3000               	movlw	0
  1485  0311  00A3               	movwf	___awdiv@divisor+1
  1486  0312  082B               	movf	centenas@dato+1,w
  1487  0313  00A5               	movwf	___awdiv@dividend+1
  1488  0314  082A               	movf	centenas@dato,w
  1489  0315  00A4               	movwf	___awdiv@dividend
  1490  0316  120A  118A  2187  120A  118A  	fcall	___awdiv
  1491  031B  1283               	bcf	3,5	;RP0=0, select bank0
  1492  031C  1303               	bcf	3,6	;RP1=0, select bank0
  1493  031D  0822               	movf	?___awdiv,w
  1494  031E  00AC               	movwf	??_centenas
  1495  031F  082C               	movf	??_centenas,w
  1496  0320  00AD               	movwf	centenas@out
  1497  0321                     l1144:
  1498                           
  1499                           ;Lab_5/LAB5.c: 168:     return out;
  1500  0321  082D               	movf	centenas@out,w
  1501  0322                     l134:
  1502  0322  0008               	return
  1503  0323                     __end_of_centenas:
  1504                           
  1505                           	psect	text5
  1506  0187                     __ptext5:	
  1507 ;; *************** function ___awdiv *****************
  1508 ;; Defined at:
  1509 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;  divisor         2    2[BANK0 ] int 
  1512 ;;  dividend        2    4[BANK0 ] int 
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;  quotient        2    8[BANK0 ] int 
  1515 ;;  sign            1    7[BANK0 ] unsigned char 
  1516 ;;  counter         1    6[BANK0 ] unsigned char 
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  2    2[BANK0 ] int 
  1519 ;; Registers used:
  1520 ;;		wreg, status,2, status,0
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1526 ;;      Params:         0       4       0       0       0
  1527 ;;      Locals:         0       4       0       0       0
  1528 ;;      Temps:          1       0       0       0       0
  1529 ;;      Totals:         1       8       0       0       0
  1530 ;;Total ram usage:        9 bytes
  1531 ;; Hardware stack levels used:    1
  1532 ;; Hardware stack levels required when called:    1
  1533 ;; This function calls:
  1534 ;;		Nothing
  1535 ;; This function is called by:
  1536 ;;		_centenas
  1537 ;;		_decenas
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           
  1542                           ;psect for function ___awdiv
  1543  0187                     ___awdiv:
  1544  0187                     l1034:	
  1545                           ;incstack = 0
  1546                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1547                           
  1548  0187  1283               	bcf	3,5	;RP0=0, select bank0
  1549  0188  1303               	bcf	3,6	;RP1=0, select bank0
  1550  0189  01A7               	clrf	___awdiv@sign
  1551  018A                     l1036:
  1552  018A  1FA3               	btfss	___awdiv@divisor+1,7
  1553  018B  298D               	goto	u381
  1554  018C  298E               	goto	u380
  1555  018D                     u381:
  1556  018D  2995               	goto	l1042
  1557  018E                     u380:
  1558  018E                     l1038:
  1559  018E  09A2               	comf	___awdiv@divisor,f
  1560  018F  09A3               	comf	___awdiv@divisor+1,f
  1561  0190  0AA2               	incf	___awdiv@divisor,f
  1562  0191  1903               	skipnz
  1563  0192  0AA3               	incf	___awdiv@divisor+1,f
  1564  0193                     l1040:
  1565  0193  01A7               	clrf	___awdiv@sign
  1566  0194  0AA7               	incf	___awdiv@sign,f
  1567  0195                     l1042:
  1568  0195  1FA5               	btfss	___awdiv@dividend+1,7
  1569  0196  2998               	goto	u391
  1570  0197  2999               	goto	u390
  1571  0198                     u391:
  1572  0198  29A2               	goto	l1048
  1573  0199                     u390:
  1574  0199                     l1044:
  1575  0199  09A4               	comf	___awdiv@dividend,f
  1576  019A  09A5               	comf	___awdiv@dividend+1,f
  1577  019B  0AA4               	incf	___awdiv@dividend,f
  1578  019C  1903               	skipnz
  1579  019D  0AA5               	incf	___awdiv@dividend+1,f
  1580  019E                     l1046:
  1581  019E  3001               	movlw	1
  1582  019F  00F9               	movwf	??___awdiv
  1583  01A0  0879               	movf	??___awdiv,w
  1584  01A1  06A7               	xorwf	___awdiv@sign,f
  1585  01A2                     l1048:
  1586  01A2  01A8               	clrf	___awdiv@quotient
  1587  01A3  01A9               	clrf	___awdiv@quotient+1
  1588  01A4                     l1050:
  1589  01A4  0822               	movf	___awdiv@divisor,w
  1590  01A5  0423               	iorwf	___awdiv@divisor+1,w
  1591  01A6  1903               	btfsc	3,2
  1592  01A7  29A9               	goto	u401
  1593  01A8  29AA               	goto	u400
  1594  01A9                     u401:
  1595  01A9  29E1               	goto	l1070
  1596  01AA                     u400:
  1597  01AA                     l1052:
  1598  01AA  01A6               	clrf	___awdiv@counter
  1599  01AB  0AA6               	incf	___awdiv@counter,f
  1600  01AC  29B8               	goto	l1058
  1601  01AD                     l1054:
  1602  01AD  3001               	movlw	1
  1603  01AE                     u415:
  1604  01AE  1003               	clrc
  1605  01AF  0DA2               	rlf	___awdiv@divisor,f
  1606  01B0  0DA3               	rlf	___awdiv@divisor+1,f
  1607  01B1  3EFF               	addlw	-1
  1608  01B2  1D03               	skipz
  1609  01B3  29AE               	goto	u415
  1610  01B4                     l1056:
  1611  01B4  3001               	movlw	1
  1612  01B5  00F9               	movwf	??___awdiv
  1613  01B6  0879               	movf	??___awdiv,w
  1614  01B7  07A6               	addwf	___awdiv@counter,f
  1615  01B8                     l1058:
  1616  01B8  1FA3               	btfss	___awdiv@divisor+1,7
  1617  01B9  29BB               	goto	u421
  1618  01BA  29BC               	goto	u420
  1619  01BB                     u421:
  1620  01BB  29AD               	goto	l1054
  1621  01BC                     u420:
  1622  01BC                     l1060:
  1623  01BC  3001               	movlw	1
  1624  01BD                     u435:
  1625  01BD  1003               	clrc
  1626  01BE  0DA8               	rlf	___awdiv@quotient,f
  1627  01BF  0DA9               	rlf	___awdiv@quotient+1,f
  1628  01C0  3EFF               	addlw	-1
  1629  01C1  1D03               	skipz
  1630  01C2  29BD               	goto	u435
  1631  01C3  0823               	movf	___awdiv@divisor+1,w
  1632  01C4  0225               	subwf	___awdiv@dividend+1,w
  1633  01C5  1D03               	skipz
  1634  01C6  29C9               	goto	u445
  1635  01C7  0822               	movf	___awdiv@divisor,w
  1636  01C8  0224               	subwf	___awdiv@dividend,w
  1637  01C9                     u445:
  1638  01C9  1C03               	skipc
  1639  01CA  29CC               	goto	u441
  1640  01CB  29CD               	goto	u440
  1641  01CC                     u441:
  1642  01CC  29D4               	goto	l1066
  1643  01CD                     u440:
  1644  01CD                     l1062:
  1645  01CD  0822               	movf	___awdiv@divisor,w
  1646  01CE  02A4               	subwf	___awdiv@dividend,f
  1647  01CF  0823               	movf	___awdiv@divisor+1,w
  1648  01D0  1C03               	skipc
  1649  01D1  03A5               	decf	___awdiv@dividend+1,f
  1650  01D2  02A5               	subwf	___awdiv@dividend+1,f
  1651  01D3                     l1064:
  1652  01D3  1428               	bsf	___awdiv@quotient,0
  1653  01D4                     l1066:
  1654  01D4  3001               	movlw	1
  1655  01D5                     u455:
  1656  01D5  1003               	clrc
  1657  01D6  0CA3               	rrf	___awdiv@divisor+1,f
  1658  01D7  0CA2               	rrf	___awdiv@divisor,f
  1659  01D8  3EFF               	addlw	-1
  1660  01D9  1D03               	skipz
  1661  01DA  29D5               	goto	u455
  1662  01DB                     l1068:
  1663  01DB  3001               	movlw	1
  1664  01DC  02A6               	subwf	___awdiv@counter,f
  1665  01DD  1D03               	btfss	3,2
  1666  01DE  29E0               	goto	u461
  1667  01DF  29E1               	goto	u460
  1668  01E0                     u461:
  1669  01E0  29BC               	goto	l1060
  1670  01E1                     u460:
  1671  01E1                     l1070:
  1672  01E1  0827               	movf	___awdiv@sign,w
  1673  01E2  1903               	btfsc	3,2
  1674  01E3  29E5               	goto	u471
  1675  01E4  29E6               	goto	u470
  1676  01E5                     u471:
  1677  01E5  29EB               	goto	l1074
  1678  01E6                     u470:
  1679  01E6                     l1072:
  1680  01E6  09A8               	comf	___awdiv@quotient,f
  1681  01E7  09A9               	comf	___awdiv@quotient+1,f
  1682  01E8  0AA8               	incf	___awdiv@quotient,f
  1683  01E9  1903               	skipnz
  1684  01EA  0AA9               	incf	___awdiv@quotient+1,f
  1685  01EB                     l1074:
  1686  01EB  0829               	movf	___awdiv@quotient+1,w
  1687  01EC  00A3               	movwf	?___awdiv+1
  1688  01ED  0828               	movf	___awdiv@quotient,w
  1689  01EE  00A2               	movwf	?___awdiv
  1690  01EF                     l379:
  1691  01EF  0008               	return
  1692  01F0                     __end_of___awdiv:
  1693                           
  1694                           	psect	text6
  1695  0323                     __ptext6:	
  1696 ;; *************** function ___bmul *****************
  1697 ;; Defined at:
  1698 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;  multiplier      1    wreg     unsigned char 
  1701 ;;  multiplicand    1    4[COMMON] unsigned char 
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;  multiplier      1    7[COMMON] unsigned char 
  1704 ;;  product         1    6[COMMON] unsigned char 
  1705 ;; Return value:  Size  Location     Type
  1706 ;;                  1    wreg      unsigned char 
  1707 ;; Registers used:
  1708 ;;		wreg, status,2, status,0
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1714 ;;      Params:         1       0       0       0       0
  1715 ;;      Locals:         2       0       0       0       0
  1716 ;;      Temps:          1       0       0       0       0
  1717 ;;      Totals:         4       0       0       0       0
  1718 ;;Total ram usage:        4 bytes
  1719 ;; Hardware stack levels used:    1
  1720 ;; Hardware stack levels required when called:    1
  1721 ;; This function calls:
  1722 ;;		Nothing
  1723 ;; This function is called by:
  1724 ;;		_main
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728                           
  1729                           ;psect for function ___bmul
  1730  0323                     ___bmul:
  1731                           
  1732                           ;incstack = 0
  1733                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1734                           ;___bmul@multiplier stored from wreg
  1735  0323  00F7               	movwf	___bmul@multiplier
  1736  0324                     l1160:
  1737  0324  01F6               	clrf	___bmul@product
  1738  0325                     l1162:
  1739  0325  1C77               	btfss	___bmul@multiplier,0
  1740  0326  2B28               	goto	u581
  1741  0327  2B29               	goto	u580
  1742  0328                     u581:
  1743  0328  2B2D               	goto	l1166
  1744  0329                     u580:
  1745  0329                     l1164:
  1746  0329  0874               	movf	___bmul@multiplicand,w
  1747  032A  00F5               	movwf	??___bmul
  1748  032B  0875               	movf	??___bmul,w
  1749  032C  07F6               	addwf	___bmul@product,f
  1750  032D                     l1166:
  1751  032D  1003               	clrc
  1752  032E  0DF4               	rlf	___bmul@multiplicand,f
  1753  032F                     l1168:
  1754  032F  1003               	clrc
  1755  0330  0CF7               	rrf	___bmul@multiplier,f
  1756  0331  0877               	movf	___bmul@multiplier,w
  1757  0332  1D03               	btfss	3,2
  1758  0333  2B35               	goto	u591
  1759  0334  2B36               	goto	u590
  1760  0335                     u591:
  1761  0335  2B25               	goto	l1162
  1762  0336                     u590:
  1763  0336                     l1170:
  1764  0336  0876               	movf	___bmul@product,w
  1765  0337                     l252:
  1766  0337  0008               	return
  1767  0338                     __end_of___bmul:
  1768                           
  1769                           	psect	text7
  1770  0359                     __ptext7:	
  1771 ;; *************** function _USART_Rx *****************
  1772 ;; Defined at:
  1773 ;;		line 25 in file "Lab_2/USART.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;		None
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;		None
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  1    wreg      unsigned char 
  1780 ;; Registers used:
  1781 ;;		wreg
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1787 ;;      Params:         0       0       0       0       0
  1788 ;;      Locals:         0       0       0       0       0
  1789 ;;      Temps:          0       0       0       0       0
  1790 ;;      Totals:         0       0       0       0       0
  1791 ;;Total ram usage:        0 bytes
  1792 ;; Hardware stack levels used:    1
  1793 ;; Hardware stack levels required when called:    1
  1794 ;; This function calls:
  1795 ;;		Nothing
  1796 ;; This function is called by:
  1797 ;;		_main
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           
  1802                           ;psect for function _USART_Rx
  1803  0359                     _USART_Rx:
  1804  0359                     l1130:	
  1805                           ;incstack = 0
  1806                           ; Regs used in _USART_Rx: [wreg]
  1807                           
  1808                           
  1809                           ;Lab_2/USART.c: 26:     return RCREG;
  1810  0359  1283               	bcf	3,5	;RP0=0, select bank0
  1811  035A  1303               	bcf	3,6	;RP1=0, select bank0
  1812  035B  081A               	movf	26,w	;volatile
  1813  035C                     l26:
  1814  035C  0008               	return
  1815  035D                     __end_of_USART_Rx:
  1816                           
  1817                           	psect	text8
  1818  0338                     __ptext8:	
  1819 ;; *************** function _USART_Init *****************
  1820 ;; Defined at:
  1821 ;;		line 4 in file "Lab_2/USART.c"
  1822 ;; Parameters:    Size  Location     Type
  1823 ;;		None
  1824 ;; Auto vars:     Size  Location     Type
  1825 ;;		None
  1826 ;; Return value:  Size  Location     Type
  1827 ;;                  1    wreg      void 
  1828 ;; Registers used:
  1829 ;;		wreg, status,2
  1830 ;; Tracked objects:
  1831 ;;		On entry : 0/0
  1832 ;;		On exit  : 0/0
  1833 ;;		Unchanged: 0/0
  1834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1835 ;;      Params:         0       0       0       0       0
  1836 ;;      Locals:         0       0       0       0       0
  1837 ;;      Temps:          0       0       0       0       0
  1838 ;;      Totals:         0       0       0       0       0
  1839 ;;Total ram usage:        0 bytes
  1840 ;; Hardware stack levels used:    1
  1841 ;; Hardware stack levels required when called:    1
  1842 ;; This function calls:
  1843 ;;		Nothing
  1844 ;; This function is called by:
  1845 ;;		_main
  1846 ;; This function uses a non-reentrant model
  1847 ;;
  1848                           
  1849                           
  1850                           ;psect for function _USART_Init
  1851  0338                     _USART_Init:
  1852  0338                     l1116:	
  1853                           ;incstack = 0
  1854                           ; Regs used in _USART_Init: [wreg+status,2]
  1855                           
  1856                           
  1857                           ;Lab_2/USART.c: 6:     TXSTAbits.SYNC = 0;
  1858  0338  1683               	bsf	3,5	;RP0=1, select bank1
  1859  0339  1303               	bcf	3,6	;RP1=0, select bank1
  1860  033A  1218               	bcf	24,4	;volatile
  1861                           
  1862                           ;Lab_2/USART.c: 7:     TXSTAbits.BRGH = 1;
  1863  033B  1518               	bsf	24,2	;volatile
  1864                           
  1865                           ;Lab_2/USART.c: 8:     BAUDCTLbits.BRG16 = 1;
  1866  033C  1683               	bsf	3,5	;RP0=1, select bank3
  1867  033D  1703               	bsf	3,6	;RP1=1, select bank3
  1868  033E  1587               	bsf	7,3	;volatile
  1869  033F                     l1118:
  1870                           
  1871                           ;Lab_2/USART.c: 10:     SPBRG = 207;
  1872  033F  30CF               	movlw	207
  1873  0340  1683               	bsf	3,5	;RP0=1, select bank1
  1874  0341  1303               	bcf	3,6	;RP1=0, select bank1
  1875  0342  0099               	movwf	25	;volatile
  1876  0343                     l1120:
  1877                           
  1878                           ;Lab_2/USART.c: 11:     SPBRGH = 0;
  1879  0343  019A               	clrf	26	;volatile
  1880  0344                     l1122:
  1881                           
  1882                           ;Lab_2/USART.c: 13:     RCSTAbits.SPEN = 1;
  1883  0344  1283               	bcf	3,5	;RP0=0, select bank0
  1884  0345  1303               	bcf	3,6	;RP1=0, select bank0
  1885  0346  1798               	bsf	24,7	;volatile
  1886  0347                     l1124:
  1887                           
  1888                           ;Lab_2/USART.c: 14:     RCSTAbits.RX9 = 0;
  1889  0347  1318               	bcf	24,6	;volatile
  1890  0348                     l1126:
  1891                           
  1892                           ;Lab_2/USART.c: 15:     RCSTAbits.CREN = 1;
  1893  0348  1618               	bsf	24,4	;volatile
  1894  0349                     l1128:
  1895                           
  1896                           ;Lab_2/USART.c: 16:     TXSTAbits.TXEN = 1;
  1897  0349  1683               	bsf	3,5	;RP0=1, select bank1
  1898  034A  1303               	bcf	3,6	;RP1=0, select bank1
  1899  034B  1698               	bsf	24,5	;volatile
  1900  034C                     l17:
  1901  034C  0008               	return
  1902  034D                     __end_of_USART_Init:
  1903                           
  1904                           	psect	text9
  1905  02ED                     __ptext9:	
  1906 ;; *************** function _USART_Cadena *****************
  1907 ;; Defined at:
  1908 ;;		line 29 in file "Lab_2/USART.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;  str             1    wreg     PTR unsigned char 
  1911 ;;		 -> STR_5(5), STR_4(27), STR_3(3), STR_2(27), 
  1912 ;;		 -> STR_1(5), 
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;  str             1    6[COMMON] PTR unsigned char 
  1915 ;;		 -> STR_5(5), STR_4(27), STR_3(3), STR_2(27), 
  1916 ;;		 -> STR_1(5), 
  1917 ;; Return value:  Size  Location     Type
  1918 ;;                  1    wreg      void 
  1919 ;; Registers used:
  1920 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1921 ;; Tracked objects:
  1922 ;;		On entry : 0/0
  1923 ;;		On exit  : 0/0
  1924 ;;		Unchanged: 0/0
  1925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1926 ;;      Params:         0       0       0       0       0
  1927 ;;      Locals:         1       0       0       0       0
  1928 ;;      Temps:          1       0       0       0       0
  1929 ;;      Totals:         2       0       0       0       0
  1930 ;;Total ram usage:        2 bytes
  1931 ;; Hardware stack levels used:    1
  1932 ;; Hardware stack levels required when called:    2
  1933 ;; This function calls:
  1934 ;;		_USART_Tx
  1935 ;; This function is called by:
  1936 ;;		_main
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940                           
  1941                           ;psect for function _USART_Cadena
  1942  02ED                     _USART_Cadena:
  1943                           
  1944                           ;incstack = 0
  1945                           ; Regs used in _USART_Cadena: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1946                           ;USART_Cadena@str stored from wreg
  1947  02ED  00F6               	movwf	USART_Cadena@str
  1948  02EE                     l1134:
  1949                           
  1950                           ;Lab_2/USART.c: 30:     while(*str != '\0'){
  1951  02EE  2AFF               	goto	l1140
  1952  02EF                     l1136:
  1953                           
  1954                           ;Lab_2/USART.c: 31:         USART_Tx(*str);
  1955  02EF  0876               	movf	USART_Cadena@str,w
  1956  02F0  0084               	movwf	4
  1957  02F1  120A  118A  22A1  120A  118A  	fcall	stringdir
  1958  02F6  120A  118A  234D  120A  118A  	fcall	_USART_Tx
  1959  02FB                     l1138:
  1960                           
  1961                           ;Lab_2/USART.c: 32:         str++;
  1962  02FB  3001               	movlw	1
  1963  02FC  00F5               	movwf	??_USART_Cadena
  1964  02FD  0875               	movf	??_USART_Cadena,w
  1965  02FE  07F6               	addwf	USART_Cadena@str,f
  1966  02FF                     l1140:
  1967                           
  1968                           ;Lab_2/USART.c: 30:     while(*str != '\0'){
  1969  02FF  0876               	movf	USART_Cadena@str,w
  1970  0300  0084               	movwf	4
  1971  0301  120A  118A  22A1  120A  118A  	fcall	stringdir
  1972  0306  3A00               	xorlw	0
  1973  0307  1D03               	skipz
  1974  0308  2B0A               	goto	u571
  1975  0309  2B0B               	goto	u570
  1976  030A                     u571:
  1977  030A  2AEF               	goto	l1136
  1978  030B                     u570:
  1979  030B                     l32:
  1980  030B  0008               	return
  1981  030C                     __end_of_USART_Cadena:
  1982                           
  1983                           	psect	text10
  1984  034D                     __ptext10:	
  1985 ;; *************** function _USART_Tx *****************
  1986 ;; Defined at:
  1987 ;;		line 20 in file "Lab_2/USART.c"
  1988 ;; Parameters:    Size  Location     Type
  1989 ;;  data            1    wreg     unsigned char 
  1990 ;; Auto vars:     Size  Location     Type
  1991 ;;  data            1    4[COMMON] unsigned char 
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  1    wreg      void 
  1994 ;; Registers used:
  1995 ;;		wreg
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2001 ;;      Params:         0       0       0       0       0
  2002 ;;      Locals:         1       0       0       0       0
  2003 ;;      Temps:          0       0       0       0       0
  2004 ;;      Totals:         1       0       0       0       0
  2005 ;;Total ram usage:        1 bytes
  2006 ;; Hardware stack levels used:    1
  2007 ;; Hardware stack levels required when called:    1
  2008 ;; This function calls:
  2009 ;;		Nothing
  2010 ;; This function is called by:
  2011 ;;		_USART_Cadena
  2012 ;;		_main
  2013 ;;		_USART_volt
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           
  2018                           ;psect for function _USART_Tx
  2019  034D                     _USART_Tx:
  2020                           
  2021                           ;incstack = 0
  2022                           ; Regs used in _USART_Tx: [wreg]
  2023                           ;USART_Tx@data stored from wreg
  2024  034D  00F4               	movwf	USART_Tx@data
  2025  034E                     l1030:
  2026  034E                     l20:	
  2027                           ;Lab_2/USART.c: 21:     while(TXSTAbits.TRMT == 0);
  2028                           
  2029  034E  1683               	bsf	3,5	;RP0=1, select bank1
  2030  034F  1303               	bcf	3,6	;RP1=0, select bank1
  2031  0350  1C98               	btfss	24,1	;volatile
  2032  0351  2B53               	goto	u371
  2033  0352  2B54               	goto	u370
  2034  0353                     u371:
  2035  0353  2B4E               	goto	l20
  2036  0354                     u370:
  2037  0354                     l1032:
  2038                           
  2039                           ;Lab_2/USART.c: 22:     TXREG = data;
  2040  0354  0874               	movf	USART_Tx@data,w
  2041  0355  1283               	bcf	3,5	;RP0=0, select bank0
  2042  0356  1303               	bcf	3,6	;RP1=0, select bank0
  2043  0357  0099               	movwf	25	;volatile
  2044  0358                     l23:
  2045  0358  0008               	return
  2046  0359                     __end_of_USART_Tx:
  2047                           
  2048                           	psect	text11
  2049  024B                     __ptext11:	
  2050 ;; *************** function _isr *****************
  2051 ;; Defined at:
  2052 ;;		line 56 in file "Lab_5/LAB5.c"
  2053 ;; Parameters:    Size  Location     Type
  2054 ;;		None
  2055 ;; Auto vars:     Size  Location     Type
  2056 ;;		None
  2057 ;; Return value:  Size  Location     Type
  2058 ;;                  1    wreg      void 
  2059 ;; Registers used:
  2060 ;;		wreg, status,2, status,0
  2061 ;; Tracked objects:
  2062 ;;		On entry : 0/0
  2063 ;;		On exit  : 0/0
  2064 ;;		Unchanged: 0/0
  2065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2066 ;;      Params:         0       0       0       0       0
  2067 ;;      Locals:         1       0       0       0       0
  2068 ;;      Temps:          3       0       0       0       0
  2069 ;;      Totals:         4       0       0       0       0
  2070 ;;Total ram usage:        4 bytes
  2071 ;; Hardware stack levels used:    1
  2072 ;; This function calls:
  2073 ;;		Nothing
  2074 ;; This function is called by:
  2075 ;;		Interrupt level 1
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079                           
  2080                           ;psect for function _isr
  2081  024B                     _isr:
  2082  024B                     i1l1192:
  2083                           
  2084                           ;Lab_5/LAB5.c: 57:     if(RBIF == 1){
  2085  024B  1C0B               	btfss	11,0	;volatile
  2086  024C  2A4E               	goto	u60_21
  2087  024D  2A4F               	goto	u60_20
  2088  024E                     u60_21:
  2089  024E  2A70               	goto	i1l114
  2090  024F                     u60_20:
  2091  024F                     i1l1194:
  2092                           
  2093                           ;Lab_5/LAB5.c: 58:         if (RB0 == 0){
  2094  024F  1283               	bcf	3,5	;RP0=0, select bank0
  2095  0250  1303               	bcf	3,6	;RP1=0, select bank0
  2096  0251  1806               	btfsc	6,0	;volatile
  2097  0252  2A54               	goto	u61_21
  2098  0253  2A55               	goto	u61_20
  2099  0254                     u61_21:
  2100  0254  2A5A               	goto	i1l109
  2101  0255                     u61_20:
  2102  0255                     i1l1196:
  2103                           
  2104                           ;Lab_5/LAB5.c: 59:             PORTD++;
  2105  0255  3001               	movlw	1
  2106  0256  00F0               	movwf	??_isr
  2107  0257  0870               	movf	??_isr,w
  2108  0258  0788               	addwf	8,f	;volatile
  2109                           
  2110                           ;Lab_5/LAB5.c: 60:         }else if(RB1 == 0){
  2111  0259  2A60               	goto	i1l1200
  2112  025A                     i1l109:
  2113  025A  1886               	btfsc	6,1	;volatile
  2114  025B  2A5D               	goto	u62_21
  2115  025C  2A5E               	goto	u62_20
  2116  025D                     u62_21:
  2117  025D  2A60               	goto	i1l1200
  2118  025E                     u62_20:
  2119  025E                     i1l1198:
  2120                           
  2121                           ;Lab_5/LAB5.c: 61:             PORTD--;
  2122  025E  3001               	movlw	1
  2123  025F  0288               	subwf	8,f	;volatile
  2124  0260                     i1l1200:
  2125                           
  2126                           ;Lab_5/LAB5.c: 63:         old = (RB0 != 0 && RB1 != 0) ? 1:0;
  2127  0260  01F3               	clrf	_isr$363
  2128  0261                     i1l1202:
  2129  0261  1C06               	btfss	6,0	;volatile
  2130  0262  2A64               	goto	u63_21
  2131  0263  2A65               	goto	u63_20
  2132  0264                     u63_21:
  2133  0264  2A6B               	goto	i1l1208
  2134  0265                     u63_20:
  2135  0265                     i1l1204:
  2136  0265  1C86               	btfss	6,1	;volatile
  2137  0266  2A68               	goto	u64_21
  2138  0267  2A69               	goto	u64_20
  2139  0268                     u64_21:
  2140  0268  2A6B               	goto	i1l1208
  2141  0269                     u64_20:
  2142  0269                     i1l1206:
  2143  0269  01F3               	clrf	_isr$363
  2144  026A  0AF3               	incf	_isr$363,f
  2145  026B                     i1l1208:
  2146  026B  0873               	movf	_isr$363,w
  2147  026C  00F0               	movwf	??_isr
  2148  026D  0870               	movf	??_isr,w
  2149  026E  00B6               	movwf	_old
  2150  026F                     i1l1210:
  2151                           
  2152                           ;Lab_5/LAB5.c: 64:         RBIF = 0;
  2153  026F  100B               	bcf	11,0	;volatile
  2154  0270                     i1l114:
  2155  0270  0872               	movf	??_isr+2,w
  2156  0271  008A               	movwf	10
  2157  0272  0E71               	swapf	??_isr+1,w
  2158  0273  0083               	movwf	3
  2159  0274  0EFE               	swapf	btemp,f
  2160  0275  0E7E               	swapf	btemp,w
  2161  0276  0009               	retfie
  2162  0277                     __end_of_isr:
  2163  007E                     btemp	set	126	;btemp
  2164  007E                     wtemp0	set	126
  2165                           
  2166                           	psect	intentry
  2167  0004                     __pintentry:	
  2168                           ;incstack = 0
  2169                           ; Regs used in _isr: [wreg+status,2+status,0]
  2170                           
  2171  0004                     interrupt_function:
  2172  007E                     saved_w	set	btemp
  2173  0004  00FE               	movwf	btemp
  2174  0005  0E03               	swapf	3,w
  2175  0006  00F1               	movwf	??_isr+1
  2176  0007  080A               	movf	10,w
  2177  0008  00F2               	movwf	??_isr+2
  2178  0009  120A  118A  2A4B   	ljmp	_isr
  2179                           
  2180                           	psect	config
  2181                           
  2182                           ;Config register CONFIG1 @ 0x2007
  2183                           ;	Oscillator Selection bits
  2184                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2185                           ;	Watchdog Timer Enable bit
  2186                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2187                           ;	Power-up Timer Enable bit
  2188                           ;	PWRTE = OFF, PWRT disabled
  2189                           ;	RE3/MCLR pin function select bit
  2190                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2191                           ;	Code Protection bit
  2192                           ;	CP = OFF, Program memory code protection is disabled
  2193                           ;	Data Code Protection bit
  2194                           ;	CPD = OFF, Data memory code protection is disabled
  2195                           ;	Brown Out Reset Selection bits
  2196                           ;	BOREN = OFF, BOR disabled
  2197                           ;	Internal External Switchover bit
  2198                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2199                           ;	Fail-Safe Clock Monitor Enabled bit
  2200                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2201                           ;	Low Voltage Programming Enable bit
  2202                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2203                           ;	In-Circuit Debugger Mode bit
  2204                           ;	DEBUG = 0x1, unprogrammed default
  2205  2007                     	org	8199
  2206  2007  20D4               	dw	8404
  2207                           
  2208                           ;Config register CONFIG2 @ 0x2008
  2209                           ;	Brown-out Reset Selection bit
  2210                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2211                           ;	Flash Program Memory Self Write Enable bits
  2212                           ;	WRT = OFF, Write protection off
  2213  2008                     	org	8200
  2214  2008  3FFF               	dw	16383

Data Sizes:
    Strings     32
    Constant    0
    Data        0
    BSS         5
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     17      26
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    USART_Cadena@str	PTR unsigned char  size(1) Largest target is 27
		 -> STR_5(CODE[5]), STR_4(CODE[27]), STR_3(CODE[3]), STR_2(CODE[27]), 
		 -> STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _main->_unidades
    _unidades->___awmod
    _decenas->___awdiv
    _centenas->___awdiv
    ___awdiv->___awmod
    _USART_Cadena->_USART_Tx

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_centenas
    _main->_decenas
    _unidades->___awmod
    _decenas->___awdiv
    _centenas->___awdiv
    ___awdiv->___awmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3824
                                             14 BANK0      3     3      0
                       _USART_Cadena
                         _USART_Init
                           _USART_Rx
                           _USART_Tx
                             ___bmul
                           _centenas
                            _decenas
                           _unidades
 ---------------------------------------------------------------------------------
 (1) _unidades                                             6     4      2     972
                                              9 COMMON     1     1      0
                                              2 BANK0      5     3      2
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _decenas                                              4     2      2    1553
                                             10 BANK0      4     2      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     752
                                              4 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _centenas                                             4     2      2     801
                                             10 BANK0      4     2      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              9 COMMON     1     1      0
                                              2 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     244
                                              4 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _USART_Rx                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Cadena                                         2     2      0     232
                                              5 COMMON     2     2      0
                           _USART_Tx
 ---------------------------------------------------------------------------------
 (1) _USART_Tx                                             1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0      24
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USART_Cadena
     _USART_Tx
   _USART_Init
   _USART_Rx
   _USART_Tx
   ___bmul
   _centenas
     ___awdiv
       ___awmod (ARG)
   _decenas
     ___awdiv
       ___awmod (ARG)
     ___awmod
   _unidades
     ___awmod

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      24       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     11      1A       5       32.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      24      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Aug 13 23:10:13 2021

                      pc 0002           ___bmul@product 0076                       l20 034E  
                     l23 0358                       l32 030B                       l17 034C  
                     l26 035C             ___awdiv@sign 0027                       fsr 0004  
                    l140 02A0                      l134 0322                      l137 02EC  
                    l252 0337                      l392 024A                      l379 01EF  
                    _RB0 0030                      _RB1 0031                      u400 01AA  
                    u401 01A9                      u420 01BC                      u500 020D  
                    u421 01BB                      u501 020C                      u415 01AE  
                    u440 01CD                      u520 021F                      u441 01CC  
                    u521 021E                      u370 0354                      u530 0229  
                    u371 0353                      u435 01BD                      u531 0228  
                    u515 0211                      u460 01E1                      u380 018E  
                    u700 0147                      u461 01E0                      u445 01C9  
                    u381 018D                      u701 0146                      u470 01E6  
                    u390 0199                      u550 023C                      u710 0175  
                    u471 01E5                      u455 01D5                      u391 0198  
                    u551 023B                      u535 0225                      u711 0174  
                    u560 0241                      u480 01F7                      u720 0180  
                    u561 0240                      u545 0230                      u481 01F6  
                    u721 017F                      u570 030B                      u490 0202  
                    u650 0083                      u571 030A                      u491 0201  
                    u651 0082                      u580 0329                      u660 0089  
                    u581 0328                      u661 0088                      u590 0336  
                    u670 011F                      u591 0335                      u671 011E  
                    u680 012F                      u681 012E                      u690 0135  
                    u691 0134                      _old 0036                      _isr 024B  
                    _pos 0032                      fsr0 0004                      indf 0000  
           ___awmod@sign 0021                     l1100 021F                     l1030 034E  
                   l1110 0241                     l1102 0229                     l1032 0354  
                   l1120 0343                     l1040 0193                     l1112 0246  
                   l1104 022F                     l1122 0344                     l1130 0359  
                   l1050 01A4                     l1042 0195                     l1034 0187  
                   l1106 0236                     l1140 02FF                     l1124 0347  
                   l1116 0338                     l1060 01BC                     l1052 01AA  
                   l1044 0199                     l1036 018A                     l1108 023C  
                   l1300 012F                     l1220 0026                     l1212 001A  
                   l1134 02EE                     l1126 0348                     l1118 033F  
                   l1062 01CD                     l1054 01AD                     l1070 01E1  
                   l1046 019E                     l1038 018E                     l1142 030C  
                   l1150 02EB                     l1310 0148                     l1302 0135  
                   l1230 002E                     l1222 0028                     l1214 001F  
                   l1136 02EF                     l1128 0349                     l1160 0324  
                   l1072 01E6                     l1064 01D3                     l1056 01B4  
                   l1048 01A2                     l1144 0321                     l1080 01F3  
                   l1320 0175                     l1312 0158                     l1304 013D  
                   l1240 0033                     l1232 002F                     l1224 002A  
                   l1216 0022                     l1138 02FB                     l1170 0336  
                   l1162 0325                     l1074 01EB                     l1066 01D4  
                   l1058 01B8                     l1090 0207                     l1082 01F7  
                   l1154 0277                     l1322 017A                     l1314 0168  
                   l1306 0141                     l1250 003B                     l1242 0034  
                   l1234 0030                     l1226 002B                     l1218 0023  
                   l1164 0329                     l1068 01DB                     l1092 020D  
                   l1084 01FC                     l1148 02C7                     l1156 029F  
                   l1324 0180                     l1316 016D                     l1308 0147  
                   l1260 0050                     l1252 003C                     l1244 0035  
                   l1236 0031                     l1228 002D                     l1166 032D  
                   l1094 0210                     l1086 01FE                     l1078 01F0  
                   l1326 0182                     l1318 016F                     l1270 009D  
                   l1262 0061                     l1254 003D                     l1246 0036  
                   l1238 0032                     l1168 032F                     l1096 0217  
                   l1088 0202                     l1280 00F0                     l1272 00A5  
                   l1264 0083                     l1256 003E                     l1248 0037  
                   l1098 021B                     l1290 0112                     l1282 00F4  
                   l1274 00AD                     l1266 0089                     l1258 003F  
                   l1292 0118                     l1284 00FA                     l1276 00E8  
                   l1268 0095                     l1286 0102                     l1278 00EC  
                   l1294 011B                     l1296 011F                     l1288 010A  
                   l1298 0129                     ?_isr 0070                     STR_1 02C2  
                   STR_2 02A7                     STR_3 02C4                     STR_4 02A7  
                   STR_5 02C2                     _RBIF 0058                     _main 001A  
                   btemp 007E                     start 000C        ___bmul@multiplier 0077  
                  ??_isr 0070                    ?_main 0070          __end_of___awdiv 01F0  
        __end_of___awmod 024B                    _ANSEL 0188          ___awdiv@divisor 0022  
                  i1l114 0270                    i1l109 025A          ___awdiv@counter 0026  
                  _RCREG 001A                    _SPBRG 0099                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  u60_20 024F                    u60_21 024E                    u61_20 0255  
                  u61_21 0254                    u62_20 025E                    u62_21 025D  
                  u63_20 0265                    u63_21 0264                    u64_20 0269  
                  u64_21 0268                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088          __end_of_decenas 02ED  
                  _TXREG 0019             unidades@dato 0022         __end_of_USART_Rx 035D  
       __end_of_USART_Tx 0359                    _total 0031             USART_Tx@data 0074  
                  pclath 000A                    status 0003                    wtemp0 007E  
            ?_USART_Init 0070          __initialization 000F             __end_of_main 0187  
                 ??_main 002E         ___awdiv@dividend 0024                   _ANSELH 0189  
                 i1l1200 0260                   i1l1210 026F                   i1l1202 0261  
                 i1l1204 0265                   i1l1206 0269                   i1l1208 026B  
                 i1l1192 024B                   i1l1194 024F                   i1l1196 0255  
                 i1l1198 025E                   _SPBRGH 009A         __end_of_centenas 0323  
                 ___bmul 0323                ??___awdiv 0079                   _decena 0038  
              ??___awmod 0078                ??_decenas 002C         ___awdiv@quotient 0028  
        ___awmod@divisor 0074          ___awmod@counter 0020                   _unidad 0037  
                 saved_w 007E      __size_of_USART_Init 0015         __end_of_unidades 02A1  
__end_of__initialization 0016      ___bmul@multiplicand 0074           __pcstackCOMMON 0070  
              ?_USART_Rx 0070                ?_USART_Tx 0070           _OPTION_REGbits 0081  
             __pbssBANK0 0031               __pmaintext 001A                  ?___bmul 0074  
             __pintentry 0004               ??_USART_Rx 0074               ??_USART_Tx 0074  
              ?_centenas 002A               __stringtab 02A1             ??_USART_Init 0074  
             decenas@out 002D          __size_of___bmul 0015                  ___awdiv 0187  
                ___awmod 01F0                ?_unidades 0022                  _decenas 02C7  
                _isr$363 0073                  _centena 0039                  __ptext1 0277  
                __ptext2 02C7                  __ptext3 01F0                  __ptext4 030C  
                __ptext5 0187                  __ptext6 0323                  __ptext7 0359  
                __ptext8 0338                  __ptext9 02ED                  _ingreso 0033  
           __size_of_isr 002C         ___awmod@dividend 0076               ??_centenas 002C  
     __end_of_USART_Init 034D     end_of_initialization 0016                _RCSTAbits 0018  
             ??_unidades 0079            ?_USART_Cadena 0070                _TXSTAbits 0098  
         __end_of___bmul 0338              _BAUDCTLbits 0187              unidades@out 0026  
      __size_of_USART_Rx 0004        __size_of_USART_Tx 000C      start_initialization 000F  
            __end_of_isr 0277           ??_USART_Cadena 0075                 ??___bmul 0075  
              ___latbits 0002            __pcstackBANK0 0020        __size_of_centenas 0017  
              __pnvBANK0 0036                 ?___awdiv 0022                 ?___awmod 0074  
               ?_decenas 002A        __size_of_unidades 002A                __pstrings 02A1  
      interrupt_function 0004                 _IOCBbits 0096                 _PIR1bits 000C  
        USART_Cadena@str 0076     __end_of_USART_Cadena 030C                 _USART_Rx 0359  
               _USART_Tx 034D              __stringbase 02A6                 _WPUBbits 0095  
            decenas@dato 002A         __size_of___awdiv 0069         __size_of___awmod 005B  
     __end_of__stringtab 02A7         __size_of_decenas 0026             centenas@dato 002A  
               _centenas 030C                 __ptext10 034D                 __ptext11 024B  
               _entrante 0034            __size_of_main 016D                 _unidades 0277  
             _INTCONbits 000B                 intlevel1 0000              centenas@out 002D  
              stringcode 02A1    __size_of_USART_Cadena 001F               _OSCCONbits 008F  
          _unidades$1020 0024                 stringdir 02A1                 stringtab 02A1  
           _USART_Cadena 02ED               _USART_Init 0338  
