

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jul 24 23:52:59 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.32
    19                           ; Generated 02/02/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0013                     _SSPBUF	set	19
   288  0014                     _SSPCON	set	20
   289  000C                     _PIR1bits	set	12
   290  000B                     _INTCONbits	set	11
   291  0006                     _PORTB	set	6
   292  0008                     _PORTD	set	8
   293  0063                     _SSPIF	set	99
   294  0094                     _SSPSTATbits	set	148
   295  0094                     _SSPSTAT	set	148
   296  0085                     _TRISAbits	set	133
   297  008C                     _PIE1bits	set	140
   298  0088                     _TRISD	set	136
   299  0086                     _TRISB	set	134
   300  043B                     _TRISC3	set	1083
   301  043D                     _TRISC5	set	1085
   302  0189                     _ANSELH	set	393
   303  0188                     _ANSEL	set	392
   304                           
   305                           	psect	cinit
   306  000F                     start_initialization:	
   307                           ; #config settings
   308                           
   309  000F                     __initialization:
   310                           
   311                           ; Clear objects allocated to COMMON
   312  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   313  0010                     end_of_initialization:	
   314                           ;End of C runtime variable initialization code
   315                           
   316  0010                     __end_of__initialization:
   317  0010  0183               	clrf	3
   318  0011  120A  118A  284F   	ljmp	_main	;jump to C main() function
   319                           
   320                           	psect	bssCOMMON
   321  007A                     __pbssCOMMON:
   322  007A                     _temporal:
   323  007A                     	ds	1
   324                           
   325                           	psect	cstackCOMMON
   326  0070                     __pcstackCOMMON:
   327  0070                     ?_spiRead:
   328  0070                     ??_spiRead:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ?_spiWrite:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ??_spiWrite:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ?_setup:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ?_isr:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     ?_main:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ?_spiReceiveWait:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     ??_spiReceiveWait:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     spiWrite@dat:	
   353                           ; 1 bytes @ 0x0
   354                           
   355                           
   356                           ; 1 bytes @ 0x0
   357  0070                     	ds	1
   358  0071                     ??_isr:
   359                           
   360                           ; 1 bytes @ 0x1
   361  0071                     	ds	2
   362  0073                     ?_spiInit:
   363  0073                     spiInit@sDataSample:	
   364                           ; 1 bytes @ 0x3
   365                           
   366                           
   367                           ; 1 bytes @ 0x3
   368  0073                     	ds	1
   369  0074                     spiInit@sClockIdle:
   370                           
   371                           ; 1 bytes @ 0x4
   372  0074                     	ds	1
   373  0075                     spiInit@sTransmitEdge:
   374                           
   375                           ; 1 bytes @ 0x5
   376  0075                     	ds	1
   377  0076                     ??_spiInit:
   378  0076                     spiInit@sType:	
   379                           ; 1 bytes @ 0x6
   380                           
   381                           
   382                           ; 1 bytes @ 0x6
   383  0076                     	ds	1
   384  0077                     ??_setup:
   385  0077                     ??_main:	
   386                           ; 1 bytes @ 0x7
   387                           
   388                           
   389                           ; 1 bytes @ 0x7
   390  0077                     	ds	3
   391                           
   392                           	psect	maintext
   393  004F                     __pmaintext:	
   394 ;;
   395 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   396 ;;
   397 ;; *************** function _main *****************
   398 ;; Defined at:
   399 ;;		line 62 in file "main.c"
   400 ;; Parameters:    Size  Location     Type
   401 ;;		None
   402 ;; Auto vars:     Size  Location     Type
   403 ;;		None
   404 ;; Return value:  Size  Location     Type
   405 ;;                  1    wreg      void 
   406 ;; Registers used:
   407 ;;		wreg, status,2, status,0, pclath, cstack
   408 ;; Tracked objects:
   409 ;;		On entry : B00/0
   410 ;;		On exit  : 0/0
   411 ;;		Unchanged: 0/0
   412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   413 ;;      Params:         0       0       0       0       0
   414 ;;      Locals:         0       0       0       0       0
   415 ;;      Temps:          3       0       0       0       0
   416 ;;      Totals:         3       0       0       0       0
   417 ;;Total ram usage:        3 bytes
   418 ;; Hardware stack levels required when called: 5
   419 ;; This function calls:
   420 ;;		_setup
   421 ;; This function is called by:
   422 ;;		Startup code after reset
   423 ;; This function uses a non-reentrant model
   424 ;;
   425                           
   426                           
   427                           ;psect for function _main
   428  004F                     _main:
   429  004F                     l753:	
   430                           ;incstack = 0
   431                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   432                           
   433                           
   434                           ;main.c: 63:     setup();
   435  004F  120A  118A  2032  120A  118A  	fcall	_setup
   436  0054                     l755:
   437                           
   438                           ;main.c: 68:        PORTB--;
   439  0054  3001               	movlw	1
   440  0055  1283               	bcf	3,5	;RP0=0, select bank0
   441  0056  1303               	bcf	3,6	;RP1=0, select bank0
   442  0057  0286               	subwf	6,f	;volatile
   443  0058                     l757:
   444                           
   445                           ;main.c: 69:        _delay((unsigned long)((250)*(8000000/4000.0)));
   446  0058  3003               	movlw	3
   447  0059  00F9               	movwf	??_main+2
   448  005A  308A               	movlw	138
   449  005B  00F8               	movwf	??_main+1
   450  005C  3055               	movlw	85
   451  005D  00F7               	movwf	??_main
   452  005E                     u57:
   453  005E  0BF7               	decfsz	??_main,f
   454  005F  285E               	goto	u57
   455  0060  0BF8               	decfsz	??_main+1,f
   456  0061  285E               	goto	u57
   457  0062  0BF9               	decfsz	??_main+2,f
   458  0063  285E               	goto	u57
   459  0064  2865               	nop2
   460  0065  2854               	goto	l755
   461  0066  120A  118A  280C   	ljmp	start
   462  0069                     __end_of_main:
   463                           
   464                           	psect	text1
   465  0032                     __ptext1:	
   466 ;; *************** function _setup *****************
   467 ;; Defined at:
   468 ;;		line 76 in file "main.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;		None
   471 ;; Auto vars:     Size  Location     Type
   472 ;;		None
   473 ;; Return value:  Size  Location     Type
   474 ;;                  1    wreg      void 
   475 ;; Registers used:
   476 ;;		wreg, status,2, status,0, pclath, cstack
   477 ;; Tracked objects:
   478 ;;		On entry : 0/0
   479 ;;		On exit  : 0/0
   480 ;;		Unchanged: 0/0
   481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   482 ;;      Params:         0       0       0       0       0
   483 ;;      Locals:         0       0       0       0       0
   484 ;;      Temps:          0       0       0       0       0
   485 ;;      Totals:         0       0       0       0       0
   486 ;;Total ram usage:        0 bytes
   487 ;; Hardware stack levels used: 1
   488 ;; Hardware stack levels required when called: 4
   489 ;; This function calls:
   490 ;;		_spiInit
   491 ;; This function is called by:
   492 ;;		_main
   493 ;; This function uses a non-reentrant model
   494 ;;
   495                           
   496                           
   497                           ;psect for function _setup
   498  0032                     _setup:
   499  0032                     l739:	
   500                           ;incstack = 0
   501                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   502                           
   503                           
   504                           ;main.c: 77:     ANSEL = 0;
   505  0032  1683               	bsf	3,5	;RP0=1, select bank3
   506  0033  1703               	bsf	3,6	;RP1=1, select bank3
   507  0034  0188               	clrf	8	;volatile
   508                           
   509                           ;main.c: 78:     ANSELH = 0;
   510  0035  0189               	clrf	9	;volatile
   511                           
   512                           ;main.c: 80:     TRISB = 0;
   513  0036  1683               	bsf	3,5	;RP0=1, select bank1
   514  0037  1303               	bcf	3,6	;RP1=0, select bank1
   515  0038  0186               	clrf	6	;volatile
   516                           
   517                           ;main.c: 81:     TRISD = 0;
   518  0039  0188               	clrf	8	;volatile
   519                           
   520                           ;main.c: 83:     PORTB = 0;
   521  003A  1283               	bcf	3,5	;RP0=0, select bank0
   522  003B  1303               	bcf	3,6	;RP1=0, select bank0
   523  003C  0186               	clrf	6	;volatile
   524                           
   525                           ;main.c: 84:     PORTD = 0;
   526  003D  0188               	clrf	8	;volatile
   527  003E                     l741:
   528                           
   529                           ;main.c: 86:     INTCONbits.GIE = 1;
   530  003E  178B               	bsf	11,7	;volatile
   531  003F                     l743:
   532                           
   533                           ;main.c: 87:     INTCONbits.PEIE = 1;
   534  003F  170B               	bsf	11,6	;volatile
   535  0040                     l745:
   536                           
   537                           ;main.c: 88:     PIR1bits.SSPIF = 0;
   538  0040  118C               	bcf	12,3	;volatile
   539  0041                     l747:
   540                           
   541                           ;main.c: 89:     PIE1bits.SSPIE = 1;
   542  0041  1683               	bsf	3,5	;RP0=1, select bank1
   543  0042  1303               	bcf	3,6	;RP1=0, select bank1
   544  0043  158C               	bsf	12,3	;volatile
   545  0044                     l749:
   546                           
   547                           ;main.c: 90:     TRISAbits.TRISA5 = 1;
   548  0044  1685               	bsf	5,5	;volatile
   549  0045                     l751:
   550                           
   551                           ;main.c: 91:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SP
      +                          I_IDLE_2_ACTIVE);
   552  0045  01F3               	clrf	spiInit@sDataSample
   553  0046  01F4               	clrf	spiInit@sClockIdle
   554  0047  01F5               	clrf	spiInit@sTransmitEdge
   555  0048  3024               	movlw	36
   556  0049  120A  118A  2069  120A  118A  	fcall	_spiInit
   557  004E                     l51:
   558  004E  0008               	return
   559  004F                     __end_of_setup:
   560                           
   561                           	psect	text2
   562  0069                     __ptext2:	
   563 ;; *************** function _spiInit *****************
   564 ;; Defined at:
   565 ;;		line 12 in file "SPI.c"
   566 ;; Parameters:    Size  Location     Type
   567 ;;  sType           1    wreg     enum E1292
   568 ;;  sDataSample     1    3[COMMON] enum E1300
   569 ;;  sClockIdle      1    4[COMMON] enum E1304
   570 ;;  sTransmitEdg    1    5[COMMON] enum E1308
   571 ;; Auto vars:     Size  Location     Type
   572 ;;  sType           1    6[COMMON] enum E1292
   573 ;; Return value:  Size  Location     Type
   574 ;;                  1    wreg      void 
   575 ;; Registers used:
   576 ;;		wreg, status,2, status,0
   577 ;; Tracked objects:
   578 ;;		On entry : 0/0
   579 ;;		On exit  : 0/0
   580 ;;		Unchanged: 0/0
   581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   582 ;;      Params:         3       0       0       0       0
   583 ;;      Locals:         1       0       0       0       0
   584 ;;      Temps:          0       0       0       0       0
   585 ;;      Totals:         4       0       0       0       0
   586 ;;Total ram usage:        4 bytes
   587 ;; Hardware stack levels used: 1
   588 ;; Hardware stack levels required when called: 3
   589 ;; This function calls:
   590 ;;		Nothing
   591 ;; This function is called by:
   592 ;;		_setup
   593 ;; This function uses a non-reentrant model
   594 ;;
   595                           
   596                           
   597                           ;psect for function _spiInit
   598  0069                     _spiInit:
   599                           
   600                           ;incstack = 0
   601                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   602                           ;spiInit@sType stored from wreg
   603  0069  00F6               	movwf	spiInit@sType
   604  006A                     l729:
   605                           
   606                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   607  006A  1683               	bsf	3,5	;RP0=1, select bank1
   608  006B  1303               	bcf	3,6	;RP1=0, select bank1
   609  006C  1287               	bcf	7,5	;volatile
   610                           
   611                           ;SPI.c: 15:     if(sType & 0b00000100)
   612  006D  1D76               	btfss	spiInit@sType,2
   613  006E  2870               	goto	u41
   614  006F  2871               	goto	u40
   615  0070                     u41:
   616  0070  2875               	goto	l735
   617  0071                     u40:
   618  0071                     l731:
   619                           
   620                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   621  0071  0875               	movf	spiInit@sTransmitEdge,w
   622  0072  0094               	movwf	20	;volatile
   623  0073                     l733:
   624                           
   625                           ;SPI.c: 18:         TRISC3 = 1;
   626  0073  1587               	bsf	7,3	;volatile
   627                           
   628                           ;SPI.c: 19:     }
   629  0074  2879               	goto	l67
   630  0075                     l735:
   631                           
   632                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   633  0075  0873               	movf	spiInit@sDataSample,w
   634  0076  0475               	iorwf	spiInit@sTransmitEdge,w
   635  0077  0094               	movwf	20	;volatile
   636  0078                     l737:
   637                           
   638                           ;SPI.c: 23:         TRISC3 = 0;
   639  0078  1187               	bcf	7,3	;volatile
   640  0079                     l67:	
   641                           ;SPI.c: 24:     }
   642                           
   643                           
   644                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   645  0079  0876               	movf	spiInit@sType,w
   646  007A  0474               	iorwf	spiInit@sClockIdle,w
   647  007B  1283               	bcf	3,5	;RP0=0, select bank0
   648  007C  1303               	bcf	3,6	;RP1=0, select bank0
   649  007D  0094               	movwf	20	;volatile
   650  007E                     l68:
   651  007E  0008               	return
   652  007F                     __end_of_spiInit:
   653                           
   654                           	psect	text3
   655  0014                     __ptext3:	
   656 ;; *************** function _isr *****************
   657 ;; Defined at:
   658 ;;		line 52 in file "main.c"
   659 ;; Parameters:    Size  Location     Type
   660 ;;		None
   661 ;; Auto vars:     Size  Location     Type
   662 ;;		None
   663 ;; Return value:  Size  Location     Type
   664 ;;                  1    wreg      void 
   665 ;; Registers used:
   666 ;;		wreg, status,2, status,0, pclath, cstack
   667 ;; Tracked objects:
   668 ;;		On entry : 0/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   672 ;;      Params:         0       0       0       0       0
   673 ;;      Locals:         0       0       0       0       0
   674 ;;      Temps:          2       0       0       0       0
   675 ;;      Totals:         2       0       0       0       0
   676 ;;Total ram usage:        2 bytes
   677 ;; Hardware stack levels used: 1
   678 ;; Hardware stack levels required when called: 2
   679 ;; This function calls:
   680 ;;		_spiRead
   681 ;;		_spiWrite
   682 ;; This function is called by:
   683 ;;		Interrupt level 1
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           
   688                           ;psect for function _isr
   689  0014                     _isr:
   690  0014                     i1l711:
   691                           
   692                           ;main.c: 53:    if(SSPIF == 1){
   693  0014  1283               	bcf	3,5	;RP0=0, select bank0
   694  0015  1303               	bcf	3,6	;RP1=0, select bank0
   695  0016  1D8C               	btfss	12,3	;volatile
   696  0017  2819               	goto	u3_21
   697  0018  281A               	goto	u3_20
   698  0019                     u3_21:
   699  0019  282B               	goto	i1l40
   700  001A                     u3_20:
   701  001A                     i1l713:
   702                           
   703                           ;main.c: 54:         PORTD = spiRead();
   704  001A  120A  118A  207F  120A  118A  	fcall	_spiRead
   705  001F  1283               	bcf	3,5	;RP0=0, select bank0
   706  0020  1303               	bcf	3,6	;RP1=0, select bank0
   707  0021  0088               	movwf	8	;volatile
   708                           
   709                           ;main.c: 55:         spiWrite(PORTB);
   710  0022  0806               	movf	6,w	;volatile
   711  0023  120A  118A  208F  120A  118A  	fcall	_spiWrite
   712  0028                     i1l715:
   713                           
   714                           ;main.c: 56:         SSPIF = 0;
   715  0028  1283               	bcf	3,5	;RP0=0, select bank0
   716  0029  1303               	bcf	3,6	;RP1=0, select bank0
   717  002A  118C               	bcf	12,3	;volatile
   718  002B                     i1l40:
   719  002B  0872               	movf	??_isr+1,w
   720  002C  008A               	movwf	10
   721  002D  0E71               	swapf	??_isr,w
   722  002E  0083               	movwf	3
   723  002F  0EFE               	swapf	btemp,f
   724  0030  0E7E               	swapf	btemp,w
   725  0031  0009               	retfie
   726  0032                     __end_of_isr:
   727                           
   728                           	psect	intentry
   729  0004                     __pintentry:	
   730                           ;incstack = 0
   731                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   732                           
   733  0004                     interrupt_function:
   734  007E                     saved_w	set	btemp
   735  0004  00FE               	movwf	btemp
   736  0005  0E03               	swapf	3,w
   737  0006  00F1               	movwf	??_isr
   738  0007  080A               	movf	10,w
   739  0008  00F2               	movwf	??_isr+1
   740  0009  120A  118A  2814   	ljmp	_isr
   741                           
   742                           	psect	text4
   743  008F                     __ptext4:	
   744 ;; *************** function _spiWrite *****************
   745 ;; Defined at:
   746 ;;		line 34 in file "SPI.c"
   747 ;; Parameters:    Size  Location     Type
   748 ;;  dat             1    wreg     unsigned char 
   749 ;; Auto vars:     Size  Location     Type
   750 ;;  dat             1    0[COMMON] unsigned char 
   751 ;; Return value:  Size  Location     Type
   752 ;;                  1    wreg      void 
   753 ;; Registers used:
   754 ;;		wreg
   755 ;; Tracked objects:
   756 ;;		On entry : 0/0
   757 ;;		On exit  : 0/0
   758 ;;		Unchanged: 0/0
   759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   760 ;;      Params:         0       0       0       0       0
   761 ;;      Locals:         1       0       0       0       0
   762 ;;      Temps:          0       0       0       0       0
   763 ;;      Totals:         1       0       0       0       0
   764 ;;Total ram usage:        1 bytes
   765 ;; Hardware stack levels used: 1
   766 ;; This function calls:
   767 ;;		Nothing
   768 ;; This function is called by:
   769 ;;		_isr
   770 ;; This function uses a non-reentrant model
   771 ;;
   772                           
   773                           
   774                           ;psect for function _spiWrite
   775  008F                     _spiWrite:
   776                           
   777                           ;incstack = 0
   778                           ; Regs used in _spiWrite: [wreg]
   779                           ;spiWrite@dat stored from wreg
   780  008F  00F0               	movwf	spiWrite@dat
   781  0090                     i1l695:
   782                           
   783                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   784  0090  0870               	movf	spiWrite@dat,w
   785  0091  1283               	bcf	3,5	;RP0=0, select bank0
   786  0092  1303               	bcf	3,6	;RP1=0, select bank0
   787  0093  0093               	movwf	19	;volatile
   788  0094                     i1l77:
   789  0094  0008               	return
   790  0095                     __end_of_spiWrite:
   791                           
   792                           	psect	text5
   793  007F                     __ptext5:	
   794 ;; *************** function _spiRead *****************
   795 ;; Defined at:
   796 ;;		line 47 in file "SPI.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;		None
   799 ;; Auto vars:     Size  Location     Type
   800 ;;		None
   801 ;; Return value:  Size  Location     Type
   802 ;;                  1    wreg      unsigned char 
   803 ;; Registers used:
   804 ;;		wreg, status,2, status,0, pclath, cstack
   805 ;; Tracked objects:
   806 ;;		On entry : 0/0
   807 ;;		On exit  : 0/0
   808 ;;		Unchanged: 0/0
   809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   810 ;;      Params:         0       0       0       0       0
   811 ;;      Locals:         0       0       0       0       0
   812 ;;      Temps:          0       0       0       0       0
   813 ;;      Totals:         0       0       0       0       0
   814 ;;Total ram usage:        0 bytes
   815 ;; Hardware stack levels used: 1
   816 ;; Hardware stack levels required when called: 1
   817 ;; This function calls:
   818 ;;		_spiReceiveWait
   819 ;; This function is called by:
   820 ;;		_isr
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           
   825                           ;psect for function _spiRead
   826  007F                     _spiRead:
   827  007F                     i1l689:	
   828                           ;incstack = 0
   829                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   830                           
   831                           
   832                           ;SPI.c: 49:     spiReceiveWait();
   833  007F  120A  118A  2088  120A  118A  	fcall	_spiReceiveWait
   834  0084                     i1l691:
   835                           
   836                           ;SPI.c: 50:     return(SSPBUF);
   837  0084  1283               	bcf	3,5	;RP0=0, select bank0
   838  0085  1303               	bcf	3,6	;RP1=0, select bank0
   839  0086  0813               	movf	19,w	;volatile
   840  0087                     i1l85:
   841  0087  0008               	return
   842  0088                     __end_of_spiRead:
   843                           
   844                           	psect	text6
   845  0088                     __ptext6:	
   846 ;; *************** function _spiReceiveWait *****************
   847 ;; Defined at:
   848 ;;		line 29 in file "SPI.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;		None
   851 ;; Auto vars:     Size  Location     Type
   852 ;;		None
   853 ;; Return value:  Size  Location     Type
   854 ;;                  1    wreg      void 
   855 ;; Registers used:
   856 ;;		None
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   862 ;;      Params:         0       0       0       0       0
   863 ;;      Locals:         0       0       0       0       0
   864 ;;      Temps:          0       0       0       0       0
   865 ;;      Totals:         0       0       0       0       0
   866 ;;Total ram usage:        0 bytes
   867 ;; Hardware stack levels used: 1
   868 ;; This function calls:
   869 ;;		Nothing
   870 ;; This function is called by:
   871 ;;		_spiRead
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875                           
   876                           ;psect for function _spiReceiveWait
   877  0088                     _spiReceiveWait:
   878  0088                     i1l687:	
   879                           ;incstack = 0
   880                           ; Regs used in _spiReceiveWait: []
   881                           
   882  0088                     i1l71:	
   883                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
   884                           
   885  0088  1683               	bsf	3,5	;RP0=1, select bank1
   886  0089  1303               	bcf	3,6	;RP1=0, select bank1
   887  008A  1C14               	btfss	20,0	;volatile
   888  008B  288D               	goto	u2_21
   889  008C  288E               	goto	u2_20
   890  008D                     u2_21:
   891  008D  2888               	goto	i1l71
   892  008E                     u2_20:
   893  008E                     i1l74:
   894  008E  0008               	return
   895  008F                     __end_of_spiReceiveWait:
   896  007E                     btemp	set	126	;btemp
   897  007E                     wtemp0	set	126
   898                           
   899                           	psect	config
   900                           
   901                           ;Config register CONFIG1 @ 0x2007
   902                           ;	Oscillator Selection bits
   903                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
   904                           ;	Watchdog Timer Enable bit
   905                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   906                           ;	Power-up Timer Enable bit
   907                           ;	PWRTE = OFF, PWRT disabled
   908                           ;	RE3/MCLR pin function select bit
   909                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   910                           ;	Code Protection bit
   911                           ;	CP = OFF, Program memory code protection is disabled
   912                           ;	Data Code Protection bit
   913                           ;	CPD = OFF, Data memory code protection is disabled
   914                           ;	Brown Out Reset Selection bits
   915                           ;	BOREN = OFF, BOR disabled
   916                           ;	Internal External Switchover bit
   917                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   918                           ;	Fail-Safe Clock Monitor Enabled bit
   919                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   920                           ;	Low Voltage Programming Enable bit
   921                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   922                           ;	In-Circuit Debugger Mode bit
   923                           ;	DEBUG = 0x1, unprogrammed default
   924  2007                     	org	8199
   925  2007  20D6               	dw	8406
   926                           
   927                           ;Config register CONFIG2 @ 0x2008
   928                           ;	Brown-out Reset Selection bit
   929                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   930                           ;	Flash Program Memory Self Write Enable bits
   931                           ;	WRT = OFF, Write protection off
   932  2008                     	org	8200
   933  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     360
                                              7 COMMON     3     3      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      15
                                              1 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jul 24 23:52:59 2021

            _SSPSTATbits 0094                       l51 004E                       l67 0079  
                     l68 007E                       u40 0071                       u41 0070  
                     u57 005E                      l731 0071                      l733 0073  
                    l741 003E                      l735 0075                      l751 0045  
                    l743 003F                      l737 0078                      l729 006A  
                    l745 0040                      l753 004F                      l747 0041  
                    l739 0032                      l755 0054                      l749 0044  
                    l757 0058                      _isr 0014                     ?_isr 0070  
                   i1l40 002B                     i1l71 0088                     i1l74 008E  
                   i1l85 0087                     i1l77 0094                     u2_20 008E  
                   u2_21 008D                     u3_20 001A                     u3_21 0019  
                   _main 004F                     btemp 007E                     start 000C  
                  ??_isr 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l711 0014                    i1l713 001A                    i1l715 0028  
                  i1l691 0084                    i1l687 0088                    i1l695 0090  
                  i1l689 007F                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088                    _SSPIF 0063  
                  _setup 0032                    pclath 000A          __end_of_spiInit 007F  
        __end_of_spiRead 0088                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0069                   ??_main 0077  
                 ?_setup 0070                   _ANSELH 0189                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
                 saved_w 007E         __end_of_spiWrite 0095                ??_spiInit 0076  
              ??_spiRead 0070  __end_of__initialization 0010           __pcstackCOMMON 0070  
          __end_of_setup 004F                  ??_setup 0077               __pmaintext 004F  
             __pintentry 0004  __size_of_spiReceiveWait 0007                  _SSPSTAT 0094  
              ?_spiWrite 0070                  __ptext1 0032                  __ptext2 0069  
                __ptext3 0014                  __ptext4 008F                  __ptext5 007F  
                __ptext6 0088             __size_of_isr 001E                  _spiInit 0069  
                _spiRead 007F     end_of_initialization 0010               ??_spiWrite 0070  
              _TRISAbits 0085              spiWrite@dat 0070           _spiReceiveWait 0088  
    start_initialization 000F              __end_of_isr 0032   __end_of_spiReceiveWait 008F  
            __pbssCOMMON 007A                ___latbits 0002          ?_spiReceiveWait 0070  
      __size_of_spiWrite 0006                 ?_spiInit 0073                 ?_spiRead 0070  
         __size_of_setup 001D     spiInit@sTransmitEdge 0075        interrupt_function 0004  
               _PIE1bits 008C       spiInit@sDataSample 0073                 _PIR1bits 000C  
       __size_of_spiInit 0016         __size_of_spiRead 0009            __size_of_main 001A  
               _temporal 007A                 _spiWrite 008F             spiInit@sType 0076  
      spiInit@sClockIdle 0074               _INTCONbits 000B                 intlevel1 0000  
       ??_spiReceiveWait 0070  
