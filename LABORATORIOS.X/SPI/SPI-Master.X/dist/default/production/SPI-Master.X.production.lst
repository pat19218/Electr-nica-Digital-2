

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jul 24 23:53:49 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.32
    16                           ; Generated 02/02/2021 GMT
    17                           ; 
    18                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  0013                     _SSPBUF	set	19
   285  0014                     _SSPCON	set	20
   286  0008                     _PORTD	set	8
   287  0006                     _PORTB	set	6
   288  0007                     _PORTCbits	set	7
   289  0094                     _SSPSTATbits	set	148
   290  0094                     _SSPSTAT	set	148
   291  0088                     _TRISD	set	136
   292  0086                     _TRISB	set	134
   293  043B                     _TRISC3	set	1083
   294  043D                     _TRISC5	set	1085
   295  043A                     _TRISC2	set	1082
   296  0189                     _ANSELH	set	393
   297  0188                     _ANSEL	set	392
   298                           
   299                           	psect	cinit
   300  07FC                     start_initialization:	
   301                           ; #config settings
   302                           
   303  07FC                     __initialization:
   304  07FC                     end_of_initialization:	
   305                           ;End of C runtime variable initialization code
   306                           
   307  07FC                     __end_of__initialization:
   308  07FC  0183               	clrf	3
   309  07FD  120A  118A  2FB8   	ljmp	_main	;jump to C main() function
   310                           
   311                           	psect	cstackCOMMON
   312  0070                     __pcstackCOMMON:
   313  0070                     ?_setup:
   314  0070                     ?_spiWrite:	
   315                           ; 1 bytes @ 0x0
   316                           
   317  0070                     ??_spiWrite:	
   318                           ; 1 bytes @ 0x0
   319                           
   320  0070                     ?_spiRead:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0070                     ??_spiRead:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0070                     ?_spiInit:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ?_main:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ?_spiReceiveWait:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ??_spiReceiveWait:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     spiInit@sDataSample:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     spiWrite@dat:	
   342                           ; 1 bytes @ 0x0
   343                           
   344                           
   345                           ; 1 bytes @ 0x0
   346  0070                     	ds	1
   347  0071                     spiInit@sClockIdle:
   348                           
   349                           ; 1 bytes @ 0x1
   350  0071                     	ds	1
   351  0072                     spiInit@sTransmitEdge:
   352                           
   353                           ; 1 bytes @ 0x2
   354  0072                     	ds	1
   355  0073                     ??_spiInit:
   356  0073                     spiInit@sType:	
   357                           ; 1 bytes @ 0x3
   358                           
   359                           
   360                           ; 1 bytes @ 0x3
   361  0073                     	ds	1
   362  0074                     ??_setup:
   363  0074                     ??_main:	
   364                           ; 1 bytes @ 0x4
   365                           
   366                           
   367                           ; 1 bytes @ 0x4
   368  0074                     	ds	3
   369                           
   370                           	psect	maintext
   371  07B8                     __pmaintext:	
   372 ;;
   373 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   374 ;;
   375 ;; *************** function _main *****************
   376 ;; Defined at:
   377 ;;		line 51 in file "main.c"
   378 ;; Parameters:    Size  Location     Type
   379 ;;		None
   380 ;; Auto vars:     Size  Location     Type
   381 ;;		None
   382 ;; Return value:  Size  Location     Type
   383 ;;                  1    wreg      void 
   384 ;; Registers used:
   385 ;;		wreg, status,2, status,0, pclath, cstack
   386 ;; Tracked objects:
   387 ;;		On entry : B00/0
   388 ;;		On exit  : 0/0
   389 ;;		Unchanged: 0/0
   390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   391 ;;      Params:         0       0       0       0       0
   392 ;;      Locals:         0       0       0       0       0
   393 ;;      Temps:          3       0       0       0       0
   394 ;;      Totals:         3       0       0       0       0
   395 ;;Total ram usage:        3 bytes
   396 ;; Hardware stack levels required when called: 2
   397 ;; This function calls:
   398 ;;		_setup
   399 ;;		_spiRead
   400 ;;		_spiWrite
   401 ;; This function is called by:
   402 ;;		Startup code after reset
   403 ;; This function uses a non-reentrant model
   404 ;;
   405                           
   406                           
   407                           ;psect for function _main
   408  07B8                     _main:
   409  07B8                     l733:	
   410                           ;incstack = 0
   411                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   412                           
   413                           
   414                           ;main.c: 52:     setup();
   415  07B8  120A  118A  27A0  120A  118A  	fcall	_setup
   416  07BD                     l735:
   417                           
   418                           ;main.c: 57:        PORTCbits.RC2 = 0;
   419  07BD  1283               	bcf	3,5	;RP0=0, select bank0
   420  07BE  1303               	bcf	3,6	;RP1=0, select bank0
   421  07BF  1107               	bcf	7,2	;volatile
   422  07C0                     l737:
   423                           
   424                           ;main.c: 58:        _delay((unsigned long)((1)*(8000000/4000.0)));
   425  07C0  3003               	movlw	3
   426  07C1  00F5               	movwf	??_main+1
   427  07C2  3097               	movlw	151
   428  07C3  00F4               	movwf	??_main
   429  07C4                     u47:
   430  07C4  0BF4               	decfsz	??_main,f
   431  07C5  2FC4               	goto	u47
   432  07C6  0BF5               	decfsz	??_main+1,f
   433  07C7  2FC4               	goto	u47
   434  07C8  2FC9               	nop2
   435  07C9                     l739:
   436                           
   437                           ;main.c: 60:        spiWrite(PORTB);
   438  07C9  1283               	bcf	3,5	;RP0=0, select bank0
   439  07CA  1303               	bcf	3,6	;RP1=0, select bank0
   440  07CB  0806               	movf	6,w	;volatile
   441  07CC  120A  118A  2774  120A  118A  	fcall	_spiWrite
   442  07D1                     l741:
   443                           
   444                           ;main.c: 61:        PORTD = spiRead();
   445  07D1  120A  118A  2781  120A  118A  	fcall	_spiRead
   446  07D6  1283               	bcf	3,5	;RP0=0, select bank0
   447  07D7  1303               	bcf	3,6	;RP1=0, select bank0
   448  07D8  0088               	movwf	8	;volatile
   449  07D9                     l743:
   450                           
   451                           ;main.c: 63:        _delay((unsigned long)((1)*(8000000/4000.0)));
   452  07D9  3003               	movlw	3
   453  07DA  00F5               	movwf	??_main+1
   454  07DB  3097               	movlw	151
   455  07DC  00F4               	movwf	??_main
   456  07DD                     u57:
   457  07DD  0BF4               	decfsz	??_main,f
   458  07DE  2FDD               	goto	u57
   459  07DF  0BF5               	decfsz	??_main+1,f
   460  07E0  2FDD               	goto	u57
   461  07E1  2FE2               	nop2
   462  07E2                     l745:
   463                           
   464                           ;main.c: 64:        PORTCbits.RC2 = 1;
   465  07E2  1283               	bcf	3,5	;RP0=0, select bank0
   466  07E3  1303               	bcf	3,6	;RP1=0, select bank0
   467  07E4  1507               	bsf	7,2	;volatile
   468  07E5                     l747:
   469                           
   470                           ;main.c: 66:        _delay((unsigned long)((250)*(8000000/4000.0)));
   471  07E5  3003               	movlw	3
   472  07E6  00F6               	movwf	??_main+2
   473  07E7  308A               	movlw	138
   474  07E8  00F5               	movwf	??_main+1
   475  07E9  3055               	movlw	85
   476  07EA  00F4               	movwf	??_main
   477  07EB                     u67:
   478  07EB  0BF4               	decfsz	??_main,f
   479  07EC  2FEB               	goto	u67
   480  07ED  0BF5               	decfsz	??_main+1,f
   481  07EE  2FEB               	goto	u67
   482  07EF  0BF6               	decfsz	??_main+2,f
   483  07F0  2FEB               	goto	u67
   484  07F1  2FF2               	nop2
   485  07F2                     l749:
   486                           
   487                           ;main.c: 67:        PORTB++;
   488  07F2  3001               	movlw	1
   489  07F3  00F4               	movwf	??_main
   490  07F4  0874               	movf	??_main,w
   491  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   492  07F6  1303               	bcf	3,6	;RP1=0, select bank0
   493  07F7  0786               	addwf	6,f	;volatile
   494  07F8  2FBD               	goto	l735
   495  07F9  120A  118A  2800   	ljmp	start
   496  07FC                     __end_of_main:
   497                           
   498                           	psect	text1
   499  0774                     __ptext1:	
   500 ;; *************** function _spiWrite *****************
   501 ;; Defined at:
   502 ;;		line 34 in file "SPI.c"
   503 ;; Parameters:    Size  Location     Type
   504 ;;  dat             1    wreg     unsigned char 
   505 ;; Auto vars:     Size  Location     Type
   506 ;;  dat             1    0[COMMON] unsigned char 
   507 ;; Return value:  Size  Location     Type
   508 ;;                  1    wreg      void 
   509 ;; Registers used:
   510 ;;		wreg
   511 ;; Tracked objects:
   512 ;;		On entry : 0/0
   513 ;;		On exit  : 0/0
   514 ;;		Unchanged: 0/0
   515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   516 ;;      Params:         0       0       0       0       0
   517 ;;      Locals:         1       0       0       0       0
   518 ;;      Temps:          0       0       0       0       0
   519 ;;      Totals:         1       0       0       0       0
   520 ;;Total ram usage:        1 bytes
   521 ;; Hardware stack levels used: 1
   522 ;; This function calls:
   523 ;;		Nothing
   524 ;; This function is called by:
   525 ;;		_main
   526 ;; This function uses a non-reentrant model
   527 ;;
   528                           
   529                           
   530                           ;psect for function _spiWrite
   531  0774                     _spiWrite:
   532                           
   533                           ;incstack = 0
   534                           ; Regs used in _spiWrite: [wreg]
   535                           ;spiWrite@dat stored from wreg
   536  0774  00F0               	movwf	spiWrite@dat
   537  0775                     l683:
   538                           
   539                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   540  0775  0870               	movf	spiWrite@dat,w
   541  0776  1283               	bcf	3,5	;RP0=0, select bank0
   542  0777  1303               	bcf	3,6	;RP1=0, select bank0
   543  0778  0093               	movwf	19	;volatile
   544  0779                     l63:
   545  0779  0008               	return
   546  077A                     __end_of_spiWrite:
   547                           
   548                           	psect	text2
   549  0781                     __ptext2:	
   550 ;; *************** function _spiRead *****************
   551 ;; Defined at:
   552 ;;		line 47 in file "SPI.c"
   553 ;; Parameters:    Size  Location     Type
   554 ;;		None
   555 ;; Auto vars:     Size  Location     Type
   556 ;;		None
   557 ;; Return value:  Size  Location     Type
   558 ;;                  1    wreg      unsigned char 
   559 ;; Registers used:
   560 ;;		wreg, status,2, status,0, pclath, cstack
   561 ;; Tracked objects:
   562 ;;		On entry : 0/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   566 ;;      Params:         0       0       0       0       0
   567 ;;      Locals:         0       0       0       0       0
   568 ;;      Temps:          0       0       0       0       0
   569 ;;      Totals:         0       0       0       0       0
   570 ;;Total ram usage:        0 bytes
   571 ;; Hardware stack levels used: 1
   572 ;; Hardware stack levels required when called: 1
   573 ;; This function calls:
   574 ;;		_spiReceiveWait
   575 ;; This function is called by:
   576 ;;		_main
   577 ;; This function uses a non-reentrant model
   578 ;;
   579                           
   580                           
   581                           ;psect for function _spiRead
   582  0781                     _spiRead:
   583  0781                     l685:	
   584                           ;incstack = 0
   585                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   586                           
   587                           
   588                           ;SPI.c: 49:     spiReceiveWait();
   589  0781  120A  118A  277A  120A  118A  	fcall	_spiReceiveWait
   590  0786                     l687:
   591                           
   592                           ;SPI.c: 50:     return(SSPBUF);
   593  0786  1283               	bcf	3,5	;RP0=0, select bank0
   594  0787  1303               	bcf	3,6	;RP1=0, select bank0
   595  0788  0813               	movf	19,w	;volatile
   596  0789                     l71:
   597  0789  0008               	return
   598  078A                     __end_of_spiRead:
   599                           
   600                           	psect	text3
   601  077A                     __ptext3:	
   602 ;; *************** function _spiReceiveWait *****************
   603 ;; Defined at:
   604 ;;		line 29 in file "SPI.c"
   605 ;; Parameters:    Size  Location     Type
   606 ;;		None
   607 ;; Auto vars:     Size  Location     Type
   608 ;;		None
   609 ;; Return value:  Size  Location     Type
   610 ;;                  1    wreg      void 
   611 ;; Registers used:
   612 ;;		None
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   618 ;;      Params:         0       0       0       0       0
   619 ;;      Locals:         0       0       0       0       0
   620 ;;      Temps:          0       0       0       0       0
   621 ;;      Totals:         0       0       0       0       0
   622 ;;Total ram usage:        0 bytes
   623 ;; Hardware stack levels used: 1
   624 ;; This function calls:
   625 ;;		Nothing
   626 ;; This function is called by:
   627 ;;		_spiRead
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631                           
   632                           ;psect for function _spiReceiveWait
   633  077A                     _spiReceiveWait:
   634  077A                     l673:	
   635                           ;incstack = 0
   636                           ; Regs used in _spiReceiveWait: []
   637                           
   638  077A                     l57:	
   639                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
   640                           
   641  077A  1683               	bsf	3,5	;RP0=1, select bank1
   642  077B  1303               	bcf	3,6	;RP1=0, select bank1
   643  077C  1C14               	btfss	20,0	;volatile
   644  077D  2F7F               	goto	u21
   645  077E  2F80               	goto	u20
   646  077F                     u21:
   647  077F  2F7A               	goto	l57
   648  0780                     u20:
   649  0780                     l60:
   650  0780  0008               	return
   651  0781                     __end_of_spiReceiveWait:
   652                           
   653                           	psect	text4
   654  07A0                     __ptext4:	
   655 ;; *************** function _setup *****************
   656 ;; Defined at:
   657 ;;		line 74 in file "main.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;		None
   660 ;; Auto vars:     Size  Location     Type
   661 ;;		None
   662 ;; Return value:  Size  Location     Type
   663 ;;                  1    wreg      void 
   664 ;; Registers used:
   665 ;;		wreg, status,2, status,0, pclath, cstack
   666 ;; Tracked objects:
   667 ;;		On entry : 0/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   671 ;;      Params:         0       0       0       0       0
   672 ;;      Locals:         0       0       0       0       0
   673 ;;      Temps:          0       0       0       0       0
   674 ;;      Totals:         0       0       0       0       0
   675 ;;Total ram usage:        0 bytes
   676 ;; Hardware stack levels used: 1
   677 ;; Hardware stack levels required when called: 1
   678 ;; This function calls:
   679 ;;		_spiInit
   680 ;; This function is called by:
   681 ;;		_main
   682 ;; This function uses a non-reentrant model
   683 ;;
   684                           
   685                           
   686                           ;psect for function _setup
   687  07A0                     _setup:
   688  07A0                     l725:	
   689                           ;incstack = 0
   690                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   691                           
   692                           
   693                           ;main.c: 75:     ANSEL = 0;
   694  07A0  1683               	bsf	3,5	;RP0=1, select bank3
   695  07A1  1703               	bsf	3,6	;RP1=1, select bank3
   696  07A2  0188               	clrf	8	;volatile
   697                           
   698                           ;main.c: 76:     ANSELH = 0;
   699  07A3  0189               	clrf	9	;volatile
   700  07A4                     l727:
   701                           
   702                           ;main.c: 77:     TRISC2 = 0;
   703  07A4  1683               	bsf	3,5	;RP0=1, select bank1
   704  07A5  1303               	bcf	3,6	;RP1=0, select bank1
   705  07A6  1107               	bcf	7,2	;volatile
   706                           
   707                           ;main.c: 78:     TRISB = 0;
   708  07A7  0186               	clrf	6	;volatile
   709                           
   710                           ;main.c: 79:     TRISD = 0;
   711  07A8  0188               	clrf	8	;volatile
   712                           
   713                           ;main.c: 80:     PORTB = 0;
   714  07A9  1283               	bcf	3,5	;RP0=0, select bank0
   715  07AA  1303               	bcf	3,6	;RP1=0, select bank0
   716  07AB  0186               	clrf	6	;volatile
   717                           
   718                           ;main.c: 81:     PORTD = 0;
   719  07AC  0188               	clrf	8	;volatile
   720  07AD                     l729:
   721                           
   722                           ;main.c: 82:     PORTCbits.RC2 = 1;
   723  07AD  1507               	bsf	7,2	;volatile
   724  07AE                     l731:
   725                           
   726                           ;main.c: 83:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW
      +                          , SPI_IDLE_2_ACTIVE);
   727  07AE  01F0               	clrf	spiInit@sDataSample
   728  07AF  01F1               	clrf	spiInit@sClockIdle
   729  07B0  01F2               	clrf	spiInit@sTransmitEdge
   730  07B1  3020               	movlw	32
   731  07B2  120A  118A  278A  120A  118A  	fcall	_spiInit
   732  07B7                     l37:
   733  07B7  0008               	return
   734  07B8                     __end_of_setup:
   735                           
   736                           	psect	text5
   737  078A                     __ptext5:	
   738 ;; *************** function _spiInit *****************
   739 ;; Defined at:
   740 ;;		line 12 in file "SPI.c"
   741 ;; Parameters:    Size  Location     Type
   742 ;;  sType           1    wreg     enum E1292
   743 ;;  sDataSample     1    0[COMMON] enum E1300
   744 ;;  sClockIdle      1    1[COMMON] enum E1304
   745 ;;  sTransmitEdg    1    2[COMMON] enum E1308
   746 ;; Auto vars:     Size  Location     Type
   747 ;;  sType           1    3[COMMON] enum E1292
   748 ;; Return value:  Size  Location     Type
   749 ;;                  1    wreg      void 
   750 ;; Registers used:
   751 ;;		wreg, status,2, status,0
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   757 ;;      Params:         3       0       0       0       0
   758 ;;      Locals:         1       0       0       0       0
   759 ;;      Temps:          0       0       0       0       0
   760 ;;      Totals:         4       0       0       0       0
   761 ;;Total ram usage:        4 bytes
   762 ;; Hardware stack levels used: 1
   763 ;; This function calls:
   764 ;;		Nothing
   765 ;; This function is called by:
   766 ;;		_setup
   767 ;; This function uses a non-reentrant model
   768 ;;
   769                           
   770                           
   771                           ;psect for function _spiInit
   772  078A                     _spiInit:
   773                           
   774                           ;incstack = 0
   775                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   776                           ;spiInit@sType stored from wreg
   777  078A  00F3               	movwf	spiInit@sType
   778  078B                     l715:
   779                           
   780                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   781  078B  1683               	bsf	3,5	;RP0=1, select bank1
   782  078C  1303               	bcf	3,6	;RP1=0, select bank1
   783  078D  1287               	bcf	7,5	;volatile
   784                           
   785                           ;SPI.c: 15:     if(sType & 0b00000100)
   786  078E  1D73               	btfss	spiInit@sType,2
   787  078F  2F91               	goto	u31
   788  0790  2F92               	goto	u30
   789  0791                     u31:
   790  0791  2F96               	goto	l721
   791  0792                     u30:
   792  0792                     l717:
   793                           
   794                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   795  0792  0872               	movf	spiInit@sTransmitEdge,w
   796  0793  0094               	movwf	20	;volatile
   797  0794                     l719:
   798                           
   799                           ;SPI.c: 18:         TRISC3 = 1;
   800  0794  1587               	bsf	7,3	;volatile
   801                           
   802                           ;SPI.c: 19:     }
   803  0795  2F9A               	goto	l53
   804  0796                     l721:
   805                           
   806                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   807  0796  0870               	movf	spiInit@sDataSample,w
   808  0797  0472               	iorwf	spiInit@sTransmitEdge,w
   809  0798  0094               	movwf	20	;volatile
   810  0799                     l723:
   811                           
   812                           ;SPI.c: 23:         TRISC3 = 0;
   813  0799  1187               	bcf	7,3	;volatile
   814  079A                     l53:	
   815                           ;SPI.c: 24:     }
   816                           
   817                           
   818                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   819  079A  0873               	movf	spiInit@sType,w
   820  079B  0471               	iorwf	spiInit@sClockIdle,w
   821  079C  1283               	bcf	3,5	;RP0=0, select bank0
   822  079D  1303               	bcf	3,6	;RP1=0, select bank0
   823  079E  0094               	movwf	20	;volatile
   824  079F                     l54:
   825  079F  0008               	return
   826  07A0                     __end_of_spiInit:
   827  007E                     btemp	set	126	;btemp
   828  007E                     wtemp0	set	126
   829                           
   830                           	psect	config
   831                           
   832                           ;Config register CONFIG1 @ 0x2007
   833                           ;	Oscillator Selection bits
   834                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
   835                           ;	Watchdog Timer Enable bit
   836                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   837                           ;	Power-up Timer Enable bit
   838                           ;	PWRTE = OFF, PWRT disabled
   839                           ;	RE3/MCLR pin function select bit
   840                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   841                           ;	Code Protection bit
   842                           ;	CP = OFF, Program memory code protection is disabled
   843                           ;	Data Code Protection bit
   844                           ;	CPD = OFF, Data memory code protection is disabled
   845                           ;	Brown Out Reset Selection bits
   846                           ;	BOREN = OFF, BOR disabled
   847                           ;	Internal External Switchover bit
   848                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   849                           ;	Fail-Safe Clock Monitor Enabled bit
   850                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   851                           ;	Low Voltage Programming Enable bit
   852                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   853                           ;	In-Circuit Debugger Mode bit
   854                           ;	DEBUG = 0x1, unprogrammed default
   855  2007                     	org	8199
   856  2007  20D6               	dw	8406
   857                           
   858                           ;Config register CONFIG2 @ 0x2008
   859                           ;	Brown-out Reset Selection bit
   860                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   861                           ;	Flash Program Memory Self Write Enable bits
   862                           ;	WRT = OFF, Write protection off
   863  2008                     	org	8200
   864  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     375
                                              4 COMMON     3     3      0
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jul 24 23:53:49 2021

            _SSPSTATbits 0094                       l60 0780                       l53 079A  
                     l37 07B7                       l54 079F                       l71 0789  
                     l63 0779                       l57 077A                       u20 0780  
                     u21 077F                       u30 0792                       u31 0791  
                     u47 07C4                       u57 07DD                       u67 07EB  
                    l721 0796                      l723 0799                      l715 078B  
                    l731 07AE                      l717 0792                      l725 07A0  
                    l741 07D1                      l733 07B8                      l719 0794  
                    l727 07A4                      l743 07D9                      l735 07BD  
                    l729 07AD                      l673 077A                      l745 07E2  
                    l737 07C0                      l683 0775                      l747 07E5  
                    l739 07C9                      l685 0781                      l749 07F2  
                    l687 0786                     _main 07B8                     btemp 007E  
                   start 0000                    ?_main 0070                    _ANSEL 0188  
                  _PORTB 0006                    _PORTD 0008                    _TRISB 0086  
                  _TRISD 0088                    _setup 07A0          __end_of_spiInit 07A0  
        __end_of_spiRead 078A                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0074  
                 ?_setup 0070                   _ANSELH 0189                   _TRISC2 043A  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013         __end_of_spiWrite 077A                ??_spiInit 0073  
              ??_spiRead 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_setup 07B8                  ??_setup 0074               __pmaintext 07B8  
__size_of_spiReceiveWait 0007                  _SSPSTAT 0094                ?_spiWrite 0070  
                __ptext1 0774                  __ptext2 0781                  __ptext3 077A  
                __ptext4 07A0                  __ptext5 078A                  _spiInit 078A  
                _spiRead 0781     end_of_initialization 07FC               ??_spiWrite 0070  
              _PORTCbits 0007              spiWrite@dat 0070           _spiReceiveWait 077A  
    start_initialization 07FC   __end_of_spiReceiveWait 0781                ___latbits 0002  
        ?_spiReceiveWait 0070        __size_of_spiWrite 0006                 ?_spiInit 0070  
               ?_spiRead 0070           __size_of_setup 0018     spiInit@sTransmitEdge 0072  
     spiInit@sDataSample 0070         __size_of_spiInit 0016         __size_of_spiRead 0009  
          __size_of_main 0044                 _spiWrite 0774             spiInit@sType 0073  
      spiInit@sClockIdle 0071         ??_spiReceiveWait 0070  
