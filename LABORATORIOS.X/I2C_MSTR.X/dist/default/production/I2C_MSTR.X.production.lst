

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Aug 08 21:28:02 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.20
    28                           ; Generated 12/02/2020 GMT
    29                           ; 
    30                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F887 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008F                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  0105                     	;# 
   125  0107                     	;# 
   126  0108                     	;# 
   127  0109                     	;# 
   128  010C                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0185                     	;# 
   134  0187                     	;# 
   135  0188                     	;# 
   136  0189                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008F                     	;# 
   184  0090                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  0105                     	;# 
   203  0107                     	;# 
   204  0108                     	;# 
   205  0109                     	;# 
   206  010C                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0185                     	;# 
   212  0187                     	;# 
   213  0188                     	;# 
   214  0189                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  0006                     	;# 
   224  0007                     	;# 
   225  0008                     	;# 
   226  0009                     	;# 
   227  000A                     	;# 
   228  000B                     	;# 
   229  000C                     	;# 
   230  000D                     	;# 
   231  000E                     	;# 
   232  000E                     	;# 
   233  000F                     	;# 
   234  0010                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0013                     	;# 
   238  0014                     	;# 
   239  0015                     	;# 
   240  0015                     	;# 
   241  0016                     	;# 
   242  0017                     	;# 
   243  0018                     	;# 
   244  0019                     	;# 
   245  001A                     	;# 
   246  001B                     	;# 
   247  001B                     	;# 
   248  001C                     	;# 
   249  001D                     	;# 
   250  001E                     	;# 
   251  001F                     	;# 
   252  0081                     	;# 
   253  0085                     	;# 
   254  0086                     	;# 
   255  0087                     	;# 
   256  0088                     	;# 
   257  0089                     	;# 
   258  008C                     	;# 
   259  008D                     	;# 
   260  008E                     	;# 
   261  008F                     	;# 
   262  0090                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0094                     	;# 
   269  0095                     	;# 
   270  0096                     	;# 
   271  0097                     	;# 
   272  0098                     	;# 
   273  0099                     	;# 
   274  009A                     	;# 
   275  009B                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  009F                     	;# 
   280  0105                     	;# 
   281  0107                     	;# 
   282  0108                     	;# 
   283  0109                     	;# 
   284  010C                     	;# 
   285  010C                     	;# 
   286  010D                     	;# 
   287  010E                     	;# 
   288  010F                     	;# 
   289  0185                     	;# 
   290  0187                     	;# 
   291  0188                     	;# 
   292  0189                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295  0000                     	;# 
   296  0001                     	;# 
   297  0002                     	;# 
   298  0003                     	;# 
   299  0004                     	;# 
   300  0005                     	;# 
   301  0006                     	;# 
   302  0007                     	;# 
   303  0008                     	;# 
   304  0009                     	;# 
   305  000A                     	;# 
   306  000B                     	;# 
   307  000C                     	;# 
   308  000D                     	;# 
   309  000E                     	;# 
   310  000E                     	;# 
   311  000F                     	;# 
   312  0010                     	;# 
   313  0011                     	;# 
   314  0012                     	;# 
   315  0013                     	;# 
   316  0014                     	;# 
   317  0015                     	;# 
   318  0015                     	;# 
   319  0016                     	;# 
   320  0017                     	;# 
   321  0018                     	;# 
   322  0019                     	;# 
   323  001A                     	;# 
   324  001B                     	;# 
   325  001B                     	;# 
   326  001C                     	;# 
   327  001D                     	;# 
   328  001E                     	;# 
   329  001F                     	;# 
   330  0081                     	;# 
   331  0085                     	;# 
   332  0086                     	;# 
   333  0087                     	;# 
   334  0088                     	;# 
   335  0089                     	;# 
   336  008C                     	;# 
   337  008D                     	;# 
   338  008E                     	;# 
   339  008F                     	;# 
   340  0090                     	;# 
   341  0091                     	;# 
   342  0092                     	;# 
   343  0093                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0094                     	;# 
   347  0095                     	;# 
   348  0096                     	;# 
   349  0097                     	;# 
   350  0098                     	;# 
   351  0099                     	;# 
   352  009A                     	;# 
   353  009B                     	;# 
   354  009C                     	;# 
   355  009D                     	;# 
   356  009E                     	;# 
   357  009F                     	;# 
   358  0105                     	;# 
   359  0107                     	;# 
   360  0108                     	;# 
   361  0109                     	;# 
   362  010C                     	;# 
   363  010C                     	;# 
   364  010D                     	;# 
   365  010E                     	;# 
   366  010F                     	;# 
   367  0185                     	;# 
   368  0187                     	;# 
   369  0188                     	;# 
   370  0189                     	;# 
   371  018C                     	;# 
   372  018D                     	;# 
   373  0013                     _SSPBUF	set	19
   374  0014                     _SSPCON	set	20
   375  0008                     _PORTDbits	set	8
   376  0007                     _PORTCbits	set	7
   377  0009                     _PORTE	set	9
   378  0008                     _PORTD	set	8
   379  0007                     _PORTC	set	7
   380  0006                     _PORTB	set	6
   381  0005                     _PORTA	set	5
   382  0063                     _SSPIF	set	99
   383  005E                     _PEIE	set	94
   384  005F                     _GIE	set	95
   385  0043                     _RD3	set	67
   386  0091                     _SSPCON2bits	set	145
   387  0094                     _SSPSTAT	set	148
   388  0093                     _SSPADD	set	147
   389  0091                     _SSPCON2	set	145
   390  0087                     _TRISCbits	set	135
   391  008F                     _OSCCONbits	set	143
   392  0088                     _TRISD	set	136
   393  0086                     _TRISB	set	134
   394  0085                     _TRISA	set	133
   395  0463                     _SSPIE	set	1123
   396  043C                     _TRISC4	set	1084
   397  043B                     _TRISC3	set	1083
   398  0189                     _ANSELH	set	393
   399  0188                     _ANSEL	set	392
   400                           
   401                           	psect	strings
   402  02B2                     __pstrings:
   403  02B2                     stringtab:
   404  02B2                     __stringtab:
   405  02B2                     stringcode:	
   406                           ;	String table - string pointers are 1 byte each
   407                           
   408  02B2                     stringdir:
   409  02B2  3002               	movlw	high stringdir
   410  02B3  008A               	movwf	10
   411  02B4  0804               	movf	4,w
   412  02B5  0A84               	incf	4,f
   413  02B6  0782               	addwf	2,f
   414  02B7                     __stringbase:
   415  02B7  3400               	retlw	0
   416  02B8                     __end_of__stringtab:
   417  02B8                     STR_1:
   418  02B8  344C               	retlw	76	;'L'
   419  02B9  3443               	retlw	67	;'C'
   420  02BA  3444               	retlw	68	;'D'
   421  02BB  3420               	retlw	32	;' '
   422  02BC  344C               	retlw	76	;'L'
   423  02BD  3469               	retlw	105	;'i'
   424  02BE  3462               	retlw	98	;'b'
   425  02BF  3472               	retlw	114	;'r'
   426  02C0  3461               	retlw	97	;'a'
   427  02C1  3472               	retlw	114	;'r'
   428  02C2  3479               	retlw	121	;'y'
   429  02C3  3420               	retlw	32	;' '
   430  02C4  3466               	retlw	102	;'f'
   431  02C5  346F               	retlw	111	;'o'
   432  02C6  3472               	retlw	114	;'r'
   433  02C7  3400               	retlw	0
   434  02C8                     STR_2:
   435  02C8  346F               	retlw	111	;'o'
   436  02C9  346B               	retlw	107	;'k'
   437  02CA  3420               	retlw	32	;' '
   438  02CB  3461               	retlw	97	;'a'
   439  02CC  3461               	retlw	97	;'a'
   440  02CD  3461               	retlw	97	;'a'
   441  02CE  3461               	retlw	97	;'a'
   442  02CF  3400               	retlw	0
   443                           
   444                           	psect	cinit
   445  000F                     start_initialization:	
   446                           ; #config settings
   447                           
   448  000F                     __initialization:
   449  000F                     end_of_initialization:	
   450                           ;End of C runtime variable initialization code
   451                           
   452  000F                     __end_of__initialization:
   453  000F  0183               	clrf	3
   454  0010  120A  118A  2813   	ljmp	_main	;jump to C main() function
   455                           
   456                           	psect	cstackCOMMON
   457  0070                     __pcstackCOMMON:
   458  0070                     ?_Lcd_Init:
   459  0070                     ?_I2C_Master_Start:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  0070                     ?_I2C_Master_Write:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0070                     ?_I2C_Master_Stop:	
   466                           ; 1 bytes @ 0x0
   467                           
   468  0070                     ?_I2C_Master_Read:	
   469                           ; 1 bytes @ 0x0
   470                           
   471  0070                     ?_Lcd_Write_String:	
   472                           ; 1 bytes @ 0x0
   473                           
   474  0070                     ?_isr:	
   475                           ; 1 bytes @ 0x0
   476                           
   477  0070                     ??_isr:	
   478                           ; 1 bytes @ 0x0
   479                           
   480  0070                     ?_main:	
   481                           ; 1 bytes @ 0x0
   482                           
   483  0070                     ?_Lcd_Port:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  0070                     ?_Lcd_Cmd:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0070                     ?_Lcd_Write_Char:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  0070                     ?_I2C_Master_Wait:	
   493                           ; 1 bytes @ 0x0
   494                           
   495                           
   496                           ; 1 bytes @ 0x0
   497  0070                     	ds	2
   498  0072                     ??_I2C_Master_Start:
   499  0072                     ??_I2C_Master_Write:	
   500                           ; 1 bytes @ 0x2
   501                           
   502  0072                     ??_I2C_Master_Stop:	
   503                           ; 1 bytes @ 0x2
   504                           
   505  0072                     ??_I2C_Master_Read:	
   506                           ; 1 bytes @ 0x2
   507                           
   508  0072                     ??_Lcd_Port:	
   509                           ; 1 bytes @ 0x2
   510                           
   511  0072                     ??_I2C_Master_Wait:	
   512                           ; 1 bytes @ 0x2
   513                           
   514  0072                     ?___lldiv:	
   515                           ; 1 bytes @ 0x2
   516                           
   517  0072                     Lcd_Port@a:	
   518                           ; 4 bytes @ 0x2
   519                           
   520  0072                     I2C_Master_Write@d:	
   521                           ; 1 bytes @ 0x2
   522                           
   523  0072                     ___lldiv@divisor:	
   524                           ; 1 bytes @ 0x2
   525                           
   526                           
   527                           ; 4 bytes @ 0x2
   528  0072                     	ds	1
   529  0073                     ??_Lcd_Cmd:
   530  0073                     ??_Lcd_Write_Char:	
   531                           ; 1 bytes @ 0x3
   532                           
   533  0073                     I2C_Master_Read@a:	
   534                           ; 1 bytes @ 0x3
   535                           
   536                           
   537                           ; 1 bytes @ 0x3
   538  0073                     	ds	1
   539  0074                     Lcd_Write_Char@temp:
   540  0074                     I2C_Master_Read@temp:	
   541                           ; 1 bytes @ 0x4
   542                           
   543                           
   544                           ; 1 bytes @ 0x4
   545  0074                     	ds	1
   546  0075                     Lcd_Cmd@a:
   547  0075                     Lcd_Write_Char@y:	
   548                           ; 1 bytes @ 0x5
   549                           
   550                           
   551                           ; 1 bytes @ 0x5
   552  0075                     	ds	1
   553  0076                     ??_Lcd_Init:
   554  0076                     ?_Lcd_Set_Cursor:	
   555                           ; 1 bytes @ 0x6
   556                           
   557  0076                     Lcd_Set_Cursor@b:	
   558                           ; 1 bytes @ 0x6
   559                           
   560  0076                     Lcd_Write_Char@a:	
   561                           ; 1 bytes @ 0x6
   562                           
   563  0076                     ___lldiv@dividend:	
   564                           ; 1 bytes @ 0x6
   565                           
   566                           
   567                           ; 4 bytes @ 0x6
   568  0076                     	ds	1
   569  0077                     ??_Lcd_Set_Cursor:
   570  0077                     ??_Lcd_Write_String:	
   571                           ; 1 bytes @ 0x7
   572                           
   573  0077                     Lcd_Write_String@i:	
   574                           ; 1 bytes @ 0x7
   575                           
   576                           
   577                           ; 2 bytes @ 0x7
   578  0077                     	ds	2
   579  0079                     Lcd_Write_String@a:
   580                           
   581                           ; 1 bytes @ 0x9
   582  0079                     	ds	1
   583  007A                     ??___lldiv:
   584                           
   585                           ; 1 bytes @ 0xA
   586  007A                     	ds	1
   587                           
   588                           	psect	cstackBANK0
   589  0020                     __pcstackBANK0:
   590  0020                     Lcd_Set_Cursor@a:
   591  0020                     ___lldiv@quotient:	
   592                           ; 1 bytes @ 0x0
   593                           
   594                           
   595                           ; 4 bytes @ 0x0
   596  0020                     	ds	1
   597  0021                     Lcd_Set_Cursor@z:
   598                           
   599                           ; 1 bytes @ 0x1
   600  0021                     	ds	1
   601  0022                     Lcd_Set_Cursor@y:
   602                           
   603                           ; 1 bytes @ 0x2
   604  0022                     	ds	1
   605  0023                     Lcd_Set_Cursor@temp:
   606                           
   607                           ; 1 bytes @ 0x3
   608  0023                     	ds	1
   609  0024                     ___lldiv@counter:
   610                           
   611                           ; 1 bytes @ 0x4
   612  0024                     	ds	1
   613  0025                     ?_I2C_Master_Init:
   614  0025                     I2C_Master_Init@c:	
   615                           ; 1 bytes @ 0x5
   616                           
   617                           
   618                           ; 4 bytes @ 0x5
   619  0025                     	ds	4
   620  0029                     ??_I2C_Master_Init:
   621                           
   622                           ; 1 bytes @ 0x9
   623  0029                     	ds	4
   624  002D                     ??_main:
   625                           
   626                           ; 1 bytes @ 0xD
   627  002D                     	ds	3
   628                           
   629                           	psect	maintext
   630  0013                     __pmaintext:	
   631 ;;
   632 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   633 ;;
   634 ;; *************** function _main *****************
   635 ;; Defined at:
   636 ;;		line 57 in file "MAESTRO.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;		None
   639 ;; Auto vars:     Size  Location     Type
   640 ;;		None
   641 ;; Return value:  Size  Location     Type
   642 ;;                  1    wreg      void 
   643 ;; Registers used:
   644 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   645 ;; Tracked objects:
   646 ;;		On entry : B00/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   650 ;;      Params:         0       0       0       0       0
   651 ;;      Locals:         0       0       0       0       0
   652 ;;      Temps:          0       3       0       0       0
   653 ;;      Totals:         0       3       0       0       0
   654 ;;Total ram usage:        3 bytes
   655 ;; Hardware stack levels required when called:    4
   656 ;; This function calls:
   657 ;;		_I2C_Master_Init
   658 ;;		_I2C_Master_Read
   659 ;;		_I2C_Master_Start
   660 ;;		_I2C_Master_Stop
   661 ;;		_I2C_Master_Write
   662 ;;		_Lcd_Init
   663 ;;		_Lcd_Set_Cursor
   664 ;;		_Lcd_Write_String
   665 ;; This function is called by:
   666 ;;		Startup code after reset
   667 ;; This function uses a non-reentrant model
   668 ;;
   669                           
   670                           
   671                           ;psect for function _main
   672  0013                     _main:
   673  0013                     l1203:	
   674                           ;incstack = 0
   675                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   676                           
   677                           
   678                           ;MAESTRO.c: 59:     ANSEL = 0x00;
   679  0013  1683               	bsf	3,5	;RP0=1, select bank3
   680  0014  1703               	bsf	3,6	;RP1=1, select bank3
   681  0015  0188               	clrf	8	;volatile
   682                           
   683                           ;MAESTRO.c: 60:     ANSELH = 0x00;
   684  0016  0189               	clrf	9	;volatile
   685                           
   686                           ;MAESTRO.c: 62:     TRISA = 0x00;
   687  0017  1683               	bsf	3,5	;RP0=1, select bank1
   688  0018  1303               	bcf	3,6	;RP1=0, select bank1
   689  0019  0185               	clrf	5	;volatile
   690                           
   691                           ;MAESTRO.c: 63:     TRISB = 0x00;
   692  001A  0186               	clrf	6	;volatile
   693                           
   694                           ;MAESTRO.c: 64:     TRISD = 0x00;
   695  001B  0188               	clrf	8	;volatile
   696  001C                     l1205:
   697                           
   698                           ;MAESTRO.c: 65:     Lcd_Init();
   699  001C  120A  118A  211D  120A  118A  	fcall	_Lcd_Init
   700  0021                     l1207:
   701                           
   702                           ;MAESTRO.c: 67:     OSCCONbits.IRCF = 0b111;
   703  0021  3070               	movlw	112
   704  0022  1683               	bsf	3,5	;RP0=1, select bank1
   705  0023  1303               	bcf	3,6	;RP1=0, select bank1
   706  0024  048F               	iorwf	15,f	;volatile
   707  0025                     l1209:
   708                           
   709                           ;MAESTRO.c: 68:     OSCCONbits.SCS = 1;
   710  0025  140F               	bsf	15,0	;volatile
   711  0026                     l1211:
   712                           
   713                           ;MAESTRO.c: 71:     I2C_Master_Init(100000);
   714  0026  3000               	movlw	0
   715  0027  1283               	bcf	3,5	;RP0=0, select bank0
   716  0028  1303               	bcf	3,6	;RP1=0, select bank0
   717  0029  00A8               	movwf	I2C_Master_Init@c+3
   718  002A  3001               	movlw	1
   719  002B  00A7               	movwf	I2C_Master_Init@c+2
   720  002C  3086               	movlw	134
   721  002D  00A6               	movwf	I2C_Master_Init@c+1
   722  002E  30A0               	movlw	160
   723  002F  00A5               	movwf	I2C_Master_Init@c
   724  0030  120A  118A  220B  120A  118A  	fcall	_I2C_Master_Init
   725  0035                     l1213:
   726                           
   727                           ;MAESTRO.c: 72:     PORTA = 0x00;
   728  0035  1283               	bcf	3,5	;RP0=0, select bank0
   729  0036  1303               	bcf	3,6	;RP1=0, select bank0
   730  0037  0185               	clrf	5	;volatile
   731  0038                     l1215:
   732                           
   733                           ;MAESTRO.c: 73:     PORTB = 0x00;
   734  0038  0186               	clrf	6	;volatile
   735  0039                     l1217:
   736                           
   737                           ;MAESTRO.c: 74:     PORTC = 0x00;
   738  0039  0187               	clrf	7	;volatile
   739  003A                     l1219:
   740                           
   741                           ;MAESTRO.c: 75:     PORTD = 0x00;
   742  003A  0188               	clrf	8	;volatile
   743  003B                     l1221:
   744                           
   745                           ;MAESTRO.c: 76:     PORTE = 0x00;
   746  003B  0189               	clrf	9	;volatile
   747  003C                     l1223:
   748                           
   749                           ;MAESTRO.c: 81:         I2C_Master_Start();
   750  003C  120A  118A  230B  120A  118A  	fcall	_I2C_Master_Start
   751  0041                     l1225:
   752                           
   753                           ;MAESTRO.c: 82:         I2C_Master_Write(0x50);
   754  0041  3050               	movlw	80
   755  0042  120A  118A  22F7  120A  118A  	fcall	_I2C_Master_Write
   756  0047                     l1227:
   757                           
   758                           ;MAESTRO.c: 83:         I2C_Master_Write(PORTB);
   759  0047  1283               	bcf	3,5	;RP0=0, select bank0
   760  0048  1303               	bcf	3,6	;RP1=0, select bank0
   761  0049  0806               	movf	6,w	;volatile
   762  004A  120A  118A  22F7  120A  118A  	fcall	_I2C_Master_Write
   763  004F                     l1229:
   764                           
   765                           ;MAESTRO.c: 84:         I2C_Master_Stop();
   766  004F  120A  118A  2302  120A  118A  	fcall	_I2C_Master_Stop
   767  0054                     l1231:
   768                           
   769                           ;MAESTRO.c: 85:         _delay((unsigned long)((200)*(8000000/4000.0)));
   770  0054  3003               	movlw	3
   771  0055  1283               	bcf	3,5	;RP0=0, select bank0
   772  0056  1303               	bcf	3,6	;RP1=0, select bank0
   773  0057  00AF               	movwf	??_main+2
   774  0058  3008               	movlw	8
   775  0059  00AE               	movwf	??_main+1
   776  005A  3076               	movlw	118
   777  005B  00AD               	movwf	??_main
   778  005C                     u427:
   779  005C  0BAD               	decfsz	??_main,f
   780  005D  285C               	goto	u427
   781  005E  0BAE               	decfsz	??_main+1,f
   782  005F  285C               	goto	u427
   783  0060  0BAF               	decfsz	??_main+2,f
   784  0061  285C               	goto	u427
   785  0062  0000               	nop
   786  0063                     l1233:
   787                           
   788                           ;MAESTRO.c: 87:         I2C_Master_Start();
   789  0063  120A  118A  230B  120A  118A  	fcall	_I2C_Master_Start
   790  0068                     l1235:
   791                           
   792                           ;MAESTRO.c: 88:         I2C_Master_Write(0x51);
   793  0068  3051               	movlw	81
   794  0069  120A  118A  22F7  120A  118A  	fcall	_I2C_Master_Write
   795  006E                     l1237:
   796                           
   797                           ;MAESTRO.c: 89:         PORTA = I2C_Master_Read(0);
   798  006E  3000               	movlw	0
   799  006F  120A  118A  2243  120A  118A  	fcall	_I2C_Master_Read
   800  0074  1283               	bcf	3,5	;RP0=0, select bank0
   801  0075  1303               	bcf	3,6	;RP1=0, select bank0
   802  0076  0085               	movwf	5	;volatile
   803  0077                     l1239:
   804                           
   805                           ;MAESTRO.c: 90:         I2C_Master_Stop();
   806  0077  120A  118A  2302  120A  118A  	fcall	_I2C_Master_Stop
   807  007C                     l1241:
   808                           
   809                           ;MAESTRO.c: 91:         _delay((unsigned long)((200)*(8000000/4000.0)));
   810  007C  3003               	movlw	3
   811  007D  1283               	bcf	3,5	;RP0=0, select bank0
   812  007E  1303               	bcf	3,6	;RP1=0, select bank0
   813  007F  00AF               	movwf	??_main+2
   814  0080  3008               	movlw	8
   815  0081  00AE               	movwf	??_main+1
   816  0082  3076               	movlw	118
   817  0083  00AD               	movwf	??_main
   818  0084                     u437:
   819  0084  0BAD               	decfsz	??_main,f
   820  0085  2884               	goto	u437
   821  0086  0BAE               	decfsz	??_main+1,f
   822  0087  2884               	goto	u437
   823  0088  0BAF               	decfsz	??_main+2,f
   824  0089  2884               	goto	u437
   825  008A  0000               	nop
   826                           
   827                           ;MAESTRO.c: 92:         PORTB++;
   828  008B  3001               	movlw	1
   829  008C  1283               	bcf	3,5	;RP0=0, select bank0
   830  008D  1303               	bcf	3,6	;RP1=0, select bank0
   831  008E  00AD               	movwf	??_main
   832  008F  082D               	movf	??_main,w
   833  0090  0786               	addwf	6,f	;volatile
   834  0091                     l1243:
   835                           
   836                           ;MAESTRO.c: 94:         Lcd_Set_Cursor(1,1);
   837  0091  01F6               	clrf	Lcd_Set_Cursor@b
   838  0092  0AF6               	incf	Lcd_Set_Cursor@b,f
   839  0093  3001               	movlw	1
   840  0094  120A  118A  217A  120A  118A  	fcall	_Lcd_Set_Cursor
   841  0099                     l1245:
   842                           
   843                           ;MAESTRO.c: 95:         Lcd_Write_String("LCD Library for");
   844  0099  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   845  009A  120A  118A  226B  120A  118A  	fcall	_Lcd_Write_String
   846  009F                     l1247:
   847                           
   848                           ;MAESTRO.c: 96:         Lcd_Set_Cursor(2,2);
   849  009F  3002               	movlw	2
   850  00A0  1283               	bcf	3,5	;RP0=0, select bank0
   851  00A1  1303               	bcf	3,6	;RP1=0, select bank0
   852  00A2  00AD               	movwf	??_main
   853  00A3  082D               	movf	??_main,w
   854  00A4  00F6               	movwf	Lcd_Set_Cursor@b
   855  00A5  3002               	movlw	2
   856  00A6  120A  118A  217A  120A  118A  	fcall	_Lcd_Set_Cursor
   857  00AB                     l1249:
   858                           
   859                           ;MAESTRO.c: 97:         Lcd_Write_String("ok aaaa");
   860  00AB  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   861  00AC  120A  118A  226B  120A  118A  	fcall	_Lcd_Write_String
   862  00B1  283C               	goto	l1223
   863  00B2  120A  118A  280C   	ljmp	start
   864  00B5                     __end_of_main:
   865                           
   866                           	psect	text1
   867  026B                     __ptext1:	
   868 ;; *************** function _Lcd_Write_String *****************
   869 ;; Defined at:
   870 ;;		line 179 in file "LCD_16_2.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;  a               1    wreg     PTR unsigned char 
   873 ;;		 -> STR_2(8), STR_1(16), 
   874 ;; Auto vars:     Size  Location     Type
   875 ;;  a               1    9[COMMON] PTR unsigned char 
   876 ;;		 -> STR_2(8), STR_1(16), 
   877 ;;  i               2    7[COMMON] int 
   878 ;; Return value:  Size  Location     Type
   879 ;;                  1    wreg      void 
   880 ;; Registers used:
   881 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   887 ;;      Params:         0       0       0       0       0
   888 ;;      Locals:         3       0       0       0       0
   889 ;;      Temps:          0       0       0       0       0
   890 ;;      Totals:         3       0       0       0       0
   891 ;;Total ram usage:        3 bytes
   892 ;; Hardware stack levels used:    1
   893 ;; Hardware stack levels required when called:    3
   894 ;; This function calls:
   895 ;;		_Lcd_Write_Char
   896 ;; This function is called by:
   897 ;;		_main
   898 ;; This function uses a non-reentrant model
   899 ;;
   900                           
   901                           
   902                           ;psect for function _Lcd_Write_String
   903  026B                     _Lcd_Write_String:
   904                           
   905                           ;incstack = 0
   906                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   907                           ;Lcd_Write_String@a stored from wreg
   908  026B  00F9               	movwf	Lcd_Write_String@a
   909  026C                     l1195:
   910                           
   911                           ;LCD_16_2.c: 180:     int i;;LCD_16_2.c: 181:     for (i = 0; a[i] != '\0'; i++)
   912  026C  01F7               	clrf	Lcd_Write_String@i
   913  026D  01F8               	clrf	Lcd_Write_String@i+1
   914  026E  2A82               	goto	l1201
   915  026F                     l1197:
   916                           
   917                           ;LCD_16_2.c: 182:         Lcd_Write_Char(a[i]);
   918  026F  0877               	movf	Lcd_Write_String@i,w
   919  0270  0779               	addwf	Lcd_Write_String@a,w
   920  0271  0084               	movwf	4
   921  0272  120A  118A  22B2  120A  118A  	fcall	stringdir
   922  0277  120A  118A  21D2  120A  118A  	fcall	_Lcd_Write_Char
   923  027C                     l1199:
   924  027C  3001               	movlw	1
   925  027D  07F7               	addwf	Lcd_Write_String@i,f
   926  027E  1803               	skipnc
   927  027F  0AF8               	incf	Lcd_Write_String@i+1,f
   928  0280  3000               	movlw	0
   929  0281  07F8               	addwf	Lcd_Write_String@i+1,f
   930  0282                     l1201:
   931  0282  0877               	movf	Lcd_Write_String@i,w
   932  0283  0779               	addwf	Lcd_Write_String@a,w
   933  0284  0084               	movwf	4
   934  0285  120A  118A  22B2  120A  118A  	fcall	stringdir
   935  028A  3A00               	xorlw	0
   936  028B  1D03               	skipz
   937  028C  2A8E               	goto	u411
   938  028D  2A8F               	goto	u410
   939  028E                     u411:
   940  028E  2A6F               	goto	l1197
   941  028F                     u410:
   942  028F                     l126:
   943  028F  0008               	return
   944  0290                     __end_of_Lcd_Write_String:
   945                           
   946                           	psect	text2
   947  01D2                     __ptext2:	
   948 ;; *************** function _Lcd_Write_Char *****************
   949 ;; Defined at:
   950 ;;		line 164 in file "LCD_16_2.c"
   951 ;; Parameters:    Size  Location     Type
   952 ;;  a               1    wreg     unsigned char 
   953 ;; Auto vars:     Size  Location     Type
   954 ;;  a               1    6[COMMON] unsigned char 
   955 ;;  y               1    5[COMMON] unsigned char 
   956 ;;  temp            1    4[COMMON] unsigned char 
   957 ;; Return value:  Size  Location     Type
   958 ;;                  1    wreg      void 
   959 ;; Registers used:
   960 ;;		wreg, status,2, status,0, pclath, cstack
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   966 ;;      Params:         0       0       0       0       0
   967 ;;      Locals:         3       0       0       0       0
   968 ;;      Temps:          1       0       0       0       0
   969 ;;      Totals:         4       0       0       0       0
   970 ;;Total ram usage:        4 bytes
   971 ;; Hardware stack levels used:    1
   972 ;; Hardware stack levels required when called:    2
   973 ;; This function calls:
   974 ;;		_Lcd_Port
   975 ;; This function is called by:
   976 ;;		_Lcd_Write_String
   977 ;; This function uses a non-reentrant model
   978 ;;
   979                           
   980                           
   981                           ;psect for function _Lcd_Write_Char
   982  01D2                     _Lcd_Write_Char:
   983                           
   984                           ;incstack = 0
   985                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   986                           ;Lcd_Write_Char@a stored from wreg
   987  01D2  00F6               	movwf	Lcd_Write_Char@a
   988  01D3                     l1109:
   989                           
   990                           ;LCD_16_2.c: 165:     char temp, y;;LCD_16_2.c: 166:     temp = a & 0x0F;
   991  01D3  0876               	movf	Lcd_Write_Char@a,w
   992  01D4  390F               	andlw	15
   993  01D5  00F3               	movwf	??_Lcd_Write_Char
   994  01D6  0873               	movf	??_Lcd_Write_Char,w
   995  01D7  00F4               	movwf	Lcd_Write_Char@temp
   996                           
   997                           ;LCD_16_2.c: 167:     y = a & 0xF0;
   998  01D8  0876               	movf	Lcd_Write_Char@a,w
   999  01D9  39F0               	andlw	240
  1000  01DA  00F3               	movwf	??_Lcd_Write_Char
  1001  01DB  0873               	movf	??_Lcd_Write_Char,w
  1002  01DC  00F5               	movwf	Lcd_Write_Char@y
  1003  01DD                     l1111:
  1004                           
  1005                           ;LCD_16_2.c: 168:     PORTDbits.RD2 = 1;
  1006  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  1007  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  1008  01DF  1508               	bsf	8,2	;volatile
  1009  01E0                     l1113:
  1010                           
  1011                           ;LCD_16_2.c: 169:     Lcd_Port(y >> 4);
  1012  01E0  0875               	movf	Lcd_Write_Char@y,w
  1013  01E1  00F3               	movwf	??_Lcd_Write_Char
  1014  01E2  3004               	movlw	4
  1015  01E3                     u285:
  1016  01E3  1003               	clrc
  1017  01E4  0CF3               	rrf	??_Lcd_Write_Char,f
  1018  01E5  3EFF               	addlw	-1
  1019  01E6  1D03               	skipz
  1020  01E7  29E3               	goto	u285
  1021  01E8  0873               	movf	??_Lcd_Write_Char,w
  1022  01E9  120A  118A  2290  120A  118A  	fcall	_Lcd_Port
  1023  01EE                     l1115:
  1024                           
  1025                           ;LCD_16_2.c: 170:     RD3 = 1;
  1026  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  1027  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  1028  01F0  1588               	bsf	8,3	;volatile
  1029  01F1                     l1117:
  1030                           
  1031                           ;LCD_16_2.c: 171:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1032  01F1  301A               	movlw	26
  1033  01F2  00F3               	movwf	??_Lcd_Write_Char
  1034  01F3                     u447:
  1035  01F3  0BF3               	decfsz	??_Lcd_Write_Char,f
  1036  01F4  29F3               	goto	u447
  1037  01F5  0000               	nop
  1038  01F6                     l1119:
  1039                           
  1040                           ;LCD_16_2.c: 172:     RD3 = 0;
  1041  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  1042  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  1043  01F8  1188               	bcf	8,3	;volatile
  1044  01F9                     l1121:
  1045                           
  1046                           ;LCD_16_2.c: 173:     Lcd_Port(temp);
  1047  01F9  0874               	movf	Lcd_Write_Char@temp,w
  1048  01FA  120A  118A  2290  120A  118A  	fcall	_Lcd_Port
  1049  01FF                     l1123:
  1050                           
  1051                           ;LCD_16_2.c: 174:     RD3 = 1;
  1052  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  1053  0200  1303               	bcf	3,6	;RP1=0, select bank0
  1054  0201  1588               	bsf	8,3	;volatile
  1055  0202                     l1125:
  1056                           
  1057                           ;LCD_16_2.c: 175:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1058  0202  301A               	movlw	26
  1059  0203  00F3               	movwf	??_Lcd_Write_Char
  1060  0204                     u457:
  1061  0204  0BF3               	decfsz	??_Lcd_Write_Char,f
  1062  0205  2A04               	goto	u457
  1063  0206  0000               	nop
  1064  0207                     l1127:
  1065                           
  1066                           ;LCD_16_2.c: 176:     RD3 = 0;
  1067  0207  1283               	bcf	3,5	;RP0=0, select bank0
  1068  0208  1303               	bcf	3,6	;RP1=0, select bank0
  1069  0209  1188               	bcf	8,3	;volatile
  1070  020A                     l120:
  1071  020A  0008               	return
  1072  020B                     __end_of_Lcd_Write_Char:
  1073                           
  1074                           	psect	text3
  1075  017A                     __ptext3:	
  1076 ;; *************** function _Lcd_Set_Cursor *****************
  1077 ;; Defined at:
  1078 ;;		line 129 in file "LCD_16_2.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;  a               1    wreg     unsigned char 
  1081 ;;  b               1    6[COMMON] unsigned char 
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;  a               1    0[BANK0 ] unsigned char 
  1084 ;;  temp            1    3[BANK0 ] unsigned char 
  1085 ;;  y               1    2[BANK0 ] unsigned char 
  1086 ;;  z               1    1[BANK0 ] unsigned char 
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  1    wreg      void 
  1089 ;; Registers used:
  1090 ;;		wreg, status,2, status,0, pclath, cstack
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1096 ;;      Params:         1       0       0       0       0
  1097 ;;      Locals:         0       4       0       0       0
  1098 ;;      Temps:          2       0       0       0       0
  1099 ;;      Totals:         3       4       0       0       0
  1100 ;;Total ram usage:        7 bytes
  1101 ;; Hardware stack levels used:    1
  1102 ;; Hardware stack levels required when called:    3
  1103 ;; This function calls:
  1104 ;;		_Lcd_Cmd
  1105 ;; This function is called by:
  1106 ;;		_main
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110                           
  1111                           ;psect for function _Lcd_Set_Cursor
  1112  017A                     _Lcd_Set_Cursor:
  1113                           
  1114                           ;incstack = 0
  1115                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1116                           ;Lcd_Set_Cursor@a stored from wreg
  1117  017A  1283               	bcf	3,5	;RP0=0, select bank0
  1118  017B  1303               	bcf	3,6	;RP1=0, select bank0
  1119  017C  00A0               	movwf	Lcd_Set_Cursor@a
  1120  017D                     l1175:
  1121                           
  1122                           ;LCD_16_2.c: 130:     char temp, z, y;;LCD_16_2.c: 131:     if (a == 1) {
  1123  017D  0320               	decf	Lcd_Set_Cursor@a,w
  1124  017E  1D03               	btfss	3,2
  1125  017F  2981               	goto	u371
  1126  0180  2982               	goto	u370
  1127  0181                     u371:
  1128  0181  29A7               	goto	l1185
  1129  0182                     u370:
  1130  0182                     l1177:
  1131                           
  1132                           ;LCD_16_2.c: 132:         temp = 0x80 + b - 1;
  1133  0182  0876               	movf	Lcd_Set_Cursor@b,w
  1134  0183  3E7F               	addlw	127
  1135  0184  00F7               	movwf	??_Lcd_Set_Cursor
  1136  0185  0877               	movf	??_Lcd_Set_Cursor,w
  1137  0186  00A3               	movwf	Lcd_Set_Cursor@temp
  1138                           
  1139                           ;LCD_16_2.c: 133:         z = temp >> 4;
  1140  0187  0823               	movf	Lcd_Set_Cursor@temp,w
  1141  0188  00F7               	movwf	??_Lcd_Set_Cursor
  1142  0189  3004               	movlw	4
  1143  018A                     u385:
  1144  018A  1003               	clrc
  1145  018B  0CF7               	rrf	??_Lcd_Set_Cursor,f
  1146  018C  3EFF               	addlw	-1
  1147  018D  1D03               	skipz
  1148  018E  298A               	goto	u385
  1149  018F  0877               	movf	??_Lcd_Set_Cursor,w
  1150  0190  00F8               	movwf	??_Lcd_Set_Cursor+1
  1151  0191  0878               	movf	??_Lcd_Set_Cursor+1,w
  1152  0192  00A1               	movwf	Lcd_Set_Cursor@z
  1153  0193                     l1179:
  1154                           
  1155                           ;LCD_16_2.c: 134:         y = temp & 0x0F;
  1156  0193  0823               	movf	Lcd_Set_Cursor@temp,w
  1157  0194  390F               	andlw	15
  1158  0195  00F7               	movwf	??_Lcd_Set_Cursor
  1159  0196  0877               	movf	??_Lcd_Set_Cursor,w
  1160  0197  00A2               	movwf	Lcd_Set_Cursor@y
  1161  0198                     l1181:
  1162                           
  1163                           ;LCD_16_2.c: 135:         Lcd_Cmd(z);
  1164  0198  0821               	movf	Lcd_Set_Cursor@z,w
  1165  0199  120A  118A  22D0  120A  118A  	fcall	_Lcd_Cmd
  1166  019E                     l1183:
  1167                           
  1168                           ;LCD_16_2.c: 136:         Lcd_Cmd(y);
  1169  019E  1283               	bcf	3,5	;RP0=0, select bank0
  1170  019F  1303               	bcf	3,6	;RP1=0, select bank0
  1171  01A0  0822               	movf	Lcd_Set_Cursor@y,w
  1172  01A1  120A  118A  22D0  120A  118A  	fcall	_Lcd_Cmd
  1173                           
  1174                           ;LCD_16_2.c: 137:     } else if (a == 2) {
  1175  01A6  29D1               	goto	l114
  1176  01A7                     l1185:
  1177  01A7  3002               	movlw	2
  1178  01A8  0620               	xorwf	Lcd_Set_Cursor@a,w
  1179  01A9  1D03               	btfss	3,2
  1180  01AA  29AC               	goto	u391
  1181  01AB  29AD               	goto	u390
  1182  01AC                     u391:
  1183  01AC  29D1               	goto	l114
  1184  01AD                     u390:
  1185  01AD                     l1187:
  1186                           
  1187                           ;LCD_16_2.c: 138:         temp = 0xC0 + b - 1;
  1188  01AD  0876               	movf	Lcd_Set_Cursor@b,w
  1189  01AE  3EBF               	addlw	191
  1190  01AF  00F7               	movwf	??_Lcd_Set_Cursor
  1191  01B0  0877               	movf	??_Lcd_Set_Cursor,w
  1192  01B1  00A3               	movwf	Lcd_Set_Cursor@temp
  1193                           
  1194                           ;LCD_16_2.c: 139:         z = temp >> 4;
  1195  01B2  0823               	movf	Lcd_Set_Cursor@temp,w
  1196  01B3  00F7               	movwf	??_Lcd_Set_Cursor
  1197  01B4  3004               	movlw	4
  1198  01B5                     u405:
  1199  01B5  1003               	clrc
  1200  01B6  0CF7               	rrf	??_Lcd_Set_Cursor,f
  1201  01B7  3EFF               	addlw	-1
  1202  01B8  1D03               	skipz
  1203  01B9  29B5               	goto	u405
  1204  01BA  0877               	movf	??_Lcd_Set_Cursor,w
  1205  01BB  00F8               	movwf	??_Lcd_Set_Cursor+1
  1206  01BC  0878               	movf	??_Lcd_Set_Cursor+1,w
  1207  01BD  00A1               	movwf	Lcd_Set_Cursor@z
  1208  01BE                     l1189:
  1209                           
  1210                           ;LCD_16_2.c: 140:         y = temp & 0x0F;
  1211  01BE  0823               	movf	Lcd_Set_Cursor@temp,w
  1212  01BF  390F               	andlw	15
  1213  01C0  00F7               	movwf	??_Lcd_Set_Cursor
  1214  01C1  0877               	movf	??_Lcd_Set_Cursor,w
  1215  01C2  00A2               	movwf	Lcd_Set_Cursor@y
  1216  01C3                     l1191:
  1217                           
  1218                           ;LCD_16_2.c: 141:         Lcd_Cmd(z);
  1219  01C3  0821               	movf	Lcd_Set_Cursor@z,w
  1220  01C4  120A  118A  22D0  120A  118A  	fcall	_Lcd_Cmd
  1221  01C9                     l1193:
  1222                           
  1223                           ;LCD_16_2.c: 142:         Lcd_Cmd(y);
  1224  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  1225  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  1226  01CB  0822               	movf	Lcd_Set_Cursor@y,w
  1227  01CC  120A  118A  22D0  120A  118A  	fcall	_Lcd_Cmd
  1228  01D1                     l114:
  1229  01D1  0008               	return
  1230  01D2                     __end_of_Lcd_Set_Cursor:
  1231                           
  1232                           	psect	text4
  1233  011D                     __ptext4:	
  1234 ;; *************** function _Lcd_Init *****************
  1235 ;; Defined at:
  1236 ;;		line 146 in file "LCD_16_2.c"
  1237 ;; Parameters:    Size  Location     Type
  1238 ;;		None
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;		None
  1241 ;; Return value:  Size  Location     Type
  1242 ;;                  1    wreg      void 
  1243 ;; Registers used:
  1244 ;;		wreg, status,2, status,0, pclath, cstack
  1245 ;; Tracked objects:
  1246 ;;		On entry : 0/0
  1247 ;;		On exit  : 0/0
  1248 ;;		Unchanged: 0/0
  1249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1250 ;;      Params:         0       0       0       0       0
  1251 ;;      Locals:         0       0       0       0       0
  1252 ;;      Temps:          2       0       0       0       0
  1253 ;;      Totals:         2       0       0       0       0
  1254 ;;Total ram usage:        2 bytes
  1255 ;; Hardware stack levels used:    1
  1256 ;; Hardware stack levels required when called:    3
  1257 ;; This function calls:
  1258 ;;		_Lcd_Cmd
  1259 ;;		_Lcd_Port
  1260 ;; This function is called by:
  1261 ;;		_main
  1262 ;; This function uses a non-reentrant model
  1263 ;;
  1264                           
  1265                           
  1266                           ;psect for function _Lcd_Init
  1267  011D                     _Lcd_Init:
  1268  011D                     l1153:	
  1269                           ;incstack = 0
  1270                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1271                           
  1272                           
  1273                           ;LCD_16_2.c: 147:     Lcd_Port(0x00);
  1274  011D  3000               	movlw	0
  1275  011E  120A  118A  2290  120A  118A  	fcall	_Lcd_Port
  1276  0123                     l1155:
  1277                           
  1278                           ;LCD_16_2.c: 148:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1279  0123  3034               	movlw	52
  1280  0124  00F7               	movwf	??_Lcd_Init+1
  1281  0125  30F1               	movlw	241
  1282  0126  00F6               	movwf	??_Lcd_Init
  1283  0127                     u467:
  1284  0127  0BF6               	decfsz	??_Lcd_Init,f
  1285  0128  2927               	goto	u467
  1286  0129  0BF7               	decfsz	??_Lcd_Init+1,f
  1287  012A  2927               	goto	u467
  1288  012B  292C               	nop2
  1289  012C                     l1157:
  1290                           
  1291                           ;LCD_16_2.c: 149:     Lcd_Cmd(0x03);
  1292  012C  3003               	movlw	3
  1293  012D  120A  118A  22D0  120A  118A  	fcall	_Lcd_Cmd
  1294                           
  1295                           ;LCD_16_2.c: 150:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1296  0132  300D               	movlw	13
  1297  0133  00F7               	movwf	??_Lcd_Init+1
  1298  0134  30FB               	movlw	251
  1299  0135  00F6               	movwf	??_Lcd_Init
  1300  0136                     u477:
  1301  0136  0BF6               	decfsz	??_Lcd_Init,f
  1302  0137  2936               	goto	u477
  1303  0138  0BF7               	decfsz	??_Lcd_Init+1,f
  1304  0139  2936               	goto	u477
  1305  013A  293B               	nop2
  1306  013B                     l1159:
  1307                           
  1308                           ;LCD_16_2.c: 151:     Lcd_Cmd(0x03);
  1309  013B  3003               	movlw	3
  1310  013C  120A  118A  22D0  120A  118A  	fcall	_Lcd_Cmd
  1311  0141                     l1161:
  1312                           
  1313                           ;LCD_16_2.c: 152:     _delay((unsigned long)((11)*(8000000/4000.0)));
  1314  0141  301D               	movlw	29
  1315  0142  00F7               	movwf	??_Lcd_Init+1
  1316  0143  3091               	movlw	145
  1317  0144  00F6               	movwf	??_Lcd_Init
  1318  0145                     u487:
  1319  0145  0BF6               	decfsz	??_Lcd_Init,f
  1320  0146  2945               	goto	u487
  1321  0147  0BF7               	decfsz	??_Lcd_Init+1,f
  1322  0148  2945               	goto	u487
  1323                           
  1324                           ;LCD_16_2.c: 153:     Lcd_Cmd(0x03);
  1325  0149  3003               	movlw	3
  1326  014A  120A  118A  22D0  120A  118A  	fcall	_Lcd_Cmd
  1327                           
  1328                           ;LCD_16_2.c: 155:     Lcd_Cmd(0x02);
  1329  014F  3002               	movlw	2
  1330  0150  120A  118A  22D0  120A  118A  	fcall	_Lcd_Cmd
  1331                           
  1332                           ;LCD_16_2.c: 156:     Lcd_Cmd(0x02);
  1333  0155  3002               	movlw	2
  1334  0156  120A  118A  22D0  120A  118A  	fcall	_Lcd_Cmd
  1335                           
  1336                           ;LCD_16_2.c: 157:     Lcd_Cmd(0x08);
  1337  015B  3008               	movlw	8
  1338  015C  120A  118A  22D0  120A  118A  	fcall	_Lcd_Cmd
  1339                           
  1340                           ;LCD_16_2.c: 158:     Lcd_Cmd(0x00);
  1341  0161  3000               	movlw	0
  1342  0162  120A  118A  22D0  120A  118A  	fcall	_Lcd_Cmd
  1343                           
  1344                           ;LCD_16_2.c: 159:     Lcd_Cmd(0x0C);
  1345  0167  300C               	movlw	12
  1346  0168  120A  118A  22D0  120A  118A  	fcall	_Lcd_Cmd
  1347                           
  1348                           ;LCD_16_2.c: 160:     Lcd_Cmd(0x00);
  1349  016D  3000               	movlw	0
  1350  016E  120A  118A  22D0  120A  118A  	fcall	_Lcd_Cmd
  1351                           
  1352                           ;LCD_16_2.c: 161:     Lcd_Cmd(0x06);
  1353  0173  3006               	movlw	6
  1354  0174  120A  118A  22D0  120A  118A  	fcall	_Lcd_Cmd
  1355  0179                     l117:
  1356  0179  0008               	return
  1357  017A                     __end_of_Lcd_Init:
  1358                           
  1359                           	psect	text5
  1360  02D0                     __ptext5:	
  1361 ;; *************** function _Lcd_Cmd *****************
  1362 ;; Defined at:
  1363 ;;		line 116 in file "LCD_16_2.c"
  1364 ;; Parameters:    Size  Location     Type
  1365 ;;  a               1    wreg     unsigned char 
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;  a               1    5[COMMON] unsigned char 
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  1    wreg      void 
  1370 ;; Registers used:
  1371 ;;		wreg, status,2, status,0, pclath, cstack
  1372 ;; Tracked objects:
  1373 ;;		On entry : 0/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1377 ;;      Params:         0       0       0       0       0
  1378 ;;      Locals:         1       0       0       0       0
  1379 ;;      Temps:          2       0       0       0       0
  1380 ;;      Totals:         3       0       0       0       0
  1381 ;;Total ram usage:        3 bytes
  1382 ;; Hardware stack levels used:    1
  1383 ;; Hardware stack levels required when called:    2
  1384 ;; This function calls:
  1385 ;;		_Lcd_Port
  1386 ;; This function is called by:
  1387 ;;		_Lcd_Set_Cursor
  1388 ;;		_Lcd_Init
  1389 ;;		_Lcd_Clear
  1390 ;;		_Lcd_Shift_Right
  1391 ;;		_Lcd_Shift_Left
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           
  1396                           ;psect for function _Lcd_Cmd
  1397  02D0                     _Lcd_Cmd:
  1398                           
  1399                           ;incstack = 0
  1400                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1401                           ;Lcd_Cmd@a stored from wreg
  1402  02D0  00F5               	movwf	Lcd_Cmd@a
  1403  02D1                     l1099:
  1404                           
  1405                           ;LCD_16_2.c: 117:     PORTDbits.RD2 = 0;
  1406  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  1407  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  1408  02D3  1108               	bcf	8,2	;volatile
  1409  02D4                     l1101:
  1410                           
  1411                           ;LCD_16_2.c: 118:     Lcd_Port(a);
  1412  02D4  0875               	movf	Lcd_Cmd@a,w
  1413  02D5  120A  118A  2290  120A  118A  	fcall	_Lcd_Port
  1414  02DA                     l1103:
  1415                           
  1416                           ;LCD_16_2.c: 119:     RD3 = 1;
  1417  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  1418  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  1419  02DC  1588               	bsf	8,3	;volatile
  1420  02DD                     l1105:
  1421                           
  1422                           ;LCD_16_2.c: 120:     _delay((unsigned long)((4)*(8000000/4000.0)));
  1423  02DD  300B               	movlw	11
  1424  02DE  00F4               	movwf	??_Lcd_Cmd+1
  1425  02DF  3062               	movlw	98
  1426  02E0  00F3               	movwf	??_Lcd_Cmd
  1427  02E1                     u497:
  1428  02E1  0BF3               	decfsz	??_Lcd_Cmd,f
  1429  02E2  2AE1               	goto	u497
  1430  02E3  0BF4               	decfsz	??_Lcd_Cmd+1,f
  1431  02E4  2AE1               	goto	u497
  1432  02E5  0000               	nop
  1433  02E6                     l1107:
  1434                           
  1435                           ;LCD_16_2.c: 121:     RD3 = 0;
  1436  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  1437  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  1438  02E8  1188               	bcf	8,3	;volatile
  1439  02E9                     l105:
  1440  02E9  0008               	return
  1441  02EA                     __end_of_Lcd_Cmd:
  1442                           
  1443                           	psect	text6
  1444  0290                     __ptext6:	
  1445 ;; *************** function _Lcd_Port *****************
  1446 ;; Defined at:
  1447 ;;		line 94 in file "LCD_16_2.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;  a               1    wreg     unsigned char 
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;  a               1    2[COMMON] unsigned char 
  1452 ;; Return value:  Size  Location     Type
  1453 ;;                  1    wreg      void 
  1454 ;; Registers used:
  1455 ;;		wreg
  1456 ;; Tracked objects:
  1457 ;;		On entry : 0/0
  1458 ;;		On exit  : 0/0
  1459 ;;		Unchanged: 0/0
  1460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1461 ;;      Params:         0       0       0       0       0
  1462 ;;      Locals:         1       0       0       0       0
  1463 ;;      Temps:          0       0       0       0       0
  1464 ;;      Totals:         1       0       0       0       0
  1465 ;;Total ram usage:        1 bytes
  1466 ;; Hardware stack levels used:    1
  1467 ;; Hardware stack levels required when called:    1
  1468 ;; This function calls:
  1469 ;;		Nothing
  1470 ;; This function is called by:
  1471 ;;		_Lcd_Cmd
  1472 ;;		_Lcd_Init
  1473 ;;		_Lcd_Write_Char
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           
  1478                           ;psect for function _Lcd_Port
  1479  0290                     _Lcd_Port:
  1480                           
  1481                           ;incstack = 0
  1482                           ; Regs used in _Lcd_Port: [wreg]
  1483                           ;Lcd_Port@a stored from wreg
  1484  0290  00F2               	movwf	Lcd_Port@a
  1485  0291                     l1089:
  1486                           
  1487                           ;LCD_16_2.c: 95:     if (a & 1)
  1488  0291  1C72               	btfss	Lcd_Port@a,0
  1489  0292  2A94               	goto	u241
  1490  0293  2A95               	goto	u240
  1491  0294                     u241:
  1492  0294  2A99               	goto	l94
  1493  0295                     u240:
  1494  0295                     l1091:
  1495                           
  1496                           ;LCD_16_2.c: 96:         PORTDbits.RD4 = 1;
  1497  0295  1283               	bcf	3,5	;RP0=0, select bank0
  1498  0296  1303               	bcf	3,6	;RP1=0, select bank0
  1499  0297  1608               	bsf	8,4	;volatile
  1500  0298  2A9C               	goto	l95
  1501  0299                     l94:	
  1502                           ;LCD_16_2.c: 97:     else
  1503                           
  1504                           
  1505                           ;LCD_16_2.c: 98:         PORTDbits.RD4 = 0;
  1506  0299  1283               	bcf	3,5	;RP0=0, select bank0
  1507  029A  1303               	bcf	3,6	;RP1=0, select bank0
  1508  029B  1208               	bcf	8,4	;volatile
  1509  029C                     l95:
  1510                           
  1511                           ;LCD_16_2.c: 100:     if (a & 2)
  1512  029C  1CF2               	btfss	Lcd_Port@a,1
  1513  029D  2A9F               	goto	u251
  1514  029E  2AA0               	goto	u250
  1515  029F                     u251:
  1516  029F  2AA2               	goto	l96
  1517  02A0                     u250:
  1518  02A0                     l1093:
  1519                           
  1520                           ;LCD_16_2.c: 101:         PORTDbits.RD5 = 1;
  1521  02A0  1688               	bsf	8,5	;volatile
  1522  02A1  2AA3               	goto	l97
  1523  02A2                     l96:	
  1524                           ;LCD_16_2.c: 102:     else
  1525                           
  1526                           
  1527                           ;LCD_16_2.c: 103:         PORTDbits.RD5 = 0;
  1528  02A2  1288               	bcf	8,5	;volatile
  1529  02A3                     l97:
  1530                           
  1531                           ;LCD_16_2.c: 105:     if (a & 4)
  1532  02A3  1D72               	btfss	Lcd_Port@a,2
  1533  02A4  2AA6               	goto	u261
  1534  02A5  2AA7               	goto	u260
  1535  02A6                     u261:
  1536  02A6  2AA9               	goto	l98
  1537  02A7                     u260:
  1538  02A7                     l1095:
  1539                           
  1540                           ;LCD_16_2.c: 106:         PORTDbits.RD6 = 1;
  1541  02A7  1708               	bsf	8,6	;volatile
  1542  02A8  2AAA               	goto	l99
  1543  02A9                     l98:	
  1544                           ;LCD_16_2.c: 107:     else
  1545                           
  1546                           
  1547                           ;LCD_16_2.c: 108:         PORTDbits.RD6 = 0;
  1548  02A9  1308               	bcf	8,6	;volatile
  1549  02AA                     l99:
  1550                           
  1551                           ;LCD_16_2.c: 110:     if (a & 8)
  1552  02AA  1DF2               	btfss	Lcd_Port@a,3
  1553  02AB  2AAD               	goto	u271
  1554  02AC  2AAE               	goto	u270
  1555  02AD                     u271:
  1556  02AD  2AB0               	goto	l100
  1557  02AE                     u270:
  1558  02AE                     l1097:
  1559                           
  1560                           ;LCD_16_2.c: 111:         PORTDbits.RD7 = 1;
  1561  02AE  1788               	bsf	8,7	;volatile
  1562  02AF  2AB1               	goto	l102
  1563  02B0                     l100:	
  1564                           ;LCD_16_2.c: 112:     else
  1565                           
  1566                           
  1567                           ;LCD_16_2.c: 113:         PORTDbits.RD7 = 0;
  1568  02B0  1388               	bcf	8,7	;volatile
  1569  02B1                     l102:
  1570  02B1  0008               	return
  1571  02B2                     __end_of_Lcd_Port:
  1572                           
  1573                           	psect	text7
  1574  02F7                     __ptext7:	
  1575 ;; *************** function _I2C_Master_Write *****************
  1576 ;; Defined at:
  1577 ;;		line 65 in file "I2C.c"
  1578 ;; Parameters:    Size  Location     Type
  1579 ;;  d               1    wreg     unsigned char 
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;  d               1    2[COMMON] unsigned char 
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  1    wreg      void 
  1584 ;; Registers used:
  1585 ;;		wreg, status,2, status,0, pclath, cstack
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1591 ;;      Params:         0       0       0       0       0
  1592 ;;      Locals:         1       0       0       0       0
  1593 ;;      Temps:          0       0       0       0       0
  1594 ;;      Totals:         1       0       0       0       0
  1595 ;;Total ram usage:        1 bytes
  1596 ;; Hardware stack levels used:    1
  1597 ;; Hardware stack levels required when called:    2
  1598 ;; This function calls:
  1599 ;;		_I2C_Master_Wait
  1600 ;; This function is called by:
  1601 ;;		_main
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605                           
  1606                           ;psect for function _I2C_Master_Write
  1607  02F7                     _I2C_Master_Write:
  1608                           
  1609                           ;incstack = 0
  1610                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1611                           ;I2C_Master_Write@d stored from wreg
  1612  02F7  00F2               	movwf	I2C_Master_Write@d
  1613  02F8                     l873:
  1614                           
  1615                           ;I2C.c: 65: void I2C_Master_Write(unsigned char d);I2C.c: 66: {;I2C.c: 67:     I2C_Maste
      +                          r_Wait();
  1616  02F8  120A  118A  22EA  120A  118A  	fcall	_I2C_Master_Wait
  1617  02FD                     l875:
  1618                           
  1619                           ;I2C.c: 68:     SSPBUF = d;
  1620  02FD  0872               	movf	I2C_Master_Write@d,w
  1621  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  1622  02FF  1303               	bcf	3,6	;RP1=0, select bank0
  1623  0300  0093               	movwf	19	;volatile
  1624  0301                     l179:
  1625  0301  0008               	return
  1626  0302                     __end_of_I2C_Master_Write:
  1627                           
  1628                           	psect	text8
  1629  0302                     __ptext8:	
  1630 ;; *************** function _I2C_Master_Stop *****************
  1631 ;; Defined at:
  1632 ;;		line 55 in file "I2C.c"
  1633 ;; Parameters:    Size  Location     Type
  1634 ;;		None
  1635 ;; Auto vars:     Size  Location     Type
  1636 ;;		None
  1637 ;; Return value:  Size  Location     Type
  1638 ;;                  1    wreg      void 
  1639 ;; Registers used:
  1640 ;;		wreg, status,2, status,0, pclath, cstack
  1641 ;; Tracked objects:
  1642 ;;		On entry : 0/0
  1643 ;;		On exit  : 0/0
  1644 ;;		Unchanged: 0/0
  1645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1646 ;;      Params:         0       0       0       0       0
  1647 ;;      Locals:         0       0       0       0       0
  1648 ;;      Temps:          0       0       0       0       0
  1649 ;;      Totals:         0       0       0       0       0
  1650 ;;Total ram usage:        0 bytes
  1651 ;; Hardware stack levels used:    1
  1652 ;; Hardware stack levels required when called:    2
  1653 ;; This function calls:
  1654 ;;		_I2C_Master_Wait
  1655 ;; This function is called by:
  1656 ;;		_main
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660                           
  1661                           ;psect for function _I2C_Master_Stop
  1662  0302                     _I2C_Master_Stop:
  1663  0302                     l877:	
  1664                           ;incstack = 0
  1665                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  1666                           
  1667                           
  1668                           ;I2C.c: 57:     I2C_Master_Wait();
  1669  0302  120A  118A  22EA  120A  118A  	fcall	_I2C_Master_Wait
  1670  0307                     l879:
  1671                           
  1672                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  1673  0307  1683               	bsf	3,5	;RP0=1, select bank1
  1674  0308  1303               	bcf	3,6	;RP1=0, select bank1
  1675  0309  1511               	bsf	17,2	;volatile
  1676  030A                     l176:
  1677  030A  0008               	return
  1678  030B                     __end_of_I2C_Master_Stop:
  1679                           
  1680                           	psect	text9
  1681  030B                     __ptext9:	
  1682 ;; *************** function _I2C_Master_Start *****************
  1683 ;; Defined at:
  1684 ;;		line 39 in file "I2C.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;		None
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;		None
  1689 ;; Return value:  Size  Location     Type
  1690 ;;                  1    wreg      void 
  1691 ;; Registers used:
  1692 ;;		wreg, status,2, status,0, pclath, cstack
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1698 ;;      Params:         0       0       0       0       0
  1699 ;;      Locals:         0       0       0       0       0
  1700 ;;      Temps:          0       0       0       0       0
  1701 ;;      Totals:         0       0       0       0       0
  1702 ;;Total ram usage:        0 bytes
  1703 ;; Hardware stack levels used:    1
  1704 ;; Hardware stack levels required when called:    2
  1705 ;; This function calls:
  1706 ;;		_I2C_Master_Wait
  1707 ;; This function is called by:
  1708 ;;		_main
  1709 ;; This function uses a non-reentrant model
  1710 ;;
  1711                           
  1712                           
  1713                           ;psect for function _I2C_Master_Start
  1714  030B                     _I2C_Master_Start:
  1715  030B                     l869:	
  1716                           ;incstack = 0
  1717                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  1718                           
  1719                           
  1720                           ;I2C.c: 41:     I2C_Master_Wait();
  1721  030B  120A  118A  22EA  120A  118A  	fcall	_I2C_Master_Wait
  1722  0310                     l871:
  1723                           
  1724                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  1725  0310  1683               	bsf	3,5	;RP0=1, select bank1
  1726  0311  1303               	bcf	3,6	;RP1=0, select bank1
  1727  0312  1411               	bsf	17,0	;volatile
  1728  0313                     l170:
  1729  0313  0008               	return
  1730  0314                     __end_of_I2C_Master_Start:
  1731                           
  1732                           	psect	text10
  1733  0243                     __ptext10:	
  1734 ;; *************** function _I2C_Master_Read *****************
  1735 ;; Defined at:
  1736 ;;		line 74 in file "I2C.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;  a               1    wreg     unsigned char 
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;  a               1    3[COMMON] unsigned char 
  1741 ;;  temp            1    4[COMMON] unsigned char 
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  1    wreg      unsigned char 
  1744 ;; Registers used:
  1745 ;;		wreg, status,2, status,0, pclath, cstack
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1751 ;;      Params:         0       0       0       0       0
  1752 ;;      Locals:         2       0       0       0       0
  1753 ;;      Temps:          1       0       0       0       0
  1754 ;;      Totals:         3       0       0       0       0
  1755 ;;Total ram usage:        3 bytes
  1756 ;; Hardware stack levels used:    1
  1757 ;; Hardware stack levels required when called:    2
  1758 ;; This function calls:
  1759 ;;		_I2C_Master_Wait
  1760 ;; This function is called by:
  1761 ;;		_main
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           
  1766                           ;psect for function _I2C_Master_Read
  1767  0243                     _I2C_Master_Read:
  1768                           
  1769                           ;incstack = 0
  1770                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  1771                           ;I2C_Master_Read@a stored from wreg
  1772  0243  00F3               	movwf	I2C_Master_Read@a
  1773  0244                     l881:
  1774                           
  1775                           ;I2C.c: 74: unsigned char I2C_Master_Read(unsigned char a);I2C.c: 75: {;I2C.c: 76:     u
      +                          nsigned char temp;;I2C.c: 77:     I2C_Master_Wait();
  1776  0244  120A  118A  22EA  120A  118A  	fcall	_I2C_Master_Wait
  1777  0249                     l883:
  1778                           
  1779                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  1780  0249  1683               	bsf	3,5	;RP0=1, select bank1
  1781  024A  1303               	bcf	3,6	;RP1=0, select bank1
  1782  024B  1591               	bsf	17,3	;volatile
  1783                           
  1784                           ;I2C.c: 79:     I2C_Master_Wait();
  1785  024C  120A  118A  22EA  120A  118A  	fcall	_I2C_Master_Wait
  1786  0251                     l885:
  1787                           
  1788                           ;I2C.c: 80:     temp = SSPBUF;
  1789  0251  1283               	bcf	3,5	;RP0=0, select bank0
  1790  0252  1303               	bcf	3,6	;RP1=0, select bank0
  1791  0253  0813               	movf	19,w	;volatile
  1792  0254  00F2               	movwf	??_I2C_Master_Read
  1793  0255  0872               	movf	??_I2C_Master_Read,w
  1794  0256  00F4               	movwf	I2C_Master_Read@temp
  1795  0257                     l887:
  1796                           
  1797                           ;I2C.c: 81:     I2C_Master_Wait();
  1798  0257  120A  118A  22EA  120A  118A  	fcall	_I2C_Master_Wait
  1799  025C                     l889:
  1800                           
  1801                           ;I2C.c: 82:     if(a == 1){
  1802  025C  0373               	decf	I2C_Master_Read@a,w
  1803  025D  1D03               	btfss	3,2
  1804  025E  2A60               	goto	u161
  1805  025F  2A61               	goto	u160
  1806  0260                     u161:
  1807  0260  2A65               	goto	l182
  1808  0261                     u160:
  1809  0261                     l891:
  1810                           
  1811                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  1812  0261  1683               	bsf	3,5	;RP0=1, select bank1
  1813  0262  1303               	bcf	3,6	;RP1=0, select bank1
  1814  0263  1291               	bcf	17,5	;volatile
  1815                           
  1816                           ;I2C.c: 84:     }else{
  1817  0264  2A68               	goto	l183
  1818  0265                     l182:
  1819                           
  1820                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  1821  0265  1683               	bsf	3,5	;RP0=1, select bank1
  1822  0266  1303               	bcf	3,6	;RP1=0, select bank1
  1823  0267  1691               	bsf	17,5	;volatile
  1824  0268                     l183:	
  1825                           ;I2C.c: 86:     }
  1826                           
  1827                           
  1828                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  1829  0268  1611               	bsf	17,4	;volatile
  1830  0269                     l893:
  1831                           
  1832                           ;I2C.c: 88:     return temp;
  1833  0269  0874               	movf	I2C_Master_Read@temp,w
  1834  026A                     l184:
  1835  026A  0008               	return
  1836  026B                     __end_of_I2C_Master_Read:
  1837                           
  1838                           	psect	text11
  1839  02EA                     __ptext11:	
  1840 ;; *************** function _I2C_Master_Wait *****************
  1841 ;; Defined at:
  1842 ;;		line 32 in file "I2C.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;		None
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;		None
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  1    wreg      void 
  1849 ;; Registers used:
  1850 ;;		wreg, status,2
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1856 ;;      Params:         0       0       0       0       0
  1857 ;;      Locals:         0       0       0       0       0
  1858 ;;      Temps:          0       0       0       0       0
  1859 ;;      Totals:         0       0       0       0       0
  1860 ;;Total ram usage:        0 bytes
  1861 ;; Hardware stack levels used:    1
  1862 ;; Hardware stack levels required when called:    1
  1863 ;; This function calls:
  1864 ;;		Nothing
  1865 ;; This function is called by:
  1866 ;;		_I2C_Master_Start
  1867 ;;		_I2C_Master_Stop
  1868 ;;		_I2C_Master_Write
  1869 ;;		_I2C_Master_Read
  1870 ;;		_I2C_Master_RepeatedStart
  1871 ;; This function uses a non-reentrant model
  1872 ;;
  1873                           
  1874                           
  1875                           ;psect for function _I2C_Master_Wait
  1876  02EA                     _I2C_Master_Wait:
  1877  02EA                     l819:	
  1878                           ;incstack = 0
  1879                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  1880                           
  1881  02EA                     l164:	
  1882                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1883                           
  1884  02EA  1683               	bsf	3,5	;RP0=1, select bank1
  1885  02EB  1303               	bcf	3,6	;RP1=0, select bank1
  1886  02EC  1914               	btfsc	20,2	;volatile
  1887  02ED  2AEF               	goto	u61
  1888  02EE  2AF0               	goto	u60
  1889  02EF                     u61:
  1890  02EF  2AEA               	goto	l164
  1891  02F0                     u60:
  1892  02F0                     l821:
  1893  02F0  0811               	movf	17,w	;volatile
  1894  02F1  391F               	andlw	31
  1895  02F2  1D03               	btfss	3,2
  1896  02F3  2AF5               	goto	u71
  1897  02F4  2AF6               	goto	u70
  1898  02F5                     u71:
  1899  02F5  2AEA               	goto	l164
  1900  02F6                     u70:
  1901  02F6                     l167:
  1902  02F6  0008               	return
  1903  02F7                     __end_of_I2C_Master_Wait:
  1904                           
  1905                           	psect	text12
  1906  020B                     __ptext12:	
  1907 ;; *************** function _I2C_Master_Init *****************
  1908 ;; Defined at:
  1909 ;;		line 16 in file "I2C.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;  c               4    5[BANK0 ] const unsigned long 
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;		None
  1914 ;; Return value:  Size  Location     Type
  1915 ;;                  1    wreg      void 
  1916 ;; Registers used:
  1917 ;;		wreg, status,2, status,0, pclath, cstack
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1923 ;;      Params:         0       4       0       0       0
  1924 ;;      Locals:         0       0       0       0       0
  1925 ;;      Temps:          0       4       0       0       0
  1926 ;;      Totals:         0       8       0       0       0
  1927 ;;Total ram usage:        8 bytes
  1928 ;; Hardware stack levels used:    1
  1929 ;; Hardware stack levels required when called:    2
  1930 ;; This function calls:
  1931 ;;		___lldiv
  1932 ;; This function is called by:
  1933 ;;		_main
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           
  1938                           ;psect for function _I2C_Master_Init
  1939  020B                     _I2C_Master_Init:
  1940  020B                     l1163:	
  1941                           ;incstack = 0
  1942                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1943                           
  1944                           
  1945                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1946  020B  3028               	movlw	40
  1947  020C  1283               	bcf	3,5	;RP0=0, select bank0
  1948  020D  1303               	bcf	3,6	;RP1=0, select bank0
  1949  020E  0094               	movwf	20	;volatile
  1950  020F                     l1165:
  1951                           
  1952                           ;I2C.c: 19:     SSPCON2 = 0;
  1953  020F  1683               	bsf	3,5	;RP0=1, select bank1
  1954  0210  1303               	bcf	3,6	;RP1=0, select bank1
  1955  0211  0191               	clrf	17	;volatile
  1956  0212                     l1167:
  1957                           
  1958                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1959  0212  1283               	bcf	3,5	;RP0=0, select bank0
  1960  0213  1303               	bcf	3,6	;RP1=0, select bank0
  1961  0214  0825               	movf	I2C_Master_Init@c,w
  1962  0215  00A9               	movwf	??_I2C_Master_Init
  1963  0216  0826               	movf	I2C_Master_Init@c+1,w
  1964  0217  00AA               	movwf	??_I2C_Master_Init+1
  1965  0218  0827               	movf	I2C_Master_Init@c+2,w
  1966  0219  00AB               	movwf	??_I2C_Master_Init+2
  1967  021A  0828               	movf	I2C_Master_Init@c+3,w
  1968  021B  00AC               	movwf	??_I2C_Master_Init+3
  1969  021C  3002               	movlw	2
  1970  021D                     u365:
  1971  021D  1003               	clrc
  1972  021E  0DA9               	rlf	??_I2C_Master_Init,f
  1973  021F  0DAA               	rlf	??_I2C_Master_Init+1,f
  1974  0220  0DAB               	rlf	??_I2C_Master_Init+2,f
  1975  0221  0DAC               	rlf	??_I2C_Master_Init+3,f
  1976  0222                     u360:
  1977  0222  3EFF               	addlw	-1
  1978  0223  1D03               	skipz
  1979  0224  2A1D               	goto	u365
  1980  0225  082C               	movf	??_I2C_Master_Init+3,w
  1981  0226  00F5               	movwf	___lldiv@divisor+3
  1982  0227  082B               	movf	??_I2C_Master_Init+2,w
  1983  0228  00F4               	movwf	___lldiv@divisor+2
  1984  0229  082A               	movf	??_I2C_Master_Init+1,w
  1985  022A  00F3               	movwf	___lldiv@divisor+1
  1986  022B  0829               	movf	??_I2C_Master_Init,w
  1987  022C  00F2               	movwf	___lldiv@divisor
  1988  022D  3000               	movlw	0
  1989  022E  00F9               	movwf	___lldiv@dividend+3
  1990  022F  307A               	movlw	122
  1991  0230  00F8               	movwf	___lldiv@dividend+2
  1992  0231  3012               	movlw	18
  1993  0232  00F7               	movwf	___lldiv@dividend+1
  1994  0233  3000               	movlw	0
  1995  0234  00F6               	movwf	___lldiv@dividend
  1996  0235  120A  118A  20B5  120A  118A  	fcall	___lldiv
  1997  023A  0872               	movf	?___lldiv,w
  1998  023B  3EFF               	addlw	255
  1999  023C  1683               	bsf	3,5	;RP0=1, select bank1
  2000  023D  1303               	bcf	3,6	;RP1=0, select bank1
  2001  023E  0093               	movwf	19	;volatile
  2002  023F                     l1169:
  2003                           
  2004                           ;I2C.c: 21:     SSPSTAT = 0;
  2005  023F  0194               	clrf	20	;volatile
  2006  0240                     l1171:
  2007                           
  2008                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2009  0240  1587               	bsf	7,3	;volatile
  2010  0241                     l1173:
  2011                           
  2012                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2013  0241  1607               	bsf	7,4	;volatile
  2014  0242                     l161:
  2015  0242  0008               	return
  2016  0243                     __end_of_I2C_Master_Init:
  2017                           
  2018                           	psect	text13
  2019  00B5                     __ptext13:	
  2020 ;; *************** function ___lldiv *****************
  2021 ;; Defined at:
  2022 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;  divisor         4    2[COMMON] unsigned long 
  2025 ;;  dividend        4    6[COMMON] unsigned long 
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;  quotient        4    0[BANK0 ] unsigned long 
  2028 ;;  counter         1    4[BANK0 ] unsigned char 
  2029 ;; Return value:  Size  Location     Type
  2030 ;;                  4    2[COMMON] unsigned long 
  2031 ;; Registers used:
  2032 ;;		wreg, status,2, status,0
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2038 ;;      Params:         8       0       0       0       0
  2039 ;;      Locals:         0       5       0       0       0
  2040 ;;      Temps:          1       0       0       0       0
  2041 ;;      Totals:         9       5       0       0       0
  2042 ;;Total ram usage:       14 bytes
  2043 ;; Hardware stack levels used:    1
  2044 ;; Hardware stack levels required when called:    1
  2045 ;; This function calls:
  2046 ;;		Nothing
  2047 ;; This function is called by:
  2048 ;;		_I2C_Master_Init
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052                           
  2053                           ;psect for function ___lldiv
  2054  00B5                     ___lldiv:
  2055  00B5                     l1129:	
  2056                           ;incstack = 0
  2057                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2058                           
  2059  00B5  3000               	movlw	0
  2060  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  2061  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  2062  00B8  00A3               	movwf	___lldiv@quotient+3
  2063  00B9  3000               	movlw	0
  2064  00BA  00A2               	movwf	___lldiv@quotient+2
  2065  00BB  3000               	movlw	0
  2066  00BC  00A1               	movwf	___lldiv@quotient+1
  2067  00BD  3000               	movlw	0
  2068  00BE  00A0               	movwf	___lldiv@quotient
  2069  00BF  0875               	movf	___lldiv@divisor+3,w
  2070  00C0  0474               	iorwf	___lldiv@divisor+2,w
  2071  00C1  0473               	iorwf	___lldiv@divisor+1,w
  2072  00C2  0472               	iorwf	___lldiv@divisor,w
  2073  00C3  1903               	skipnz
  2074  00C4  28C6               	goto	u291
  2075  00C5  28C7               	goto	u290
  2076  00C6                     u291:
  2077  00C6  2914               	goto	l1149
  2078  00C7                     u290:
  2079  00C7                     l1131:
  2080  00C7  01A4               	clrf	___lldiv@counter
  2081  00C8  0AA4               	incf	___lldiv@counter,f
  2082  00C9  28D7               	goto	l1135
  2083  00CA                     l1133:
  2084  00CA  3001               	movlw	1
  2085  00CB  00FA               	movwf	??___lldiv
  2086  00CC                     u305:
  2087  00CC  1003               	clrc
  2088  00CD  0DF2               	rlf	___lldiv@divisor,f
  2089  00CE  0DF3               	rlf	___lldiv@divisor+1,f
  2090  00CF  0DF4               	rlf	___lldiv@divisor+2,f
  2091  00D0  0DF5               	rlf	___lldiv@divisor+3,f
  2092  00D1  0BFA               	decfsz	??___lldiv,f
  2093  00D2  28CC               	goto	u305
  2094  00D3  3001               	movlw	1
  2095  00D4  00FA               	movwf	??___lldiv
  2096  00D5  087A               	movf	??___lldiv,w
  2097  00D6  07A4               	addwf	___lldiv@counter,f
  2098  00D7                     l1135:
  2099  00D7  1FF5               	btfss	___lldiv@divisor+3,7
  2100  00D8  28DA               	goto	u311
  2101  00D9  28DB               	goto	u310
  2102  00DA                     u311:
  2103  00DA  28CA               	goto	l1133
  2104  00DB                     u310:
  2105  00DB                     l1137:
  2106  00DB  3001               	movlw	1
  2107  00DC  00FA               	movwf	??___lldiv
  2108  00DD                     u325:
  2109  00DD  1003               	clrc
  2110  00DE  0DA0               	rlf	___lldiv@quotient,f
  2111  00DF  0DA1               	rlf	___lldiv@quotient+1,f
  2112  00E0  0DA2               	rlf	___lldiv@quotient+2,f
  2113  00E1  0DA3               	rlf	___lldiv@quotient+3,f
  2114  00E2  0BFA               	decfsz	??___lldiv,f
  2115  00E3  28DD               	goto	u325
  2116  00E4                     l1139:
  2117  00E4  0875               	movf	___lldiv@divisor+3,w
  2118  00E5  0279               	subwf	___lldiv@dividend+3,w
  2119  00E6  1D03               	skipz
  2120  00E7  28F2               	goto	u335
  2121  00E8  0874               	movf	___lldiv@divisor+2,w
  2122  00E9  0278               	subwf	___lldiv@dividend+2,w
  2123  00EA  1D03               	skipz
  2124  00EB  28F2               	goto	u335
  2125  00EC  0873               	movf	___lldiv@divisor+1,w
  2126  00ED  0277               	subwf	___lldiv@dividend+1,w
  2127  00EE  1D03               	skipz
  2128  00EF  28F2               	goto	u335
  2129  00F0  0872               	movf	___lldiv@divisor,w
  2130  00F1  0276               	subwf	___lldiv@dividend,w
  2131  00F2                     u335:
  2132  00F2  1C03               	skipc
  2133  00F3  28F5               	goto	u331
  2134  00F4  28F6               	goto	u330
  2135  00F5                     u331:
  2136  00F5  2905               	goto	l1145
  2137  00F6                     u330:
  2138  00F6                     l1141:
  2139  00F6  0872               	movf	___lldiv@divisor,w
  2140  00F7  02F6               	subwf	___lldiv@dividend,f
  2141  00F8  0873               	movf	___lldiv@divisor+1,w
  2142  00F9  1C03               	skipc
  2143  00FA  0F73               	incfsz	___lldiv@divisor+1,w
  2144  00FB  02F7               	subwf	___lldiv@dividend+1,f
  2145  00FC  0874               	movf	___lldiv@divisor+2,w
  2146  00FD  1C03               	skipc
  2147  00FE  0F74               	incfsz	___lldiv@divisor+2,w
  2148  00FF  02F8               	subwf	___lldiv@dividend+2,f
  2149  0100  0875               	movf	___lldiv@divisor+3,w
  2150  0101  1C03               	skipc
  2151  0102  0F75               	incfsz	___lldiv@divisor+3,w
  2152  0103  02F9               	subwf	___lldiv@dividend+3,f
  2153  0104                     l1143:
  2154  0104  1420               	bsf	___lldiv@quotient,0
  2155  0105                     l1145:
  2156  0105  3001               	movlw	1
  2157  0106                     u345:
  2158  0106  1003               	clrc
  2159  0107  0CF5               	rrf	___lldiv@divisor+3,f
  2160  0108  0CF4               	rrf	___lldiv@divisor+2,f
  2161  0109  0CF3               	rrf	___lldiv@divisor+1,f
  2162  010A  0CF2               	rrf	___lldiv@divisor,f
  2163  010B  3EFF               	addlw	-1
  2164  010C  1D03               	skipz
  2165  010D  2906               	goto	u345
  2166  010E                     l1147:
  2167  010E  3001               	movlw	1
  2168  010F  02A4               	subwf	___lldiv@counter,f
  2169  0110  1D03               	btfss	3,2
  2170  0111  2913               	goto	u351
  2171  0112  2914               	goto	u350
  2172  0113                     u351:
  2173  0113  28DB               	goto	l1137
  2174  0114                     u350:
  2175  0114                     l1149:
  2176  0114  0823               	movf	___lldiv@quotient+3,w
  2177  0115  00F5               	movwf	?___lldiv+3
  2178  0116  0822               	movf	___lldiv@quotient+2,w
  2179  0117  00F4               	movwf	?___lldiv+2
  2180  0118  0821               	movf	___lldiv@quotient+1,w
  2181  0119  00F3               	movwf	?___lldiv+1
  2182  011A  0820               	movf	___lldiv@quotient,w
  2183  011B  00F2               	movwf	?___lldiv
  2184  011C                     l309:
  2185  011C  0008               	return
  2186  011D                     __end_of___lldiv:
  2187                           
  2188                           	psect	text14
  2189  0314                     __ptext14:	
  2190 ;; *************** function _isr *****************
  2191 ;; Defined at:
  2192 ;;		line 51 in file "MAESTRO.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;		None
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;		None
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		None
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2206 ;;      Params:         0       0       0       0       0
  2207 ;;      Locals:         0       0       0       0       0
  2208 ;;      Temps:          2       0       0       0       0
  2209 ;;      Totals:         2       0       0       0       0
  2210 ;;Total ram usage:        2 bytes
  2211 ;; Hardware stack levels used:    1
  2212 ;; This function calls:
  2213 ;;		Nothing
  2214 ;; This function is called by:
  2215 ;;		Interrupt level 1
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219                           
  2220                           ;psect for function _isr
  2221  0314                     _isr:
  2222  0314                     i1l45:
  2223  0314  0871               	movf	??_isr+1,w
  2224  0315  008A               	movwf	10
  2225  0316  0E70               	swapf	??_isr,w
  2226  0317  0083               	movwf	3
  2227  0318  0EFE               	swapf	btemp,f
  2228  0319  0E7E               	swapf	btemp,w
  2229  031A  0009               	retfie
  2230  031B                     __end_of_isr:
  2231  007E                     btemp	set	126	;btemp
  2232  007E                     wtemp0	set	126
  2233                           
  2234                           	psect	intentry
  2235  0004                     __pintentry:	
  2236                           ;incstack = 0
  2237                           ; Regs used in _isr: []
  2238                           
  2239  0004                     interrupt_function:
  2240  007E                     saved_w	set	btemp
  2241  0004  00FE               	movwf	btemp
  2242  0005  0E03               	swapf	3,w
  2243  0006  00F0               	movwf	??_isr
  2244  0007  080A               	movf	10,w
  2245  0008  00F1               	movwf	??_isr+1
  2246  0009  120A  118A  2B14   	ljmp	_isr
  2247                           
  2248                           	psect	config
  2249                           
  2250                           ;Config register CONFIG1 @ 0x2007
  2251                           ;	Oscillator Selection bits
  2252                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2253                           ;	Watchdog Timer Enable bit
  2254                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2255                           ;	Power-up Timer Enable bit
  2256                           ;	PWRTE = OFF, PWRT disabled
  2257                           ;	RE3/MCLR pin function select bit
  2258                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2259                           ;	Code Protection bit
  2260                           ;	CP = OFF, Program memory code protection is disabled
  2261                           ;	Data Code Protection bit
  2262                           ;	CPD = OFF, Data memory code protection is disabled
  2263                           ;	Brown Out Reset Selection bits
  2264                           ;	BOREN = OFF, BOR disabled
  2265                           ;	Internal External Switchover bit
  2266                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2267                           ;	Fail-Safe Clock Monitor Enabled bit
  2268                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2269                           ;	Low Voltage Programming Enable bit
  2270                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2271                           ;	In-Circuit Debugger Mode bit
  2272                           ;	DEBUG = 0x1, unprogrammed default
  2273  2007                     	org	8199
  2274  2007  20D4               	dw	8404
  2275                           
  2276                           ;Config register CONFIG2 @ 0x2008
  2277                           ;	Brown-out Reset Selection bit
  2278                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2279                           ;	Flash Program Memory Self Write Enable bits
  2280                           ;	WRT = OFF, Write protection off
  2281  2008                     	org	8200
  2282  2008  3FFF               	dw	16383

Data Sizes:
    Strings     24
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     16      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 16
		 -> STR_2(CODE[8]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1521
                                             13 BANK0      3     3      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     334
                                              7 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     532
                                              6 COMMON     3     2      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     1     1      0      15
                                              2 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      3     3      0      30
                                              2 COMMON     3     3      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                              5 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      10       5       20.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Aug 08 21:28:02 2021

                        pc 0002                         l94 0299                         l95 029C  
                       l96 02A2                         l97 02A3                         l98 02A9  
                       l99 02AA                         u60 02F0                         u61 02EF  
                       u70 02F6                         u71 02F5                         fsr 0004  
                      l100 02B0                        l102 02B1                        l120 020A  
                      l105 02E9                        l114 01D1                        l117 0179  
                      l126 028F                        l161 0242                        l170 0313  
                      l164 02EA                        l309 011C                        l182 0265  
                      l167 02F6                        l183 0268                        l184 026A  
                      l176 030A                        l179 0301                        l821 02F0  
                      l819 02EA                        l871 0310                        l881 0244  
                      l873 02F8                        l891 0261                        l883 0249  
                      l875 02FD                        l893 0269                        l885 0251  
                      l869 030B                        l877 0302                        l887 0257  
                      l879 0307                        l889 025C                        _GIE 005F  
                      _RD3 0043                        u310 00DB                        u311 00DA  
                      u160 0261                        u240 0295                        u305 00CC  
                      u161 0260                        u241 0294                        u330 00F6  
                      u250 02A0                        u410 028F                        u331 00F5  
                      u251 029F                        u411 028E                        u260 02A7  
                      u325 00DD                        u261 02A6                        u405 01B5  
                      u350 0114                        u270 02AE                        u351 0113  
                      u335 00F2                        u271 02AD                        u360 0222  
                      u345 0106                        u290 00C7                        u370 0182  
                      u291 00C6                        u371 0181                        u427 005C  
                      u365 021D                        u285 01E3                        u437 0084  
                      u390 01AD                        u391 01AC                        u447 01F3  
                      u385 018A                        u457 0204                        u467 0127  
                      u477 0136                        u487 0145                        u497 02E1  
                      _isr 0314                        fsr0 0004                       l1101 02D4  
                     l1103 02DA                       l1111 01DD                       l1105 02DD  
                     l1121 01F9                       l1113 01E0                       l1201 0282  
                     l1131 00C7                       l1107 02E6                       l1123 01FF  
                     l1115 01EE                       l1211 0026                       l1203 0013  
                     l1141 00F6                       l1133 00CA                       l1125 0202  
                     l1117 01F1                       l1109 01D3                       l1221 003B  
                     l1213 0035                       l1205 001C                       l1143 0104  
                     l1135 00D7                       l1127 0207                       l1119 01F6  
                     l1231 0054                       l1223 003C                       l1215 0038  
                     l1207 0021                       l1145 0105                       l1137 00DB  
                     l1129 00B5                       l1161 0141                       l1153 011D  
                     l1241 007C                       l1233 0063                       l1225 0041  
                     l1217 0039                       l1209 0025                       l1147 010E  
                     l1139 00E4                       l1171 0240                       l1163 020B  
                     l1091 0295                       l1155 0123                       l1243 0091  
                     l1235 0068                       l1227 0047                       l1219 003A  
                     l1149 0114                       l1173 0241                       l1165 020F  
                     l1093 02A0                       l1157 012C                       l1181 0198  
                     l1245 0099                       l1237 006E                       l1229 004F  
                     l1167 0212                       l1095 02A7                       l1159 013B  
                     l1191 01C3                       l1183 019E                       l1175 017D  
                     l1247 009F                       l1239 0077                       l1169 023F  
                     l1097 02AE                       l1089 0291                       l1193 01C9  
                     l1177 0182                       l1185 01A7                       l1249 00AB  
                     l1099 02D1                       l1187 01AD                       l1179 0193  
                     l1195 026C                       l1189 01BE                       l1197 026F  
                     l1199 027C                       ?_isr 0070                       STR_1 02B8  
                     STR_2 02C8                       _PEIE 005E                       i1l45 0314  
        ?_Lcd_Write_String 0070                       _main 0013                       btemp 007E  
                     start 000C         ??_Lcd_Write_String 0077            __end_of_Lcd_Cmd 02EA  
                    ??_isr 0070           ?_I2C_Master_Init 0025           ?_I2C_Master_Read 0070  
         ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070                      ?_main 0070  
                    _ANSEL 0188            __end_of___lldiv 011D                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009    __size_of_Lcd_Set_Cursor 0058                      _TRISA 0085  
                    _TRISB 0086                      _TRISD 0088                      _SSPIE 0463  
                    _SSPIF 0063                      pclath 000A                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 017A           __end_of_Lcd_Port 02B2  
          __initialization 000F               __end_of_main 00B5                     ??_main 002D  
        ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0072  
       ??_I2C_Master_Write 0072                     _ANSELH 0189                  ??_Lcd_Cmd 0073  
  __size_of_Lcd_Write_Char 0039                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
                ??___lldiv 007A                     saved_w 007E            Lcd_Set_Cursor@a 0020  
          Lcd_Set_Cursor@b 0076            Lcd_Set_Cursor@y 0022            Lcd_Set_Cursor@z 0021  
  __end_of__initialization 000F             __pcstackCOMMON 0070             _Lcd_Set_Cursor 017A  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                 __pmaintext 0013  
               __pintentry 0004  __size_of_Lcd_Write_String 0025     __end_of_Lcd_Set_Cursor 01D2  
               ??_Lcd_Init 0076                 ??_Lcd_Port 0072                    _SSPCON2 0091  
                  _SSPSTAT 0094                 __stringtab 02B2             _Lcd_Write_Char 01D2  
                  _Lcd_Cmd 02D0                    ___lldiv 00B5            ?_Lcd_Set_Cursor 0076  
                  __ptext1 026B                    __ptext2 01D2                    __ptext3 017A  
                  __ptext4 011D                    __ptext5 02D0                    __ptext6 0290  
                  __ptext7 02F7                    __ptext8 0302                    __ptext9 030B  
             __size_of_isr 0007   __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 0028  
 __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009     __end_of_Lcd_Write_Char 020B  
     end_of_initialization 000F  __size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000B  
          ___lldiv@divisor 0072            ___lldiv@counter 0024           I2C_Master_Init@c 0025  
         I2C_Master_Read@a 0073                  Lcd_Port@a 0072                  _PORTCbits 0007  
                _PORTDbits 0008                  _TRISCbits 0087            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0079          Lcd_Write_String@i 0077           _Lcd_Write_String 026B  
      start_initialization 000F                __end_of_isr 031B          __size_of_Lcd_Init 005D  
        __size_of_Lcd_Port 0022          ??_I2C_Master_Init 0029          ??_I2C_Master_Read 0072  
        ??_I2C_Master_Wait 0072          ??_I2C_Master_Stop 0072            Lcd_Write_Char@a 0076  
          Lcd_Write_Char@y 0075                  ___latbits 0002              __pcstackBANK0 0020  
                 ?_Lcd_Cmd 0070           _I2C_Master_Start 030B           _I2C_Master_Write 02F7  
         ??_Lcd_Set_Cursor 0077                   ?___lldiv 0072                  __pstrings 02B2  
        interrupt_function 0004                   Lcd_Cmd@a 0075                __stringbase 02B7  
         ??_Lcd_Write_Char 0073                   _Lcd_Init 011D                   _Lcd_Port 0290  
      I2C_Master_Read@temp 0074   __end_of_Lcd_Write_String 0290           __size_of_Lcd_Cmd 001A  
         __size_of___lldiv 0068         __end_of__stringtab 02B8            _I2C_Master_Init 020B  
          _I2C_Master_Read 0243            _I2C_Master_Wait 02EA            _I2C_Master_Stop 0302  
                 __ptext10 0243                   __ptext11 02EA                   __ptext12 020B  
                 __ptext13 00B5                   __ptext14 0314              __size_of_main 00A2  
 __end_of_I2C_Master_Start 0314   __end_of_I2C_Master_Write 0302         Lcd_Write_Char@temp 0074  
                 intlevel1 0000           ___lldiv@dividend 0076                  stringcode 02B2  
               _OSCCONbits 008F    __end_of_I2C_Master_Init 0243    __end_of_I2C_Master_Read 026B  
  __end_of_I2C_Master_Wait 02F7    __end_of_I2C_Master_Stop 030B         Lcd_Set_Cursor@temp 0023  
         ___lldiv@quotient 0020          I2C_Master_Write@d 0072                   stringdir 02B2  
                 stringtab 02B2                _SSPCON2bits 0091  
